{
  "swagger": "2.0",
  "info": {
    "title": "Azure postgresql",
    "version": "2025-08-01",
    "description": "Azure postgresql service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/administrators/{objectId}": {
      "put": {
        "tags": [
          "AdministratorsMicrosoftEntra"
        ],
        "operationId": "AdministratorsMicrosoftEntra_CreateOrUpdate",
        "description": "Creates a new server administrator associated to a Microsoft Entra principal.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Object identifier of the Microsoft Entra principal.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the server administrator associated to a Microsoft Entra principal.",
                  "type": "object",
                  "properties": {
                    "principalType": {
                      "type": "string",
                      "description": "Type of Microsoft Entra principal to which the server administrator is associated.",
                      "enum": [
                        "Unknown",
                        "User",
                        "Group",
                        "ServicePrincipal"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Unknown",
                            "description": "The principal type is not known or not specified."
                          },
                          {
                            "value": "User",
                            "description": "A Microsoft Entra user."
                          },
                          {
                            "value": "Group",
                            "description": "A Microsoft Entra group."
                          },
                          {
                            "value": "ServicePrincipal",
                            "description": "A Microsoft Entra service principal, typically representing an application or service identity"
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "create",
                        "update",
                        "read"
                      ]
                    },
                    "principalName": {
                      "type": "string",
                      "description": "Name of the Microsoft Entra principal.",
                      "x-ms-mutability": [
                        "create",
                        "update",
                        "read"
                      ]
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Identifier of the tenant in which the Microsoft Entra principal exists.",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    }
                  }
                }
              },
              "description": "Server administrator associated to a Microsoft Entra principal."
            },
            "description": "Required parameters for adding a server administrator associated to a Microsoft Entra principal."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "AdministratorsMicrosoftEntra"
        ],
        "operationId": "AdministratorsMicrosoftEntra_Delete",
        "description": "Deletes an existing server administrator associated to a Microsoft Entra principal.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Object identifier of the Microsoft Entra principal.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content."
          }
        }
      },
      "get": {
        "tags": [
          "AdministratorsMicrosoftEntra"
        ],
        "operationId": "AdministratorsMicrosoftEntra_Get",
        "description": "Gets information about a server administrator associated to a Microsoft Entra principal.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Object identifier of the Microsoft Entra principal.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of a server administrator associated to a Microsoft Entra principal.",
                  "type": "object",
                  "properties": {
                    "principalType": {
                      "type": "string",
                      "description": "Type of Microsoft Entra principal to which the server administrator is associated.",
                      "enum": [
                        "Unknown",
                        "User",
                        "Group",
                        "ServicePrincipal"
                      ],
                      "x-ms-enum": {
                        "name": "PrincipalType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Unknown",
                            "description": "The principal type is not known or not specified."
                          },
                          {
                            "value": "User",
                            "description": "A Microsoft Entra user."
                          },
                          {
                            "value": "Group",
                            "description": "A Microsoft Entra group."
                          },
                          {
                            "value": "ServicePrincipal",
                            "description": "A Microsoft Entra service principal, typically representing an application or service identity"
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "create",
                        "update",
                        "read"
                      ]
                    },
                    "principalName": {
                      "type": "string",
                      "description": "Name of the Microsoft Entra principal.",
                      "x-ms-mutability": [
                        "create",
                        "update",
                        "read"
                      ]
                    },
                    "objectId": {
                      "type": "string",
                      "description": "Object identifier of the Microsoft Entra principal.",
                      "x-ms-mutability": [
                        "create",
                        "update",
                        "read"
                      ]
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Identifier of the tenant in which the Microsoft Entra principal exists.",
                      "x-ms-mutability": [
                        "create",
                        "update",
                        "read"
                      ]
                    }
                  }
                }
              },
              "required": [
                "properties"
              ],
              "description": "Server administrator associated to a Microsoft Entra principal."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/administrators": {
      "get": {
        "tags": [
          "AdministratorsMicrosoftEntra"
        ],
        "operationId": "AdministratorsMicrosoftEntra_ListByServer",
        "description": "List all server administrators associated to a Microsoft Entra principal.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of a server administrator associated to a Microsoft Entra principal.",
                        "type": "object",
                        "properties": {
                          "principalType": {
                            "type": "string",
                            "description": "Type of Microsoft Entra principal to which the server administrator is associated.",
                            "enum": [
                              "Unknown",
                              "User",
                              "Group",
                              "ServicePrincipal"
                            ],
                            "x-ms-enum": {
                              "name": "PrincipalType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Unknown",
                                  "description": "The principal type is not known or not specified."
                                },
                                {
                                  "value": "User",
                                  "description": "A Microsoft Entra user."
                                },
                                {
                                  "value": "Group",
                                  "description": "A Microsoft Entra group."
                                },
                                {
                                  "value": "ServicePrincipal",
                                  "description": "A Microsoft Entra service principal, typically representing an application or service identity"
                                }
                              ]
                            },
                            "x-ms-mutability": [
                              "create",
                              "update",
                              "read"
                            ]
                          },
                          "principalName": {
                            "type": "string",
                            "description": "Name of the Microsoft Entra principal.",
                            "x-ms-mutability": [
                              "create",
                              "update",
                              "read"
                            ]
                          },
                          "objectId": {
                            "type": "string",
                            "description": "Object identifier of the Microsoft Entra principal.",
                            "x-ms-mutability": [
                              "create",
                              "update",
                              "read"
                            ]
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "Identifier of the tenant in which the Microsoft Entra principal exists.",
                            "x-ms-mutability": [
                              "create",
                              "update",
                              "read"
                            ]
                          }
                        }
                      }
                    },
                    "required": [
                      "properties"
                    ],
                    "description": "Server administrator associated to a Microsoft Entra principal."
                  },
                  "description": "List of server administrators associated to Microsoft Entra principals."
                },
                "nextLink": {
                  "description": "Link used to get the next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "List of server administrators associated to Microsoft Entra principals."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/advancedThreatProtectionSettings": {
      "get": {
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Lists state of advanced threat protection settings for a server.",
        "operationId": "AdvancedThreatProtectionSettings_ListByServer",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "List of advanced threat protection settings for a server.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "description": "Advanced threat protection settings of the server.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Advanced threat protection properties.",
                        "x-ms-client-flatten": true,
                        "required": [
                          "state"
                        ],
                        "type": "object",
                        "properties": {
                          "state": {
                            "description": "Specifies the state of the advanced threat protection, whether it is enabled, disabled, or a state has not been applied yet on the server.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ThreatProtectionState",
                              "modelAsString": false,
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "Advanced threat protection is enabled."
                                },
                                {
                                  "value": "Disabled",
                                  "description": "Advanced threat protection is disabled."
                                }
                              ]
                            }
                          },
                          "creationTime": {
                            "format": "date-time",
                            "description": "Specifies the creation time (UTC) of the policy.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link used to get the next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/advancedThreatProtectionSettings/{threatProtectionName}": {
      "get": {
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Gets state of advanced threat protection settings for a server.",
        "operationId": "AdvancedThreatProtectionSettings_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "threatProtectionName",
            "in": "path",
            "description": "Name of the advanced threat protection settings.",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "name": "ThreatProtectionName",
              "modelAsString": true,
              "values": [
                {
                  "value": "Default",
                  "description": "Default advanced threat protection settings."
                }
              ]
            },
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Advanced threat protection settings of the server.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Advanced threat protection properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the advanced threat protection, whether it is enabled, disabled, or a state has not been applied yet on the server.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ThreatProtectionState",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Advanced threat protection is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Advanced threat protection is disabled."
                          }
                        ]
                      }
                    },
                    "creationTime": {
                      "format": "date-time",
                      "description": "Specifies the creation time (UTC) of the policy.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "AdvancedThreatProtectionSettings"
        ],
        "description": "Creates or updates a server's Advanced Threat Protection settings.",
        "operationId": "ServerThreatProtectionSettings_CreateOrUpdate",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "threatProtectionName",
            "in": "path",
            "description": "Name of the advanced threat protection settings.",
            "required": true,
            "type": "string",
            "enum": [
              "Default"
            ],
            "x-ms-enum": {
              "name": "ThreatProtectionName",
              "modelAsString": true,
              "values": [
                {
                  "value": "Default",
                  "description": "Default advanced threat protection settings."
                }
              ]
            },
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "The Advanced Threat Protection state for the server.",
            "required": true,
            "schema": {
              "description": "Advanced threat protection settings of the server.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Advanced threat protection properties.",
                  "x-ms-client-flatten": true,
                  "required": [
                    "state"
                  ],
                  "type": "object",
                  "properties": {
                    "state": {
                      "description": "Specifies the state of the advanced threat protection, whether it is enabled, disabled, or a state has not been applied yet on the server.",
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ThreatProtectionState",
                        "modelAsString": false,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Advanced threat protection is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Advanced threat protection is disabled."
                          }
                        ]
                      }
                    },
                    "creationTime": {
                      "format": "date-time",
                      "description": "Specifies the creation time (UTC) of the policy.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/backups/{backupName}": {
      "put": {
        "tags": [
          "BackupsAutomaticAndOnDemand"
        ],
        "operationId": "BackupsAutomaticAndOnDemand_Create",
        "description": "Creates an on demand backup of a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the backup.",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$",
            "maxLength": 128,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "BackupsAutomaticAndOnDemand"
        ],
        "operationId": "BackupsAutomaticAndOnDemand_Delete",
        "description": "Deletes a specific backup, given its name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the backup.",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$",
            "maxLength": 128,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content."
          }
        }
      },
      "get": {
        "tags": [
          "BackupsAutomaticAndOnDemand"
        ],
        "operationId": "BackupsAutomaticAndOnDemand_Get",
        "description": "Gets information of an on demand backup, given its name.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the backup.",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$",
            "maxLength": 128,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of a backup.",
                  "type": "object",
                  "properties": {
                    "backupType": {
                      "type": "string",
                      "description": "Type of backup.",
                      "enum": [
                        "Full",
                        "Customer On-Demand"
                      ],
                      "x-ms-enum": {
                        "name": "BackupType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Full",
                            "description": "A full backup taken automatically by the service. These backups are retained for a period of time as defined by the backup retention policy, and they cannot be deleted by the customer."
                          },
                          {
                            "value": "Customer On-Demand",
                            "description": "A full backup triggered by the customer. These backups are retained for a period of time as defined by the backup retention policy, and they can also be deleted by the customer."
                          }
                        ]
                      }
                    },
                    "completedTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time(ISO8601 format) at which the backup was completed."
                    },
                    "source": {
                      "type": "string",
                      "description": "Source of the backup."
                    }
                  }
                }
              },
              "description": "Properties of a backup."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/backups": {
      "get": {
        "tags": [
          "BackupsAutomaticAndOnDemand"
        ],
        "operationId": "BackupsAutomaticAndOnDemand_ListByServer",
        "description": "Lists all available backups of a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of a backup.",
                        "type": "object",
                        "properties": {
                          "backupType": {
                            "type": "string",
                            "description": "Type of backup.",
                            "enum": [
                              "Full",
                              "Customer On-Demand"
                            ],
                            "x-ms-enum": {
                              "name": "BackupType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Full",
                                  "description": "A full backup taken automatically by the service. These backups are retained for a period of time as defined by the backup retention policy, and they cannot be deleted by the customer."
                                },
                                {
                                  "value": "Customer On-Demand",
                                  "description": "A full backup triggered by the customer. These backups are retained for a period of time as defined by the backup retention policy, and they can also be deleted by the customer."
                                }
                              ]
                            }
                          },
                          "completedTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time(ISO8601 format) at which the backup was completed."
                          },
                          "source": {
                            "type": "string",
                            "description": "Source of the backup."
                          }
                        }
                      }
                    },
                    "description": "Properties of a backup."
                  },
                  "description": "List of available backups."
                },
                "nextLink": {
                  "description": "Link used to get the next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "List of backups."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrPreBackup": {
      "post": {
        "description": "Performs all checks required for a long term retention backup operation to succeed.",
        "tags": [
          "BackupsLongTermRetention"
        ],
        "operationId": "BackupsLongTermRetention_CheckPrerequisites",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "description": "A request that is made for pre-backup.",
              "type": "object",
              "properties": {
                "backupSettings": {
                  "description": "Backup Settings",
                  "type": "object",
                  "required": [
                    "backupName"
                  ],
                  "properties": {
                    "backupName": {
                      "type": "string",
                      "description": "Backup Name for the current backup"
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Response for the LTR pre-backup API call",
              "type": "object",
              "required": [
                "properties"
              ],
              "properties": {
                "properties": {
                  "description": "Additional Properties for the pre backup response",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "numberOfContainers"
                  ],
                  "properties": {
                    "numberOfContainers": {
                      "format": "int32",
                      "description": "Number of storage containers the plugin will use during backup. More than one containers may be used for size limitations, parallelism, or redundancy etc.",
                      "type": "integer"
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-request-id": {
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.",
                "type": "string"
              }
            }
          }
        },
        "deprecated": false
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/startLtrBackup": {
      "post": {
        "description": "Initiates a long term retention backup.",
        "tags": [
          "BackupsLongTermRetention"
        ],
        "operationId": "BackupsLongTermRetention_Start",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "description": "Request body for operation",
            "required": true,
            "schema": {
              "description": "The request that is made for a long term retention backup.",
              "type": "object",
              "properties": {
                "backupSettings": {
                  "description": "Backup Settings",
                  "type": "object",
                  "required": [
                    "backupName"
                  ],
                  "properties": {
                    "backupName": {
                      "type": "string",
                      "description": "Backup Name for the current backup"
                    }
                  }
                },
                "targetDetails": {
                  "description": "Backup store detail for target server",
                  "required": [
                    "sasUriList"
                  ],
                  "type": "object",
                  "properties": {
                    "sasUriList": {
                      "description": "List of SAS uri of storage containers where backup data is to be streamed/copied.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "SAS URI of Azure Storage Account Container.",
                        "x-ms-secret": true
                      }
                    }
                  }
                }
              },
              "required": [
                "targetDetails"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Response for the LTR backup API call",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Long Term Retention Backup Operation Resource Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "status",
                    "startTime"
                  ],
                  "properties": {
                    "datasourceSizeInBytes": {
                      "format": "int64",
                      "description": "Size of datasource in bytes",
                      "type": "integer"
                    },
                    "dataTransferredInBytes": {
                      "format": "int64",
                      "description": "Data transferred in bytes",
                      "type": "integer"
                    },
                    "backupName": {
                      "description": "Name of Backup operation",
                      "type": "string"
                    },
                    "backupMetadata": {
                      "description": "Metadata to be stored in RP. Store everything that will be required to perform a successful restore using this Recovery point. e.g. Versions, DataFormat etc",
                      "type": "string"
                    },
                    "status": {
                      "description": "Service-set extensible enum indicating the status of operation",
                      "enum": [
                        "Running",
                        "Cancelled",
                        "Failed",
                        "Succeeded"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ExecutionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Running",
                            "description": "The operation is currently running."
                          },
                          {
                            "value": "Cancelled",
                            "description": "The operation was cancelled."
                          },
                          {
                            "value": "Failed",
                            "description": "The operation failed."
                          },
                          {
                            "value": "Succeeded",
                            "description": "The operation succeeded."
                          }
                        ]
                      }
                    },
                    "startTime": {
                      "description": "Start time of the operation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "endTime": {
                      "description": "End time of the operation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "percentComplete": {
                      "description": "PercentageCompleted",
                      "format": "double",
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "errorCode": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The error code."
                    },
                    "errorMessage": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The error message."
                    }
                  }
                }
              }
            },
            "headers": {
              "x-ms-request-id": {
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.",
                "type": "string"
              }
            }
          },
          "202": {
            "description": "Accepted.",
            "headers": {
              "Retry-After": {
                "description": "The number of seconds to wait before checking the status of the asynchronous operation.",
                "type": "integer",
                "format": "int32"
              },
              "x-ms-request-id": {
                "description": "A unique ID for the current operation, service generated. All the resource providers must return this value in the response headers to facilitate debugging.",
                "type": "string"
              },
              "Location": {
                "description": "URL to retrieve the final result after operation completes.",
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "description": "URL for checking the ongoing status of the operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrBackupOperations/{backupName}": {
      "get": {
        "tags": [
          "BackupsLongTermRetention"
        ],
        "operationId": "BackupsLongTermRetention_Get",
        "description": "Gets the results of a long retention backup operation for a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "backupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the backup.",
            "x-ms-parameter-location": "method",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "Response for the LTR backup Operation API call",
              "type": "object",
              "required": [
                "id",
                "name"
              ],
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Long Term Retention Backup Operation Resource Properties",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "required": [
                    "status",
                    "startTime"
                  ],
                  "properties": {
                    "datasourceSizeInBytes": {
                      "format": "int64",
                      "description": "Size of datasource in bytes",
                      "type": "integer"
                    },
                    "dataTransferredInBytes": {
                      "format": "int64",
                      "description": "Data transferred in bytes",
                      "type": "integer"
                    },
                    "backupName": {
                      "description": "Name of Backup operation",
                      "type": "string"
                    },
                    "backupMetadata": {
                      "description": "Metadata to be stored in RP. Store everything that will be required to perform a successful restore using this Recovery point. e.g. Versions, DataFormat etc",
                      "type": "string"
                    },
                    "status": {
                      "description": "Service-set extensible enum indicating the status of operation",
                      "enum": [
                        "Running",
                        "Cancelled",
                        "Failed",
                        "Succeeded"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "ExecutionStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Running",
                            "description": "The operation is currently running."
                          },
                          {
                            "value": "Cancelled",
                            "description": "The operation was cancelled."
                          },
                          {
                            "value": "Failed",
                            "description": "The operation failed."
                          },
                          {
                            "value": "Succeeded",
                            "description": "The operation succeeded."
                          }
                        ]
                      }
                    },
                    "startTime": {
                      "description": "Start time of the operation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "endTime": {
                      "description": "End time of the operation.",
                      "format": "date-time",
                      "type": "string"
                    },
                    "percentComplete": {
                      "description": "PercentageCompleted",
                      "format": "double",
                      "type": "number",
                      "minimum": 0,
                      "maximum": 100
                    },
                    "errorCode": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The error code."
                    },
                    "errorMessage": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The error message."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/ltrBackupOperations": {
      "get": {
        "tags": [
          "BackupsLongTermRetention"
        ],
        "operationId": "BackupsLongTermRetention_ListByServer",
        "description": "Lists the results of the long term retention backup operations for a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "Response for the LTR backup Operation API call",
                    "type": "object",
                    "required": [
                      "id",
                      "name"
                    ],
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Long Term Retention Backup Operation Resource Properties",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "required": [
                          "status",
                          "startTime"
                        ],
                        "properties": {
                          "datasourceSizeInBytes": {
                            "format": "int64",
                            "description": "Size of datasource in bytes",
                            "type": "integer"
                          },
                          "dataTransferredInBytes": {
                            "format": "int64",
                            "description": "Data transferred in bytes",
                            "type": "integer"
                          },
                          "backupName": {
                            "description": "Name of Backup operation",
                            "type": "string"
                          },
                          "backupMetadata": {
                            "description": "Metadata to be stored in RP. Store everything that will be required to perform a successful restore using this Recovery point. e.g. Versions, DataFormat etc",
                            "type": "string"
                          },
                          "status": {
                            "description": "Service-set extensible enum indicating the status of operation",
                            "enum": [
                              "Running",
                              "Cancelled",
                              "Failed",
                              "Succeeded"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "ExecutionStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Running",
                                  "description": "The operation is currently running."
                                },
                                {
                                  "value": "Cancelled",
                                  "description": "The operation was cancelled."
                                },
                                {
                                  "value": "Failed",
                                  "description": "The operation failed."
                                },
                                {
                                  "value": "Succeeded",
                                  "description": "The operation succeeded."
                                }
                              ]
                            }
                          },
                          "startTime": {
                            "description": "Start time of the operation.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "endTime": {
                            "description": "End time of the operation.",
                            "format": "date-time",
                            "type": "string"
                          },
                          "percentComplete": {
                            "description": "PercentageCompleted",
                            "format": "double",
                            "type": "number",
                            "minimum": 0,
                            "maximum": 100
                          },
                          "errorCode": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The error code."
                          },
                          "errorMessage": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The error message."
                          }
                        }
                      }
                    }
                  },
                  "description": "The list of long term retention server backup operations"
                },
                "nextLink": {
                  "description": "The link used to get the next page of operations.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "A list of long term retention backup operations for server."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/capabilities": {
      "get": {
        "tags": [
          "CapabilitiesByLocation"
        ],
        "operationId": "CapabilitiesByLocation_List",
        "description": "Lists the capabilities available in a given location for a specific subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the location.",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of supported capabilities.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "The status of the capability.",
                        "enum": [
                          "Visible",
                          "Available",
                          "Default",
                          "Disabled"
                        ],
                        "type": "string",
                        "readOnly": true,
                        "x-ms-mutability": [
                          "read"
                        ],
                        "x-ms-enum": {
                          "name": "CapabilityStatus",
                          "modelAsString": false
                        }
                      },
                      "reason": {
                        "description": "The reason for the capability not being available.",
                        "type": "string",
                        "readOnly": true,
                        "x-ms-mutability": [
                          "read"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of flexible servers capabilities."
                      },
                      "supportedServerEditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "The status of the capability.",
                              "enum": [
                                "Visible",
                                "Available",
                                "Default",
                                "Disabled"
                              ],
                              "type": "string",
                              "readOnly": true,
                              "x-ms-mutability": [
                                "read"
                              ],
                              "x-ms-enum": {
                                "name": "CapabilityStatus",
                                "modelAsString": false
                              }
                            },
                            "reason": {
                              "description": "The reason for the capability not being available.",
                              "type": "string",
                              "readOnly": true,
                              "x-ms-mutability": [
                                "read"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of compute tier.",
                              "readOnly": true
                            },
                            "defaultSkuName": {
                              "type": "string",
                              "description": "Default compute name (SKU) for this computer tier.",
                              "readOnly": true
                            },
                            "supportedStorageEditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of the capability.",
                                    "enum": [
                                      "Visible",
                                      "Available",
                                      "Default",
                                      "Disabled"
                                    ],
                                    "type": "string",
                                    "readOnly": true,
                                    "x-ms-mutability": [
                                      "read"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CapabilityStatus",
                                      "modelAsString": false
                                    }
                                  },
                                  "reason": {
                                    "description": "The reason for the capability not being available.",
                                    "type": "string",
                                    "readOnly": true,
                                    "x-ms-mutability": [
                                      "read"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of storage tier.",
                                    "readOnly": true
                                  },
                                  "defaultStorageSizeMb": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Default storage size (in MB) for this storage tier.",
                                    "readOnly": true
                                  },
                                  "supportedStorageMb": {
                                    "type": "array",
                                    "description": "Configurations of storage supported for this storage tier.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "The status of the capability.",
                                          "enum": [
                                            "Visible",
                                            "Available",
                                            "Default",
                                            "Disabled"
                                          ],
                                          "type": "string",
                                          "readOnly": true,
                                          "x-ms-mutability": [
                                            "read"
                                          ],
                                          "x-ms-enum": {
                                            "name": "CapabilityStatus",
                                            "modelAsString": false
                                          }
                                        },
                                        "reason": {
                                          "description": "The reason for the capability not being available.",
                                          "type": "string",
                                          "readOnly": true,
                                          "x-ms-mutability": [
                                            "read"
                                          ]
                                        },
                                        "supportedIops": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minimum IOPS supported by the storage size.",
                                          "readOnly": true
                                        },
                                        "supportedMaximumIops": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Maximum IOPS supported by the storage size.",
                                          "readOnly": true
                                        },
                                        "storageSizeMb": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "Minimum supported size (in MB) of storage.",
                                          "readOnly": true
                                        },
                                        "maximumStorageSizeMb": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "Maximum supported size (in MB) of storage.",
                                          "readOnly": true
                                        },
                                        "supportedThroughput": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minimum supported throughput (in MB/s) of storage.",
                                          "readOnly": true
                                        },
                                        "supportedMaximumThroughput": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Maximum supported throughput (in MB/s) of storage.",
                                          "readOnly": true
                                        },
                                        "defaultIopsTier": {
                                          "type": "string",
                                          "description": "Default IOPS for this tier and storage size.",
                                          "readOnly": true
                                        },
                                        "supportedIopsTiers": {
                                          "type": "array",
                                          "description": "List of all supported storage tiers for this tier and storage size.",
                                          "items": {
                                            "type": "object",
                                            "description": "Capability of a storage tier.",
                                            "properties": {
                                              "status": {
                                                "description": "The status of the capability.",
                                                "enum": [
                                                  "Visible",
                                                  "Available",
                                                  "Default",
                                                  "Disabled"
                                                ],
                                                "type": "string",
                                                "readOnly": true,
                                                "x-ms-mutability": [
                                                  "read"
                                                ],
                                                "x-ms-enum": {
                                                  "name": "CapabilityStatus",
                                                  "modelAsString": false
                                                }
                                              },
                                              "reason": {
                                                "description": "The reason for the capability not being available.",
                                                "type": "string",
                                                "readOnly": true,
                                                "x-ms-mutability": [
                                                  "read"
                                                ]
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the storage tier.",
                                                "readOnly": true
                                              },
                                              "iops": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Supported IOPS for the storage tier.",
                                                "readOnly": true
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ],
                                          "readOnly": true
                                        }
                                      },
                                      "description": "Storage size (in MB) capability."
                                    },
                                    "x-ms-identifiers": [
                                      "storageSizeMb"
                                    ],
                                    "readOnly": true
                                  }
                                },
                                "description": "Capabilities in terms of storage tier."
                              },
                              "description": "List of storage editions supported by this compute tier and compute name.",
                              "readOnly": true,
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "supportedServerSkus": {
                              "type": "array",
                              "description": "List of supported compute names (SKUs).",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of the capability.",
                                    "enum": [
                                      "Visible",
                                      "Available",
                                      "Default",
                                      "Disabled"
                                    ],
                                    "type": "string",
                                    "readOnly": true,
                                    "x-ms-mutability": [
                                      "read"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CapabilityStatus",
                                      "modelAsString": false
                                    }
                                  },
                                  "reason": {
                                    "description": "The reason for the capability not being available.",
                                    "type": "string",
                                    "readOnly": true,
                                    "x-ms-mutability": [
                                      "read"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the compute (SKU).",
                                    "readOnly": true
                                  },
                                  "vCores": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "vCores available for this compute.",
                                    "readOnly": true
                                  },
                                  "supportedIops": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Maximum IOPS supported by this compute.",
                                    "readOnly": true
                                  },
                                  "supportedMemoryPerVcoreMb": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Supported memory (in MB) per virtual core assigned to this compute.",
                                    "readOnly": true
                                  },
                                  "supportedZones": {
                                    "type": "array",
                                    "description": "List of supported availability zones. E.g. '1', '2', '3'",
                                    "items": {
                                      "type": "string"
                                    },
                                    "readOnly": true
                                  },
                                  "supportedHaMode": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "Modes of high availability supported for this compute.",
                                      "enum": [
                                        "SameZone",
                                        "ZoneRedundant"
                                      ],
                                      "x-ms-enum": {
                                        "name": "HighAvailabilityMode",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "ZoneRedundant",
                                            "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                                          },
                                          {
                                            "value": "SameZone",
                                            "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                                          }
                                        ]
                                      }
                                    },
                                    "description": "Modes of high availability supported for this compute.",
                                    "readOnly": true
                                  },
                                  "supportedFeatures": {
                                    "type": "array",
                                    "description": "Features supported.",
                                    "items": {
                                      "type": "object",
                                      "description": "Features supported.",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the feature.",
                                          "readOnly": true
                                        },
                                        "status": {
                                          "type": "string",
                                          "description": "Status of the feature. Indicates if the feature is enabled or not.",
                                          "readOnly": true,
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "FeatureStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "value": "Enabled",
                                                "description": "Feature is enabled."
                                              },
                                              {
                                                "value": "Disabled",
                                                "description": "Feature is disabled."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ],
                                    "readOnly": true
                                  },
                                  "securityProfile": {
                                    "type": "string",
                                    "description": "Security profile of the compute. Indicates if it's a Confidential Compute virtual machine.",
                                    "readOnly": true
                                  }
                                },
                                "description": "Capabilities in terms of compute."
                              },
                              "x-ms-identifiers": [
                                "name"
                              ],
                              "readOnly": true
                            }
                          },
                          "description": "Capabilities in terms of compute tier."
                        },
                        "x-ms-identifiers": [
                          "name"
                        ],
                        "readOnly": true,
                        "description": "List of supported compute tiers."
                      },
                      "supportedServerVersions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "The status of the capability.",
                              "enum": [
                                "Visible",
                                "Available",
                                "Default",
                                "Disabled"
                              ],
                              "type": "string",
                              "readOnly": true,
                              "x-ms-mutability": [
                                "read"
                              ],
                              "x-ms-enum": {
                                "name": "CapabilityStatus",
                                "modelAsString": false
                              }
                            },
                            "reason": {
                              "description": "The reason for the capability not being available.",
                              "type": "string",
                              "readOnly": true,
                              "x-ms-mutability": [
                                "read"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "description": "Major version of PostgreSQL database engine.",
                              "readOnly": true
                            },
                            "supportedVersionsToUpgrade": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Major versions of PostgreSQL database engine to which this version can be automatically upgraded.",
                              "readOnly": true
                            },
                            "supportedFeatures": {
                              "type": "array",
                              "description": "Features supported.",
                              "items": {
                                "type": "object",
                                "description": "Features supported.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the feature.",
                                    "readOnly": true
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Status of the feature. Indicates if the feature is enabled or not.",
                                    "readOnly": true,
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "FeatureStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "Enabled",
                                          "description": "Feature is enabled."
                                        },
                                        {
                                          "value": "Disabled",
                                          "description": "Feature is disabled."
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ],
                              "readOnly": true
                            }
                          },
                          "description": "Capabilities in terms of major versions of PostgreSQL database engine."
                        },
                        "x-ms-identifiers": [
                          "name"
                        ],
                        "description": "List of supported major versions of PostgreSQL database engine.",
                        "readOnly": true
                      },
                      "supportedFeatures": {
                        "type": "array",
                        "description": "Features supported.",
                        "items": {
                          "type": "object",
                          "description": "Features supported.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the feature.",
                              "readOnly": true
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the feature. Indicates if the feature is enabled or not.",
                              "readOnly": true,
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "FeatureStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Feature is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Feature is disabled."
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ],
                        "readOnly": true
                      },
                      "fastProvisioningSupported": {
                        "type": "string",
                        "description": "Indicates if fast provisioning is supported. 'Enabled' means fast provisioning is supported. 'Disabled' stands for fast provisioning is not supported. Will be deprecated in the future. Look to Supported Features for 'FastProvisioning'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "FastProvisioningSupport",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Fast provisioning is supported."
                            },
                            {
                              "value": "Disabled",
                              "description": "Fast provisioning is not supported."
                            }
                          ]
                        }
                      },
                      "supportedFastProvisioningEditions": {
                        "type": "array",
                        "description": "List of compute tiers supporting fast provisioning.",
                        "items": {
                          "type": "object",
                          "description": "Capability of a fast provisioning compute tier.",
                          "properties": {
                            "status": {
                              "description": "The status of the capability.",
                              "enum": [
                                "Visible",
                                "Available",
                                "Default",
                                "Disabled"
                              ],
                              "type": "string",
                              "readOnly": true,
                              "x-ms-mutability": [
                                "read"
                              ],
                              "x-ms-enum": {
                                "name": "CapabilityStatus",
                                "modelAsString": false
                              }
                            },
                            "reason": {
                              "description": "The reason for the capability not being available.",
                              "type": "string",
                              "readOnly": true,
                              "x-ms-mutability": [
                                "read"
                              ]
                            },
                            "supportedTier": {
                              "type": "string",
                              "description": "Compute tier supporting fast provisioning.",
                              "readOnly": true
                            },
                            "supportedSku": {
                              "type": "string",
                              "description": "Compute name (SKU) supporting fast provisioning.",
                              "readOnly": true
                            },
                            "supportedStorageGb": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Storage size (in GB) supporting fast provisioning.",
                              "readOnly": true
                            },
                            "supportedServerVersions": {
                              "type": "string",
                              "description": "Major version of PostgreSQL database engine supporting fast provisioning.",
                              "readOnly": true
                            },
                            "serverCount": {
                              "type": "integer",
                              "description": "Count of servers in cache matching this specification.",
                              "format": "int32",
                              "readOnly": true
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "supportedSku"
                        ],
                        "readOnly": true
                      },
                      "geoBackupSupported": {
                        "type": "string",
                        "description": "Indicates if geographically redundant backups are supported in this location. 'Enabled' means geographically redundant backups are supported. 'Disabled' stands for geographically redundant backup is not supported. Will be deprecated in the future. Look to Supported Features for 'GeoBackup'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "GeographicallyRedundantBackupSupport",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Geographically redundant backups are supported."
                            },
                            {
                              "value": "Disabled",
                              "description": "Geographically redundant backups are not supported."
                            }
                          ]
                        }
                      },
                      "zoneRedundantHaSupported": {
                        "type": "string",
                        "description": "Indicates if high availability with zone redundancy is supported in this location. 'Enabled' means high availability with zone redundancy is supported. 'Disabled' stands for high availability with zone redundancy is not supported. Will be deprecated in the future. Look to Supported Features for  'ZoneRedundantHa'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "ZoneRedundantHighAvailabilitySupport",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "High availability with zone redundancy is supported."
                            },
                            {
                              "value": "Disabled",
                              "description": "High availability with zone redundancy is not supported."
                            }
                          ]
                        }
                      },
                      "zoneRedundantHaAndGeoBackupSupported": {
                        "type": "string",
                        "description": "Indicates if high availability with zone redundancy is supported in conjunction with geographically redundant backups in this location. 'Enabled' means high availability with zone redundancy is supported in conjunction with geographically redundant backups is supported. 'Disabled' stands for high availability with zone redundancy is supported in conjunction with geographically redundant backups is not supported. Will be deprecated in the future. Look to Supported Features for 'ZoneRedundantHaAndGeoBackup'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "ZoneRedundantHighAvailabilityAndGeographicallyRedundantBackupSupport",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "High availability with zone redundancy is supported in conjunction with geographically redundant backups."
                            },
                            {
                              "value": "Disabled",
                              "description": "High availability with zone redundancy is not supported in conjunction with geographically redundant backups."
                            }
                          ]
                        }
                      },
                      "storageAutoGrowthSupported": {
                        "type": "string",
                        "description": "Indicates if storage autogrow is supported in this location. 'Enabled' means storage autogrow is supported. 'Disabled' stands for storage autogrow is not supported. Will be deprecated in the future. Look to Supported Features for 'StorageAutoGrowth'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "StorageAutoGrowthSupport",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Storage autogrow is supported."
                            },
                            {
                              "value": "Disabled",
                              "description": "Storage autogrow is not supported."
                            }
                          ]
                        }
                      },
                      "onlineResizeSupported": {
                        "type": "string",
                        "description": "Indicates if resizing the storage, without interrupting the operation of the database engine, is supported in this location for the given subscription. 'Enabled' means resizing the storage without interrupting the operation of the database engine is supported. 'Disabled' means resizing the storage without interrupting the operation of the database engine is not supported. Will be deprecated in the future. Look to Supported Features for 'OnlineResize'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "OnlineStorageResizeSupport",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Resizing the storage without interrupting the operation of the database engine is supported."
                            },
                            {
                              "value": "Disabled",
                              "description": "Resizing the storage without interrupting the operation of the database engine is not supported."
                            }
                          ]
                        }
                      },
                      "restricted": {
                        "type": "string",
                        "description": "Indicates if this location is restricted. 'Enabled' means location is restricted. 'Disabled' stands for location is not restricted. Will be deprecated in the future. Look to Supported Features for 'Restricted'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "LocationRestricted",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Location is restricted."
                            },
                            {
                              "value": "Disabled",
                              "description": "Location is not restricted."
                            }
                          ]
                        }
                      }
                    },
                    "description": "Capability for the Azure Database for PostgreSQL flexible server."
                  },
                  "x-ms-identifiers": [
                    "name"
                  ],
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "List of capabilities for the Azure Database for PostgreSQL flexible server."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/capabilities": {
      "get": {
        "tags": [
          "CapabilitiesByServer"
        ],
        "operationId": "CapabilitiesByServer_List",
        "description": "Lists the capabilities available for a given server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of supported capabilities.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "The status of the capability.",
                        "enum": [
                          "Visible",
                          "Available",
                          "Default",
                          "Disabled"
                        ],
                        "type": "string",
                        "readOnly": true,
                        "x-ms-mutability": [
                          "read"
                        ],
                        "x-ms-enum": {
                          "name": "CapabilityStatus",
                          "modelAsString": false
                        }
                      },
                      "reason": {
                        "description": "The reason for the capability not being available.",
                        "type": "string",
                        "readOnly": true,
                        "x-ms-mutability": [
                          "read"
                        ]
                      },
                      "name": {
                        "type": "string",
                        "description": "Name of flexible servers capabilities."
                      },
                      "supportedServerEditions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "The status of the capability.",
                              "enum": [
                                "Visible",
                                "Available",
                                "Default",
                                "Disabled"
                              ],
                              "type": "string",
                              "readOnly": true,
                              "x-ms-mutability": [
                                "read"
                              ],
                              "x-ms-enum": {
                                "name": "CapabilityStatus",
                                "modelAsString": false
                              }
                            },
                            "reason": {
                              "description": "The reason for the capability not being available.",
                              "type": "string",
                              "readOnly": true,
                              "x-ms-mutability": [
                                "read"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "description": "Name of compute tier.",
                              "readOnly": true
                            },
                            "defaultSkuName": {
                              "type": "string",
                              "description": "Default compute name (SKU) for this computer tier.",
                              "readOnly": true
                            },
                            "supportedStorageEditions": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of the capability.",
                                    "enum": [
                                      "Visible",
                                      "Available",
                                      "Default",
                                      "Disabled"
                                    ],
                                    "type": "string",
                                    "readOnly": true,
                                    "x-ms-mutability": [
                                      "read"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CapabilityStatus",
                                      "modelAsString": false
                                    }
                                  },
                                  "reason": {
                                    "description": "The reason for the capability not being available.",
                                    "type": "string",
                                    "readOnly": true,
                                    "x-ms-mutability": [
                                      "read"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of storage tier.",
                                    "readOnly": true
                                  },
                                  "defaultStorageSizeMb": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Default storage size (in MB) for this storage tier.",
                                    "readOnly": true
                                  },
                                  "supportedStorageMb": {
                                    "type": "array",
                                    "description": "Configurations of storage supported for this storage tier.",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "The status of the capability.",
                                          "enum": [
                                            "Visible",
                                            "Available",
                                            "Default",
                                            "Disabled"
                                          ],
                                          "type": "string",
                                          "readOnly": true,
                                          "x-ms-mutability": [
                                            "read"
                                          ],
                                          "x-ms-enum": {
                                            "name": "CapabilityStatus",
                                            "modelAsString": false
                                          }
                                        },
                                        "reason": {
                                          "description": "The reason for the capability not being available.",
                                          "type": "string",
                                          "readOnly": true,
                                          "x-ms-mutability": [
                                            "read"
                                          ]
                                        },
                                        "supportedIops": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minimum IOPS supported by the storage size.",
                                          "readOnly": true
                                        },
                                        "supportedMaximumIops": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Maximum IOPS supported by the storage size.",
                                          "readOnly": true
                                        },
                                        "storageSizeMb": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "Minimum supported size (in MB) of storage.",
                                          "readOnly": true
                                        },
                                        "maximumStorageSizeMb": {
                                          "type": "integer",
                                          "format": "int64",
                                          "description": "Maximum supported size (in MB) of storage.",
                                          "readOnly": true
                                        },
                                        "supportedThroughput": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Minimum supported throughput (in MB/s) of storage.",
                                          "readOnly": true
                                        },
                                        "supportedMaximumThroughput": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "Maximum supported throughput (in MB/s) of storage.",
                                          "readOnly": true
                                        },
                                        "defaultIopsTier": {
                                          "type": "string",
                                          "description": "Default IOPS for this tier and storage size.",
                                          "readOnly": true
                                        },
                                        "supportedIopsTiers": {
                                          "type": "array",
                                          "description": "List of all supported storage tiers for this tier and storage size.",
                                          "items": {
                                            "type": "object",
                                            "description": "Capability of a storage tier.",
                                            "properties": {
                                              "status": {
                                                "description": "The status of the capability.",
                                                "enum": [
                                                  "Visible",
                                                  "Available",
                                                  "Default",
                                                  "Disabled"
                                                ],
                                                "type": "string",
                                                "readOnly": true,
                                                "x-ms-mutability": [
                                                  "read"
                                                ],
                                                "x-ms-enum": {
                                                  "name": "CapabilityStatus",
                                                  "modelAsString": false
                                                }
                                              },
                                              "reason": {
                                                "description": "The reason for the capability not being available.",
                                                "type": "string",
                                                "readOnly": true,
                                                "x-ms-mutability": [
                                                  "read"
                                                ]
                                              },
                                              "name": {
                                                "type": "string",
                                                "description": "Name of the storage tier.",
                                                "readOnly": true
                                              },
                                              "iops": {
                                                "type": "integer",
                                                "format": "int32",
                                                "description": "Supported IOPS for the storage tier.",
                                                "readOnly": true
                                              }
                                            }
                                          },
                                          "x-ms-identifiers": [
                                            "name"
                                          ],
                                          "readOnly": true
                                        }
                                      },
                                      "description": "Storage size (in MB) capability."
                                    },
                                    "x-ms-identifiers": [
                                      "storageSizeMb"
                                    ],
                                    "readOnly": true
                                  }
                                },
                                "description": "Capabilities in terms of storage tier."
                              },
                              "description": "List of storage editions supported by this compute tier and compute name.",
                              "readOnly": true,
                              "x-ms-identifiers": [
                                "name"
                              ]
                            },
                            "supportedServerSkus": {
                              "type": "array",
                              "description": "List of supported compute names (SKUs).",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "The status of the capability.",
                                    "enum": [
                                      "Visible",
                                      "Available",
                                      "Default",
                                      "Disabled"
                                    ],
                                    "type": "string",
                                    "readOnly": true,
                                    "x-ms-mutability": [
                                      "read"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CapabilityStatus",
                                      "modelAsString": false
                                    }
                                  },
                                  "reason": {
                                    "description": "The reason for the capability not being available.",
                                    "type": "string",
                                    "readOnly": true,
                                    "x-ms-mutability": [
                                      "read"
                                    ]
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the compute (SKU).",
                                    "readOnly": true
                                  },
                                  "vCores": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "vCores available for this compute.",
                                    "readOnly": true
                                  },
                                  "supportedIops": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "Maximum IOPS supported by this compute.",
                                    "readOnly": true
                                  },
                                  "supportedMemoryPerVcoreMb": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Supported memory (in MB) per virtual core assigned to this compute.",
                                    "readOnly": true
                                  },
                                  "supportedZones": {
                                    "type": "array",
                                    "description": "List of supported availability zones. E.g. '1', '2', '3'",
                                    "items": {
                                      "type": "string"
                                    },
                                    "readOnly": true
                                  },
                                  "supportedHaMode": {
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "Modes of high availability supported for this compute.",
                                      "enum": [
                                        "SameZone",
                                        "ZoneRedundant"
                                      ],
                                      "x-ms-enum": {
                                        "name": "HighAvailabilityMode",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "ZoneRedundant",
                                            "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                                          },
                                          {
                                            "value": "SameZone",
                                            "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                                          }
                                        ]
                                      }
                                    },
                                    "description": "Modes of high availability supported for this compute.",
                                    "readOnly": true
                                  },
                                  "supportedFeatures": {
                                    "type": "array",
                                    "description": "Features supported.",
                                    "items": {
                                      "type": "object",
                                      "description": "Features supported.",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "Name of the feature.",
                                          "readOnly": true
                                        },
                                        "status": {
                                          "type": "string",
                                          "description": "Status of the feature. Indicates if the feature is enabled or not.",
                                          "readOnly": true,
                                          "enum": [
                                            "Enabled",
                                            "Disabled"
                                          ],
                                          "x-ms-enum": {
                                            "name": "FeatureStatus",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "value": "Enabled",
                                                "description": "Feature is enabled."
                                              },
                                              {
                                                "value": "Disabled",
                                                "description": "Feature is disabled."
                                              }
                                            ]
                                          }
                                        }
                                      }
                                    },
                                    "x-ms-identifiers": [
                                      "name"
                                    ],
                                    "readOnly": true
                                  },
                                  "securityProfile": {
                                    "type": "string",
                                    "description": "Security profile of the compute. Indicates if it's a Confidential Compute virtual machine.",
                                    "readOnly": true
                                  }
                                },
                                "description": "Capabilities in terms of compute."
                              },
                              "x-ms-identifiers": [
                                "name"
                              ],
                              "readOnly": true
                            }
                          },
                          "description": "Capabilities in terms of compute tier."
                        },
                        "x-ms-identifiers": [
                          "name"
                        ],
                        "readOnly": true,
                        "description": "List of supported compute tiers."
                      },
                      "supportedServerVersions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "The status of the capability.",
                              "enum": [
                                "Visible",
                                "Available",
                                "Default",
                                "Disabled"
                              ],
                              "type": "string",
                              "readOnly": true,
                              "x-ms-mutability": [
                                "read"
                              ],
                              "x-ms-enum": {
                                "name": "CapabilityStatus",
                                "modelAsString": false
                              }
                            },
                            "reason": {
                              "description": "The reason for the capability not being available.",
                              "type": "string",
                              "readOnly": true,
                              "x-ms-mutability": [
                                "read"
                              ]
                            },
                            "name": {
                              "type": "string",
                              "description": "Major version of PostgreSQL database engine.",
                              "readOnly": true
                            },
                            "supportedVersionsToUpgrade": {
                              "type": "array",
                              "items": {
                                "type": "string"
                              },
                              "description": "Major versions of PostgreSQL database engine to which this version can be automatically upgraded.",
                              "readOnly": true
                            },
                            "supportedFeatures": {
                              "type": "array",
                              "description": "Features supported.",
                              "items": {
                                "type": "object",
                                "description": "Features supported.",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the feature.",
                                    "readOnly": true
                                  },
                                  "status": {
                                    "type": "string",
                                    "description": "Status of the feature. Indicates if the feature is enabled or not.",
                                    "readOnly": true,
                                    "enum": [
                                      "Enabled",
                                      "Disabled"
                                    ],
                                    "x-ms-enum": {
                                      "name": "FeatureStatus",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "Enabled",
                                          "description": "Feature is enabled."
                                        },
                                        {
                                          "value": "Disabled",
                                          "description": "Feature is disabled."
                                        }
                                      ]
                                    }
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "name"
                              ],
                              "readOnly": true
                            }
                          },
                          "description": "Capabilities in terms of major versions of PostgreSQL database engine."
                        },
                        "x-ms-identifiers": [
                          "name"
                        ],
                        "description": "List of supported major versions of PostgreSQL database engine.",
                        "readOnly": true
                      },
                      "supportedFeatures": {
                        "type": "array",
                        "description": "Features supported.",
                        "items": {
                          "type": "object",
                          "description": "Features supported.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the feature.",
                              "readOnly": true
                            },
                            "status": {
                              "type": "string",
                              "description": "Status of the feature. Indicates if the feature is enabled or not.",
                              "readOnly": true,
                              "enum": [
                                "Enabled",
                                "Disabled"
                              ],
                              "x-ms-enum": {
                                "name": "FeatureStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Enabled",
                                    "description": "Feature is enabled."
                                  },
                                  {
                                    "value": "Disabled",
                                    "description": "Feature is disabled."
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ],
                        "readOnly": true
                      },
                      "fastProvisioningSupported": {
                        "type": "string",
                        "description": "Indicates if fast provisioning is supported. 'Enabled' means fast provisioning is supported. 'Disabled' stands for fast provisioning is not supported. Will be deprecated in the future. Look to Supported Features for 'FastProvisioning'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "FastProvisioningSupport",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Fast provisioning is supported."
                            },
                            {
                              "value": "Disabled",
                              "description": "Fast provisioning is not supported."
                            }
                          ]
                        }
                      },
                      "supportedFastProvisioningEditions": {
                        "type": "array",
                        "description": "List of compute tiers supporting fast provisioning.",
                        "items": {
                          "type": "object",
                          "description": "Capability of a fast provisioning compute tier.",
                          "properties": {
                            "status": {
                              "description": "The status of the capability.",
                              "enum": [
                                "Visible",
                                "Available",
                                "Default",
                                "Disabled"
                              ],
                              "type": "string",
                              "readOnly": true,
                              "x-ms-mutability": [
                                "read"
                              ],
                              "x-ms-enum": {
                                "name": "CapabilityStatus",
                                "modelAsString": false
                              }
                            },
                            "reason": {
                              "description": "The reason for the capability not being available.",
                              "type": "string",
                              "readOnly": true,
                              "x-ms-mutability": [
                                "read"
                              ]
                            },
                            "supportedTier": {
                              "type": "string",
                              "description": "Compute tier supporting fast provisioning.",
                              "readOnly": true
                            },
                            "supportedSku": {
                              "type": "string",
                              "description": "Compute name (SKU) supporting fast provisioning.",
                              "readOnly": true
                            },
                            "supportedStorageGb": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Storage size (in GB) supporting fast provisioning.",
                              "readOnly": true
                            },
                            "supportedServerVersions": {
                              "type": "string",
                              "description": "Major version of PostgreSQL database engine supporting fast provisioning.",
                              "readOnly": true
                            },
                            "serverCount": {
                              "type": "integer",
                              "description": "Count of servers in cache matching this specification.",
                              "format": "int32",
                              "readOnly": true
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "supportedSku"
                        ],
                        "readOnly": true
                      },
                      "geoBackupSupported": {
                        "type": "string",
                        "description": "Indicates if geographically redundant backups are supported in this location. 'Enabled' means geographically redundant backups are supported. 'Disabled' stands for geographically redundant backup is not supported. Will be deprecated in the future. Look to Supported Features for 'GeoBackup'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "GeographicallyRedundantBackupSupport",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Geographically redundant backups are supported."
                            },
                            {
                              "value": "Disabled",
                              "description": "Geographically redundant backups are not supported."
                            }
                          ]
                        }
                      },
                      "zoneRedundantHaSupported": {
                        "type": "string",
                        "description": "Indicates if high availability with zone redundancy is supported in this location. 'Enabled' means high availability with zone redundancy is supported. 'Disabled' stands for high availability with zone redundancy is not supported. Will be deprecated in the future. Look to Supported Features for  'ZoneRedundantHa'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "ZoneRedundantHighAvailabilitySupport",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "High availability with zone redundancy is supported."
                            },
                            {
                              "value": "Disabled",
                              "description": "High availability with zone redundancy is not supported."
                            }
                          ]
                        }
                      },
                      "zoneRedundantHaAndGeoBackupSupported": {
                        "type": "string",
                        "description": "Indicates if high availability with zone redundancy is supported in conjunction with geographically redundant backups in this location. 'Enabled' means high availability with zone redundancy is supported in conjunction with geographically redundant backups is supported. 'Disabled' stands for high availability with zone redundancy is supported in conjunction with geographically redundant backups is not supported. Will be deprecated in the future. Look to Supported Features for 'ZoneRedundantHaAndGeoBackup'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "ZoneRedundantHighAvailabilityAndGeographicallyRedundantBackupSupport",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "High availability with zone redundancy is supported in conjunction with geographically redundant backups."
                            },
                            {
                              "value": "Disabled",
                              "description": "High availability with zone redundancy is not supported in conjunction with geographically redundant backups."
                            }
                          ]
                        }
                      },
                      "storageAutoGrowthSupported": {
                        "type": "string",
                        "description": "Indicates if storage autogrow is supported in this location. 'Enabled' means storage autogrow is supported. 'Disabled' stands for storage autogrow is not supported. Will be deprecated in the future. Look to Supported Features for 'StorageAutoGrowth'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "StorageAutoGrowthSupport",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Storage autogrow is supported."
                            },
                            {
                              "value": "Disabled",
                              "description": "Storage autogrow is not supported."
                            }
                          ]
                        }
                      },
                      "onlineResizeSupported": {
                        "type": "string",
                        "description": "Indicates if resizing the storage, without interrupting the operation of the database engine, is supported in this location for the given subscription. 'Enabled' means resizing the storage without interrupting the operation of the database engine is supported. 'Disabled' means resizing the storage without interrupting the operation of the database engine is not supported. Will be deprecated in the future. Look to Supported Features for 'OnlineResize'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "OnlineStorageResizeSupport",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Resizing the storage without interrupting the operation of the database engine is supported."
                            },
                            {
                              "value": "Disabled",
                              "description": "Resizing the storage without interrupting the operation of the database engine is not supported."
                            }
                          ]
                        }
                      },
                      "restricted": {
                        "type": "string",
                        "description": "Indicates if this location is restricted. 'Enabled' means location is restricted. 'Disabled' stands for location is not restricted. Will be deprecated in the future. Look to Supported Features for 'Restricted'.",
                        "readOnly": true,
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "LocationRestricted",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Location is restricted."
                            },
                            {
                              "value": "Disabled",
                              "description": "Location is not restricted."
                            }
                          ]
                        }
                      }
                    },
                    "description": "Capability for the Azure Database for PostgreSQL flexible server."
                  },
                  "x-ms-identifiers": [
                    "name"
                  ],
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "List of capabilities for the Azure Database for PostgreSQL flexible server."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/logFiles": {
      "get": {
        "tags": [
          "CapturedLogs"
        ],
        "operationId": "CapturedLogs_ListByServer",
        "description": "Lists all captured logs for download in a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of a log file.",
                        "type": "object",
                        "properties": {
                          "createdTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation timestamp of the log file."
                          },
                          "lastModifiedTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last modified timestamp of the log file."
                          },
                          "sizeInKb": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Size (in KB) of the log file."
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of log file. Can be 'ServerLogs' or 'UpgradeLogs'."
                          },
                          "url": {
                            "type": "string",
                            "description": "URL to download the log file from."
                          }
                        }
                      }
                    },
                    "description": "Log file."
                  },
                  "description": "List of log files in a server."
                },
                "nextLink": {
                  "description": "Link used to get the next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "List of log files."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_ListByServer",
        "description": "Lists all configurations (also known as server parameters) of a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of a configuration (also known as server parameter).",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "Value of the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
                          },
                          "description": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Description of the configuration (also known as server parameter)."
                          },
                          "defaultValue": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Value assigned by default to the configuration (also known as server parameter)."
                          },
                          "dataType": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Data type of the configuration (also known as server parameter).",
                            "enum": [
                              "Boolean",
                              "Numeric",
                              "Integer",
                              "Enumeration",
                              "String",
                              "Set"
                            ],
                            "x-ms-enum": {
                              "name": "ConfigurationDataType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Boolean",
                                  "description": "A boolean value."
                                },
                                {
                                  "value": "Numeric",
                                  "description": "A numeric value."
                                },
                                {
                                  "value": "Integer",
                                  "description": "An integer value."
                                },
                                {
                                  "value": "Enumeration",
                                  "description": "An enumeration value."
                                },
                                {
                                  "value": "String",
                                  "description": "A string value."
                                },
                                {
                                  "value": "Set",
                                  "description": "A set of values."
                                }
                              ]
                            }
                          },
                          "allowedValues": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Allowed values of the configuration (also known as server parameter)."
                          },
                          "source": {
                            "type": "string",
                            "description": "Source of the value assigned to the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
                          },
                          "isDynamicConfig": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Indicates if it's a dynamic (true) or static (false) configuration (also known as server parameter). Static server parameters require a server restart after changing the value assigned to them, for the change to take effect. Dynamic server parameters do not require a server restart after changing the value assigned to them, for the change to take effect."
                          },
                          "isReadOnly": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Indicates if it's a read-only (true) or modifiable (false) configuration (also known as server parameter)."
                          },
                          "isConfigPendingRestart": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Indicates if the value assigned to the configuration (also known as server parameter) is pending a server restart for it to take effect."
                          },
                          "unit": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Units in which the configuration (also known as server parameter) value is expressed."
                          },
                          "documentationLink": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Link pointing to the documentation of the configuration (also known as server parameter)."
                          }
                        }
                      }
                    },
                    "description": "Configuration (also known as server parameter)."
                  },
                  "description": "List of configurations (also known as server parameters)."
                },
                "nextLink": {
                  "description": "Link used to get the next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "List of configurations (also known as server parameters)."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/configurations/{configurationName}": {
      "get": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_Get",
        "description": "Gets information about a specific configuration (also known as server parameter) of a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the configuration (also known as server parameter).",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$",
            "maxLength": 256,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of a configuration (also known as server parameter).",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
                    },
                    "description": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Description of the configuration (also known as server parameter)."
                    },
                    "defaultValue": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Value assigned by default to the configuration (also known as server parameter)."
                    },
                    "dataType": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Data type of the configuration (also known as server parameter).",
                      "enum": [
                        "Boolean",
                        "Numeric",
                        "Integer",
                        "Enumeration",
                        "String",
                        "Set"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationDataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Boolean",
                            "description": "A boolean value."
                          },
                          {
                            "value": "Numeric",
                            "description": "A numeric value."
                          },
                          {
                            "value": "Integer",
                            "description": "An integer value."
                          },
                          {
                            "value": "Enumeration",
                            "description": "An enumeration value."
                          },
                          {
                            "value": "String",
                            "description": "A string value."
                          },
                          {
                            "value": "Set",
                            "description": "A set of values."
                          }
                        ]
                      }
                    },
                    "allowedValues": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Allowed values of the configuration (also known as server parameter)."
                    },
                    "source": {
                      "type": "string",
                      "description": "Source of the value assigned to the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
                    },
                    "isDynamicConfig": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates if it's a dynamic (true) or static (false) configuration (also known as server parameter). Static server parameters require a server restart after changing the value assigned to them, for the change to take effect. Dynamic server parameters do not require a server restart after changing the value assigned to them, for the change to take effect."
                    },
                    "isReadOnly": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates if it's a read-only (true) or modifiable (false) configuration (also known as server parameter)."
                    },
                    "isConfigPendingRestart": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates if the value assigned to the configuration (also known as server parameter) is pending a server restart for it to take effect."
                    },
                    "unit": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Units in which the configuration (also known as server parameter) value is expressed."
                    },
                    "documentationLink": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Link pointing to the documentation of the configuration (also known as server parameter)."
                    }
                  }
                }
              },
              "description": "Configuration (also known as server parameter)."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_Update",
        "description": "Updates the value assigned to a specific modifiable configuration (also known as server parameter) of a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the configuration (also known as server parameter).",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$",
            "maxLength": 256,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of a configuration (also known as server parameter).",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
                    },
                    "description": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Description of the configuration (also known as server parameter)."
                    },
                    "defaultValue": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Value assigned by default to the configuration (also known as server parameter)."
                    },
                    "dataType": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Data type of the configuration (also known as server parameter).",
                      "enum": [
                        "Boolean",
                        "Numeric",
                        "Integer",
                        "Enumeration",
                        "String",
                        "Set"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationDataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Boolean",
                            "description": "A boolean value."
                          },
                          {
                            "value": "Numeric",
                            "description": "A numeric value."
                          },
                          {
                            "value": "Integer",
                            "description": "An integer value."
                          },
                          {
                            "value": "Enumeration",
                            "description": "An enumeration value."
                          },
                          {
                            "value": "String",
                            "description": "A string value."
                          },
                          {
                            "value": "Set",
                            "description": "A set of values."
                          }
                        ]
                      }
                    },
                    "allowedValues": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Allowed values of the configuration (also known as server parameter)."
                    },
                    "source": {
                      "type": "string",
                      "description": "Source of the value assigned to the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
                    },
                    "isDynamicConfig": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates if it's a dynamic (true) or static (false) configuration (also known as server parameter). Static server parameters require a server restart after changing the value assigned to them, for the change to take effect. Dynamic server parameters do not require a server restart after changing the value assigned to them, for the change to take effect."
                    },
                    "isReadOnly": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates if it's a read-only (true) or modifiable (false) configuration (also known as server parameter)."
                    },
                    "isConfigPendingRestart": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates if the value assigned to the configuration (also known as server parameter) is pending a server restart for it to take effect."
                    },
                    "unit": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Units in which the configuration (also known as server parameter) value is expressed."
                    },
                    "documentationLink": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Link pointing to the documentation of the configuration (also known as server parameter)."
                    }
                  }
                }
              },
              "description": "Configuration (also known as server parameter)."
            },
            "description": "Parameters required to update the value of a specific modifiable configuration (also known as server parameter)."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Configurations"
        ],
        "operationId": "Configurations_Put",
        "description": "Updates, using Put verb, the value assigned to a specific modifiable configuration (also known as server parameter) of a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "configurationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the configuration (also known as server parameter).",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$",
            "maxLength": 256,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of a configuration (also known as server parameter).",
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "description": "Value of the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
                    },
                    "description": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Description of the configuration (also known as server parameter)."
                    },
                    "defaultValue": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Value assigned by default to the configuration (also known as server parameter)."
                    },
                    "dataType": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Data type of the configuration (also known as server parameter).",
                      "enum": [
                        "Boolean",
                        "Numeric",
                        "Integer",
                        "Enumeration",
                        "String",
                        "Set"
                      ],
                      "x-ms-enum": {
                        "name": "ConfigurationDataType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Boolean",
                            "description": "A boolean value."
                          },
                          {
                            "value": "Numeric",
                            "description": "A numeric value."
                          },
                          {
                            "value": "Integer",
                            "description": "An integer value."
                          },
                          {
                            "value": "Enumeration",
                            "description": "An enumeration value."
                          },
                          {
                            "value": "String",
                            "description": "A string value."
                          },
                          {
                            "value": "Set",
                            "description": "A set of values."
                          }
                        ]
                      }
                    },
                    "allowedValues": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Allowed values of the configuration (also known as server parameter)."
                    },
                    "source": {
                      "type": "string",
                      "description": "Source of the value assigned to the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
                    },
                    "isDynamicConfig": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates if it's a dynamic (true) or static (false) configuration (also known as server parameter). Static server parameters require a server restart after changing the value assigned to them, for the change to take effect. Dynamic server parameters do not require a server restart after changing the value assigned to them, for the change to take effect."
                    },
                    "isReadOnly": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates if it's a read-only (true) or modifiable (false) configuration (also known as server parameter)."
                    },
                    "isConfigPendingRestart": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Indicates if the value assigned to the configuration (also known as server parameter) is pending a server restart for it to take effect."
                    },
                    "unit": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Units in which the configuration (also known as server parameter) value is expressed."
                    },
                    "documentationLink": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Link pointing to the documentation of the configuration (also known as server parameter)."
                    }
                  }
                }
              },
              "description": "Configuration (also known as server parameter)."
            },
            "description": "Parameters required to update the value of a specific modifiable configuration (also known as server parameter)."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases/{databaseName}": {
      "put": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Create",
        "description": "Creates a new database.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the database (case-sensitive). Exact database names can be retrieved by getting the list of all existing databases in a server.",
            "minLength": 1,
            "pattern": "^[a-zA-Z_][\\w\\-]{0,62}$",
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of a database.",
                  "type": "object",
                  "properties": {
                    "charset": {
                      "type": "string",
                      "description": "Character set of the database.",
                      "pattern": "^[a-zA-Z]+\\w*$"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation of the database.",
                      "pattern": "^[a-zA-Z\\-]+([. ]|\\w)*$"
                    }
                  }
                }
              },
              "description": "Represents a database."
            },
            "description": "Parameters required to create a new database."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Delete",
        "description": "Deletes an existing database.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the database (case-sensitive). Exact database names can be retrieved by getting the list of all existing databases in a server.",
            "minLength": 1,
            "pattern": "^[a-zA-Z_][\\w\\-]{0,62}$",
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content."
          }
        }
      },
      "get": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_Get",
        "description": "Gets information about an existing database.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the database (case-sensitive). Exact database names can be retrieved by getting the list of all existing databases in a server.",
            "minLength": 1,
            "pattern": "^[a-zA-Z_][\\w\\-]{0,62}$",
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of a database.",
                  "type": "object",
                  "properties": {
                    "charset": {
                      "type": "string",
                      "description": "Character set of the database.",
                      "pattern": "^[a-zA-Z]+\\w*$"
                    },
                    "collation": {
                      "type": "string",
                      "description": "Collation of the database.",
                      "pattern": "^[a-zA-Z\\-]+([. ]|\\w)*$"
                    }
                  }
                }
              },
              "description": "Represents a database."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/databases": {
      "get": {
        "tags": [
          "Databases"
        ],
        "operationId": "Databases_ListByServer",
        "description": "Lists all databases in a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of a database.",
                        "type": "object",
                        "properties": {
                          "charset": {
                            "type": "string",
                            "description": "Character set of the database.",
                            "pattern": "^[a-zA-Z]+\\w*$"
                          },
                          "collation": {
                            "type": "string",
                            "description": "Collation of the database.",
                            "pattern": "^[a-zA-Z\\-]+([. ]|\\w)*$"
                          }
                        }
                      }
                    },
                    "description": "Represents a database."
                  },
                  "description": "List of all databases in a server."
                },
                "nextLink": {
                  "description": "Link used to get the next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "List of all databases in a server."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules/{firewallRuleName}": {
      "put": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_CreateOrUpdate",
        "description": "Creates a new firewall rule or updates an existing firewall rule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the firewall rule.",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][-_a-zA-Z0-9]{0,79}(?<!-)$",
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of a firewall rule.",
                  "type": "object",
                  "properties": {
                    "startIpAddress": {
                      "type": "string",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
                      "description": "IP address defining the start of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
                    },
                    "endIpAddress": {
                      "type": "string",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
                      "description": "IP address defining the end of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
                    }
                  },
                  "required": [
                    "startIpAddress",
                    "endIpAddress"
                  ]
                }
              },
              "required": [
                "properties"
              ],
              "description": "Firewall rule."
            },
            "description": "Parameters required for creating or updating a firewall rule."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Delete",
        "description": "Deletes an existing firewall rule.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the firewall rule.",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][-_a-zA-Z0-9]{0,79}(?<!-)$",
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content."
          }
        }
      },
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_Get",
        "description": "Gets information about a firewall rule in a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "firewallRuleName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of the firewall rule.",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][-_a-zA-Z0-9]{0,79}(?<!-)$",
            "maxLength": 80,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of a firewall rule.",
                  "type": "object",
                  "properties": {
                    "startIpAddress": {
                      "type": "string",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
                      "description": "IP address defining the start of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
                    },
                    "endIpAddress": {
                      "type": "string",
                      "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
                      "description": "IP address defining the end of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
                    }
                  },
                  "required": [
                    "startIpAddress",
                    "endIpAddress"
                  ]
                }
              },
              "required": [
                "properties"
              ],
              "description": "Firewall rule."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/firewallRules": {
      "get": {
        "tags": [
          "FirewallRules"
        ],
        "operationId": "FirewallRules_ListByServer",
        "description": "Lists information about all firewall rules in a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of a firewall rule.",
                        "type": "object",
                        "properties": {
                          "startIpAddress": {
                            "type": "string",
                            "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
                            "description": "IP address defining the start of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
                          },
                          "endIpAddress": {
                            "type": "string",
                            "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
                            "description": "IP address defining the end of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
                          }
                        },
                        "required": [
                          "startIpAddress",
                          "endIpAddress"
                        ]
                      }
                    },
                    "required": [
                      "properties"
                    ],
                    "description": "Firewall rule."
                  },
                  "description": "List of firewall rules in a server."
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "List of firewall rules."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/migrations/{migrationName}": {
      "put": {
        "tags": [
          "Migrations"
        ],
        "operationId": "Migrations_Create",
        "description": "Creates a new migration.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "migrationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of migration.",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Migration properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "migrationId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Identifier of a migration."
                    },
                    "currentStatus": {
                      "readOnly": true,
                      "description": "Current status of a migration.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "State of migration.",
                          "enum": [
                            "InProgress",
                            "WaitingForUserAction",
                            "Canceled",
                            "Failed",
                            "Succeeded",
                            "ValidationFailed",
                            "CleaningUp"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "MigrationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "InProgress",
                                "description": "Migration is in progress."
                              },
                              {
                                "value": "WaitingForUserAction",
                                "description": "Migration is waiting for user action."
                              },
                              {
                                "value": "Canceled",
                                "description": "Migration has been canceled."
                              },
                              {
                                "value": "Failed",
                                "description": "Migration has failed."
                              },
                              {
                                "value": "Succeeded",
                                "description": "Migration has succeeded."
                              },
                              {
                                "value": "ValidationFailed",
                                "description": "Validation for migration has failed."
                              },
                              {
                                "value": "CleaningUp",
                                "description": "Migration is cleaning up resources."
                              }
                            ]
                          }
                        },
                        "error": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Error message, if any, for the migration state."
                        },
                        "currentSubStateDetails": {
                          "readOnly": true,
                          "description": "Current migration sub state details.",
                          "type": "object",
                          "properties": {
                            "currentSubState": {
                              "readOnly": true,
                              "enum": [
                                "PerformingPreRequisiteSteps",
                                "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                "WaitingForDBsToMigrateSpecification",
                                "WaitingForTargetDBOverwriteConfirmation",
                                "WaitingForDataMigrationScheduling",
                                "WaitingForDataMigrationWindow",
                                "MigratingData",
                                "WaitingForCutoverTrigger",
                                "CompletingMigration",
                                "Completed",
                                "CancelingRequestedDBMigrations",
                                "ValidationInProgress"
                              ],
                              "type": "string",
                              "description": "Substate of migration.",
                              "x-ms-enum": {
                                "name": "MigrationSubstate",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "PerformingPreRequisiteSteps",
                                    "description": "Performing pre-requisite steps for migration."
                                  },
                                  {
                                    "value": "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                    "description": "Waiting for logical replication setup request on source database."
                                  },
                                  {
                                    "value": "WaitingForDBsToMigrateSpecification",
                                    "description": "Waiting for databases to migrate specification."
                                  },
                                  {
                                    "value": "WaitingForTargetDBOverwriteConfirmation",
                                    "description": "Waiting for target database overwrite confirmation."
                                  },
                                  {
                                    "value": "WaitingForDataMigrationScheduling",
                                    "description": "Waiting for data migration scheduling."
                                  },
                                  {
                                    "value": "WaitingForDataMigrationWindow",
                                    "description": "Waiting for data migration window."
                                  },
                                  {
                                    "value": "MigratingData",
                                    "description": "Migrating data."
                                  },
                                  {
                                    "value": "WaitingForCutoverTrigger",
                                    "description": "Waiting for cutover trigger."
                                  },
                                  {
                                    "value": "CompletingMigration",
                                    "description": "Completing migration."
                                  },
                                  {
                                    "value": "Completed",
                                    "description": "Migration completed."
                                  },
                                  {
                                    "value": "CancelingRequestedDBMigrations",
                                    "description": "Canceling requested database migrations."
                                  },
                                  {
                                    "value": "ValidationInProgress",
                                    "description": "Validation in progress."
                                  }
                                ]
                              }
                            },
                            "dbDetails": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Migration state of a database.",
                                "properties": {
                                  "databaseName": {
                                    "type": "string",
                                    "description": "Name of database."
                                  },
                                  "migrationState": {
                                    "type": "string",
                                    "description": "Migration state of a database.",
                                    "enum": [
                                      "InProgress",
                                      "WaitingForCutoverTrigger",
                                      "Failed",
                                      "Canceled",
                                      "Succeeded",
                                      "Canceling"
                                    ],
                                    "x-ms-enum": {
                                      "name": "MigrationDatabaseState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "InProgress",
                                          "description": "Migration is in progress for the database."
                                        },
                                        {
                                          "value": "WaitingForCutoverTrigger",
                                          "description": "Migration is waiting for cutover trigger for the database."
                                        },
                                        {
                                          "value": "Failed",
                                          "description": "Migration has failed for the database."
                                        },
                                        {
                                          "value": "Canceled",
                                          "description": "Migration has been canceled for the database."
                                        },
                                        {
                                          "value": "Succeeded",
                                          "description": "Migration has succeeded for the database."
                                        },
                                        {
                                          "value": "Canceling",
                                          "description": "Migration is canceling for the database."
                                        }
                                      ]
                                    }
                                  },
                                  "migrationOperation": {
                                    "type": "string",
                                    "description": "Migration operation of a database."
                                  },
                                  "startedOn": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Start time of a migration state."
                                  },
                                  "endedOn": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "End time of a migration state."
                                  },
                                  "fullLoadQueuedTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables queued for the migration of a database."
                                  },
                                  "fullLoadErroredTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables encountering errors during the migration of a database."
                                  },
                                  "fullLoadLoadingTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables loading during the migration of a database."
                                  },
                                  "fullLoadCompletedTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables loaded during the migration of a database."
                                  },
                                  "cdcUpdateCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture update counter."
                                  },
                                  "cdcDeleteCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture delete counter."
                                  },
                                  "cdcInsertCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture insert counter."
                                  },
                                  "appliedChanges": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture applied changes counter."
                                  },
                                  "incomingChanges": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture incoming changes counter."
                                  },
                                  "latency": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Lag in seconds between source and target during online phase."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "Error message, if any, for the migration state."
                                  }
                                }
                              }
                            },
                            "validationDetails": {
                              "type": "object",
                              "description": "Details for the validation for migration.",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "Validation status for migration.",
                                  "enum": [
                                    "Failed",
                                    "Succeeded",
                                    "Warning"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ValidationState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Failed",
                                        "description": "Validation has failed."
                                      },
                                      {
                                        "value": "Succeeded",
                                        "description": "Validation has succeeded."
                                      },
                                      {
                                        "value": "Warning",
                                        "description": "Validation has succeeded with warnings."
                                      }
                                    ]
                                  }
                                },
                                "validationStartTimeInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Start time (UTC) for validation."
                                },
                                "validationEndTimeInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "End time (UTC) for validation."
                                },
                                "serverLevelValidationDetails": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Validation summary object.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Validation type."
                                      },
                                      "state": {
                                        "type": "string",
                                        "description": "Validation status for migration.",
                                        "enum": [
                                          "Failed",
                                          "Succeeded",
                                          "Warning"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ValidationState",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "Failed",
                                              "description": "Validation has failed."
                                            },
                                            {
                                              "value": "Succeeded",
                                              "description": "Validation has succeeded."
                                            },
                                            {
                                              "value": "Warning",
                                              "description": "Validation has succeeded with warnings."
                                            }
                                          ]
                                        }
                                      },
                                      "messages": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation message object.",
                                          "properties": {
                                            "state": {
                                              "type": "string",
                                              "description": "Validation status for migration.",
                                              "enum": [
                                                "Failed",
                                                "Succeeded",
                                                "Warning"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ValidationState",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "Failed",
                                                    "description": "Validation has failed."
                                                  },
                                                  {
                                                    "value": "Succeeded",
                                                    "description": "Validation has succeeded."
                                                  },
                                                  {
                                                    "value": "Warning",
                                                    "description": "Validation has succeeded with warnings."
                                                  }
                                                ]
                                              }
                                            },
                                            "message": {
                                              "type": "string",
                                              "description": "Validation message string."
                                            }
                                          }
                                        },
                                        "description": "Validation messages.",
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "description": "Details of server level validations.",
                                  "x-ms-identifiers": []
                                },
                                "dbLevelValidationDetails": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Validation status summary for a database.",
                                    "properties": {
                                      "databaseName": {
                                        "type": "string",
                                        "description": "Name of database."
                                      },
                                      "startedOn": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Start time of a database level validation."
                                      },
                                      "endedOn": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "End time of a database level validation."
                                      },
                                      "summary": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation summary object.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "Validation type."
                                            },
                                            "state": {
                                              "type": "string",
                                              "description": "Validation status for migration.",
                                              "enum": [
                                                "Failed",
                                                "Succeeded",
                                                "Warning"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ValidationState",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "Failed",
                                                    "description": "Validation has failed."
                                                  },
                                                  {
                                                    "value": "Succeeded",
                                                    "description": "Validation has succeeded."
                                                  },
                                                  {
                                                    "value": "Warning",
                                                    "description": "Validation has succeeded with warnings."
                                                  }
                                                ]
                                              }
                                            },
                                            "messages": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "description": "Validation message object.",
                                                "properties": {
                                                  "state": {
                                                    "type": "string",
                                                    "description": "Validation status for migration.",
                                                    "enum": [
                                                      "Failed",
                                                      "Succeeded",
                                                      "Warning"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ValidationState",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "value": "Failed",
                                                          "description": "Validation has failed."
                                                        },
                                                        {
                                                          "value": "Succeeded",
                                                          "description": "Validation has succeeded."
                                                        },
                                                        {
                                                          "value": "Warning",
                                                          "description": "Validation has succeeded with warnings."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "message": {
                                                    "type": "string",
                                                    "description": "Validation message string."
                                                  }
                                                }
                                              },
                                              "description": "Validation messages.",
                                              "x-ms-identifiers": []
                                            }
                                          }
                                        },
                                        "description": "Summary of database level validations.",
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "description": "Details of server level validations.",
                                  "x-ms-identifiers": [
                                    "databaseName"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "migrationInstanceResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Identifier of the private endpoint migration instance."
                    },
                    "migrationMode": {
                      "description": "Mode used to perform the migration: Online or Offline.",
                      "enum": [
                        "Offline",
                        "Online"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MigrationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Offline",
                            "description": "Offline migration mode."
                          },
                          {
                            "value": "Online",
                            "description": "Online migration mode."
                          }
                        ]
                      }
                    },
                    "migrationOption": {
                      "description": "Supported option for a migration.",
                      "enum": [
                        "Validate",
                        "Migrate",
                        "ValidateAndMigrate"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MigrationOption",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Validate",
                            "description": "Validate the migration without performing it."
                          },
                          {
                            "value": "Migrate",
                            "description": "Perform the migration."
                          },
                          {
                            "value": "ValidateAndMigrate",
                            "description": "Validate and perform the migration."
                          }
                        ]
                      }
                    },
                    "sourceType": {
                      "description": "Source server type used for the migration: ApsaraDB_RDS, AWS, AWS_AURORA, AWS_EC2, AWS_RDS, AzureVM, Crunchy_PostgreSQL, Digital_Ocean_Droplets, Digital_Ocean_PostgreSQL, EDB, EDB_Oracle_Server, EDB_PostgreSQL, GCP, GCP_AlloyDB, GCP_CloudSQL, GCP_Compute, Heroku_PostgreSQL, Huawei_Compute, Huawei_RDS, OnPremises, PostgreSQLCosmosDB, PostgreSQLFlexibleServer, PostgreSQLSingleServer, or Supabase_PostgreSQL",
                      "enum": [
                        "OnPremises",
                        "AWS",
                        "GCP",
                        "AzureVM",
                        "PostgreSQLSingleServer",
                        "AWS_RDS",
                        "AWS_AURORA",
                        "AWS_EC2",
                        "GCP_CloudSQL",
                        "GCP_AlloyDB",
                        "GCP_Compute",
                        "EDB",
                        "EDB_Oracle_Server",
                        "EDB_PostgreSQL",
                        "PostgreSQLFlexibleServer",
                        "PostgreSQLCosmosDB",
                        "Huawei_RDS",
                        "Huawei_Compute",
                        "Heroku_PostgreSQL",
                        "Crunchy_PostgreSQL",
                        "ApsaraDB_RDS",
                        "Digital_Ocean_Droplets",
                        "Digital_Ocean_PostgreSQL",
                        "Supabase_PostgreSQL"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SourceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "OnPremises",
                            "description": "On-premises PostgreSQL server."
                          },
                          {
                            "value": "AWS",
                            "description": "Amazon Web Services PostgreSQL server."
                          },
                          {
                            "value": "GCP",
                            "description": "Google Cloud Platform PostgreSQL server."
                          },
                          {
                            "value": "AzureVM",
                            "description": "Azure Virtual Machine PostgreSQL server."
                          },
                          {
                            "value": "PostgreSQLSingleServer",
                            "description": "Azure Database for PostgreSQL single server."
                          },
                          {
                            "value": "AWS_RDS",
                            "description": "Amazon RDS for PostgreSQL."
                          },
                          {
                            "value": "AWS_AURORA",
                            "description": "Amazon Aurora for PostgreSQL."
                          },
                          {
                            "value": "AWS_EC2",
                            "description": "Amazon EC2 for PostgreSQL."
                          },
                          {
                            "value": "GCP_CloudSQL",
                            "description": "Google Cloud SQL for PostgreSQL."
                          },
                          {
                            "value": "GCP_AlloyDB",
                            "description": "Google Cloud AlloyDB for PostgreSQL."
                          },
                          {
                            "value": "GCP_Compute",
                            "description": "Google Compute Engine for PostgreSQL."
                          },
                          {
                            "value": "EDB",
                            "description": "EnterpriseDB PostgreSQL server."
                          },
                          {
                            "value": "EDB_Oracle_Server",
                            "description": "EnterpriseDB Oracle Server."
                          },
                          {
                            "value": "EDB_PostgreSQL",
                            "description": "EnterpriseDB PostgreSQL server."
                          },
                          {
                            "value": "PostgreSQLFlexibleServer",
                            "description": "Azure Database for PostgreSQL flexible server."
                          },
                          {
                            "value": "PostgreSQLCosmosDB",
                            "description": ".NET Cosmos DB for PostgreSQL"
                          },
                          {
                            "value": "Huawei_RDS",
                            "description": "Huawei RDS for PostgreSQL"
                          },
                          {
                            "value": "Huawei_Compute",
                            "description": "Huawei Compute for PostgreSQL"
                          },
                          {
                            "value": "Heroku_PostgreSQL",
                            "description": "Heroku PostgreSQL"
                          },
                          {
                            "value": "Crunchy_PostgreSQL",
                            "description": "Crunchy PostgreSQL"
                          },
                          {
                            "value": "ApsaraDB_RDS",
                            "description": "ApsaraDB RDS for PostgreSQL"
                          },
                          {
                            "value": "Digital_Ocean_Droplets",
                            "description": "Digital Ocean Droplets for PostgreSQL"
                          },
                          {
                            "value": "Digital_Ocean_PostgreSQL",
                            "description": "Digital Ocean PostgreSQL"
                          },
                          {
                            "value": "Supabase_PostgreSQL",
                            "description": "Supabase PostgreSQL"
                          }
                        ]
                      }
                    },
                    "sslMode": {
                      "description": "SSL mode used by a migration. Default SSL mode for 'PostgreSQLSingleServer' is 'VerifyFull'. Default SSL mode for other source types is 'Prefer'.",
                      "enum": [
                        "Prefer",
                        "Require",
                        "VerifyCA",
                        "VerifyFull"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SslMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Prefer",
                            "description": "Prefer SSL connection. If the server does not support SSL, the connection will be established without SSL."
                          },
                          {
                            "value": "Require",
                            "description": "Require SSL connection. If the server does not support SSL, the connection will fail."
                          },
                          {
                            "value": "VerifyCA",
                            "description": "Require SSL connection and verify the server certificate against the CA certificate."
                          },
                          {
                            "value": "VerifyFull",
                            "description": "Require SSL connection, verify the server certificate against the CA certificate, and verify that the server hostname matches the certificate."
                          }
                        ]
                      }
                    },
                    "sourceDbServerMetadata": {
                      "readOnly": true,
                      "description": "Metadata of source database server.",
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "string",
                          "description": "Location of database server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Major version of PostgreSQL database engine."
                        },
                        "storageMb": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Storage size (in MB) for database server."
                        },
                        "sku": {
                          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                            },
                            "tier": {
                              "type": "string",
                              "description": "Tier of the compute assigned to a server.",
                              "enum": [
                                "Burstable",
                                "GeneralPurpose",
                                "MemoryOptimized"
                              ],
                              "x-ms-enum": {
                                "name": "SkuTier",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "targetDbServerMetadata": {
                      "readOnly": true,
                      "description": "Metadata of target database server.",
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "string",
                          "description": "Location of database server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Major version of PostgreSQL database engine."
                        },
                        "storageMb": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Storage size (in MB) for database server."
                        },
                        "sku": {
                          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                            },
                            "tier": {
                              "type": "string",
                              "description": "Tier of the compute assigned to a server.",
                              "enum": [
                                "Burstable",
                                "GeneralPurpose",
                                "MemoryOptimized"
                              ],
                              "x-ms-enum": {
                                "name": "SkuTier",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "sourceDbServerResourceId": {
                      "type": "string",
                      "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
                    },
                    "sourceDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
                    },
                    "targetDbServerResourceId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Identifier of the target database server resource."
                    },
                    "targetDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
                    },
                    "secretParameters": {
                      "description": "Migration secret parameters.",
                      "required": [
                        "adminCredentials"
                      ],
                      "type": "object",
                      "properties": {
                        "adminCredentials": {
                          "x-ms-secret": true,
                          "x-ms-external": true,
                          "description": "Credentials of administrator users for source and target servers.",
                          "type": "object",
                          "required": [
                            "sourceServerPassword",
                            "targetServerPassword"
                          ],
                          "properties": {
                            "sourceServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "description": "Password for the user of the source server."
                            },
                            "targetServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "description": "Password for the user of the target server."
                            }
                          }
                        },
                        "sourceServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
                        },
                        "targetServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
                        }
                      }
                    },
                    "dbsToMigrate": {
                      "maxItems": 50,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Names of databases to migrate.",
                      "x-ms-identifiers": []
                    },
                    "setupLogicalReplicationOnSourceDbIfNeeded": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "LogicalReplicationOnSourceServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Logical replication will be set up on the source server."
                          },
                          {
                            "value": "False",
                            "description": "Logical replication will not be set up on the source server."
                          }
                        ]
                      },
                      "description": "Indicates whether to setup logical replication on source server, if needed."
                    },
                    "overwriteDbsInTarget": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "OverwriteDatabasesOnTargetServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Databases on the target server can be overwritten when already present."
                          },
                          {
                            "value": "False",
                            "description": "Databases on the target server cannot be overwritten when already present."
                          }
                        ]
                      },
                      "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
                    },
                    "migrationWindowStartTimeInUtc": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Start time (UTC) for migration window."
                    },
                    "migrationWindowEndTimeInUtc": {
                      "format": "date-time",
                      "type": "string",
                      "description": "End time (UTC) for migration window."
                    },
                    "migrateRoles": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "MigrateRolesAndPermissions",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Roles and permissions will be migrated."
                          },
                          {
                            "value": "False",
                            "description": "Roles and permissions will not be migrated."
                          }
                        ]
                      },
                      "description": "Indicates if roles and permissions must be migrated."
                    },
                    "startDataMigration": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "StartDataMigration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Data migration must start right away."
                          },
                          {
                            "value": "False",
                            "description": "Data migration must not start right away."
                          }
                        ]
                      },
                      "description": "Indicates if data migration must start right away."
                    },
                    "triggerCutover": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "TriggerCutover",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cutover must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cutover must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cutover must be triggered for the entire migration."
                    },
                    "dbsToTriggerCutoverOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    },
                    "cancel": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "Cancel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cancel must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cancel must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cancel must be triggered for the entire migration."
                    },
                    "dbsToCancelMigrationOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    }
                  }
                }
              },
              "description": "Properties of a migration."
            },
            "description": "Parameters required for creating a migration."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Migration properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "migrationId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Identifier of a migration."
                    },
                    "currentStatus": {
                      "readOnly": true,
                      "description": "Current status of a migration.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "State of migration.",
                          "enum": [
                            "InProgress",
                            "WaitingForUserAction",
                            "Canceled",
                            "Failed",
                            "Succeeded",
                            "ValidationFailed",
                            "CleaningUp"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "MigrationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "InProgress",
                                "description": "Migration is in progress."
                              },
                              {
                                "value": "WaitingForUserAction",
                                "description": "Migration is waiting for user action."
                              },
                              {
                                "value": "Canceled",
                                "description": "Migration has been canceled."
                              },
                              {
                                "value": "Failed",
                                "description": "Migration has failed."
                              },
                              {
                                "value": "Succeeded",
                                "description": "Migration has succeeded."
                              },
                              {
                                "value": "ValidationFailed",
                                "description": "Validation for migration has failed."
                              },
                              {
                                "value": "CleaningUp",
                                "description": "Migration is cleaning up resources."
                              }
                            ]
                          }
                        },
                        "error": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Error message, if any, for the migration state."
                        },
                        "currentSubStateDetails": {
                          "readOnly": true,
                          "description": "Current migration sub state details.",
                          "type": "object",
                          "properties": {
                            "currentSubState": {
                              "readOnly": true,
                              "enum": [
                                "PerformingPreRequisiteSteps",
                                "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                "WaitingForDBsToMigrateSpecification",
                                "WaitingForTargetDBOverwriteConfirmation",
                                "WaitingForDataMigrationScheduling",
                                "WaitingForDataMigrationWindow",
                                "MigratingData",
                                "WaitingForCutoverTrigger",
                                "CompletingMigration",
                                "Completed",
                                "CancelingRequestedDBMigrations",
                                "ValidationInProgress"
                              ],
                              "type": "string",
                              "description": "Substate of migration.",
                              "x-ms-enum": {
                                "name": "MigrationSubstate",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "PerformingPreRequisiteSteps",
                                    "description": "Performing pre-requisite steps for migration."
                                  },
                                  {
                                    "value": "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                    "description": "Waiting for logical replication setup request on source database."
                                  },
                                  {
                                    "value": "WaitingForDBsToMigrateSpecification",
                                    "description": "Waiting for databases to migrate specification."
                                  },
                                  {
                                    "value": "WaitingForTargetDBOverwriteConfirmation",
                                    "description": "Waiting for target database overwrite confirmation."
                                  },
                                  {
                                    "value": "WaitingForDataMigrationScheduling",
                                    "description": "Waiting for data migration scheduling."
                                  },
                                  {
                                    "value": "WaitingForDataMigrationWindow",
                                    "description": "Waiting for data migration window."
                                  },
                                  {
                                    "value": "MigratingData",
                                    "description": "Migrating data."
                                  },
                                  {
                                    "value": "WaitingForCutoverTrigger",
                                    "description": "Waiting for cutover trigger."
                                  },
                                  {
                                    "value": "CompletingMigration",
                                    "description": "Completing migration."
                                  },
                                  {
                                    "value": "Completed",
                                    "description": "Migration completed."
                                  },
                                  {
                                    "value": "CancelingRequestedDBMigrations",
                                    "description": "Canceling requested database migrations."
                                  },
                                  {
                                    "value": "ValidationInProgress",
                                    "description": "Validation in progress."
                                  }
                                ]
                              }
                            },
                            "dbDetails": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Migration state of a database.",
                                "properties": {
                                  "databaseName": {
                                    "type": "string",
                                    "description": "Name of database."
                                  },
                                  "migrationState": {
                                    "type": "string",
                                    "description": "Migration state of a database.",
                                    "enum": [
                                      "InProgress",
                                      "WaitingForCutoverTrigger",
                                      "Failed",
                                      "Canceled",
                                      "Succeeded",
                                      "Canceling"
                                    ],
                                    "x-ms-enum": {
                                      "name": "MigrationDatabaseState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "InProgress",
                                          "description": "Migration is in progress for the database."
                                        },
                                        {
                                          "value": "WaitingForCutoverTrigger",
                                          "description": "Migration is waiting for cutover trigger for the database."
                                        },
                                        {
                                          "value": "Failed",
                                          "description": "Migration has failed for the database."
                                        },
                                        {
                                          "value": "Canceled",
                                          "description": "Migration has been canceled for the database."
                                        },
                                        {
                                          "value": "Succeeded",
                                          "description": "Migration has succeeded for the database."
                                        },
                                        {
                                          "value": "Canceling",
                                          "description": "Migration is canceling for the database."
                                        }
                                      ]
                                    }
                                  },
                                  "migrationOperation": {
                                    "type": "string",
                                    "description": "Migration operation of a database."
                                  },
                                  "startedOn": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Start time of a migration state."
                                  },
                                  "endedOn": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "End time of a migration state."
                                  },
                                  "fullLoadQueuedTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables queued for the migration of a database."
                                  },
                                  "fullLoadErroredTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables encountering errors during the migration of a database."
                                  },
                                  "fullLoadLoadingTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables loading during the migration of a database."
                                  },
                                  "fullLoadCompletedTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables loaded during the migration of a database."
                                  },
                                  "cdcUpdateCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture update counter."
                                  },
                                  "cdcDeleteCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture delete counter."
                                  },
                                  "cdcInsertCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture insert counter."
                                  },
                                  "appliedChanges": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture applied changes counter."
                                  },
                                  "incomingChanges": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture incoming changes counter."
                                  },
                                  "latency": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Lag in seconds between source and target during online phase."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "Error message, if any, for the migration state."
                                  }
                                }
                              }
                            },
                            "validationDetails": {
                              "type": "object",
                              "description": "Details for the validation for migration.",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "Validation status for migration.",
                                  "enum": [
                                    "Failed",
                                    "Succeeded",
                                    "Warning"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ValidationState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Failed",
                                        "description": "Validation has failed."
                                      },
                                      {
                                        "value": "Succeeded",
                                        "description": "Validation has succeeded."
                                      },
                                      {
                                        "value": "Warning",
                                        "description": "Validation has succeeded with warnings."
                                      }
                                    ]
                                  }
                                },
                                "validationStartTimeInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Start time (UTC) for validation."
                                },
                                "validationEndTimeInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "End time (UTC) for validation."
                                },
                                "serverLevelValidationDetails": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Validation summary object.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Validation type."
                                      },
                                      "state": {
                                        "type": "string",
                                        "description": "Validation status for migration.",
                                        "enum": [
                                          "Failed",
                                          "Succeeded",
                                          "Warning"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ValidationState",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "Failed",
                                              "description": "Validation has failed."
                                            },
                                            {
                                              "value": "Succeeded",
                                              "description": "Validation has succeeded."
                                            },
                                            {
                                              "value": "Warning",
                                              "description": "Validation has succeeded with warnings."
                                            }
                                          ]
                                        }
                                      },
                                      "messages": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation message object.",
                                          "properties": {
                                            "state": {
                                              "type": "string",
                                              "description": "Validation status for migration.",
                                              "enum": [
                                                "Failed",
                                                "Succeeded",
                                                "Warning"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ValidationState",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "Failed",
                                                    "description": "Validation has failed."
                                                  },
                                                  {
                                                    "value": "Succeeded",
                                                    "description": "Validation has succeeded."
                                                  },
                                                  {
                                                    "value": "Warning",
                                                    "description": "Validation has succeeded with warnings."
                                                  }
                                                ]
                                              }
                                            },
                                            "message": {
                                              "type": "string",
                                              "description": "Validation message string."
                                            }
                                          }
                                        },
                                        "description": "Validation messages.",
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "description": "Details of server level validations.",
                                  "x-ms-identifiers": []
                                },
                                "dbLevelValidationDetails": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Validation status summary for a database.",
                                    "properties": {
                                      "databaseName": {
                                        "type": "string",
                                        "description": "Name of database."
                                      },
                                      "startedOn": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Start time of a database level validation."
                                      },
                                      "endedOn": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "End time of a database level validation."
                                      },
                                      "summary": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation summary object.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "Validation type."
                                            },
                                            "state": {
                                              "type": "string",
                                              "description": "Validation status for migration.",
                                              "enum": [
                                                "Failed",
                                                "Succeeded",
                                                "Warning"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ValidationState",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "Failed",
                                                    "description": "Validation has failed."
                                                  },
                                                  {
                                                    "value": "Succeeded",
                                                    "description": "Validation has succeeded."
                                                  },
                                                  {
                                                    "value": "Warning",
                                                    "description": "Validation has succeeded with warnings."
                                                  }
                                                ]
                                              }
                                            },
                                            "messages": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "description": "Validation message object.",
                                                "properties": {
                                                  "state": {
                                                    "type": "string",
                                                    "description": "Validation status for migration.",
                                                    "enum": [
                                                      "Failed",
                                                      "Succeeded",
                                                      "Warning"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ValidationState",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "value": "Failed",
                                                          "description": "Validation has failed."
                                                        },
                                                        {
                                                          "value": "Succeeded",
                                                          "description": "Validation has succeeded."
                                                        },
                                                        {
                                                          "value": "Warning",
                                                          "description": "Validation has succeeded with warnings."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "message": {
                                                    "type": "string",
                                                    "description": "Validation message string."
                                                  }
                                                }
                                              },
                                              "description": "Validation messages.",
                                              "x-ms-identifiers": []
                                            }
                                          }
                                        },
                                        "description": "Summary of database level validations.",
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "description": "Details of server level validations.",
                                  "x-ms-identifiers": [
                                    "databaseName"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "migrationInstanceResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Identifier of the private endpoint migration instance."
                    },
                    "migrationMode": {
                      "description": "Mode used to perform the migration: Online or Offline.",
                      "enum": [
                        "Offline",
                        "Online"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MigrationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Offline",
                            "description": "Offline migration mode."
                          },
                          {
                            "value": "Online",
                            "description": "Online migration mode."
                          }
                        ]
                      }
                    },
                    "migrationOption": {
                      "description": "Supported option for a migration.",
                      "enum": [
                        "Validate",
                        "Migrate",
                        "ValidateAndMigrate"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MigrationOption",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Validate",
                            "description": "Validate the migration without performing it."
                          },
                          {
                            "value": "Migrate",
                            "description": "Perform the migration."
                          },
                          {
                            "value": "ValidateAndMigrate",
                            "description": "Validate and perform the migration."
                          }
                        ]
                      }
                    },
                    "sourceType": {
                      "description": "Source server type used for the migration: ApsaraDB_RDS, AWS, AWS_AURORA, AWS_EC2, AWS_RDS, AzureVM, Crunchy_PostgreSQL, Digital_Ocean_Droplets, Digital_Ocean_PostgreSQL, EDB, EDB_Oracle_Server, EDB_PostgreSQL, GCP, GCP_AlloyDB, GCP_CloudSQL, GCP_Compute, Heroku_PostgreSQL, Huawei_Compute, Huawei_RDS, OnPremises, PostgreSQLCosmosDB, PostgreSQLFlexibleServer, PostgreSQLSingleServer, or Supabase_PostgreSQL",
                      "enum": [
                        "OnPremises",
                        "AWS",
                        "GCP",
                        "AzureVM",
                        "PostgreSQLSingleServer",
                        "AWS_RDS",
                        "AWS_AURORA",
                        "AWS_EC2",
                        "GCP_CloudSQL",
                        "GCP_AlloyDB",
                        "GCP_Compute",
                        "EDB",
                        "EDB_Oracle_Server",
                        "EDB_PostgreSQL",
                        "PostgreSQLFlexibleServer",
                        "PostgreSQLCosmosDB",
                        "Huawei_RDS",
                        "Huawei_Compute",
                        "Heroku_PostgreSQL",
                        "Crunchy_PostgreSQL",
                        "ApsaraDB_RDS",
                        "Digital_Ocean_Droplets",
                        "Digital_Ocean_PostgreSQL",
                        "Supabase_PostgreSQL"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SourceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "OnPremises",
                            "description": "On-premises PostgreSQL server."
                          },
                          {
                            "value": "AWS",
                            "description": "Amazon Web Services PostgreSQL server."
                          },
                          {
                            "value": "GCP",
                            "description": "Google Cloud Platform PostgreSQL server."
                          },
                          {
                            "value": "AzureVM",
                            "description": "Azure Virtual Machine PostgreSQL server."
                          },
                          {
                            "value": "PostgreSQLSingleServer",
                            "description": "Azure Database for PostgreSQL single server."
                          },
                          {
                            "value": "AWS_RDS",
                            "description": "Amazon RDS for PostgreSQL."
                          },
                          {
                            "value": "AWS_AURORA",
                            "description": "Amazon Aurora for PostgreSQL."
                          },
                          {
                            "value": "AWS_EC2",
                            "description": "Amazon EC2 for PostgreSQL."
                          },
                          {
                            "value": "GCP_CloudSQL",
                            "description": "Google Cloud SQL for PostgreSQL."
                          },
                          {
                            "value": "GCP_AlloyDB",
                            "description": "Google Cloud AlloyDB for PostgreSQL."
                          },
                          {
                            "value": "GCP_Compute",
                            "description": "Google Compute Engine for PostgreSQL."
                          },
                          {
                            "value": "EDB",
                            "description": "EnterpriseDB PostgreSQL server."
                          },
                          {
                            "value": "EDB_Oracle_Server",
                            "description": "EnterpriseDB Oracle Server."
                          },
                          {
                            "value": "EDB_PostgreSQL",
                            "description": "EnterpriseDB PostgreSQL server."
                          },
                          {
                            "value": "PostgreSQLFlexibleServer",
                            "description": "Azure Database for PostgreSQL flexible server."
                          },
                          {
                            "value": "PostgreSQLCosmosDB",
                            "description": ".NET Cosmos DB for PostgreSQL"
                          },
                          {
                            "value": "Huawei_RDS",
                            "description": "Huawei RDS for PostgreSQL"
                          },
                          {
                            "value": "Huawei_Compute",
                            "description": "Huawei Compute for PostgreSQL"
                          },
                          {
                            "value": "Heroku_PostgreSQL",
                            "description": "Heroku PostgreSQL"
                          },
                          {
                            "value": "Crunchy_PostgreSQL",
                            "description": "Crunchy PostgreSQL"
                          },
                          {
                            "value": "ApsaraDB_RDS",
                            "description": "ApsaraDB RDS for PostgreSQL"
                          },
                          {
                            "value": "Digital_Ocean_Droplets",
                            "description": "Digital Ocean Droplets for PostgreSQL"
                          },
                          {
                            "value": "Digital_Ocean_PostgreSQL",
                            "description": "Digital Ocean PostgreSQL"
                          },
                          {
                            "value": "Supabase_PostgreSQL",
                            "description": "Supabase PostgreSQL"
                          }
                        ]
                      }
                    },
                    "sslMode": {
                      "description": "SSL mode used by a migration. Default SSL mode for 'PostgreSQLSingleServer' is 'VerifyFull'. Default SSL mode for other source types is 'Prefer'.",
                      "enum": [
                        "Prefer",
                        "Require",
                        "VerifyCA",
                        "VerifyFull"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SslMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Prefer",
                            "description": "Prefer SSL connection. If the server does not support SSL, the connection will be established without SSL."
                          },
                          {
                            "value": "Require",
                            "description": "Require SSL connection. If the server does not support SSL, the connection will fail."
                          },
                          {
                            "value": "VerifyCA",
                            "description": "Require SSL connection and verify the server certificate against the CA certificate."
                          },
                          {
                            "value": "VerifyFull",
                            "description": "Require SSL connection, verify the server certificate against the CA certificate, and verify that the server hostname matches the certificate."
                          }
                        ]
                      }
                    },
                    "sourceDbServerMetadata": {
                      "readOnly": true,
                      "description": "Metadata of source database server.",
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "string",
                          "description": "Location of database server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Major version of PostgreSQL database engine."
                        },
                        "storageMb": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Storage size (in MB) for database server."
                        },
                        "sku": {
                          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                            },
                            "tier": {
                              "type": "string",
                              "description": "Tier of the compute assigned to a server.",
                              "enum": [
                                "Burstable",
                                "GeneralPurpose",
                                "MemoryOptimized"
                              ],
                              "x-ms-enum": {
                                "name": "SkuTier",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "targetDbServerMetadata": {
                      "readOnly": true,
                      "description": "Metadata of target database server.",
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "string",
                          "description": "Location of database server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Major version of PostgreSQL database engine."
                        },
                        "storageMb": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Storage size (in MB) for database server."
                        },
                        "sku": {
                          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                            },
                            "tier": {
                              "type": "string",
                              "description": "Tier of the compute assigned to a server.",
                              "enum": [
                                "Burstable",
                                "GeneralPurpose",
                                "MemoryOptimized"
                              ],
                              "x-ms-enum": {
                                "name": "SkuTier",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "sourceDbServerResourceId": {
                      "type": "string",
                      "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
                    },
                    "sourceDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
                    },
                    "targetDbServerResourceId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Identifier of the target database server resource."
                    },
                    "targetDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
                    },
                    "secretParameters": {
                      "description": "Migration secret parameters.",
                      "required": [
                        "adminCredentials"
                      ],
                      "type": "object",
                      "properties": {
                        "adminCredentials": {
                          "x-ms-secret": true,
                          "x-ms-external": true,
                          "description": "Credentials of administrator users for source and target servers.",
                          "type": "object",
                          "required": [
                            "sourceServerPassword",
                            "targetServerPassword"
                          ],
                          "properties": {
                            "sourceServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "description": "Password for the user of the source server."
                            },
                            "targetServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "description": "Password for the user of the target server."
                            }
                          }
                        },
                        "sourceServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
                        },
                        "targetServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
                        }
                      }
                    },
                    "dbsToMigrate": {
                      "maxItems": 50,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Names of databases to migrate.",
                      "x-ms-identifiers": []
                    },
                    "setupLogicalReplicationOnSourceDbIfNeeded": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "LogicalReplicationOnSourceServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Logical replication will be set up on the source server."
                          },
                          {
                            "value": "False",
                            "description": "Logical replication will not be set up on the source server."
                          }
                        ]
                      },
                      "description": "Indicates whether to setup logical replication on source server, if needed."
                    },
                    "overwriteDbsInTarget": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "OverwriteDatabasesOnTargetServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Databases on the target server can be overwritten when already present."
                          },
                          {
                            "value": "False",
                            "description": "Databases on the target server cannot be overwritten when already present."
                          }
                        ]
                      },
                      "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
                    },
                    "migrationWindowStartTimeInUtc": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Start time (UTC) for migration window."
                    },
                    "migrationWindowEndTimeInUtc": {
                      "format": "date-time",
                      "type": "string",
                      "description": "End time (UTC) for migration window."
                    },
                    "migrateRoles": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "MigrateRolesAndPermissions",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Roles and permissions will be migrated."
                          },
                          {
                            "value": "False",
                            "description": "Roles and permissions will not be migrated."
                          }
                        ]
                      },
                      "description": "Indicates if roles and permissions must be migrated."
                    },
                    "startDataMigration": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "StartDataMigration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Data migration must start right away."
                          },
                          {
                            "value": "False",
                            "description": "Data migration must not start right away."
                          }
                        ]
                      },
                      "description": "Indicates if data migration must start right away."
                    },
                    "triggerCutover": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "TriggerCutover",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cutover must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cutover must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cutover must be triggered for the entire migration."
                    },
                    "dbsToTriggerCutoverOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    },
                    "cancel": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "Cancel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cancel must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cancel must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cancel must be triggered for the entire migration."
                    },
                    "dbsToCancelMigrationOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    }
                  }
                }
              },
              "description": "Properties of a migration."
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Migration properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "migrationId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Identifier of a migration."
                    },
                    "currentStatus": {
                      "readOnly": true,
                      "description": "Current status of a migration.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "State of migration.",
                          "enum": [
                            "InProgress",
                            "WaitingForUserAction",
                            "Canceled",
                            "Failed",
                            "Succeeded",
                            "ValidationFailed",
                            "CleaningUp"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "MigrationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "InProgress",
                                "description": "Migration is in progress."
                              },
                              {
                                "value": "WaitingForUserAction",
                                "description": "Migration is waiting for user action."
                              },
                              {
                                "value": "Canceled",
                                "description": "Migration has been canceled."
                              },
                              {
                                "value": "Failed",
                                "description": "Migration has failed."
                              },
                              {
                                "value": "Succeeded",
                                "description": "Migration has succeeded."
                              },
                              {
                                "value": "ValidationFailed",
                                "description": "Validation for migration has failed."
                              },
                              {
                                "value": "CleaningUp",
                                "description": "Migration is cleaning up resources."
                              }
                            ]
                          }
                        },
                        "error": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Error message, if any, for the migration state."
                        },
                        "currentSubStateDetails": {
                          "readOnly": true,
                          "description": "Current migration sub state details.",
                          "type": "object",
                          "properties": {
                            "currentSubState": {
                              "readOnly": true,
                              "enum": [
                                "PerformingPreRequisiteSteps",
                                "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                "WaitingForDBsToMigrateSpecification",
                                "WaitingForTargetDBOverwriteConfirmation",
                                "WaitingForDataMigrationScheduling",
                                "WaitingForDataMigrationWindow",
                                "MigratingData",
                                "WaitingForCutoverTrigger",
                                "CompletingMigration",
                                "Completed",
                                "CancelingRequestedDBMigrations",
                                "ValidationInProgress"
                              ],
                              "type": "string",
                              "description": "Substate of migration.",
                              "x-ms-enum": {
                                "name": "MigrationSubstate",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "PerformingPreRequisiteSteps",
                                    "description": "Performing pre-requisite steps for migration."
                                  },
                                  {
                                    "value": "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                    "description": "Waiting for logical replication setup request on source database."
                                  },
                                  {
                                    "value": "WaitingForDBsToMigrateSpecification",
                                    "description": "Waiting for databases to migrate specification."
                                  },
                                  {
                                    "value": "WaitingForTargetDBOverwriteConfirmation",
                                    "description": "Waiting for target database overwrite confirmation."
                                  },
                                  {
                                    "value": "WaitingForDataMigrationScheduling",
                                    "description": "Waiting for data migration scheduling."
                                  },
                                  {
                                    "value": "WaitingForDataMigrationWindow",
                                    "description": "Waiting for data migration window."
                                  },
                                  {
                                    "value": "MigratingData",
                                    "description": "Migrating data."
                                  },
                                  {
                                    "value": "WaitingForCutoverTrigger",
                                    "description": "Waiting for cutover trigger."
                                  },
                                  {
                                    "value": "CompletingMigration",
                                    "description": "Completing migration."
                                  },
                                  {
                                    "value": "Completed",
                                    "description": "Migration completed."
                                  },
                                  {
                                    "value": "CancelingRequestedDBMigrations",
                                    "description": "Canceling requested database migrations."
                                  },
                                  {
                                    "value": "ValidationInProgress",
                                    "description": "Validation in progress."
                                  }
                                ]
                              }
                            },
                            "dbDetails": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Migration state of a database.",
                                "properties": {
                                  "databaseName": {
                                    "type": "string",
                                    "description": "Name of database."
                                  },
                                  "migrationState": {
                                    "type": "string",
                                    "description": "Migration state of a database.",
                                    "enum": [
                                      "InProgress",
                                      "WaitingForCutoverTrigger",
                                      "Failed",
                                      "Canceled",
                                      "Succeeded",
                                      "Canceling"
                                    ],
                                    "x-ms-enum": {
                                      "name": "MigrationDatabaseState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "InProgress",
                                          "description": "Migration is in progress for the database."
                                        },
                                        {
                                          "value": "WaitingForCutoverTrigger",
                                          "description": "Migration is waiting for cutover trigger for the database."
                                        },
                                        {
                                          "value": "Failed",
                                          "description": "Migration has failed for the database."
                                        },
                                        {
                                          "value": "Canceled",
                                          "description": "Migration has been canceled for the database."
                                        },
                                        {
                                          "value": "Succeeded",
                                          "description": "Migration has succeeded for the database."
                                        },
                                        {
                                          "value": "Canceling",
                                          "description": "Migration is canceling for the database."
                                        }
                                      ]
                                    }
                                  },
                                  "migrationOperation": {
                                    "type": "string",
                                    "description": "Migration operation of a database."
                                  },
                                  "startedOn": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Start time of a migration state."
                                  },
                                  "endedOn": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "End time of a migration state."
                                  },
                                  "fullLoadQueuedTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables queued for the migration of a database."
                                  },
                                  "fullLoadErroredTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables encountering errors during the migration of a database."
                                  },
                                  "fullLoadLoadingTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables loading during the migration of a database."
                                  },
                                  "fullLoadCompletedTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables loaded during the migration of a database."
                                  },
                                  "cdcUpdateCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture update counter."
                                  },
                                  "cdcDeleteCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture delete counter."
                                  },
                                  "cdcInsertCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture insert counter."
                                  },
                                  "appliedChanges": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture applied changes counter."
                                  },
                                  "incomingChanges": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture incoming changes counter."
                                  },
                                  "latency": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Lag in seconds between source and target during online phase."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "Error message, if any, for the migration state."
                                  }
                                }
                              }
                            },
                            "validationDetails": {
                              "type": "object",
                              "description": "Details for the validation for migration.",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "Validation status for migration.",
                                  "enum": [
                                    "Failed",
                                    "Succeeded",
                                    "Warning"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ValidationState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Failed",
                                        "description": "Validation has failed."
                                      },
                                      {
                                        "value": "Succeeded",
                                        "description": "Validation has succeeded."
                                      },
                                      {
                                        "value": "Warning",
                                        "description": "Validation has succeeded with warnings."
                                      }
                                    ]
                                  }
                                },
                                "validationStartTimeInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Start time (UTC) for validation."
                                },
                                "validationEndTimeInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "End time (UTC) for validation."
                                },
                                "serverLevelValidationDetails": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Validation summary object.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Validation type."
                                      },
                                      "state": {
                                        "type": "string",
                                        "description": "Validation status for migration.",
                                        "enum": [
                                          "Failed",
                                          "Succeeded",
                                          "Warning"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ValidationState",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "Failed",
                                              "description": "Validation has failed."
                                            },
                                            {
                                              "value": "Succeeded",
                                              "description": "Validation has succeeded."
                                            },
                                            {
                                              "value": "Warning",
                                              "description": "Validation has succeeded with warnings."
                                            }
                                          ]
                                        }
                                      },
                                      "messages": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation message object.",
                                          "properties": {
                                            "state": {
                                              "type": "string",
                                              "description": "Validation status for migration.",
                                              "enum": [
                                                "Failed",
                                                "Succeeded",
                                                "Warning"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ValidationState",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "Failed",
                                                    "description": "Validation has failed."
                                                  },
                                                  {
                                                    "value": "Succeeded",
                                                    "description": "Validation has succeeded."
                                                  },
                                                  {
                                                    "value": "Warning",
                                                    "description": "Validation has succeeded with warnings."
                                                  }
                                                ]
                                              }
                                            },
                                            "message": {
                                              "type": "string",
                                              "description": "Validation message string."
                                            }
                                          }
                                        },
                                        "description": "Validation messages.",
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "description": "Details of server level validations.",
                                  "x-ms-identifiers": []
                                },
                                "dbLevelValidationDetails": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Validation status summary for a database.",
                                    "properties": {
                                      "databaseName": {
                                        "type": "string",
                                        "description": "Name of database."
                                      },
                                      "startedOn": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Start time of a database level validation."
                                      },
                                      "endedOn": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "End time of a database level validation."
                                      },
                                      "summary": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation summary object.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "Validation type."
                                            },
                                            "state": {
                                              "type": "string",
                                              "description": "Validation status for migration.",
                                              "enum": [
                                                "Failed",
                                                "Succeeded",
                                                "Warning"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ValidationState",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "Failed",
                                                    "description": "Validation has failed."
                                                  },
                                                  {
                                                    "value": "Succeeded",
                                                    "description": "Validation has succeeded."
                                                  },
                                                  {
                                                    "value": "Warning",
                                                    "description": "Validation has succeeded with warnings."
                                                  }
                                                ]
                                              }
                                            },
                                            "messages": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "description": "Validation message object.",
                                                "properties": {
                                                  "state": {
                                                    "type": "string",
                                                    "description": "Validation status for migration.",
                                                    "enum": [
                                                      "Failed",
                                                      "Succeeded",
                                                      "Warning"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ValidationState",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "value": "Failed",
                                                          "description": "Validation has failed."
                                                        },
                                                        {
                                                          "value": "Succeeded",
                                                          "description": "Validation has succeeded."
                                                        },
                                                        {
                                                          "value": "Warning",
                                                          "description": "Validation has succeeded with warnings."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "message": {
                                                    "type": "string",
                                                    "description": "Validation message string."
                                                  }
                                                }
                                              },
                                              "description": "Validation messages.",
                                              "x-ms-identifiers": []
                                            }
                                          }
                                        },
                                        "description": "Summary of database level validations.",
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "description": "Details of server level validations.",
                                  "x-ms-identifiers": [
                                    "databaseName"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "migrationInstanceResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Identifier of the private endpoint migration instance."
                    },
                    "migrationMode": {
                      "description": "Mode used to perform the migration: Online or Offline.",
                      "enum": [
                        "Offline",
                        "Online"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MigrationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Offline",
                            "description": "Offline migration mode."
                          },
                          {
                            "value": "Online",
                            "description": "Online migration mode."
                          }
                        ]
                      }
                    },
                    "migrationOption": {
                      "description": "Supported option for a migration.",
                      "enum": [
                        "Validate",
                        "Migrate",
                        "ValidateAndMigrate"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MigrationOption",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Validate",
                            "description": "Validate the migration without performing it."
                          },
                          {
                            "value": "Migrate",
                            "description": "Perform the migration."
                          },
                          {
                            "value": "ValidateAndMigrate",
                            "description": "Validate and perform the migration."
                          }
                        ]
                      }
                    },
                    "sourceType": {
                      "description": "Source server type used for the migration: ApsaraDB_RDS, AWS, AWS_AURORA, AWS_EC2, AWS_RDS, AzureVM, Crunchy_PostgreSQL, Digital_Ocean_Droplets, Digital_Ocean_PostgreSQL, EDB, EDB_Oracle_Server, EDB_PostgreSQL, GCP, GCP_AlloyDB, GCP_CloudSQL, GCP_Compute, Heroku_PostgreSQL, Huawei_Compute, Huawei_RDS, OnPremises, PostgreSQLCosmosDB, PostgreSQLFlexibleServer, PostgreSQLSingleServer, or Supabase_PostgreSQL",
                      "enum": [
                        "OnPremises",
                        "AWS",
                        "GCP",
                        "AzureVM",
                        "PostgreSQLSingleServer",
                        "AWS_RDS",
                        "AWS_AURORA",
                        "AWS_EC2",
                        "GCP_CloudSQL",
                        "GCP_AlloyDB",
                        "GCP_Compute",
                        "EDB",
                        "EDB_Oracle_Server",
                        "EDB_PostgreSQL",
                        "PostgreSQLFlexibleServer",
                        "PostgreSQLCosmosDB",
                        "Huawei_RDS",
                        "Huawei_Compute",
                        "Heroku_PostgreSQL",
                        "Crunchy_PostgreSQL",
                        "ApsaraDB_RDS",
                        "Digital_Ocean_Droplets",
                        "Digital_Ocean_PostgreSQL",
                        "Supabase_PostgreSQL"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SourceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "OnPremises",
                            "description": "On-premises PostgreSQL server."
                          },
                          {
                            "value": "AWS",
                            "description": "Amazon Web Services PostgreSQL server."
                          },
                          {
                            "value": "GCP",
                            "description": "Google Cloud Platform PostgreSQL server."
                          },
                          {
                            "value": "AzureVM",
                            "description": "Azure Virtual Machine PostgreSQL server."
                          },
                          {
                            "value": "PostgreSQLSingleServer",
                            "description": "Azure Database for PostgreSQL single server."
                          },
                          {
                            "value": "AWS_RDS",
                            "description": "Amazon RDS for PostgreSQL."
                          },
                          {
                            "value": "AWS_AURORA",
                            "description": "Amazon Aurora for PostgreSQL."
                          },
                          {
                            "value": "AWS_EC2",
                            "description": "Amazon EC2 for PostgreSQL."
                          },
                          {
                            "value": "GCP_CloudSQL",
                            "description": "Google Cloud SQL for PostgreSQL."
                          },
                          {
                            "value": "GCP_AlloyDB",
                            "description": "Google Cloud AlloyDB for PostgreSQL."
                          },
                          {
                            "value": "GCP_Compute",
                            "description": "Google Compute Engine for PostgreSQL."
                          },
                          {
                            "value": "EDB",
                            "description": "EnterpriseDB PostgreSQL server."
                          },
                          {
                            "value": "EDB_Oracle_Server",
                            "description": "EnterpriseDB Oracle Server."
                          },
                          {
                            "value": "EDB_PostgreSQL",
                            "description": "EnterpriseDB PostgreSQL server."
                          },
                          {
                            "value": "PostgreSQLFlexibleServer",
                            "description": "Azure Database for PostgreSQL flexible server."
                          },
                          {
                            "value": "PostgreSQLCosmosDB",
                            "description": ".NET Cosmos DB for PostgreSQL"
                          },
                          {
                            "value": "Huawei_RDS",
                            "description": "Huawei RDS for PostgreSQL"
                          },
                          {
                            "value": "Huawei_Compute",
                            "description": "Huawei Compute for PostgreSQL"
                          },
                          {
                            "value": "Heroku_PostgreSQL",
                            "description": "Heroku PostgreSQL"
                          },
                          {
                            "value": "Crunchy_PostgreSQL",
                            "description": "Crunchy PostgreSQL"
                          },
                          {
                            "value": "ApsaraDB_RDS",
                            "description": "ApsaraDB RDS for PostgreSQL"
                          },
                          {
                            "value": "Digital_Ocean_Droplets",
                            "description": "Digital Ocean Droplets for PostgreSQL"
                          },
                          {
                            "value": "Digital_Ocean_PostgreSQL",
                            "description": "Digital Ocean PostgreSQL"
                          },
                          {
                            "value": "Supabase_PostgreSQL",
                            "description": "Supabase PostgreSQL"
                          }
                        ]
                      }
                    },
                    "sslMode": {
                      "description": "SSL mode used by a migration. Default SSL mode for 'PostgreSQLSingleServer' is 'VerifyFull'. Default SSL mode for other source types is 'Prefer'.",
                      "enum": [
                        "Prefer",
                        "Require",
                        "VerifyCA",
                        "VerifyFull"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SslMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Prefer",
                            "description": "Prefer SSL connection. If the server does not support SSL, the connection will be established without SSL."
                          },
                          {
                            "value": "Require",
                            "description": "Require SSL connection. If the server does not support SSL, the connection will fail."
                          },
                          {
                            "value": "VerifyCA",
                            "description": "Require SSL connection and verify the server certificate against the CA certificate."
                          },
                          {
                            "value": "VerifyFull",
                            "description": "Require SSL connection, verify the server certificate against the CA certificate, and verify that the server hostname matches the certificate."
                          }
                        ]
                      }
                    },
                    "sourceDbServerMetadata": {
                      "readOnly": true,
                      "description": "Metadata of source database server.",
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "string",
                          "description": "Location of database server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Major version of PostgreSQL database engine."
                        },
                        "storageMb": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Storage size (in MB) for database server."
                        },
                        "sku": {
                          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                            },
                            "tier": {
                              "type": "string",
                              "description": "Tier of the compute assigned to a server.",
                              "enum": [
                                "Burstable",
                                "GeneralPurpose",
                                "MemoryOptimized"
                              ],
                              "x-ms-enum": {
                                "name": "SkuTier",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "targetDbServerMetadata": {
                      "readOnly": true,
                      "description": "Metadata of target database server.",
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "string",
                          "description": "Location of database server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Major version of PostgreSQL database engine."
                        },
                        "storageMb": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Storage size (in MB) for database server."
                        },
                        "sku": {
                          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                            },
                            "tier": {
                              "type": "string",
                              "description": "Tier of the compute assigned to a server.",
                              "enum": [
                                "Burstable",
                                "GeneralPurpose",
                                "MemoryOptimized"
                              ],
                              "x-ms-enum": {
                                "name": "SkuTier",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "sourceDbServerResourceId": {
                      "type": "string",
                      "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
                    },
                    "sourceDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
                    },
                    "targetDbServerResourceId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Identifier of the target database server resource."
                    },
                    "targetDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
                    },
                    "secretParameters": {
                      "description": "Migration secret parameters.",
                      "required": [
                        "adminCredentials"
                      ],
                      "type": "object",
                      "properties": {
                        "adminCredentials": {
                          "x-ms-secret": true,
                          "x-ms-external": true,
                          "description": "Credentials of administrator users for source and target servers.",
                          "type": "object",
                          "required": [
                            "sourceServerPassword",
                            "targetServerPassword"
                          ],
                          "properties": {
                            "sourceServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "description": "Password for the user of the source server."
                            },
                            "targetServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "description": "Password for the user of the target server."
                            }
                          }
                        },
                        "sourceServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
                        },
                        "targetServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
                        }
                      }
                    },
                    "dbsToMigrate": {
                      "maxItems": 50,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Names of databases to migrate.",
                      "x-ms-identifiers": []
                    },
                    "setupLogicalReplicationOnSourceDbIfNeeded": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "LogicalReplicationOnSourceServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Logical replication will be set up on the source server."
                          },
                          {
                            "value": "False",
                            "description": "Logical replication will not be set up on the source server."
                          }
                        ]
                      },
                      "description": "Indicates whether to setup logical replication on source server, if needed."
                    },
                    "overwriteDbsInTarget": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "OverwriteDatabasesOnTargetServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Databases on the target server can be overwritten when already present."
                          },
                          {
                            "value": "False",
                            "description": "Databases on the target server cannot be overwritten when already present."
                          }
                        ]
                      },
                      "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
                    },
                    "migrationWindowStartTimeInUtc": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Start time (UTC) for migration window."
                    },
                    "migrationWindowEndTimeInUtc": {
                      "format": "date-time",
                      "type": "string",
                      "description": "End time (UTC) for migration window."
                    },
                    "migrateRoles": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "MigrateRolesAndPermissions",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Roles and permissions will be migrated."
                          },
                          {
                            "value": "False",
                            "description": "Roles and permissions will not be migrated."
                          }
                        ]
                      },
                      "description": "Indicates if roles and permissions must be migrated."
                    },
                    "startDataMigration": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "StartDataMigration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Data migration must start right away."
                          },
                          {
                            "value": "False",
                            "description": "Data migration must not start right away."
                          }
                        ]
                      },
                      "description": "Indicates if data migration must start right away."
                    },
                    "triggerCutover": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "TriggerCutover",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cutover must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cutover must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cutover must be triggered for the entire migration."
                    },
                    "dbsToTriggerCutoverOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    },
                    "cancel": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "Cancel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cancel must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cancel must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cancel must be triggered for the entire migration."
                    },
                    "dbsToCancelMigrationOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    }
                  }
                }
              },
              "description": "Properties of a migration."
            }
          }
        }
      },
      "get": {
        "tags": [
          "Migrations"
        ],
        "operationId": "Migrations_Get",
        "description": "Gets information about a migration.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "migrationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of migration.",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Migration properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "migrationId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Identifier of a migration."
                    },
                    "currentStatus": {
                      "readOnly": true,
                      "description": "Current status of a migration.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "State of migration.",
                          "enum": [
                            "InProgress",
                            "WaitingForUserAction",
                            "Canceled",
                            "Failed",
                            "Succeeded",
                            "ValidationFailed",
                            "CleaningUp"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "MigrationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "InProgress",
                                "description": "Migration is in progress."
                              },
                              {
                                "value": "WaitingForUserAction",
                                "description": "Migration is waiting for user action."
                              },
                              {
                                "value": "Canceled",
                                "description": "Migration has been canceled."
                              },
                              {
                                "value": "Failed",
                                "description": "Migration has failed."
                              },
                              {
                                "value": "Succeeded",
                                "description": "Migration has succeeded."
                              },
                              {
                                "value": "ValidationFailed",
                                "description": "Validation for migration has failed."
                              },
                              {
                                "value": "CleaningUp",
                                "description": "Migration is cleaning up resources."
                              }
                            ]
                          }
                        },
                        "error": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Error message, if any, for the migration state."
                        },
                        "currentSubStateDetails": {
                          "readOnly": true,
                          "description": "Current migration sub state details.",
                          "type": "object",
                          "properties": {
                            "currentSubState": {
                              "readOnly": true,
                              "enum": [
                                "PerformingPreRequisiteSteps",
                                "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                "WaitingForDBsToMigrateSpecification",
                                "WaitingForTargetDBOverwriteConfirmation",
                                "WaitingForDataMigrationScheduling",
                                "WaitingForDataMigrationWindow",
                                "MigratingData",
                                "WaitingForCutoverTrigger",
                                "CompletingMigration",
                                "Completed",
                                "CancelingRequestedDBMigrations",
                                "ValidationInProgress"
                              ],
                              "type": "string",
                              "description": "Substate of migration.",
                              "x-ms-enum": {
                                "name": "MigrationSubstate",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "PerformingPreRequisiteSteps",
                                    "description": "Performing pre-requisite steps for migration."
                                  },
                                  {
                                    "value": "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                    "description": "Waiting for logical replication setup request on source database."
                                  },
                                  {
                                    "value": "WaitingForDBsToMigrateSpecification",
                                    "description": "Waiting for databases to migrate specification."
                                  },
                                  {
                                    "value": "WaitingForTargetDBOverwriteConfirmation",
                                    "description": "Waiting for target database overwrite confirmation."
                                  },
                                  {
                                    "value": "WaitingForDataMigrationScheduling",
                                    "description": "Waiting for data migration scheduling."
                                  },
                                  {
                                    "value": "WaitingForDataMigrationWindow",
                                    "description": "Waiting for data migration window."
                                  },
                                  {
                                    "value": "MigratingData",
                                    "description": "Migrating data."
                                  },
                                  {
                                    "value": "WaitingForCutoverTrigger",
                                    "description": "Waiting for cutover trigger."
                                  },
                                  {
                                    "value": "CompletingMigration",
                                    "description": "Completing migration."
                                  },
                                  {
                                    "value": "Completed",
                                    "description": "Migration completed."
                                  },
                                  {
                                    "value": "CancelingRequestedDBMigrations",
                                    "description": "Canceling requested database migrations."
                                  },
                                  {
                                    "value": "ValidationInProgress",
                                    "description": "Validation in progress."
                                  }
                                ]
                              }
                            },
                            "dbDetails": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Migration state of a database.",
                                "properties": {
                                  "databaseName": {
                                    "type": "string",
                                    "description": "Name of database."
                                  },
                                  "migrationState": {
                                    "type": "string",
                                    "description": "Migration state of a database.",
                                    "enum": [
                                      "InProgress",
                                      "WaitingForCutoverTrigger",
                                      "Failed",
                                      "Canceled",
                                      "Succeeded",
                                      "Canceling"
                                    ],
                                    "x-ms-enum": {
                                      "name": "MigrationDatabaseState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "InProgress",
                                          "description": "Migration is in progress for the database."
                                        },
                                        {
                                          "value": "WaitingForCutoverTrigger",
                                          "description": "Migration is waiting for cutover trigger for the database."
                                        },
                                        {
                                          "value": "Failed",
                                          "description": "Migration has failed for the database."
                                        },
                                        {
                                          "value": "Canceled",
                                          "description": "Migration has been canceled for the database."
                                        },
                                        {
                                          "value": "Succeeded",
                                          "description": "Migration has succeeded for the database."
                                        },
                                        {
                                          "value": "Canceling",
                                          "description": "Migration is canceling for the database."
                                        }
                                      ]
                                    }
                                  },
                                  "migrationOperation": {
                                    "type": "string",
                                    "description": "Migration operation of a database."
                                  },
                                  "startedOn": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Start time of a migration state."
                                  },
                                  "endedOn": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "End time of a migration state."
                                  },
                                  "fullLoadQueuedTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables queued for the migration of a database."
                                  },
                                  "fullLoadErroredTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables encountering errors during the migration of a database."
                                  },
                                  "fullLoadLoadingTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables loading during the migration of a database."
                                  },
                                  "fullLoadCompletedTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables loaded during the migration of a database."
                                  },
                                  "cdcUpdateCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture update counter."
                                  },
                                  "cdcDeleteCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture delete counter."
                                  },
                                  "cdcInsertCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture insert counter."
                                  },
                                  "appliedChanges": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture applied changes counter."
                                  },
                                  "incomingChanges": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture incoming changes counter."
                                  },
                                  "latency": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Lag in seconds between source and target during online phase."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "Error message, if any, for the migration state."
                                  }
                                }
                              }
                            },
                            "validationDetails": {
                              "type": "object",
                              "description": "Details for the validation for migration.",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "Validation status for migration.",
                                  "enum": [
                                    "Failed",
                                    "Succeeded",
                                    "Warning"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ValidationState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Failed",
                                        "description": "Validation has failed."
                                      },
                                      {
                                        "value": "Succeeded",
                                        "description": "Validation has succeeded."
                                      },
                                      {
                                        "value": "Warning",
                                        "description": "Validation has succeeded with warnings."
                                      }
                                    ]
                                  }
                                },
                                "validationStartTimeInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Start time (UTC) for validation."
                                },
                                "validationEndTimeInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "End time (UTC) for validation."
                                },
                                "serverLevelValidationDetails": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Validation summary object.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Validation type."
                                      },
                                      "state": {
                                        "type": "string",
                                        "description": "Validation status for migration.",
                                        "enum": [
                                          "Failed",
                                          "Succeeded",
                                          "Warning"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ValidationState",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "Failed",
                                              "description": "Validation has failed."
                                            },
                                            {
                                              "value": "Succeeded",
                                              "description": "Validation has succeeded."
                                            },
                                            {
                                              "value": "Warning",
                                              "description": "Validation has succeeded with warnings."
                                            }
                                          ]
                                        }
                                      },
                                      "messages": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation message object.",
                                          "properties": {
                                            "state": {
                                              "type": "string",
                                              "description": "Validation status for migration.",
                                              "enum": [
                                                "Failed",
                                                "Succeeded",
                                                "Warning"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ValidationState",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "Failed",
                                                    "description": "Validation has failed."
                                                  },
                                                  {
                                                    "value": "Succeeded",
                                                    "description": "Validation has succeeded."
                                                  },
                                                  {
                                                    "value": "Warning",
                                                    "description": "Validation has succeeded with warnings."
                                                  }
                                                ]
                                              }
                                            },
                                            "message": {
                                              "type": "string",
                                              "description": "Validation message string."
                                            }
                                          }
                                        },
                                        "description": "Validation messages.",
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "description": "Details of server level validations.",
                                  "x-ms-identifiers": []
                                },
                                "dbLevelValidationDetails": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Validation status summary for a database.",
                                    "properties": {
                                      "databaseName": {
                                        "type": "string",
                                        "description": "Name of database."
                                      },
                                      "startedOn": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Start time of a database level validation."
                                      },
                                      "endedOn": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "End time of a database level validation."
                                      },
                                      "summary": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation summary object.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "Validation type."
                                            },
                                            "state": {
                                              "type": "string",
                                              "description": "Validation status for migration.",
                                              "enum": [
                                                "Failed",
                                                "Succeeded",
                                                "Warning"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ValidationState",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "Failed",
                                                    "description": "Validation has failed."
                                                  },
                                                  {
                                                    "value": "Succeeded",
                                                    "description": "Validation has succeeded."
                                                  },
                                                  {
                                                    "value": "Warning",
                                                    "description": "Validation has succeeded with warnings."
                                                  }
                                                ]
                                              }
                                            },
                                            "messages": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "description": "Validation message object.",
                                                "properties": {
                                                  "state": {
                                                    "type": "string",
                                                    "description": "Validation status for migration.",
                                                    "enum": [
                                                      "Failed",
                                                      "Succeeded",
                                                      "Warning"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ValidationState",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "value": "Failed",
                                                          "description": "Validation has failed."
                                                        },
                                                        {
                                                          "value": "Succeeded",
                                                          "description": "Validation has succeeded."
                                                        },
                                                        {
                                                          "value": "Warning",
                                                          "description": "Validation has succeeded with warnings."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "message": {
                                                    "type": "string",
                                                    "description": "Validation message string."
                                                  }
                                                }
                                              },
                                              "description": "Validation messages.",
                                              "x-ms-identifiers": []
                                            }
                                          }
                                        },
                                        "description": "Summary of database level validations.",
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "description": "Details of server level validations.",
                                  "x-ms-identifiers": [
                                    "databaseName"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "migrationInstanceResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Identifier of the private endpoint migration instance."
                    },
                    "migrationMode": {
                      "description": "Mode used to perform the migration: Online or Offline.",
                      "enum": [
                        "Offline",
                        "Online"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MigrationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Offline",
                            "description": "Offline migration mode."
                          },
                          {
                            "value": "Online",
                            "description": "Online migration mode."
                          }
                        ]
                      }
                    },
                    "migrationOption": {
                      "description": "Supported option for a migration.",
                      "enum": [
                        "Validate",
                        "Migrate",
                        "ValidateAndMigrate"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MigrationOption",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Validate",
                            "description": "Validate the migration without performing it."
                          },
                          {
                            "value": "Migrate",
                            "description": "Perform the migration."
                          },
                          {
                            "value": "ValidateAndMigrate",
                            "description": "Validate and perform the migration."
                          }
                        ]
                      }
                    },
                    "sourceType": {
                      "description": "Source server type used for the migration: ApsaraDB_RDS, AWS, AWS_AURORA, AWS_EC2, AWS_RDS, AzureVM, Crunchy_PostgreSQL, Digital_Ocean_Droplets, Digital_Ocean_PostgreSQL, EDB, EDB_Oracle_Server, EDB_PostgreSQL, GCP, GCP_AlloyDB, GCP_CloudSQL, GCP_Compute, Heroku_PostgreSQL, Huawei_Compute, Huawei_RDS, OnPremises, PostgreSQLCosmosDB, PostgreSQLFlexibleServer, PostgreSQLSingleServer, or Supabase_PostgreSQL",
                      "enum": [
                        "OnPremises",
                        "AWS",
                        "GCP",
                        "AzureVM",
                        "PostgreSQLSingleServer",
                        "AWS_RDS",
                        "AWS_AURORA",
                        "AWS_EC2",
                        "GCP_CloudSQL",
                        "GCP_AlloyDB",
                        "GCP_Compute",
                        "EDB",
                        "EDB_Oracle_Server",
                        "EDB_PostgreSQL",
                        "PostgreSQLFlexibleServer",
                        "PostgreSQLCosmosDB",
                        "Huawei_RDS",
                        "Huawei_Compute",
                        "Heroku_PostgreSQL",
                        "Crunchy_PostgreSQL",
                        "ApsaraDB_RDS",
                        "Digital_Ocean_Droplets",
                        "Digital_Ocean_PostgreSQL",
                        "Supabase_PostgreSQL"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SourceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "OnPremises",
                            "description": "On-premises PostgreSQL server."
                          },
                          {
                            "value": "AWS",
                            "description": "Amazon Web Services PostgreSQL server."
                          },
                          {
                            "value": "GCP",
                            "description": "Google Cloud Platform PostgreSQL server."
                          },
                          {
                            "value": "AzureVM",
                            "description": "Azure Virtual Machine PostgreSQL server."
                          },
                          {
                            "value": "PostgreSQLSingleServer",
                            "description": "Azure Database for PostgreSQL single server."
                          },
                          {
                            "value": "AWS_RDS",
                            "description": "Amazon RDS for PostgreSQL."
                          },
                          {
                            "value": "AWS_AURORA",
                            "description": "Amazon Aurora for PostgreSQL."
                          },
                          {
                            "value": "AWS_EC2",
                            "description": "Amazon EC2 for PostgreSQL."
                          },
                          {
                            "value": "GCP_CloudSQL",
                            "description": "Google Cloud SQL for PostgreSQL."
                          },
                          {
                            "value": "GCP_AlloyDB",
                            "description": "Google Cloud AlloyDB for PostgreSQL."
                          },
                          {
                            "value": "GCP_Compute",
                            "description": "Google Compute Engine for PostgreSQL."
                          },
                          {
                            "value": "EDB",
                            "description": "EnterpriseDB PostgreSQL server."
                          },
                          {
                            "value": "EDB_Oracle_Server",
                            "description": "EnterpriseDB Oracle Server."
                          },
                          {
                            "value": "EDB_PostgreSQL",
                            "description": "EnterpriseDB PostgreSQL server."
                          },
                          {
                            "value": "PostgreSQLFlexibleServer",
                            "description": "Azure Database for PostgreSQL flexible server."
                          },
                          {
                            "value": "PostgreSQLCosmosDB",
                            "description": ".NET Cosmos DB for PostgreSQL"
                          },
                          {
                            "value": "Huawei_RDS",
                            "description": "Huawei RDS for PostgreSQL"
                          },
                          {
                            "value": "Huawei_Compute",
                            "description": "Huawei Compute for PostgreSQL"
                          },
                          {
                            "value": "Heroku_PostgreSQL",
                            "description": "Heroku PostgreSQL"
                          },
                          {
                            "value": "Crunchy_PostgreSQL",
                            "description": "Crunchy PostgreSQL"
                          },
                          {
                            "value": "ApsaraDB_RDS",
                            "description": "ApsaraDB RDS for PostgreSQL"
                          },
                          {
                            "value": "Digital_Ocean_Droplets",
                            "description": "Digital Ocean Droplets for PostgreSQL"
                          },
                          {
                            "value": "Digital_Ocean_PostgreSQL",
                            "description": "Digital Ocean PostgreSQL"
                          },
                          {
                            "value": "Supabase_PostgreSQL",
                            "description": "Supabase PostgreSQL"
                          }
                        ]
                      }
                    },
                    "sslMode": {
                      "description": "SSL mode used by a migration. Default SSL mode for 'PostgreSQLSingleServer' is 'VerifyFull'. Default SSL mode for other source types is 'Prefer'.",
                      "enum": [
                        "Prefer",
                        "Require",
                        "VerifyCA",
                        "VerifyFull"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SslMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Prefer",
                            "description": "Prefer SSL connection. If the server does not support SSL, the connection will be established without SSL."
                          },
                          {
                            "value": "Require",
                            "description": "Require SSL connection. If the server does not support SSL, the connection will fail."
                          },
                          {
                            "value": "VerifyCA",
                            "description": "Require SSL connection and verify the server certificate against the CA certificate."
                          },
                          {
                            "value": "VerifyFull",
                            "description": "Require SSL connection, verify the server certificate against the CA certificate, and verify that the server hostname matches the certificate."
                          }
                        ]
                      }
                    },
                    "sourceDbServerMetadata": {
                      "readOnly": true,
                      "description": "Metadata of source database server.",
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "string",
                          "description": "Location of database server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Major version of PostgreSQL database engine."
                        },
                        "storageMb": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Storage size (in MB) for database server."
                        },
                        "sku": {
                          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                            },
                            "tier": {
                              "type": "string",
                              "description": "Tier of the compute assigned to a server.",
                              "enum": [
                                "Burstable",
                                "GeneralPurpose",
                                "MemoryOptimized"
                              ],
                              "x-ms-enum": {
                                "name": "SkuTier",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "targetDbServerMetadata": {
                      "readOnly": true,
                      "description": "Metadata of target database server.",
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "string",
                          "description": "Location of database server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Major version of PostgreSQL database engine."
                        },
                        "storageMb": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Storage size (in MB) for database server."
                        },
                        "sku": {
                          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                            },
                            "tier": {
                              "type": "string",
                              "description": "Tier of the compute assigned to a server.",
                              "enum": [
                                "Burstable",
                                "GeneralPurpose",
                                "MemoryOptimized"
                              ],
                              "x-ms-enum": {
                                "name": "SkuTier",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "sourceDbServerResourceId": {
                      "type": "string",
                      "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
                    },
                    "sourceDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
                    },
                    "targetDbServerResourceId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Identifier of the target database server resource."
                    },
                    "targetDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
                    },
                    "secretParameters": {
                      "description": "Migration secret parameters.",
                      "required": [
                        "adminCredentials"
                      ],
                      "type": "object",
                      "properties": {
                        "adminCredentials": {
                          "x-ms-secret": true,
                          "x-ms-external": true,
                          "description": "Credentials of administrator users for source and target servers.",
                          "type": "object",
                          "required": [
                            "sourceServerPassword",
                            "targetServerPassword"
                          ],
                          "properties": {
                            "sourceServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "description": "Password for the user of the source server."
                            },
                            "targetServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "description": "Password for the user of the target server."
                            }
                          }
                        },
                        "sourceServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
                        },
                        "targetServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
                        }
                      }
                    },
                    "dbsToMigrate": {
                      "maxItems": 50,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Names of databases to migrate.",
                      "x-ms-identifiers": []
                    },
                    "setupLogicalReplicationOnSourceDbIfNeeded": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "LogicalReplicationOnSourceServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Logical replication will be set up on the source server."
                          },
                          {
                            "value": "False",
                            "description": "Logical replication will not be set up on the source server."
                          }
                        ]
                      },
                      "description": "Indicates whether to setup logical replication on source server, if needed."
                    },
                    "overwriteDbsInTarget": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "OverwriteDatabasesOnTargetServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Databases on the target server can be overwritten when already present."
                          },
                          {
                            "value": "False",
                            "description": "Databases on the target server cannot be overwritten when already present."
                          }
                        ]
                      },
                      "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
                    },
                    "migrationWindowStartTimeInUtc": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Start time (UTC) for migration window."
                    },
                    "migrationWindowEndTimeInUtc": {
                      "format": "date-time",
                      "type": "string",
                      "description": "End time (UTC) for migration window."
                    },
                    "migrateRoles": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "MigrateRolesAndPermissions",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Roles and permissions will be migrated."
                          },
                          {
                            "value": "False",
                            "description": "Roles and permissions will not be migrated."
                          }
                        ]
                      },
                      "description": "Indicates if roles and permissions must be migrated."
                    },
                    "startDataMigration": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "StartDataMigration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Data migration must start right away."
                          },
                          {
                            "value": "False",
                            "description": "Data migration must not start right away."
                          }
                        ]
                      },
                      "description": "Indicates if data migration must start right away."
                    },
                    "triggerCutover": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "TriggerCutover",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cutover must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cutover must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cutover must be triggered for the entire migration."
                    },
                    "dbsToTriggerCutoverOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    },
                    "cancel": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "Cancel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cancel must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cancel must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cancel must be triggered for the entire migration."
                    },
                    "dbsToCancelMigrationOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    }
                  }
                }
              },
              "description": "Properties of a migration."
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Migrations"
        ],
        "operationId": "Migrations_Update",
        "description": "Updates an existing migration. The request body can contain one to many of the mutable properties present in the migration definition. Certain property updates initiate migration state transitions.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "migrationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of migration.",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Migration properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "sourceDbServerResourceId": {
                      "type": "string",
                      "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
                    },
                    "sourceDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
                    },
                    "targetDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
                    },
                    "secretParameters": {
                      "description": "Migration secret parameters.",
                      "type": "object",
                      "properties": {
                        "adminCredentials": {
                          "x-ms-secret": true,
                          "x-ms-external": true,
                          "description": "Credentials of administrator users for source and target servers.",
                          "type": "object",
                          "properties": {
                            "sourceServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "update"
                              ],
                              "description": "Password for the user of the source server."
                            },
                            "targetServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "update"
                              ],
                              "description": "Password for the user of the target server."
                            }
                          }
                        },
                        "sourceServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
                        },
                        "targetServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
                        }
                      }
                    },
                    "dbsToMigrate": {
                      "maxItems": 50,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Names of databases to migrate.",
                      "x-ms-identifiers": []
                    },
                    "setupLogicalReplicationOnSourceDbIfNeeded": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "LogicalReplicationOnSourceServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Logical replication will be set up on the source server."
                          },
                          {
                            "value": "False",
                            "description": "Logical replication will not be set up on the source server."
                          }
                        ]
                      },
                      "description": "Indicates whether to setup logical replication on source server, if needed."
                    },
                    "overwriteDbsInTarget": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "OverwriteDatabasesOnTargetServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Databases on the target server can be overwritten when already present."
                          },
                          {
                            "value": "False",
                            "description": "Databases on the target server cannot be overwritten when already present."
                          }
                        ]
                      },
                      "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
                    },
                    "migrationWindowStartTimeInUtc": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Start time (UTC) for migration window."
                    },
                    "migrateRoles": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "MigrateRolesAndPermissions",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Roles and permissions will be migrated."
                          },
                          {
                            "value": "False",
                            "description": "Roles and permissions will not be migrated."
                          }
                        ]
                      },
                      "description": "Indicates if roles and permissions must be migrated."
                    },
                    "startDataMigration": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "StartDataMigration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Data migration must start right away."
                          },
                          {
                            "value": "False",
                            "description": "Data migration must not start right away."
                          }
                        ]
                      },
                      "description": "Indicates if data migration must start right away."
                    },
                    "triggerCutover": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "TriggerCutover",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cutover must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cutover must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cutover must be triggered for the entire migration."
                    },
                    "dbsToTriggerCutoverOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    },
                    "cancel": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "Cancel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cancel must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cancel must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cancel must be triggered for the entire migration."
                    },
                    "dbsToCancelMigrationOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    },
                    "migrationMode": {
                      "description": "Mode used to perform the migration: Online or Offline.",
                      "enum": [
                        "Offline",
                        "Online"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MigrationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Offline",
                            "description": "Offline migration mode."
                          },
                          {
                            "value": "Online",
                            "description": "Online migration mode."
                          }
                        ]
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application-specific metadata in the form of key-value pairs."
                }
              },
              "description": "Migration."
            },
            "description": "Parameters required to update an existing migration."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Migration properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "migrationId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Identifier of a migration."
                    },
                    "currentStatus": {
                      "readOnly": true,
                      "description": "Current status of a migration.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "State of migration.",
                          "enum": [
                            "InProgress",
                            "WaitingForUserAction",
                            "Canceled",
                            "Failed",
                            "Succeeded",
                            "ValidationFailed",
                            "CleaningUp"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "MigrationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "InProgress",
                                "description": "Migration is in progress."
                              },
                              {
                                "value": "WaitingForUserAction",
                                "description": "Migration is waiting for user action."
                              },
                              {
                                "value": "Canceled",
                                "description": "Migration has been canceled."
                              },
                              {
                                "value": "Failed",
                                "description": "Migration has failed."
                              },
                              {
                                "value": "Succeeded",
                                "description": "Migration has succeeded."
                              },
                              {
                                "value": "ValidationFailed",
                                "description": "Validation for migration has failed."
                              },
                              {
                                "value": "CleaningUp",
                                "description": "Migration is cleaning up resources."
                              }
                            ]
                          }
                        },
                        "error": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Error message, if any, for the migration state."
                        },
                        "currentSubStateDetails": {
                          "readOnly": true,
                          "description": "Current migration sub state details.",
                          "type": "object",
                          "properties": {
                            "currentSubState": {
                              "readOnly": true,
                              "enum": [
                                "PerformingPreRequisiteSteps",
                                "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                "WaitingForDBsToMigrateSpecification",
                                "WaitingForTargetDBOverwriteConfirmation",
                                "WaitingForDataMigrationScheduling",
                                "WaitingForDataMigrationWindow",
                                "MigratingData",
                                "WaitingForCutoverTrigger",
                                "CompletingMigration",
                                "Completed",
                                "CancelingRequestedDBMigrations",
                                "ValidationInProgress"
                              ],
                              "type": "string",
                              "description": "Substate of migration.",
                              "x-ms-enum": {
                                "name": "MigrationSubstate",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "PerformingPreRequisiteSteps",
                                    "description": "Performing pre-requisite steps for migration."
                                  },
                                  {
                                    "value": "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                    "description": "Waiting for logical replication setup request on source database."
                                  },
                                  {
                                    "value": "WaitingForDBsToMigrateSpecification",
                                    "description": "Waiting for databases to migrate specification."
                                  },
                                  {
                                    "value": "WaitingForTargetDBOverwriteConfirmation",
                                    "description": "Waiting for target database overwrite confirmation."
                                  },
                                  {
                                    "value": "WaitingForDataMigrationScheduling",
                                    "description": "Waiting for data migration scheduling."
                                  },
                                  {
                                    "value": "WaitingForDataMigrationWindow",
                                    "description": "Waiting for data migration window."
                                  },
                                  {
                                    "value": "MigratingData",
                                    "description": "Migrating data."
                                  },
                                  {
                                    "value": "WaitingForCutoverTrigger",
                                    "description": "Waiting for cutover trigger."
                                  },
                                  {
                                    "value": "CompletingMigration",
                                    "description": "Completing migration."
                                  },
                                  {
                                    "value": "Completed",
                                    "description": "Migration completed."
                                  },
                                  {
                                    "value": "CancelingRequestedDBMigrations",
                                    "description": "Canceling requested database migrations."
                                  },
                                  {
                                    "value": "ValidationInProgress",
                                    "description": "Validation in progress."
                                  }
                                ]
                              }
                            },
                            "dbDetails": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Migration state of a database.",
                                "properties": {
                                  "databaseName": {
                                    "type": "string",
                                    "description": "Name of database."
                                  },
                                  "migrationState": {
                                    "type": "string",
                                    "description": "Migration state of a database.",
                                    "enum": [
                                      "InProgress",
                                      "WaitingForCutoverTrigger",
                                      "Failed",
                                      "Canceled",
                                      "Succeeded",
                                      "Canceling"
                                    ],
                                    "x-ms-enum": {
                                      "name": "MigrationDatabaseState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "InProgress",
                                          "description": "Migration is in progress for the database."
                                        },
                                        {
                                          "value": "WaitingForCutoverTrigger",
                                          "description": "Migration is waiting for cutover trigger for the database."
                                        },
                                        {
                                          "value": "Failed",
                                          "description": "Migration has failed for the database."
                                        },
                                        {
                                          "value": "Canceled",
                                          "description": "Migration has been canceled for the database."
                                        },
                                        {
                                          "value": "Succeeded",
                                          "description": "Migration has succeeded for the database."
                                        },
                                        {
                                          "value": "Canceling",
                                          "description": "Migration is canceling for the database."
                                        }
                                      ]
                                    }
                                  },
                                  "migrationOperation": {
                                    "type": "string",
                                    "description": "Migration operation of a database."
                                  },
                                  "startedOn": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Start time of a migration state."
                                  },
                                  "endedOn": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "End time of a migration state."
                                  },
                                  "fullLoadQueuedTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables queued for the migration of a database."
                                  },
                                  "fullLoadErroredTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables encountering errors during the migration of a database."
                                  },
                                  "fullLoadLoadingTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables loading during the migration of a database."
                                  },
                                  "fullLoadCompletedTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables loaded during the migration of a database."
                                  },
                                  "cdcUpdateCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture update counter."
                                  },
                                  "cdcDeleteCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture delete counter."
                                  },
                                  "cdcInsertCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture insert counter."
                                  },
                                  "appliedChanges": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture applied changes counter."
                                  },
                                  "incomingChanges": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture incoming changes counter."
                                  },
                                  "latency": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Lag in seconds between source and target during online phase."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "Error message, if any, for the migration state."
                                  }
                                }
                              }
                            },
                            "validationDetails": {
                              "type": "object",
                              "description": "Details for the validation for migration.",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "Validation status for migration.",
                                  "enum": [
                                    "Failed",
                                    "Succeeded",
                                    "Warning"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ValidationState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Failed",
                                        "description": "Validation has failed."
                                      },
                                      {
                                        "value": "Succeeded",
                                        "description": "Validation has succeeded."
                                      },
                                      {
                                        "value": "Warning",
                                        "description": "Validation has succeeded with warnings."
                                      }
                                    ]
                                  }
                                },
                                "validationStartTimeInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Start time (UTC) for validation."
                                },
                                "validationEndTimeInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "End time (UTC) for validation."
                                },
                                "serverLevelValidationDetails": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Validation summary object.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Validation type."
                                      },
                                      "state": {
                                        "type": "string",
                                        "description": "Validation status for migration.",
                                        "enum": [
                                          "Failed",
                                          "Succeeded",
                                          "Warning"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ValidationState",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "Failed",
                                              "description": "Validation has failed."
                                            },
                                            {
                                              "value": "Succeeded",
                                              "description": "Validation has succeeded."
                                            },
                                            {
                                              "value": "Warning",
                                              "description": "Validation has succeeded with warnings."
                                            }
                                          ]
                                        }
                                      },
                                      "messages": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation message object.",
                                          "properties": {
                                            "state": {
                                              "type": "string",
                                              "description": "Validation status for migration.",
                                              "enum": [
                                                "Failed",
                                                "Succeeded",
                                                "Warning"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ValidationState",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "Failed",
                                                    "description": "Validation has failed."
                                                  },
                                                  {
                                                    "value": "Succeeded",
                                                    "description": "Validation has succeeded."
                                                  },
                                                  {
                                                    "value": "Warning",
                                                    "description": "Validation has succeeded with warnings."
                                                  }
                                                ]
                                              }
                                            },
                                            "message": {
                                              "type": "string",
                                              "description": "Validation message string."
                                            }
                                          }
                                        },
                                        "description": "Validation messages.",
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "description": "Details of server level validations.",
                                  "x-ms-identifiers": []
                                },
                                "dbLevelValidationDetails": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Validation status summary for a database.",
                                    "properties": {
                                      "databaseName": {
                                        "type": "string",
                                        "description": "Name of database."
                                      },
                                      "startedOn": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Start time of a database level validation."
                                      },
                                      "endedOn": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "End time of a database level validation."
                                      },
                                      "summary": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation summary object.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "Validation type."
                                            },
                                            "state": {
                                              "type": "string",
                                              "description": "Validation status for migration.",
                                              "enum": [
                                                "Failed",
                                                "Succeeded",
                                                "Warning"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ValidationState",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "Failed",
                                                    "description": "Validation has failed."
                                                  },
                                                  {
                                                    "value": "Succeeded",
                                                    "description": "Validation has succeeded."
                                                  },
                                                  {
                                                    "value": "Warning",
                                                    "description": "Validation has succeeded with warnings."
                                                  }
                                                ]
                                              }
                                            },
                                            "messages": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "description": "Validation message object.",
                                                "properties": {
                                                  "state": {
                                                    "type": "string",
                                                    "description": "Validation status for migration.",
                                                    "enum": [
                                                      "Failed",
                                                      "Succeeded",
                                                      "Warning"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ValidationState",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "value": "Failed",
                                                          "description": "Validation has failed."
                                                        },
                                                        {
                                                          "value": "Succeeded",
                                                          "description": "Validation has succeeded."
                                                        },
                                                        {
                                                          "value": "Warning",
                                                          "description": "Validation has succeeded with warnings."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "message": {
                                                    "type": "string",
                                                    "description": "Validation message string."
                                                  }
                                                }
                                              },
                                              "description": "Validation messages.",
                                              "x-ms-identifiers": []
                                            }
                                          }
                                        },
                                        "description": "Summary of database level validations.",
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "description": "Details of server level validations.",
                                  "x-ms-identifiers": [
                                    "databaseName"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "migrationInstanceResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Identifier of the private endpoint migration instance."
                    },
                    "migrationMode": {
                      "description": "Mode used to perform the migration: Online or Offline.",
                      "enum": [
                        "Offline",
                        "Online"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MigrationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Offline",
                            "description": "Offline migration mode."
                          },
                          {
                            "value": "Online",
                            "description": "Online migration mode."
                          }
                        ]
                      }
                    },
                    "migrationOption": {
                      "description": "Supported option for a migration.",
                      "enum": [
                        "Validate",
                        "Migrate",
                        "ValidateAndMigrate"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MigrationOption",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Validate",
                            "description": "Validate the migration without performing it."
                          },
                          {
                            "value": "Migrate",
                            "description": "Perform the migration."
                          },
                          {
                            "value": "ValidateAndMigrate",
                            "description": "Validate and perform the migration."
                          }
                        ]
                      }
                    },
                    "sourceType": {
                      "description": "Source server type used for the migration: ApsaraDB_RDS, AWS, AWS_AURORA, AWS_EC2, AWS_RDS, AzureVM, Crunchy_PostgreSQL, Digital_Ocean_Droplets, Digital_Ocean_PostgreSQL, EDB, EDB_Oracle_Server, EDB_PostgreSQL, GCP, GCP_AlloyDB, GCP_CloudSQL, GCP_Compute, Heroku_PostgreSQL, Huawei_Compute, Huawei_RDS, OnPremises, PostgreSQLCosmosDB, PostgreSQLFlexibleServer, PostgreSQLSingleServer, or Supabase_PostgreSQL",
                      "enum": [
                        "OnPremises",
                        "AWS",
                        "GCP",
                        "AzureVM",
                        "PostgreSQLSingleServer",
                        "AWS_RDS",
                        "AWS_AURORA",
                        "AWS_EC2",
                        "GCP_CloudSQL",
                        "GCP_AlloyDB",
                        "GCP_Compute",
                        "EDB",
                        "EDB_Oracle_Server",
                        "EDB_PostgreSQL",
                        "PostgreSQLFlexibleServer",
                        "PostgreSQLCosmosDB",
                        "Huawei_RDS",
                        "Huawei_Compute",
                        "Heroku_PostgreSQL",
                        "Crunchy_PostgreSQL",
                        "ApsaraDB_RDS",
                        "Digital_Ocean_Droplets",
                        "Digital_Ocean_PostgreSQL",
                        "Supabase_PostgreSQL"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SourceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "OnPremises",
                            "description": "On-premises PostgreSQL server."
                          },
                          {
                            "value": "AWS",
                            "description": "Amazon Web Services PostgreSQL server."
                          },
                          {
                            "value": "GCP",
                            "description": "Google Cloud Platform PostgreSQL server."
                          },
                          {
                            "value": "AzureVM",
                            "description": "Azure Virtual Machine PostgreSQL server."
                          },
                          {
                            "value": "PostgreSQLSingleServer",
                            "description": "Azure Database for PostgreSQL single server."
                          },
                          {
                            "value": "AWS_RDS",
                            "description": "Amazon RDS for PostgreSQL."
                          },
                          {
                            "value": "AWS_AURORA",
                            "description": "Amazon Aurora for PostgreSQL."
                          },
                          {
                            "value": "AWS_EC2",
                            "description": "Amazon EC2 for PostgreSQL."
                          },
                          {
                            "value": "GCP_CloudSQL",
                            "description": "Google Cloud SQL for PostgreSQL."
                          },
                          {
                            "value": "GCP_AlloyDB",
                            "description": "Google Cloud AlloyDB for PostgreSQL."
                          },
                          {
                            "value": "GCP_Compute",
                            "description": "Google Compute Engine for PostgreSQL."
                          },
                          {
                            "value": "EDB",
                            "description": "EnterpriseDB PostgreSQL server."
                          },
                          {
                            "value": "EDB_Oracle_Server",
                            "description": "EnterpriseDB Oracle Server."
                          },
                          {
                            "value": "EDB_PostgreSQL",
                            "description": "EnterpriseDB PostgreSQL server."
                          },
                          {
                            "value": "PostgreSQLFlexibleServer",
                            "description": "Azure Database for PostgreSQL flexible server."
                          },
                          {
                            "value": "PostgreSQLCosmosDB",
                            "description": ".NET Cosmos DB for PostgreSQL"
                          },
                          {
                            "value": "Huawei_RDS",
                            "description": "Huawei RDS for PostgreSQL"
                          },
                          {
                            "value": "Huawei_Compute",
                            "description": "Huawei Compute for PostgreSQL"
                          },
                          {
                            "value": "Heroku_PostgreSQL",
                            "description": "Heroku PostgreSQL"
                          },
                          {
                            "value": "Crunchy_PostgreSQL",
                            "description": "Crunchy PostgreSQL"
                          },
                          {
                            "value": "ApsaraDB_RDS",
                            "description": "ApsaraDB RDS for PostgreSQL"
                          },
                          {
                            "value": "Digital_Ocean_Droplets",
                            "description": "Digital Ocean Droplets for PostgreSQL"
                          },
                          {
                            "value": "Digital_Ocean_PostgreSQL",
                            "description": "Digital Ocean PostgreSQL"
                          },
                          {
                            "value": "Supabase_PostgreSQL",
                            "description": "Supabase PostgreSQL"
                          }
                        ]
                      }
                    },
                    "sslMode": {
                      "description": "SSL mode used by a migration. Default SSL mode for 'PostgreSQLSingleServer' is 'VerifyFull'. Default SSL mode for other source types is 'Prefer'.",
                      "enum": [
                        "Prefer",
                        "Require",
                        "VerifyCA",
                        "VerifyFull"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SslMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Prefer",
                            "description": "Prefer SSL connection. If the server does not support SSL, the connection will be established without SSL."
                          },
                          {
                            "value": "Require",
                            "description": "Require SSL connection. If the server does not support SSL, the connection will fail."
                          },
                          {
                            "value": "VerifyCA",
                            "description": "Require SSL connection and verify the server certificate against the CA certificate."
                          },
                          {
                            "value": "VerifyFull",
                            "description": "Require SSL connection, verify the server certificate against the CA certificate, and verify that the server hostname matches the certificate."
                          }
                        ]
                      }
                    },
                    "sourceDbServerMetadata": {
                      "readOnly": true,
                      "description": "Metadata of source database server.",
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "string",
                          "description": "Location of database server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Major version of PostgreSQL database engine."
                        },
                        "storageMb": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Storage size (in MB) for database server."
                        },
                        "sku": {
                          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                            },
                            "tier": {
                              "type": "string",
                              "description": "Tier of the compute assigned to a server.",
                              "enum": [
                                "Burstable",
                                "GeneralPurpose",
                                "MemoryOptimized"
                              ],
                              "x-ms-enum": {
                                "name": "SkuTier",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "targetDbServerMetadata": {
                      "readOnly": true,
                      "description": "Metadata of target database server.",
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "string",
                          "description": "Location of database server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Major version of PostgreSQL database engine."
                        },
                        "storageMb": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Storage size (in MB) for database server."
                        },
                        "sku": {
                          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                            },
                            "tier": {
                              "type": "string",
                              "description": "Tier of the compute assigned to a server.",
                              "enum": [
                                "Burstable",
                                "GeneralPurpose",
                                "MemoryOptimized"
                              ],
                              "x-ms-enum": {
                                "name": "SkuTier",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "sourceDbServerResourceId": {
                      "type": "string",
                      "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
                    },
                    "sourceDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
                    },
                    "targetDbServerResourceId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Identifier of the target database server resource."
                    },
                    "targetDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
                    },
                    "secretParameters": {
                      "description": "Migration secret parameters.",
                      "required": [
                        "adminCredentials"
                      ],
                      "type": "object",
                      "properties": {
                        "adminCredentials": {
                          "x-ms-secret": true,
                          "x-ms-external": true,
                          "description": "Credentials of administrator users for source and target servers.",
                          "type": "object",
                          "required": [
                            "sourceServerPassword",
                            "targetServerPassword"
                          ],
                          "properties": {
                            "sourceServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "description": "Password for the user of the source server."
                            },
                            "targetServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "description": "Password for the user of the target server."
                            }
                          }
                        },
                        "sourceServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
                        },
                        "targetServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
                        }
                      }
                    },
                    "dbsToMigrate": {
                      "maxItems": 50,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Names of databases to migrate.",
                      "x-ms-identifiers": []
                    },
                    "setupLogicalReplicationOnSourceDbIfNeeded": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "LogicalReplicationOnSourceServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Logical replication will be set up on the source server."
                          },
                          {
                            "value": "False",
                            "description": "Logical replication will not be set up on the source server."
                          }
                        ]
                      },
                      "description": "Indicates whether to setup logical replication on source server, if needed."
                    },
                    "overwriteDbsInTarget": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "OverwriteDatabasesOnTargetServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Databases on the target server can be overwritten when already present."
                          },
                          {
                            "value": "False",
                            "description": "Databases on the target server cannot be overwritten when already present."
                          }
                        ]
                      },
                      "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
                    },
                    "migrationWindowStartTimeInUtc": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Start time (UTC) for migration window."
                    },
                    "migrationWindowEndTimeInUtc": {
                      "format": "date-time",
                      "type": "string",
                      "description": "End time (UTC) for migration window."
                    },
                    "migrateRoles": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "MigrateRolesAndPermissions",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Roles and permissions will be migrated."
                          },
                          {
                            "value": "False",
                            "description": "Roles and permissions will not be migrated."
                          }
                        ]
                      },
                      "description": "Indicates if roles and permissions must be migrated."
                    },
                    "startDataMigration": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "StartDataMigration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Data migration must start right away."
                          },
                          {
                            "value": "False",
                            "description": "Data migration must not start right away."
                          }
                        ]
                      },
                      "description": "Indicates if data migration must start right away."
                    },
                    "triggerCutover": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "TriggerCutover",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cutover must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cutover must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cutover must be triggered for the entire migration."
                    },
                    "dbsToTriggerCutoverOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    },
                    "cancel": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "Cancel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cancel must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cancel must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cancel must be triggered for the entire migration."
                    },
                    "dbsToCancelMigrationOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    }
                  }
                }
              },
              "description": "Properties of a migration."
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Migrations"
        ],
        "operationId": "Migrations_Cancel",
        "description": "Cancels an active migration.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "migrationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Name of migration.",
            "pattern": "^[a-z][a-z0-9]*$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "properties": {
                  "description": "Migration properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "migrationId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Identifier of a migration."
                    },
                    "currentStatus": {
                      "readOnly": true,
                      "description": "Current status of a migration.",
                      "type": "object",
                      "properties": {
                        "state": {
                          "readOnly": true,
                          "description": "State of migration.",
                          "enum": [
                            "InProgress",
                            "WaitingForUserAction",
                            "Canceled",
                            "Failed",
                            "Succeeded",
                            "ValidationFailed",
                            "CleaningUp"
                          ],
                          "type": "string",
                          "x-ms-enum": {
                            "name": "MigrationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "InProgress",
                                "description": "Migration is in progress."
                              },
                              {
                                "value": "WaitingForUserAction",
                                "description": "Migration is waiting for user action."
                              },
                              {
                                "value": "Canceled",
                                "description": "Migration has been canceled."
                              },
                              {
                                "value": "Failed",
                                "description": "Migration has failed."
                              },
                              {
                                "value": "Succeeded",
                                "description": "Migration has succeeded."
                              },
                              {
                                "value": "ValidationFailed",
                                "description": "Validation for migration has failed."
                              },
                              {
                                "value": "CleaningUp",
                                "description": "Migration is cleaning up resources."
                              }
                            ]
                          }
                        },
                        "error": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Error message, if any, for the migration state."
                        },
                        "currentSubStateDetails": {
                          "readOnly": true,
                          "description": "Current migration sub state details.",
                          "type": "object",
                          "properties": {
                            "currentSubState": {
                              "readOnly": true,
                              "enum": [
                                "PerformingPreRequisiteSteps",
                                "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                "WaitingForDBsToMigrateSpecification",
                                "WaitingForTargetDBOverwriteConfirmation",
                                "WaitingForDataMigrationScheduling",
                                "WaitingForDataMigrationWindow",
                                "MigratingData",
                                "WaitingForCutoverTrigger",
                                "CompletingMigration",
                                "Completed",
                                "CancelingRequestedDBMigrations",
                                "ValidationInProgress"
                              ],
                              "type": "string",
                              "description": "Substate of migration.",
                              "x-ms-enum": {
                                "name": "MigrationSubstate",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "PerformingPreRequisiteSteps",
                                    "description": "Performing pre-requisite steps for migration."
                                  },
                                  {
                                    "value": "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                    "description": "Waiting for logical replication setup request on source database."
                                  },
                                  {
                                    "value": "WaitingForDBsToMigrateSpecification",
                                    "description": "Waiting for databases to migrate specification."
                                  },
                                  {
                                    "value": "WaitingForTargetDBOverwriteConfirmation",
                                    "description": "Waiting for target database overwrite confirmation."
                                  },
                                  {
                                    "value": "WaitingForDataMigrationScheduling",
                                    "description": "Waiting for data migration scheduling."
                                  },
                                  {
                                    "value": "WaitingForDataMigrationWindow",
                                    "description": "Waiting for data migration window."
                                  },
                                  {
                                    "value": "MigratingData",
                                    "description": "Migrating data."
                                  },
                                  {
                                    "value": "WaitingForCutoverTrigger",
                                    "description": "Waiting for cutover trigger."
                                  },
                                  {
                                    "value": "CompletingMigration",
                                    "description": "Completing migration."
                                  },
                                  {
                                    "value": "Completed",
                                    "description": "Migration completed."
                                  },
                                  {
                                    "value": "CancelingRequestedDBMigrations",
                                    "description": "Canceling requested database migrations."
                                  },
                                  {
                                    "value": "ValidationInProgress",
                                    "description": "Validation in progress."
                                  }
                                ]
                              }
                            },
                            "dbDetails": {
                              "type": "object",
                              "additionalProperties": {
                                "type": "object",
                                "description": "Migration state of a database.",
                                "properties": {
                                  "databaseName": {
                                    "type": "string",
                                    "description": "Name of database."
                                  },
                                  "migrationState": {
                                    "type": "string",
                                    "description": "Migration state of a database.",
                                    "enum": [
                                      "InProgress",
                                      "WaitingForCutoverTrigger",
                                      "Failed",
                                      "Canceled",
                                      "Succeeded",
                                      "Canceling"
                                    ],
                                    "x-ms-enum": {
                                      "name": "MigrationDatabaseState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "InProgress",
                                          "description": "Migration is in progress for the database."
                                        },
                                        {
                                          "value": "WaitingForCutoverTrigger",
                                          "description": "Migration is waiting for cutover trigger for the database."
                                        },
                                        {
                                          "value": "Failed",
                                          "description": "Migration has failed for the database."
                                        },
                                        {
                                          "value": "Canceled",
                                          "description": "Migration has been canceled for the database."
                                        },
                                        {
                                          "value": "Succeeded",
                                          "description": "Migration has succeeded for the database."
                                        },
                                        {
                                          "value": "Canceling",
                                          "description": "Migration is canceling for the database."
                                        }
                                      ]
                                    }
                                  },
                                  "migrationOperation": {
                                    "type": "string",
                                    "description": "Migration operation of a database."
                                  },
                                  "startedOn": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Start time of a migration state."
                                  },
                                  "endedOn": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "End time of a migration state."
                                  },
                                  "fullLoadQueuedTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables queued for the migration of a database."
                                  },
                                  "fullLoadErroredTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables encountering errors during the migration of a database."
                                  },
                                  "fullLoadLoadingTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables loading during the migration of a database."
                                  },
                                  "fullLoadCompletedTables": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Number of tables loaded during the migration of a database."
                                  },
                                  "cdcUpdateCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture update counter."
                                  },
                                  "cdcDeleteCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture delete counter."
                                  },
                                  "cdcInsertCounter": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture insert counter."
                                  },
                                  "appliedChanges": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture applied changes counter."
                                  },
                                  "incomingChanges": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Change Data Capture incoming changes counter."
                                  },
                                  "latency": {
                                    "format": "int32",
                                    "type": "integer",
                                    "description": "Lag in seconds between source and target during online phase."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "Error message, if any, for the migration state."
                                  }
                                }
                              }
                            },
                            "validationDetails": {
                              "type": "object",
                              "description": "Details for the validation for migration.",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "Validation status for migration.",
                                  "enum": [
                                    "Failed",
                                    "Succeeded",
                                    "Warning"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ValidationState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Failed",
                                        "description": "Validation has failed."
                                      },
                                      {
                                        "value": "Succeeded",
                                        "description": "Validation has succeeded."
                                      },
                                      {
                                        "value": "Warning",
                                        "description": "Validation has succeeded with warnings."
                                      }
                                    ]
                                  }
                                },
                                "validationStartTimeInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Start time (UTC) for validation."
                                },
                                "validationEndTimeInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "End time (UTC) for validation."
                                },
                                "serverLevelValidationDetails": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Validation summary object.",
                                    "properties": {
                                      "type": {
                                        "type": "string",
                                        "description": "Validation type."
                                      },
                                      "state": {
                                        "type": "string",
                                        "description": "Validation status for migration.",
                                        "enum": [
                                          "Failed",
                                          "Succeeded",
                                          "Warning"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ValidationState",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "Failed",
                                              "description": "Validation has failed."
                                            },
                                            {
                                              "value": "Succeeded",
                                              "description": "Validation has succeeded."
                                            },
                                            {
                                              "value": "Warning",
                                              "description": "Validation has succeeded with warnings."
                                            }
                                          ]
                                        }
                                      },
                                      "messages": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation message object.",
                                          "properties": {
                                            "state": {
                                              "type": "string",
                                              "description": "Validation status for migration.",
                                              "enum": [
                                                "Failed",
                                                "Succeeded",
                                                "Warning"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ValidationState",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "Failed",
                                                    "description": "Validation has failed."
                                                  },
                                                  {
                                                    "value": "Succeeded",
                                                    "description": "Validation has succeeded."
                                                  },
                                                  {
                                                    "value": "Warning",
                                                    "description": "Validation has succeeded with warnings."
                                                  }
                                                ]
                                              }
                                            },
                                            "message": {
                                              "type": "string",
                                              "description": "Validation message string."
                                            }
                                          }
                                        },
                                        "description": "Validation messages.",
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "description": "Details of server level validations.",
                                  "x-ms-identifiers": []
                                },
                                "dbLevelValidationDetails": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Validation status summary for a database.",
                                    "properties": {
                                      "databaseName": {
                                        "type": "string",
                                        "description": "Name of database."
                                      },
                                      "startedOn": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Start time of a database level validation."
                                      },
                                      "endedOn": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "End time of a database level validation."
                                      },
                                      "summary": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation summary object.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "Validation type."
                                            },
                                            "state": {
                                              "type": "string",
                                              "description": "Validation status for migration.",
                                              "enum": [
                                                "Failed",
                                                "Succeeded",
                                                "Warning"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ValidationState",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "Failed",
                                                    "description": "Validation has failed."
                                                  },
                                                  {
                                                    "value": "Succeeded",
                                                    "description": "Validation has succeeded."
                                                  },
                                                  {
                                                    "value": "Warning",
                                                    "description": "Validation has succeeded with warnings."
                                                  }
                                                ]
                                              }
                                            },
                                            "messages": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "description": "Validation message object.",
                                                "properties": {
                                                  "state": {
                                                    "type": "string",
                                                    "description": "Validation status for migration.",
                                                    "enum": [
                                                      "Failed",
                                                      "Succeeded",
                                                      "Warning"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ValidationState",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "value": "Failed",
                                                          "description": "Validation has failed."
                                                        },
                                                        {
                                                          "value": "Succeeded",
                                                          "description": "Validation has succeeded."
                                                        },
                                                        {
                                                          "value": "Warning",
                                                          "description": "Validation has succeeded with warnings."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "message": {
                                                    "type": "string",
                                                    "description": "Validation message string."
                                                  }
                                                }
                                              },
                                              "description": "Validation messages.",
                                              "x-ms-identifiers": []
                                            }
                                          }
                                        },
                                        "description": "Summary of database level validations.",
                                        "x-ms-identifiers": []
                                      }
                                    }
                                  },
                                  "description": "Details of server level validations.",
                                  "x-ms-identifiers": [
                                    "databaseName"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "migrationInstanceResourceId": {
                      "type": "string",
                      "format": "arm-id",
                      "description": "Identifier of the private endpoint migration instance."
                    },
                    "migrationMode": {
                      "description": "Mode used to perform the migration: Online or Offline.",
                      "enum": [
                        "Offline",
                        "Online"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MigrationMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Offline",
                            "description": "Offline migration mode."
                          },
                          {
                            "value": "Online",
                            "description": "Online migration mode."
                          }
                        ]
                      }
                    },
                    "migrationOption": {
                      "description": "Supported option for a migration.",
                      "enum": [
                        "Validate",
                        "Migrate",
                        "ValidateAndMigrate"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "MigrationOption",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Validate",
                            "description": "Validate the migration without performing it."
                          },
                          {
                            "value": "Migrate",
                            "description": "Perform the migration."
                          },
                          {
                            "value": "ValidateAndMigrate",
                            "description": "Validate and perform the migration."
                          }
                        ]
                      }
                    },
                    "sourceType": {
                      "description": "Source server type used for the migration: ApsaraDB_RDS, AWS, AWS_AURORA, AWS_EC2, AWS_RDS, AzureVM, Crunchy_PostgreSQL, Digital_Ocean_Droplets, Digital_Ocean_PostgreSQL, EDB, EDB_Oracle_Server, EDB_PostgreSQL, GCP, GCP_AlloyDB, GCP_CloudSQL, GCP_Compute, Heroku_PostgreSQL, Huawei_Compute, Huawei_RDS, OnPremises, PostgreSQLCosmosDB, PostgreSQLFlexibleServer, PostgreSQLSingleServer, or Supabase_PostgreSQL",
                      "enum": [
                        "OnPremises",
                        "AWS",
                        "GCP",
                        "AzureVM",
                        "PostgreSQLSingleServer",
                        "AWS_RDS",
                        "AWS_AURORA",
                        "AWS_EC2",
                        "GCP_CloudSQL",
                        "GCP_AlloyDB",
                        "GCP_Compute",
                        "EDB",
                        "EDB_Oracle_Server",
                        "EDB_PostgreSQL",
                        "PostgreSQLFlexibleServer",
                        "PostgreSQLCosmosDB",
                        "Huawei_RDS",
                        "Huawei_Compute",
                        "Heroku_PostgreSQL",
                        "Crunchy_PostgreSQL",
                        "ApsaraDB_RDS",
                        "Digital_Ocean_Droplets",
                        "Digital_Ocean_PostgreSQL",
                        "Supabase_PostgreSQL"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SourceType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "OnPremises",
                            "description": "On-premises PostgreSQL server."
                          },
                          {
                            "value": "AWS",
                            "description": "Amazon Web Services PostgreSQL server."
                          },
                          {
                            "value": "GCP",
                            "description": "Google Cloud Platform PostgreSQL server."
                          },
                          {
                            "value": "AzureVM",
                            "description": "Azure Virtual Machine PostgreSQL server."
                          },
                          {
                            "value": "PostgreSQLSingleServer",
                            "description": "Azure Database for PostgreSQL single server."
                          },
                          {
                            "value": "AWS_RDS",
                            "description": "Amazon RDS for PostgreSQL."
                          },
                          {
                            "value": "AWS_AURORA",
                            "description": "Amazon Aurora for PostgreSQL."
                          },
                          {
                            "value": "AWS_EC2",
                            "description": "Amazon EC2 for PostgreSQL."
                          },
                          {
                            "value": "GCP_CloudSQL",
                            "description": "Google Cloud SQL for PostgreSQL."
                          },
                          {
                            "value": "GCP_AlloyDB",
                            "description": "Google Cloud AlloyDB for PostgreSQL."
                          },
                          {
                            "value": "GCP_Compute",
                            "description": "Google Compute Engine for PostgreSQL."
                          },
                          {
                            "value": "EDB",
                            "description": "EnterpriseDB PostgreSQL server."
                          },
                          {
                            "value": "EDB_Oracle_Server",
                            "description": "EnterpriseDB Oracle Server."
                          },
                          {
                            "value": "EDB_PostgreSQL",
                            "description": "EnterpriseDB PostgreSQL server."
                          },
                          {
                            "value": "PostgreSQLFlexibleServer",
                            "description": "Azure Database for PostgreSQL flexible server."
                          },
                          {
                            "value": "PostgreSQLCosmosDB",
                            "description": ".NET Cosmos DB for PostgreSQL"
                          },
                          {
                            "value": "Huawei_RDS",
                            "description": "Huawei RDS for PostgreSQL"
                          },
                          {
                            "value": "Huawei_Compute",
                            "description": "Huawei Compute for PostgreSQL"
                          },
                          {
                            "value": "Heroku_PostgreSQL",
                            "description": "Heroku PostgreSQL"
                          },
                          {
                            "value": "Crunchy_PostgreSQL",
                            "description": "Crunchy PostgreSQL"
                          },
                          {
                            "value": "ApsaraDB_RDS",
                            "description": "ApsaraDB RDS for PostgreSQL"
                          },
                          {
                            "value": "Digital_Ocean_Droplets",
                            "description": "Digital Ocean Droplets for PostgreSQL"
                          },
                          {
                            "value": "Digital_Ocean_PostgreSQL",
                            "description": "Digital Ocean PostgreSQL"
                          },
                          {
                            "value": "Supabase_PostgreSQL",
                            "description": "Supabase PostgreSQL"
                          }
                        ]
                      }
                    },
                    "sslMode": {
                      "description": "SSL mode used by a migration. Default SSL mode for 'PostgreSQLSingleServer' is 'VerifyFull'. Default SSL mode for other source types is 'Prefer'.",
                      "enum": [
                        "Prefer",
                        "Require",
                        "VerifyCA",
                        "VerifyFull"
                      ],
                      "type": "string",
                      "x-ms-enum": {
                        "name": "SslMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Prefer",
                            "description": "Prefer SSL connection. If the server does not support SSL, the connection will be established without SSL."
                          },
                          {
                            "value": "Require",
                            "description": "Require SSL connection. If the server does not support SSL, the connection will fail."
                          },
                          {
                            "value": "VerifyCA",
                            "description": "Require SSL connection and verify the server certificate against the CA certificate."
                          },
                          {
                            "value": "VerifyFull",
                            "description": "Require SSL connection, verify the server certificate against the CA certificate, and verify that the server hostname matches the certificate."
                          }
                        ]
                      }
                    },
                    "sourceDbServerMetadata": {
                      "readOnly": true,
                      "description": "Metadata of source database server.",
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "string",
                          "description": "Location of database server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Major version of PostgreSQL database engine."
                        },
                        "storageMb": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Storage size (in MB) for database server."
                        },
                        "sku": {
                          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                            },
                            "tier": {
                              "type": "string",
                              "description": "Tier of the compute assigned to a server.",
                              "enum": [
                                "Burstable",
                                "GeneralPurpose",
                                "MemoryOptimized"
                              ],
                              "x-ms-enum": {
                                "name": "SkuTier",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "targetDbServerMetadata": {
                      "readOnly": true,
                      "description": "Metadata of target database server.",
                      "type": "object",
                      "properties": {
                        "location": {
                          "type": "string",
                          "description": "Location of database server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "readOnly": true
                        },
                        "version": {
                          "type": "string",
                          "description": "Major version of PostgreSQL database engine."
                        },
                        "storageMb": {
                          "format": "int32",
                          "type": "integer",
                          "description": "Storage size (in MB) for database server."
                        },
                        "sku": {
                          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                            },
                            "tier": {
                              "type": "string",
                              "description": "Tier of the compute assigned to a server.",
                              "enum": [
                                "Burstable",
                                "GeneralPurpose",
                                "MemoryOptimized"
                              ],
                              "x-ms-enum": {
                                "name": "SkuTier",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "sourceDbServerResourceId": {
                      "type": "string",
                      "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
                    },
                    "sourceDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
                    },
                    "targetDbServerResourceId": {
                      "type": "string",
                      "readOnly": true,
                      "description": "Identifier of the target database server resource."
                    },
                    "targetDbServerFullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
                    },
                    "secretParameters": {
                      "description": "Migration secret parameters.",
                      "required": [
                        "adminCredentials"
                      ],
                      "type": "object",
                      "properties": {
                        "adminCredentials": {
                          "x-ms-secret": true,
                          "x-ms-external": true,
                          "description": "Credentials of administrator users for source and target servers.",
                          "type": "object",
                          "required": [
                            "sourceServerPassword",
                            "targetServerPassword"
                          ],
                          "properties": {
                            "sourceServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "description": "Password for the user of the source server."
                            },
                            "targetServerPassword": {
                              "type": "string",
                              "x-ms-secret": true,
                              "x-ms-external": true,
                              "x-ms-mutability": [
                                "create",
                                "update"
                              ],
                              "description": "Password for the user of the target server."
                            }
                          }
                        },
                        "sourceServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
                        },
                        "targetServerUsername": {
                          "type": "string",
                          "x-ms-mutability": [
                            "create",
                            "update"
                          ],
                          "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
                        }
                      }
                    },
                    "dbsToMigrate": {
                      "maxItems": 50,
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Names of databases to migrate.",
                      "x-ms-identifiers": []
                    },
                    "setupLogicalReplicationOnSourceDbIfNeeded": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "LogicalReplicationOnSourceServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Logical replication will be set up on the source server."
                          },
                          {
                            "value": "False",
                            "description": "Logical replication will not be set up on the source server."
                          }
                        ]
                      },
                      "description": "Indicates whether to setup logical replication on source server, if needed."
                    },
                    "overwriteDbsInTarget": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "OverwriteDatabasesOnTargetServer",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Databases on the target server can be overwritten when already present."
                          },
                          {
                            "value": "False",
                            "description": "Databases on the target server cannot be overwritten when already present."
                          }
                        ]
                      },
                      "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
                    },
                    "migrationWindowStartTimeInUtc": {
                      "format": "date-time",
                      "type": "string",
                      "description": "Start time (UTC) for migration window."
                    },
                    "migrationWindowEndTimeInUtc": {
                      "format": "date-time",
                      "type": "string",
                      "description": "End time (UTC) for migration window."
                    },
                    "migrateRoles": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "MigrateRolesAndPermissions",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Roles and permissions will be migrated."
                          },
                          {
                            "value": "False",
                            "description": "Roles and permissions will not be migrated."
                          }
                        ]
                      },
                      "description": "Indicates if roles and permissions must be migrated."
                    },
                    "startDataMigration": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "StartDataMigration",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Data migration must start right away."
                          },
                          {
                            "value": "False",
                            "description": "Data migration must not start right away."
                          }
                        ]
                      },
                      "description": "Indicates if data migration must start right away."
                    },
                    "triggerCutover": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "TriggerCutover",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cutover must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cutover must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cutover must be triggered for the entire migration."
                    },
                    "dbsToTriggerCutoverOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    },
                    "cancel": {
                      "type": "string",
                      "enum": [
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "Cancel",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "True",
                            "description": "Cancel must be triggered for the entire migration."
                          },
                          {
                            "value": "False",
                            "description": "Cancel must not be triggered for the entire migration."
                          }
                        ]
                      },
                      "description": "Indicates if cancel must be triggered for the entire migration."
                    },
                    "dbsToCancelMigrationOn": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                      "x-ms-identifiers": []
                    }
                  }
                }
              },
              "description": "Properties of a migration."
            }
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/migrations": {
      "get": {
        "tags": [
          "Migrations"
        ],
        "operationId": "Migrations_ListByTargetServer",
        "description": "Lists all migrations of a target flexible server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "migrationListFilter",
            "in": "query",
            "required": false,
            "enum": [
              "Active",
              "All"
            ],
            "type": "string",
            "description": "Migration list filter. Indicates if the request should retrieve only active migrations or all migrations. Defaults to Active.",
            "x-ms-enum": {
              "name": "MigrationListFilter",
              "modelAsString": true,
              "values": [
                {
                  "value": "Active",
                  "description": "Only active (in-progress) migrations."
                },
                {
                  "value": "All",
                  "description": "All migrations."
                }
              ]
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "properties": {
                        "description": "Migration properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "migrationId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Identifier of a migration."
                          },
                          "currentStatus": {
                            "readOnly": true,
                            "description": "Current status of a migration.",
                            "type": "object",
                            "properties": {
                              "state": {
                                "readOnly": true,
                                "description": "State of migration.",
                                "enum": [
                                  "InProgress",
                                  "WaitingForUserAction",
                                  "Canceled",
                                  "Failed",
                                  "Succeeded",
                                  "ValidationFailed",
                                  "CleaningUp"
                                ],
                                "type": "string",
                                "x-ms-enum": {
                                  "name": "MigrationState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "InProgress",
                                      "description": "Migration is in progress."
                                    },
                                    {
                                      "value": "WaitingForUserAction",
                                      "description": "Migration is waiting for user action."
                                    },
                                    {
                                      "value": "Canceled",
                                      "description": "Migration has been canceled."
                                    },
                                    {
                                      "value": "Failed",
                                      "description": "Migration has failed."
                                    },
                                    {
                                      "value": "Succeeded",
                                      "description": "Migration has succeeded."
                                    },
                                    {
                                      "value": "ValidationFailed",
                                      "description": "Validation for migration has failed."
                                    },
                                    {
                                      "value": "CleaningUp",
                                      "description": "Migration is cleaning up resources."
                                    }
                                  ]
                                }
                              },
                              "error": {
                                "type": "string",
                                "readOnly": true,
                                "description": "Error message, if any, for the migration state."
                              },
                              "currentSubStateDetails": {
                                "readOnly": true,
                                "description": "Current migration sub state details.",
                                "type": "object",
                                "properties": {
                                  "currentSubState": {
                                    "readOnly": true,
                                    "enum": [
                                      "PerformingPreRequisiteSteps",
                                      "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                      "WaitingForDBsToMigrateSpecification",
                                      "WaitingForTargetDBOverwriteConfirmation",
                                      "WaitingForDataMigrationScheduling",
                                      "WaitingForDataMigrationWindow",
                                      "MigratingData",
                                      "WaitingForCutoverTrigger",
                                      "CompletingMigration",
                                      "Completed",
                                      "CancelingRequestedDBMigrations",
                                      "ValidationInProgress"
                                    ],
                                    "type": "string",
                                    "description": "Substate of migration.",
                                    "x-ms-enum": {
                                      "name": "MigrationSubstate",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "PerformingPreRequisiteSteps",
                                          "description": "Performing pre-requisite steps for migration."
                                        },
                                        {
                                          "value": "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                          "description": "Waiting for logical replication setup request on source database."
                                        },
                                        {
                                          "value": "WaitingForDBsToMigrateSpecification",
                                          "description": "Waiting for databases to migrate specification."
                                        },
                                        {
                                          "value": "WaitingForTargetDBOverwriteConfirmation",
                                          "description": "Waiting for target database overwrite confirmation."
                                        },
                                        {
                                          "value": "WaitingForDataMigrationScheduling",
                                          "description": "Waiting for data migration scheduling."
                                        },
                                        {
                                          "value": "WaitingForDataMigrationWindow",
                                          "description": "Waiting for data migration window."
                                        },
                                        {
                                          "value": "MigratingData",
                                          "description": "Migrating data."
                                        },
                                        {
                                          "value": "WaitingForCutoverTrigger",
                                          "description": "Waiting for cutover trigger."
                                        },
                                        {
                                          "value": "CompletingMigration",
                                          "description": "Completing migration."
                                        },
                                        {
                                          "value": "Completed",
                                          "description": "Migration completed."
                                        },
                                        {
                                          "value": "CancelingRequestedDBMigrations",
                                          "description": "Canceling requested database migrations."
                                        },
                                        {
                                          "value": "ValidationInProgress",
                                          "description": "Validation in progress."
                                        }
                                      ]
                                    }
                                  },
                                  "dbDetails": {
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "object",
                                      "description": "Migration state of a database.",
                                      "properties": {
                                        "databaseName": {
                                          "type": "string",
                                          "description": "Name of database."
                                        },
                                        "migrationState": {
                                          "type": "string",
                                          "description": "Migration state of a database.",
                                          "enum": [
                                            "InProgress",
                                            "WaitingForCutoverTrigger",
                                            "Failed",
                                            "Canceled",
                                            "Succeeded",
                                            "Canceling"
                                          ],
                                          "x-ms-enum": {
                                            "name": "MigrationDatabaseState",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "value": "InProgress",
                                                "description": "Migration is in progress for the database."
                                              },
                                              {
                                                "value": "WaitingForCutoverTrigger",
                                                "description": "Migration is waiting for cutover trigger for the database."
                                              },
                                              {
                                                "value": "Failed",
                                                "description": "Migration has failed for the database."
                                              },
                                              {
                                                "value": "Canceled",
                                                "description": "Migration has been canceled for the database."
                                              },
                                              {
                                                "value": "Succeeded",
                                                "description": "Migration has succeeded for the database."
                                              },
                                              {
                                                "value": "Canceling",
                                                "description": "Migration is canceling for the database."
                                              }
                                            ]
                                          }
                                        },
                                        "migrationOperation": {
                                          "type": "string",
                                          "description": "Migration operation of a database."
                                        },
                                        "startedOn": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "Start time of a migration state."
                                        },
                                        "endedOn": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "End time of a migration state."
                                        },
                                        "fullLoadQueuedTables": {
                                          "format": "int32",
                                          "type": "integer",
                                          "description": "Number of tables queued for the migration of a database."
                                        },
                                        "fullLoadErroredTables": {
                                          "format": "int32",
                                          "type": "integer",
                                          "description": "Number of tables encountering errors during the migration of a database."
                                        },
                                        "fullLoadLoadingTables": {
                                          "format": "int32",
                                          "type": "integer",
                                          "description": "Number of tables loading during the migration of a database."
                                        },
                                        "fullLoadCompletedTables": {
                                          "format": "int32",
                                          "type": "integer",
                                          "description": "Number of tables loaded during the migration of a database."
                                        },
                                        "cdcUpdateCounter": {
                                          "format": "int32",
                                          "type": "integer",
                                          "description": "Change Data Capture update counter."
                                        },
                                        "cdcDeleteCounter": {
                                          "format": "int32",
                                          "type": "integer",
                                          "description": "Change Data Capture delete counter."
                                        },
                                        "cdcInsertCounter": {
                                          "format": "int32",
                                          "type": "integer",
                                          "description": "Change Data Capture insert counter."
                                        },
                                        "appliedChanges": {
                                          "format": "int32",
                                          "type": "integer",
                                          "description": "Change Data Capture applied changes counter."
                                        },
                                        "incomingChanges": {
                                          "format": "int32",
                                          "type": "integer",
                                          "description": "Change Data Capture incoming changes counter."
                                        },
                                        "latency": {
                                          "format": "int32",
                                          "type": "integer",
                                          "description": "Lag in seconds between source and target during online phase."
                                        },
                                        "message": {
                                          "type": "string",
                                          "description": "Error message, if any, for the migration state."
                                        }
                                      }
                                    }
                                  },
                                  "validationDetails": {
                                    "type": "object",
                                    "description": "Details for the validation for migration.",
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "description": "Validation status for migration.",
                                        "enum": [
                                          "Failed",
                                          "Succeeded",
                                          "Warning"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ValidationState",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "Failed",
                                              "description": "Validation has failed."
                                            },
                                            {
                                              "value": "Succeeded",
                                              "description": "Validation has succeeded."
                                            },
                                            {
                                              "value": "Warning",
                                              "description": "Validation has succeeded with warnings."
                                            }
                                          ]
                                        }
                                      },
                                      "validationStartTimeInUtc": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Start time (UTC) for validation."
                                      },
                                      "validationEndTimeInUtc": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "End time (UTC) for validation."
                                      },
                                      "serverLevelValidationDetails": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation summary object.",
                                          "properties": {
                                            "type": {
                                              "type": "string",
                                              "description": "Validation type."
                                            },
                                            "state": {
                                              "type": "string",
                                              "description": "Validation status for migration.",
                                              "enum": [
                                                "Failed",
                                                "Succeeded",
                                                "Warning"
                                              ],
                                              "x-ms-enum": {
                                                "name": "ValidationState",
                                                "modelAsString": true,
                                                "values": [
                                                  {
                                                    "value": "Failed",
                                                    "description": "Validation has failed."
                                                  },
                                                  {
                                                    "value": "Succeeded",
                                                    "description": "Validation has succeeded."
                                                  },
                                                  {
                                                    "value": "Warning",
                                                    "description": "Validation has succeeded with warnings."
                                                  }
                                                ]
                                              }
                                            },
                                            "messages": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "description": "Validation message object.",
                                                "properties": {
                                                  "state": {
                                                    "type": "string",
                                                    "description": "Validation status for migration.",
                                                    "enum": [
                                                      "Failed",
                                                      "Succeeded",
                                                      "Warning"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ValidationState",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "value": "Failed",
                                                          "description": "Validation has failed."
                                                        },
                                                        {
                                                          "value": "Succeeded",
                                                          "description": "Validation has succeeded."
                                                        },
                                                        {
                                                          "value": "Warning",
                                                          "description": "Validation has succeeded with warnings."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "message": {
                                                    "type": "string",
                                                    "description": "Validation message string."
                                                  }
                                                }
                                              },
                                              "description": "Validation messages.",
                                              "x-ms-identifiers": []
                                            }
                                          }
                                        },
                                        "description": "Details of server level validations.",
                                        "x-ms-identifiers": []
                                      },
                                      "dbLevelValidationDetails": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Validation status summary for a database.",
                                          "properties": {
                                            "databaseName": {
                                              "type": "string",
                                              "description": "Name of database."
                                            },
                                            "startedOn": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "Start time of a database level validation."
                                            },
                                            "endedOn": {
                                              "type": "string",
                                              "format": "date-time",
                                              "description": "End time of a database level validation."
                                            },
                                            "summary": {
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "description": "Validation summary object.",
                                                "properties": {
                                                  "type": {
                                                    "type": "string",
                                                    "description": "Validation type."
                                                  },
                                                  "state": {
                                                    "type": "string",
                                                    "description": "Validation status for migration.",
                                                    "enum": [
                                                      "Failed",
                                                      "Succeeded",
                                                      "Warning"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "ValidationState",
                                                      "modelAsString": true,
                                                      "values": [
                                                        {
                                                          "value": "Failed",
                                                          "description": "Validation has failed."
                                                        },
                                                        {
                                                          "value": "Succeeded",
                                                          "description": "Validation has succeeded."
                                                        },
                                                        {
                                                          "value": "Warning",
                                                          "description": "Validation has succeeded with warnings."
                                                        }
                                                      ]
                                                    }
                                                  },
                                                  "messages": {
                                                    "type": "array",
                                                    "items": {
                                                      "type": "object",
                                                      "description": "Validation message object.",
                                                      "properties": {
                                                        "state": {
                                                          "type": "string",
                                                          "description": "Validation status for migration.",
                                                          "enum": [
                                                            "Failed",
                                                            "Succeeded",
                                                            "Warning"
                                                          ],
                                                          "x-ms-enum": {
                                                            "name": "ValidationState",
                                                            "modelAsString": true,
                                                            "values": [
                                                              {
                                                                "value": "Failed",
                                                                "description": "Validation has failed."
                                                              },
                                                              {
                                                                "value": "Succeeded",
                                                                "description": "Validation has succeeded."
                                                              },
                                                              {
                                                                "value": "Warning",
                                                                "description": "Validation has succeeded with warnings."
                                                              }
                                                            ]
                                                          }
                                                        },
                                                        "message": {
                                                          "type": "string",
                                                          "description": "Validation message string."
                                                        }
                                                      }
                                                    },
                                                    "description": "Validation messages.",
                                                    "x-ms-identifiers": []
                                                  }
                                                }
                                              },
                                              "description": "Summary of database level validations.",
                                              "x-ms-identifiers": []
                                            }
                                          }
                                        },
                                        "description": "Details of server level validations.",
                                        "x-ms-identifiers": [
                                          "databaseName"
                                        ]
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "migrationInstanceResourceId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Identifier of the private endpoint migration instance."
                          },
                          "migrationMode": {
                            "description": "Mode used to perform the migration: Online or Offline.",
                            "enum": [
                              "Offline",
                              "Online"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "MigrationMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Offline",
                                  "description": "Offline migration mode."
                                },
                                {
                                  "value": "Online",
                                  "description": "Online migration mode."
                                }
                              ]
                            }
                          },
                          "migrationOption": {
                            "description": "Supported option for a migration.",
                            "enum": [
                              "Validate",
                              "Migrate",
                              "ValidateAndMigrate"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "MigrationOption",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Validate",
                                  "description": "Validate the migration without performing it."
                                },
                                {
                                  "value": "Migrate",
                                  "description": "Perform the migration."
                                },
                                {
                                  "value": "ValidateAndMigrate",
                                  "description": "Validate and perform the migration."
                                }
                              ]
                            }
                          },
                          "sourceType": {
                            "description": "Source server type used for the migration: ApsaraDB_RDS, AWS, AWS_AURORA, AWS_EC2, AWS_RDS, AzureVM, Crunchy_PostgreSQL, Digital_Ocean_Droplets, Digital_Ocean_PostgreSQL, EDB, EDB_Oracle_Server, EDB_PostgreSQL, GCP, GCP_AlloyDB, GCP_CloudSQL, GCP_Compute, Heroku_PostgreSQL, Huawei_Compute, Huawei_RDS, OnPremises, PostgreSQLCosmosDB, PostgreSQLFlexibleServer, PostgreSQLSingleServer, or Supabase_PostgreSQL",
                            "enum": [
                              "OnPremises",
                              "AWS",
                              "GCP",
                              "AzureVM",
                              "PostgreSQLSingleServer",
                              "AWS_RDS",
                              "AWS_AURORA",
                              "AWS_EC2",
                              "GCP_CloudSQL",
                              "GCP_AlloyDB",
                              "GCP_Compute",
                              "EDB",
                              "EDB_Oracle_Server",
                              "EDB_PostgreSQL",
                              "PostgreSQLFlexibleServer",
                              "PostgreSQLCosmosDB",
                              "Huawei_RDS",
                              "Huawei_Compute",
                              "Heroku_PostgreSQL",
                              "Crunchy_PostgreSQL",
                              "ApsaraDB_RDS",
                              "Digital_Ocean_Droplets",
                              "Digital_Ocean_PostgreSQL",
                              "Supabase_PostgreSQL"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "SourceType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "OnPremises",
                                  "description": "On-premises PostgreSQL server."
                                },
                                {
                                  "value": "AWS",
                                  "description": "Amazon Web Services PostgreSQL server."
                                },
                                {
                                  "value": "GCP",
                                  "description": "Google Cloud Platform PostgreSQL server."
                                },
                                {
                                  "value": "AzureVM",
                                  "description": "Azure Virtual Machine PostgreSQL server."
                                },
                                {
                                  "value": "PostgreSQLSingleServer",
                                  "description": "Azure Database for PostgreSQL single server."
                                },
                                {
                                  "value": "AWS_RDS",
                                  "description": "Amazon RDS for PostgreSQL."
                                },
                                {
                                  "value": "AWS_AURORA",
                                  "description": "Amazon Aurora for PostgreSQL."
                                },
                                {
                                  "value": "AWS_EC2",
                                  "description": "Amazon EC2 for PostgreSQL."
                                },
                                {
                                  "value": "GCP_CloudSQL",
                                  "description": "Google Cloud SQL for PostgreSQL."
                                },
                                {
                                  "value": "GCP_AlloyDB",
                                  "description": "Google Cloud AlloyDB for PostgreSQL."
                                },
                                {
                                  "value": "GCP_Compute",
                                  "description": "Google Compute Engine for PostgreSQL."
                                },
                                {
                                  "value": "EDB",
                                  "description": "EnterpriseDB PostgreSQL server."
                                },
                                {
                                  "value": "EDB_Oracle_Server",
                                  "description": "EnterpriseDB Oracle Server."
                                },
                                {
                                  "value": "EDB_PostgreSQL",
                                  "description": "EnterpriseDB PostgreSQL server."
                                },
                                {
                                  "value": "PostgreSQLFlexibleServer",
                                  "description": "Azure Database for PostgreSQL flexible server."
                                },
                                {
                                  "value": "PostgreSQLCosmosDB",
                                  "description": ".NET Cosmos DB for PostgreSQL"
                                },
                                {
                                  "value": "Huawei_RDS",
                                  "description": "Huawei RDS for PostgreSQL"
                                },
                                {
                                  "value": "Huawei_Compute",
                                  "description": "Huawei Compute for PostgreSQL"
                                },
                                {
                                  "value": "Heroku_PostgreSQL",
                                  "description": "Heroku PostgreSQL"
                                },
                                {
                                  "value": "Crunchy_PostgreSQL",
                                  "description": "Crunchy PostgreSQL"
                                },
                                {
                                  "value": "ApsaraDB_RDS",
                                  "description": "ApsaraDB RDS for PostgreSQL"
                                },
                                {
                                  "value": "Digital_Ocean_Droplets",
                                  "description": "Digital Ocean Droplets for PostgreSQL"
                                },
                                {
                                  "value": "Digital_Ocean_PostgreSQL",
                                  "description": "Digital Ocean PostgreSQL"
                                },
                                {
                                  "value": "Supabase_PostgreSQL",
                                  "description": "Supabase PostgreSQL"
                                }
                              ]
                            }
                          },
                          "sslMode": {
                            "description": "SSL mode used by a migration. Default SSL mode for 'PostgreSQLSingleServer' is 'VerifyFull'. Default SSL mode for other source types is 'Prefer'.",
                            "enum": [
                              "Prefer",
                              "Require",
                              "VerifyCA",
                              "VerifyFull"
                            ],
                            "type": "string",
                            "x-ms-enum": {
                              "name": "SslMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Prefer",
                                  "description": "Prefer SSL connection. If the server does not support SSL, the connection will be established without SSL."
                                },
                                {
                                  "value": "Require",
                                  "description": "Require SSL connection. If the server does not support SSL, the connection will fail."
                                },
                                {
                                  "value": "VerifyCA",
                                  "description": "Require SSL connection and verify the server certificate against the CA certificate."
                                },
                                {
                                  "value": "VerifyFull",
                                  "description": "Require SSL connection, verify the server certificate against the CA certificate, and verify that the server hostname matches the certificate."
                                }
                              ]
                            }
                          },
                          "sourceDbServerMetadata": {
                            "readOnly": true,
                            "description": "Metadata of source database server.",
                            "type": "object",
                            "properties": {
                              "location": {
                                "type": "string",
                                "description": "Location of database server.",
                                "x-ms-mutability": [
                                  "read"
                                ],
                                "readOnly": true
                              },
                              "version": {
                                "type": "string",
                                "description": "Major version of PostgreSQL database engine."
                              },
                              "storageMb": {
                                "format": "int32",
                                "type": "integer",
                                "description": "Storage size (in MB) for database server."
                              },
                              "sku": {
                                "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                                  },
                                  "tier": {
                                    "type": "string",
                                    "description": "Tier of the compute assigned to a server.",
                                    "enum": [
                                      "Burstable",
                                      "GeneralPurpose",
                                      "MemoryOptimized"
                                    ],
                                    "x-ms-enum": {
                                      "name": "SkuTier",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "targetDbServerMetadata": {
                            "readOnly": true,
                            "description": "Metadata of target database server.",
                            "type": "object",
                            "properties": {
                              "location": {
                                "type": "string",
                                "description": "Location of database server.",
                                "x-ms-mutability": [
                                  "read"
                                ],
                                "readOnly": true
                              },
                              "version": {
                                "type": "string",
                                "description": "Major version of PostgreSQL database engine."
                              },
                              "storageMb": {
                                "format": "int32",
                                "type": "integer",
                                "description": "Storage size (in MB) for database server."
                              },
                              "sku": {
                                "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                                "type": "object",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                                  },
                                  "tier": {
                                    "type": "string",
                                    "description": "Tier of the compute assigned to a server.",
                                    "enum": [
                                      "Burstable",
                                      "GeneralPurpose",
                                      "MemoryOptimized"
                                    ],
                                    "x-ms-enum": {
                                      "name": "SkuTier",
                                      "modelAsString": true
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "sourceDbServerResourceId": {
                            "type": "string",
                            "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
                          },
                          "sourceDbServerFullyQualifiedDomainName": {
                            "type": "string",
                            "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
                          },
                          "targetDbServerResourceId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Identifier of the target database server resource."
                          },
                          "targetDbServerFullyQualifiedDomainName": {
                            "type": "string",
                            "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
                          },
                          "secretParameters": {
                            "description": "Migration secret parameters.",
                            "required": [
                              "adminCredentials"
                            ],
                            "type": "object",
                            "properties": {
                              "adminCredentials": {
                                "x-ms-secret": true,
                                "x-ms-external": true,
                                "description": "Credentials of administrator users for source and target servers.",
                                "type": "object",
                                "required": [
                                  "sourceServerPassword",
                                  "targetServerPassword"
                                ],
                                "properties": {
                                  "sourceServerPassword": {
                                    "type": "string",
                                    "x-ms-secret": true,
                                    "x-ms-external": true,
                                    "x-ms-mutability": [
                                      "create",
                                      "update"
                                    ],
                                    "description": "Password for the user of the source server."
                                  },
                                  "targetServerPassword": {
                                    "type": "string",
                                    "x-ms-secret": true,
                                    "x-ms-external": true,
                                    "x-ms-mutability": [
                                      "create",
                                      "update"
                                    ],
                                    "description": "Password for the user of the target server."
                                  }
                                }
                              },
                              "sourceServerUsername": {
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
                              },
                              "targetServerUsername": {
                                "type": "string",
                                "x-ms-mutability": [
                                  "create",
                                  "update"
                                ],
                                "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
                              }
                            }
                          },
                          "dbsToMigrate": {
                            "maxItems": 50,
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "Names of databases to migrate.",
                            "x-ms-identifiers": []
                          },
                          "setupLogicalReplicationOnSourceDbIfNeeded": {
                            "type": "string",
                            "enum": [
                              "True",
                              "False"
                            ],
                            "x-ms-enum": {
                              "name": "LogicalReplicationOnSourceServer",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "True",
                                  "description": "Logical replication will be set up on the source server."
                                },
                                {
                                  "value": "False",
                                  "description": "Logical replication will not be set up on the source server."
                                }
                              ]
                            },
                            "description": "Indicates whether to setup logical replication on source server, if needed."
                          },
                          "overwriteDbsInTarget": {
                            "type": "string",
                            "enum": [
                              "True",
                              "False"
                            ],
                            "x-ms-enum": {
                              "name": "OverwriteDatabasesOnTargetServer",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "True",
                                  "description": "Databases on the target server can be overwritten when already present."
                                },
                                {
                                  "value": "False",
                                  "description": "Databases on the target server cannot be overwritten when already present."
                                }
                              ]
                            },
                            "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
                          },
                          "migrationWindowStartTimeInUtc": {
                            "format": "date-time",
                            "type": "string",
                            "description": "Start time (UTC) for migration window."
                          },
                          "migrationWindowEndTimeInUtc": {
                            "format": "date-time",
                            "type": "string",
                            "description": "End time (UTC) for migration window."
                          },
                          "migrateRoles": {
                            "type": "string",
                            "enum": [
                              "True",
                              "False"
                            ],
                            "x-ms-enum": {
                              "name": "MigrateRolesAndPermissions",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "True",
                                  "description": "Roles and permissions will be migrated."
                                },
                                {
                                  "value": "False",
                                  "description": "Roles and permissions will not be migrated."
                                }
                              ]
                            },
                            "description": "Indicates if roles and permissions must be migrated."
                          },
                          "startDataMigration": {
                            "type": "string",
                            "enum": [
                              "True",
                              "False"
                            ],
                            "x-ms-enum": {
                              "name": "StartDataMigration",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "True",
                                  "description": "Data migration must start right away."
                                },
                                {
                                  "value": "False",
                                  "description": "Data migration must not start right away."
                                }
                              ]
                            },
                            "description": "Indicates if data migration must start right away."
                          },
                          "triggerCutover": {
                            "type": "string",
                            "enum": [
                              "True",
                              "False"
                            ],
                            "x-ms-enum": {
                              "name": "TriggerCutover",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "True",
                                  "description": "Cutover must be triggered for the entire migration."
                                },
                                {
                                  "value": "False",
                                  "description": "Cutover must not be triggered for the entire migration."
                                }
                              ]
                            },
                            "description": "Indicates if cutover must be triggered for the entire migration."
                          },
                          "dbsToTriggerCutoverOn": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                            "x-ms-identifiers": []
                          },
                          "cancel": {
                            "type": "string",
                            "enum": [
                              "True",
                              "False"
                            ],
                            "x-ms-enum": {
                              "name": "Cancel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "True",
                                  "description": "Cancel must be triggered for the entire migration."
                                },
                                {
                                  "value": "False",
                                  "description": "Cancel must not be triggered for the entire migration."
                                }
                              ]
                            },
                            "description": "Indicates if cancel must be triggered for the entire migration."
                          },
                          "dbsToCancelMigrationOn": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    },
                    "description": "Properties of a migration."
                  },
                  "readOnly": true,
                  "description": "List of migrations.",
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "description": "Link used to get the next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "List of migrations."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/checkMigrationNameAvailability": {
      "post": {
        "summary": "Check the validity and availability of the given name, to assign it to a new migration.",
        "description": "Checks if a proposed migration name is valid and available.",
        "tags": [
          "Custom operation",
          "POST"
        ],
        "operationId": "Migrations_CheckNameAvailability",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "required": [
                "name",
                "type"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the migration to check for validity and availability."
                },
                "type": {
                  "type": "string",
                  "description": "Type of resource."
                },
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Indicates if the migration name is available.",
                  "readOnly": true
                },
                "reason": {
                  "description": "Migration name availability reason.",
                  "readOnly": true,
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "MigrationNameAvailabilityReason",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Invalid",
                        "description": "Migration name is invalid."
                      },
                      {
                        "value": "AlreadyExists",
                        "description": "Migration name already exists."
                      }
                    ]
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Migration name availability message.",
                  "readOnly": true
                }
              },
              "description": "Availability of a migration name."
            },
            "description": "Parameters required to check if a migration name is valid and available."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "required": [
                "name",
                "type"
              ],
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the migration to check for validity and availability."
                },
                "type": {
                  "type": "string",
                  "description": "Type of resource."
                },
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Indicates if the migration name is available.",
                  "readOnly": true
                },
                "reason": {
                  "description": "Migration name availability reason.",
                  "readOnly": true,
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "MigrationNameAvailabilityReason",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Invalid",
                        "description": "Migration name is invalid."
                      },
                      {
                        "value": "AlreadyExists",
                        "description": "Migration name already exists."
                      }
                    ]
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Migration name availability message.",
                  "readOnly": true
                }
              },
              "description": "Availability of a migration name."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/checkNameAvailability": {
      "post": {
        "tags": [
          "NameAvailability"
        ],
        "operationId": "NameAvailability_CheckGlobally",
        "description": "Checks the validity and availability of the given name, to assign it to a new server or to use it as the base name of a new pair of virtual endpoints.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The check availability request body.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the resource for which availability needs to be checked."
                },
                "type": {
                  "type": "string",
                  "description": "The resource type."
                }
              }
            },
            "description": "Parameters required to check if a given name is valid and available to assign it to a new server or to use it as the base name of a new pair of virtual endpoints."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Indicates if the resource name is available."
                },
                "reason": {
                  "type": "string",
                  "description": "The reason why the given name is not available.",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "CheckNameAvailabilityReason",
                    "modelAsString": true
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Detailed reason why the given name is available."
                },
                "name": {
                  "type": "string",
                  "description": "Name for which validity and availability was checked.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Type of resource. It can be 'Microsoft.DBforPostgreSQL/flexibleServers' or 'Microsoft.DBforPostgreSQL/flexibleServers/virtualendpoints'.",
                  "readOnly": true
                }
              },
              "description": "Availability of a name."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/checkNameAvailability": {
      "post": {
        "tags": [
          "NameAvailability"
        ],
        "operationId": "NameAvailability_CheckWithLocation",
        "description": "Check the availability of name for resource",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the location.",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The check availability request body.",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of the resource for which availability needs to be checked."
                },
                "type": {
                  "type": "string",
                  "description": "The resource type."
                }
              }
            },
            "description": "Parameters required to check if a given name is valid and available to assign it to a new server or to use it as the base name of a new pair of virtual endpoints."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "nameAvailable": {
                  "type": "boolean",
                  "description": "Indicates if the resource name is available."
                },
                "reason": {
                  "type": "string",
                  "description": "The reason why the given name is not available.",
                  "enum": [
                    "Invalid",
                    "AlreadyExists"
                  ],
                  "x-ms-enum": {
                    "name": "CheckNameAvailabilityReason",
                    "modelAsString": true
                  }
                },
                "message": {
                  "type": "string",
                  "description": "Detailed reason why the given name is available."
                },
                "name": {
                  "type": "string",
                  "description": "Name for which validity and availability was checked.",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "Type of resource. It can be 'Microsoft.DBforPostgreSQL/flexibleServers' or 'Microsoft.DBforPostgreSQL/flexibleServers/virtualendpoints'.",
                  "readOnly": true
                }
              },
              "description": "Availability of a name."
            }
          }
        }
      }
    },
    "/providers/Microsoft.DBforPostgreSQL/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "operationId": "Operations_List",
        "description": "Lists all available REST API operations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "List of resource provider operations.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Collection of available operation details",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the operation being performed on this particular object."
                      },
                      "display": {
                        "readOnly": true,
                        "description": "Localized display information for this particular operation or action.",
                        "type": "object",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Name of the resource provider."
                          },
                          "resource": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Type of resource on which the operation is performed."
                          },
                          "operation": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Name of the operation."
                          },
                          "description": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Description of the operation."
                          }
                        }
                      },
                      "isDataAction": {
                        "description": "Indicates if the operation is a data action.",
                        "type": "boolean"
                      },
                      "origin": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Intended executor of the operation.",
                        "enum": [
                          "NotSpecified",
                          "user",
                          "system"
                        ],
                        "x-ms-enum": {
                          "name": "OperationOrigin",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "NotSpecified",
                              "description": "The origin is not specified."
                            },
                            {
                              "value": "user",
                              "description": "The operation is initiated by a user."
                            },
                            {
                              "value": "system",
                              "description": "The operation is initiated by the system."
                            }
                          ]
                        }
                      },
                      "properties": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "object"
                        },
                        "readOnly": true,
                        "x-ms-client-flatten": false,
                        "description": "Additional descriptions for the operation."
                      }
                    },
                    "description": "REST API operation definition."
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "description": "Link used to get the next page of results.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.DBforPostgreSQL/getPrivateDnsZoneSuffix": {
      "post": {
        "tags": [
          "PrivateDnsZoneSuffix"
        ],
        "operationId": "PrivateDnsZoneSuffix_Get",
        "description": "Gets the private DNS zone suffix.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "string",
              "description": "Private DNS suffix."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*\\.[a-fA-F0-9\\-]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "The private endpoint connection resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "type": "array",
                      "description": "The group ids for the private endpoint resource.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The private endpoint resource.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Approves or rejects a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Update",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*\\.[a-fA-F0-9\\-]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The private endpoint connection resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupIds": {
                      "type": "array",
                      "description": "The group ids for the private endpoint resource.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "privateEndpoint": {
                      "description": "The private endpoint resource.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The ARM identifier for private endpoint.",
                          "readOnly": true
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                          "type": "string",
                          "enum": [
                            "Pending",
                            "Approved",
                            "Rejected"
                          ],
                          "x-ms-enum": {
                            "name": "PrivateEndpointServiceConnectionStatus",
                            "modelAsString": true
                          }
                        },
                        "description": {
                          "type": "string",
                          "description": "The reason for approval/rejection of the connection."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The provisioning state of the private endpoint connection resource.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Creating",
                        "Deleting",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "name": "PrivateEndpointConnectionProvisioningState",
                        "modelAsString": true
                      },
                      "readOnly": true
                    }
                  },
                  "required": [
                    "privateLinkServiceConnectionState"
                  ]
                }
              }
            },
            "description": "Parameters required to update a private endpoint connection."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Delete",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "description": "The name of the private endpoint connection.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z][a-zA-Z0-9-]*\\.[a-fA-F0-9\\-]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Lists all private endpoint connections on a server.",
        "operationId": "PrivateEndpointConnections_ListByServer",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "List of private endpoint connections.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The private endpoint connection resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupIds": {
                            "type": "array",
                            "description": "The group ids for the private endpoint resource.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "privateEndpoint": {
                            "description": "The private endpoint resource.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The ARM identifier for private endpoint.",
                                "readOnly": true
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "A collection of information about the state of the connection between service consumer and provider.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                "type": "string",
                                "enum": [
                                  "Pending",
                                  "Approved",
                                  "Rejected"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointServiceConnectionStatus",
                                  "modelAsString": true
                                }
                              },
                              "description": {
                                "type": "string",
                                "description": "The reason for approval/rejection of the connection."
                              },
                              "actionsRequired": {
                                "type": "string",
                                "description": "A message indicating if changes on the service provider require any updates on the consumer."
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The provisioning state of the private endpoint connection resource.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Creating",
                              "Deleting",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointConnectionProvisioningState",
                              "modelAsString": true
                            },
                            "readOnly": true
                          }
                        },
                        "required": [
                          "privateLinkServiceConnectionState"
                        ]
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link used to get the next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the private link resources for PostgreSQL server.",
        "operationId": "PrivateLinkResources_ListByServer",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "A list of private link resources",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Array of results.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "A private link resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "type": "string",
                            "description": "The private link resource group id.",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "type": "array",
                            "description": "The private link resource required member names.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "type": "array",
                            "description": "The private link resource private link DNS zone name.",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/privateLinkResources/{groupName}": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets a private link resource for PostgreSQL server.",
        "operationId": "PrivateLinkResources_Get",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource.",
            "required": true,
            "type": "string",
            "pattern": "^.*$"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "A private link resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "type": "string",
                      "description": "The private link resource group id.",
                      "readOnly": true
                    },
                    "requiredMembers": {
                      "type": "array",
                      "description": "The private link resource required member names.",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "requiredZoneNames": {
                      "type": "array",
                      "description": "The private link resource private link DNS zone name.",
                      "items": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/resourceType/flexibleServers/usages": {
      "get": {
        "tags": [
          "QuotaUsagesForFlexibleServers"
        ],
        "operationId": "QuotaUsages_List",
        "description": "Get quota usages at specified location in a given subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the location.",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "description": "A list of quota usages.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of quota usage for servers",
                        "type": "object",
                        "properties": {
                          "value": {
                            "type": "string",
                            "description": "Name value"
                          },
                          "localizedValue": {
                            "type": "string",
                            "description": "Localized name"
                          }
                        }
                      },
                      "limit": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Quota limit"
                      },
                      "unit": {
                        "type": "string",
                        "description": "Quota unit",
                        "default": "Count"
                      },
                      "currentValue": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Current Quota usage value"
                      },
                      "id": {
                        "type": "string",
                        "description": "Fully qualified ARM resource Id"
                      }
                    },
                    "description": "Quota usage for servers"
                  },
                  "x-ms-identifiers": [
                    "name"
                  ],
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to retrieve next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "Capability for the PostgreSQL server"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/replicas": {
      "get": {
        "tags": [
          "Replicas"
        ],
        "operationId": "Replicas_ListByServer",
        "description": "Lists all read replicas of a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "sku": {
                        "description": "Compute tier and size of a server.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name by which is known a given compute size assigned to a server."
                          },
                          "tier": {
                            "type": "string",
                            "description": "Tier of the compute assigned to a server.",
                            "enum": [
                              "Burstable",
                              "GeneralPurpose",
                              "MemoryOptimized"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Burstable",
                                  "description": "Cost-effective tier for infrequent CPU usage, ideal for development and testing workloads with low performance requirements."
                                },
                                {
                                  "value": "GeneralPurpose",
                                  "description": "Balanced compute and memory for most workloads, offering scalable performance and I/O throughput."
                                },
                                {
                                  "value": "MemoryOptimized",
                                  "description": "High memory-to-core ratio for demanding workloads needing fast in-memory processing and high concurrency."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "tier"
                        ]
                      },
                      "identity": {
                        "description": "User assigned managed identities assigned to the server.",
                        "type": "object",
                        "properties": {
                          "userAssignedIdentities": {
                            "description": "Map of user assigned managed identities.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "User assigned managed identity associated with a server.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                                },
                                "clientId": {
                                  "type": "string",
                                  "description": "Identifier of the client of the service principal associated to the user assigned managed identity."
                                }
                              }
                            }
                          },
                          "principalId": {
                            "type": "string",
                            "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                          },
                          "type": {
                            "type": "string",
                            "description": "Types of identities associated with a server.",
                            "enum": [
                              "None",
                              "UserAssigned",
                              "SystemAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "None",
                                  "description": "No managed identity is assigned to the server."
                                },
                                {
                                  "value": "UserAssigned",
                                  "description": "One or more managed identities provided by the user are assigned to the server."
                                },
                                {
                                  "value": "SystemAssigned",
                                  "description": "Azure automatically creates and manages the identity associated to the lifecycle of the server."
                                },
                                {
                                  "value": "SystemAssigned,UserAssigned",
                                  "description": "Both system-assigned and user-assigned identities are assigned to the server."
                                }
                              ]
                            }
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "Identifier of the tenant of a server.",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of a server.",
                        "type": "object",
                        "properties": {
                          "administratorLogin": {
                            "type": "string",
                            "description": "Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "administratorLoginPassword": {
                            "type": "string",
                            "description": "Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.",
                            "x-ms-secret": true,
                            "format": "password",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "version": {
                            "description": "Major version of PostgreSQL database engine.",
                            "type": "string",
                            "enum": [
                              "18",
                              "17",
                              "16",
                              "15",
                              "14",
                              "13",
                              "12",
                              "11"
                            ],
                            "x-ms-enum": {
                              "name": "PostgresMajorVersion",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "18",
                                  "description": "PostgreSQL 18."
                                },
                                {
                                  "value": "17",
                                  "description": "PostgreSQL 17."
                                },
                                {
                                  "value": "16",
                                  "description": "PostgreSQL 16."
                                },
                                {
                                  "value": "15",
                                  "description": "PostgreSQL 15."
                                },
                                {
                                  "value": "14",
                                  "description": "PostgreSQL 14."
                                },
                                {
                                  "value": "13",
                                  "description": "PostgreSQL 13."
                                },
                                {
                                  "value": "12",
                                  "description": "PostgreSQL 12."
                                },
                                {
                                  "value": "11",
                                  "description": "PostgreSQL 11."
                                }
                              ]
                            }
                          },
                          "minorVersion": {
                            "type": "string",
                            "description": "Minor version of PostgreSQL database engine.",
                            "readOnly": true
                          },
                          "state": {
                            "type": "string",
                            "description": "Possible states of a server.",
                            "readOnly": true,
                            "enum": [
                              "Ready",
                              "Dropping",
                              "Disabled",
                              "Starting",
                              "Stopping",
                              "Stopped",
                              "Updating",
                              "Restarting",
                              "Inaccessible",
                              "Provisioning"
                            ],
                            "x-ms-enum": {
                              "name": "ServerState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Ready",
                                  "description": "Server is healthy and not undergoing any operations at the management or control plane level. This doesn't mean that the server is fully operational at the data plane level."
                                },
                                {
                                  "value": "Dropping",
                                  "description": "Server is being deleted."
                                },
                                {
                                  "value": "Disabled",
                                  "description": "Server is disabled. Typical reasons include: the subscription on which the server is deployed is explicitly disabled or canceled by the administrator, the spending limit has been reached, or the bill is past due. May also happen when the server is being moved to another resource group or subscription."
                                },
                                {
                                  "value": "Starting",
                                  "description": "PostgreSQL database engine is being restarted."
                                },
                                {
                                  "value": "Stopping",
                                  "description": "Compute resources associated with the server are being stopped and deallocated. If the server has high availability enabled, the compute resources of the standby server are also stopped and deallocated."
                                },
                                {
                                  "value": "Stopped",
                                  "description": "Compute resources associated with the server are being stopped and deallocated."
                                },
                                {
                                  "value": "Updating",
                                  "description": "Server is undergoing some changes which may or may not impact the availability of the PostgreSQL database engine. For example, the compute resources of the server are being scaled up or down, which may cause temporary unavailability of the database engine. Or, for example, a firewall rule is being added or removed, which doesn't cause any unavailability of the database engine."
                                },
                                {
                                  "value": "Restarting",
                                  "description": "PostgreSQL database engine is being restarted."
                                },
                                {
                                  "value": "Inaccessible",
                                  "description": "Server isn't accessible, because the key provided to encrypt and decrypt the data is in invalid state."
                                },
                                {
                                  "value": "Provisioning",
                                  "description": "Server is in the process of being created."
                                }
                              ]
                            }
                          },
                          "fullyQualifiedDomainName": {
                            "type": "string",
                            "description": "Fully qualified domain name of a server.",
                            "readOnly": true
                          },
                          "storage": {
                            "default": null,
                            "description": "Storage properties of a server.",
                            "type": "object",
                            "properties": {
                              "storageSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Size of storage assigned to a server."
                              },
                              "autoGrow": {
                                "type": "string",
                                "description": "Flag to enable or disable the automatic growth of storage size of a server when available space is nearing zero and conditions allow for automatically growing storage size.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageAutoGrow",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Server should automatically grow storage size when available space is nearing zero and conditions allow for automatically growing storage size."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Server should not automatically grow storage size when available space is nearing zero."
                                    }
                                  ]
                                }
                              },
                              "tier": {
                                "type": "string",
                                "description": "Storage tier of a server.",
                                "enum": [
                                  "P1",
                                  "P2",
                                  "P3",
                                  "P4",
                                  "P6",
                                  "P10",
                                  "P15",
                                  "P20",
                                  "P30",
                                  "P40",
                                  "P50",
                                  "P60",
                                  "P70",
                                  "P80"
                                ],
                                "x-ms-enum": {
                                  "name": "AzureManagedDiskPerformanceTier",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "P1",
                                      "description": "Entry-level SSD for minimal IOPS, ideal for light development or testing workloads."
                                    },
                                    {
                                      "value": "P2",
                                      "description": "Slightly higher IOPS for small-scale applications needing consistent low latency."
                                    },
                                    {
                                      "value": "P3",
                                      "description": "Balanced performance for basic production workloads with moderate throughput."
                                    },
                                    {
                                      "value": "P4",
                                      "description": "Enhanced IOPS for growing apps with predictable performance needs."
                                    },
                                    {
                                      "value": "P6",
                                      "description": "Mid-tier SSD for steady workloads requiring reliable throughput and latency."
                                    },
                                    {
                                      "value": "P10",
                                      "description": "Popular choice for general-purpose production workloads with scalable performance."
                                    },
                                    {
                                      "value": "P15",
                                      "description": "High IOPS tier for demanding apps with frequent read/write operations."
                                    },
                                    {
                                      "value": "P20",
                                      "description": "Entry point for high-performance Solid State Disks (SSDs), suitable for small-scale I/O-intensive workloads."
                                    },
                                    {
                                      "value": "P30",
                                      "description": "Balanced tier for moderate throughput and latency-sensitive applications."
                                    },
                                    {
                                      "value": "P40",
                                      "description": "Enhanced performance for growing production workloads with consistent IOPS demands."
                                    },
                                    {
                                      "value": "P50",
                                      "description": "Optimized for enterprise-grade applications needing sustained high throughput."
                                    },
                                    {
                                      "value": "P60",
                                      "description": "High-capacity tier for large databases and analytics workloads with elevated IOPS."
                                    },
                                    {
                                      "value": "P70",
                                      "description": "Designed for mission-critical systems requiring ultra-low latency and high concurrency."
                                    },
                                    {
                                      "value": "P80",
                                      "description": "Top-tier SSD for maximum IOPS and throughput, ideal for the most demanding workloads."
                                    }
                                  ]
                                }
                              },
                              "iops": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                              },
                              "throughput": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Premium_LRS",
                                  "PremiumV2_LRS",
                                  "UltraSSD_LRS"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Premium_LRS",
                                      "description": "Standard Solid State Disk (SSD) backed storage offering consistent performance for general purpose workloads."
                                    },
                                    {
                                      "value": "PremiumV2_LRS",
                                      "description": "Next generation Solid State Disk (SSD) storage with improved scalability and performance for demanding enterprise workloads."
                                    },
                                    {
                                      "value": "UltraSSD_LRS",
                                      "description": "High-end Solid State Disk (SSD) storage designed for extreme IOPS and latency-sensitive applications."
                                    }
                                  ]
                                },
                                "description": "Type of storage assigned to a server. Allowed values are Premium_LRS, PremiumV2_LRS, or UltraSSD_LRS. If not specified, it defaults to Premium_LRS."
                              }
                            }
                          },
                          "authConfig": {
                            "default": null,
                            "description": "Authentication configuration properties of a server.",
                            "type": "object",
                            "properties": {
                              "activeDirectoryAuth": {
                                "type": "string",
                                "description": "Indicates if the server supports Microsoft Entra authentication.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "MicrosoftEntraAuth",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Server supports Microsoft Entra authentication."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Server doesn't support Microsoft Entra authentication."
                                    }
                                  ]
                                }
                              },
                              "passwordAuth": {
                                "type": "string",
                                "default": "Enabled",
                                "description": "Indicates if the server supports password based authentication.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "PasswordBasedAuth",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Server supports password based authentication."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Server doesn't support password based authentication."
                                    }
                                  ]
                                }
                              },
                              "tenantId": {
                                "type": "string",
                                "default": "",
                                "description": "Identifier of the tenant of the delegated resource."
                              }
                            }
                          },
                          "dataEncryption": {
                            "default": null,
                            "description": "Data encryption properties of a server.",
                            "type": "object",
                            "properties": {
                              "primaryKeyURI": {
                                "type": "string",
                                "description": "URI of the key in Azure Key Vault used for data encryption of the primary storage associated to a server."
                              },
                              "primaryUserAssignedIdentityId": {
                                "type": "string",
                                "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the primary storage associated to a server."
                              },
                              "geoBackupKeyURI": {
                                "type": "string",
                                "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                              },
                              "geoBackupUserAssignedIdentityId": {
                                "type": "string",
                                "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                              },
                              "type": {
                                "type": "string",
                                "description": "Data encryption type used by a server.",
                                "enum": [
                                  "SystemManaged",
                                  "AzureKeyVault"
                                ],
                                "x-ms-enum": {
                                  "name": "DataEncryptionType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "SystemManaged",
                                      "description": "Encryption managed by Azure using platform managed keys for simplicity and compliance."
                                    },
                                    {
                                      "value": "AzureKeyVault",
                                      "description": "Encryption using customer managed keys stored in Azure Key Vault for enhanced control and security."
                                    }
                                  ]
                                }
                              },
                              "primaryEncryptionKeyStatus": {
                                "type": "string",
                                "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the primary storage associated to the server.",
                                "x-ms-mutability": [
                                  "read"
                                ],
                                "enum": [
                                  "Valid",
                                  "Invalid"
                                ],
                                "x-ms-enum": {
                                  "name": "EncryptionKeyStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Valid",
                                      "description": "Key is valid and can be used for encryption."
                                    },
                                    {
                                      "value": "Invalid",
                                      "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                                    }
                                  ]
                                }
                              },
                              "geoBackupEncryptionKeyStatus": {
                                "type": "string",
                                "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the geographically redundant storage associated to the server when it is configured to support geographically redundant backups.",
                                "x-ms-mutability": [
                                  "read"
                                ],
                                "enum": [
                                  "Valid",
                                  "Invalid"
                                ],
                                "x-ms-enum": {
                                  "name": "EncryptionKeyStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Valid",
                                      "description": "Key is valid and can be used for encryption."
                                    },
                                    {
                                      "value": "Invalid",
                                      "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "backup": {
                            "default": null,
                            "description": "Backup properties of a server.",
                            "type": "object",
                            "properties": {
                              "backupRetentionDays": {
                                "type": "integer",
                                "format": "int32",
                                "default": 7,
                                "description": "Backup retention days for the server."
                              },
                              "geoRedundantBackup": {
                                "type": "string",
                                "default": "Disabled",
                                "description": "Indicates if the server is configured to create geographically redundant backups.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "GeographicallyRedundantBackup",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Server is configured to create geographically redundant backups."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Server is not configured to create geographically redundant backups."
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "earliestRestoreDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Earliest restore point time (ISO8601 format) for a server.",
                                "readOnly": true
                              }
                            }
                          },
                          "network": {
                            "default": null,
                            "description": "Network properties of a server. Only required if you want your server to be integrated into a virtual network provided by customer.",
                            "type": "object",
                            "properties": {
                              "publicNetworkAccess": {
                                "type": "string",
                                "description": "Indicates if public network access is enabled or not. This is only supported for servers that are not integrated into a virtual network which is owned and provided by customer when server is deployed.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "ServerPublicNetworkAccessState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Public network access is enabled. This allows the server to be accessed from the public internet, provided the necessary firewall rule that allows incoming traffic originating from the connecting client is in place. This is compatible with the use of private endpoints to connect to this server."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Public network access is disabled. This means the server cannot be accessed from the public internet, but only via private endpoints."
                                    }
                                  ]
                                }
                              },
                              "delegatedSubnetResourceId": {
                                "type": "string",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                },
                                "description": "Resource identifier of the delegated subnet. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                              },
                              "privateDnsZoneArmResourceId": {
                                "type": "string",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/privateDnsZones"
                                    }
                                  ]
                                },
                                "description": "Identifier of the private DNS zone. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                              }
                            }
                          },
                          "highAvailability": {
                            "default": null,
                            "description": "High availability properties of a server.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "type": "string",
                                "default": "Disabled",
                                "description": "High availability mode for a server.",
                                "enum": [
                                  "Disabled",
                                  "ZoneRedundant",
                                  "SameZone"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Disabled",
                                      "description": "High availability is disabled for the server."
                                    },
                                    {
                                      "value": "ZoneRedundant",
                                      "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                                    },
                                    {
                                      "value": "SameZone",
                                      "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                                    }
                                  ]
                                }
                              },
                              "state": {
                                "type": "string",
                                "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
                                "enum": [
                                  "NotEnabled",
                                  "CreatingStandby",
                                  "ReplicatingData",
                                  "FailingOver",
                                  "Healthy",
                                  "RemovingStandby"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "NotEnabled",
                                      "description": "High availability is not enabled for the server."
                                    },
                                    {
                                      "value": "CreatingStandby",
                                      "description": "Standby server is being created."
                                    },
                                    {
                                      "value": "ReplicatingData",
                                      "description": "Data is being replicated to the standby server."
                                    },
                                    {
                                      "value": "FailingOver",
                                      "description": "Failover operation to the standby server is in progress."
                                    },
                                    {
                                      "value": "Healthy",
                                      "description": "Standby server is healthy and ready to take over in case of a failover."
                                    },
                                    {
                                      "value": "RemovingStandby",
                                      "description": "Standby server is being removed."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "standbyAvailabilityZone": {
                                "type": "string",
                                "default": "",
                                "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
                              }
                            }
                          },
                          "maintenanceWindow": {
                            "default": null,
                            "description": "Maintenance window properties of a server.",
                            "x-ms-mutability": [
                              "update",
                              "read"
                            ],
                            "type": "object",
                            "properties": {
                              "customWindow": {
                                "type": "string",
                                "default": "Disabled",
                                "description": "Indicates whether custom window is enabled or disabled."
                              },
                              "startHour": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "Start hour to be used for maintenance window."
                              },
                              "startMinute": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "Start minute to be used for maintenance window."
                              },
                              "dayOfWeek": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "Day of the week to be used for maintenance window."
                              }
                            }
                          },
                          "sourceServerResourceId": {
                            "type": "string",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.DBforPostgreSQL/flexibleServers"
                                }
                              ]
                            },
                            "description": "Identifier of the server to be used as the source of the new server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target server is a read replica.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "pointInTimeUTC": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation time (in ISO8601 format) of the backup which you want to restore in the new server. It's required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', or 'ReviveDropped'.",
                            "x-ms-mutability": [
                              "create"
                            ]
                          },
                          "availabilityZone": {
                            "type": "string",
                            "default": "",
                            "description": "Availability zone of a server.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "replicationRole": {
                            "description": "Role of the server in a replication set.",
                            "type": "string",
                            "enum": [
                              "None",
                              "Primary",
                              "AsyncReplica",
                              "GeoAsyncReplica"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationRole",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "None",
                                  "description": "No replication role assigned; the server operates independently."
                                },
                                {
                                  "value": "Primary",
                                  "description": "Acts as the source server for replication to one or more replicas."
                                },
                                {
                                  "value": "AsyncReplica",
                                  "description": "Receives data asynchronously from a primary server within the same region."
                                },
                                {
                                  "value": "GeoAsyncReplica",
                                  "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                                }
                              ]
                            }
                          },
                          "replicaCapacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum number of read replicas allowed for a server.",
                            "readOnly": true
                          },
                          "replica": {
                            "description": "Read replica properties of a server. Required only in case that you want to promote a server.",
                            "x-ms-mutability": [
                              "read",
                              "update"
                            ],
                            "type": "object",
                            "properties": {
                              "role": {
                                "description": "Role of the server in a replication set.",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Primary",
                                  "AsyncReplica",
                                  "GeoAsyncReplica"
                                ],
                                "x-ms-enum": {
                                  "name": "ReplicationRole",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "None",
                                      "description": "No replication role assigned; the server operates independently."
                                    },
                                    {
                                      "value": "Primary",
                                      "description": "Acts as the source server for replication to one or more replicas."
                                    },
                                    {
                                      "value": "AsyncReplica",
                                      "description": "Receives data asynchronously from a primary server within the same region."
                                    },
                                    {
                                      "value": "GeoAsyncReplica",
                                      "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                                    }
                                  ]
                                }
                              },
                              "capacity": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Maximum number of read replicas allowed for a server.",
                                "readOnly": true
                              },
                              "replicationState": {
                                "type": "string",
                                "enum": [
                                  "Active",
                                  "Catchup",
                                  "Provisioning",
                                  "Updating",
                                  "Broken",
                                  "Reconfiguring"
                                ],
                                "x-ms-enum": {
                                  "name": "ReplicationState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Active",
                                      "description": "Read replica is fully synchronized and actively replicating data from the primary server."
                                    },
                                    {
                                      "value": "Catchup",
                                      "description": "Read replica is behind the primary server and is currently catching up with pending changes."
                                    },
                                    {
                                      "value": "Provisioning",
                                      "description": "Read replica is being created and is in process of getting initialized."
                                    },
                                    {
                                      "value": "Updating",
                                      "description": "Read replica is undergoing some changes it can be changing compute size of promoting it to primary server."
                                    },
                                    {
                                      "value": "Broken",
                                      "description": "Replication has failed or been interrupted."
                                    },
                                    {
                                      "value": "Reconfiguring",
                                      "description": "Read replica is being reconfigured, possibly due to changes in source or settings."
                                    }
                                  ]
                                },
                                "description": "Indicates the replication state of a read replica. This property is returned only when the target server is a read replica. Possible  values are Active, Broken, Catchup, Provisioning, Reconfiguring, and Updating",
                                "readOnly": true
                              },
                              "promoteMode": {
                                "type": "string",
                                "description": "Type of operation to apply on the read replica. This property is write only. Standalone means that the read replica will be promoted to a standalone server, and will become a completely independent entity from the replication set. Switchover means that the read replica will roles with the primary server.",
                                "enum": [
                                  "Standalone",
                                  "Switchover"
                                ],
                                "x-ms-enum": {
                                  "name": "ReadReplicaPromoteMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Standalone",
                                      "description": "Read replica will become an independent server."
                                    },
                                    {
                                      "value": "Switchover",
                                      "description": "Read replica will swap roles with primary server."
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "update"
                                ]
                              },
                              "promoteOption": {
                                "type": "string",
                                "description": "Data synchronization option to use when processing the operation specified in the promoteMode property. This property is write only.",
                                "enum": [
                                  "Planned",
                                  "Forced"
                                ],
                                "x-ms-enum": {
                                  "name": "ReadReplicaPromoteOption",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Planned",
                                      "description": "The operation will wait for data in the read replica to be fully synchronized with its source server, before it initiates the operation."
                                    },
                                    {
                                      "value": "Forced",
                                      "description": "The operation will not wait for data in the read replica to be synchronized with its source server, before it initiates the operation."
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "update"
                                ]
                              }
                            }
                          },
                          "createMode": {
                            "type": "string",
                            "description": "Creation mode of a new server.",
                            "enum": [
                              "Default",
                              "Create",
                              "Update",
                              "PointInTimeRestore",
                              "GeoRestore",
                              "Replica",
                              "ReviveDropped"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Default",
                                  "description": "If the operation is triggered on a non-existing server, it's equivalent to 'Create'. If the operation is triggered on an existing server, it's equivalent to 'Update'."
                                },
                                {
                                  "value": "Create",
                                  "description": "Operation creates a new server."
                                },
                                {
                                  "value": "Update",
                                  "description": "Operation updates an existing server."
                                },
                                {
                                  "value": "PointInTimeRestore",
                                  "description": "Operation restores an existing backup of an existing server. This operation creates a new server, and then restores on it the backup of an existing server at a specific point in time."
                                },
                                {
                                  "value": "GeoRestore",
                                  "description": "Operation restores an existing backup of an existing server, on the paired region of the existing server. This operation creates a new server on the paired region of the existing server, and then restores on it the backup of an existing server at a specific point in time, in a different region. This operation is only supported on existing servers that were created with geographically redundant backups enabled."
                                },
                                {
                                  "value": "Replica",
                                  "description": "Operation creates a replica of an existing server. This operation creates a new server, restores a base backup of the existing server (referred to as primary), and configures physical replication to asynchronously stream all changes which are recorded in the transaction log of the primary."
                                },
                                {
                                  "value": "ReviveDropped",
                                  "description": "Operation creates a new server, initialized with the backup of a server that was recently deleted."
                                }
                              ]
                            },
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The private endpoint connection resource.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "groupIds": {
                                      "type": "array",
                                      "description": "The group ids for the private endpoint resource.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "privateEndpoint": {
                                      "description": "The private endpoint resource.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ARM identifier for private endpoint.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              }
                            },
                            "description": "List of private endpoint connections associated with the specified server.",
                            "readOnly": true
                          },
                          "cluster": {
                            "default": null,
                            "description": "Cluster properties of a server.",
                            "x-ms-mutability": [
                              "create",
                              "read",
                              "update"
                            ],
                            "type": "object",
                            "properties": {
                              "clusterSize": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "Number of nodes assigned to the elastic cluster."
                              },
                              "defaultDatabaseName": {
                                "type": "string",
                                "description": "Default database name for the elastic cluster."
                              }
                            }
                          }
                        }
                      }
                    },
                    "description": "Properties of a server."
                  },
                  "description": "The list of servers"
                },
                "nextLink": {
                  "description": "The link used to get the next page of operations.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "A list of servers."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}": {
      "put": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_CreateOrUpdate",
        "description": "Creates a new server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "sku": {
                  "description": "Compute tier and size of a server.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name by which is known a given compute size assigned to a server."
                    },
                    "tier": {
                      "type": "string",
                      "description": "Tier of the compute assigned to a server.",
                      "enum": [
                        "Burstable",
                        "GeneralPurpose",
                        "MemoryOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Burstable",
                            "description": "Cost-effective tier for infrequent CPU usage, ideal for development and testing workloads with low performance requirements."
                          },
                          {
                            "value": "GeneralPurpose",
                            "description": "Balanced compute and memory for most workloads, offering scalable performance and I/O throughput."
                          },
                          {
                            "value": "MemoryOptimized",
                            "description": "High memory-to-core ratio for demanding workloads needing fast in-memory processing and high concurrency."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "tier"
                  ]
                },
                "identity": {
                  "description": "User assigned managed identities assigned to the server.",
                  "type": "object",
                  "properties": {
                    "userAssignedIdentities": {
                      "description": "Map of user assigned managed identities.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "User assigned managed identity associated with a server.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Identifier of the client of the service principal associated to the user assigned managed identity."
                          }
                        }
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "Types of identities associated with a server.",
                      "enum": [
                        "None",
                        "UserAssigned",
                        "SystemAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "None",
                            "description": "No managed identity is assigned to the server."
                          },
                          {
                            "value": "UserAssigned",
                            "description": "One or more managed identities provided by the user are assigned to the server."
                          },
                          {
                            "value": "SystemAssigned",
                            "description": "Azure automatically creates and manages the identity associated to the lifecycle of the server."
                          },
                          {
                            "value": "SystemAssigned,UserAssigned",
                            "description": "Both system-assigned and user-assigned identities are assigned to the server."
                          }
                        ]
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Identifier of the tenant of a server.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of a server.",
                  "type": "object",
                  "properties": {
                    "administratorLogin": {
                      "type": "string",
                      "description": "Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "administratorLoginPassword": {
                      "type": "string",
                      "description": "Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.",
                      "x-ms-secret": true,
                      "format": "password",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "version": {
                      "description": "Major version of PostgreSQL database engine.",
                      "type": "string",
                      "enum": [
                        "18",
                        "17",
                        "16",
                        "15",
                        "14",
                        "13",
                        "12",
                        "11"
                      ],
                      "x-ms-enum": {
                        "name": "PostgresMajorVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "18",
                            "description": "PostgreSQL 18."
                          },
                          {
                            "value": "17",
                            "description": "PostgreSQL 17."
                          },
                          {
                            "value": "16",
                            "description": "PostgreSQL 16."
                          },
                          {
                            "value": "15",
                            "description": "PostgreSQL 15."
                          },
                          {
                            "value": "14",
                            "description": "PostgreSQL 14."
                          },
                          {
                            "value": "13",
                            "description": "PostgreSQL 13."
                          },
                          {
                            "value": "12",
                            "description": "PostgreSQL 12."
                          },
                          {
                            "value": "11",
                            "description": "PostgreSQL 11."
                          }
                        ]
                      }
                    },
                    "minorVersion": {
                      "type": "string",
                      "description": "Minor version of PostgreSQL database engine.",
                      "readOnly": true
                    },
                    "state": {
                      "type": "string",
                      "description": "Possible states of a server.",
                      "readOnly": true,
                      "enum": [
                        "Ready",
                        "Dropping",
                        "Disabled",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Updating",
                        "Restarting",
                        "Inaccessible",
                        "Provisioning"
                      ],
                      "x-ms-enum": {
                        "name": "ServerState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Ready",
                            "description": "Server is healthy and not undergoing any operations at the management or control plane level. This doesn't mean that the server is fully operational at the data plane level."
                          },
                          {
                            "value": "Dropping",
                            "description": "Server is being deleted."
                          },
                          {
                            "value": "Disabled",
                            "description": "Server is disabled. Typical reasons include: the subscription on which the server is deployed is explicitly disabled or canceled by the administrator, the spending limit has been reached, or the bill is past due. May also happen when the server is being moved to another resource group or subscription."
                          },
                          {
                            "value": "Starting",
                            "description": "PostgreSQL database engine is being restarted."
                          },
                          {
                            "value": "Stopping",
                            "description": "Compute resources associated with the server are being stopped and deallocated. If the server has high availability enabled, the compute resources of the standby server are also stopped and deallocated."
                          },
                          {
                            "value": "Stopped",
                            "description": "Compute resources associated with the server are being stopped and deallocated."
                          },
                          {
                            "value": "Updating",
                            "description": "Server is undergoing some changes which may or may not impact the availability of the PostgreSQL database engine. For example, the compute resources of the server are being scaled up or down, which may cause temporary unavailability of the database engine. Or, for example, a firewall rule is being added or removed, which doesn't cause any unavailability of the database engine."
                          },
                          {
                            "value": "Restarting",
                            "description": "PostgreSQL database engine is being restarted."
                          },
                          {
                            "value": "Inaccessible",
                            "description": "Server isn't accessible, because the key provided to encrypt and decrypt the data is in invalid state."
                          },
                          {
                            "value": "Provisioning",
                            "description": "Server is in the process of being created."
                          }
                        ]
                      }
                    },
                    "fullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name of a server.",
                      "readOnly": true
                    },
                    "storage": {
                      "default": null,
                      "description": "Storage properties of a server.",
                      "type": "object",
                      "properties": {
                        "storageSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Size of storage assigned to a server."
                        },
                        "autoGrow": {
                          "type": "string",
                          "description": "Flag to enable or disable the automatic growth of storage size of a server when available space is nearing zero and conditions allow for automatically growing storage size.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "StorageAutoGrow",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Server should automatically grow storage size when available space is nearing zero and conditions allow for automatically growing storage size."
                              },
                              {
                                "value": "Disabled",
                                "description": "Server should not automatically grow storage size when available space is nearing zero."
                              }
                            ]
                          }
                        },
                        "tier": {
                          "type": "string",
                          "description": "Storage tier of a server.",
                          "enum": [
                            "P1",
                            "P2",
                            "P3",
                            "P4",
                            "P6",
                            "P10",
                            "P15",
                            "P20",
                            "P30",
                            "P40",
                            "P50",
                            "P60",
                            "P70",
                            "P80"
                          ],
                          "x-ms-enum": {
                            "name": "AzureManagedDiskPerformanceTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "P1",
                                "description": "Entry-level SSD for minimal IOPS, ideal for light development or testing workloads."
                              },
                              {
                                "value": "P2",
                                "description": "Slightly higher IOPS for small-scale applications needing consistent low latency."
                              },
                              {
                                "value": "P3",
                                "description": "Balanced performance for basic production workloads with moderate throughput."
                              },
                              {
                                "value": "P4",
                                "description": "Enhanced IOPS for growing apps with predictable performance needs."
                              },
                              {
                                "value": "P6",
                                "description": "Mid-tier SSD for steady workloads requiring reliable throughput and latency."
                              },
                              {
                                "value": "P10",
                                "description": "Popular choice for general-purpose production workloads with scalable performance."
                              },
                              {
                                "value": "P15",
                                "description": "High IOPS tier for demanding apps with frequent read/write operations."
                              },
                              {
                                "value": "P20",
                                "description": "Entry point for high-performance Solid State Disks (SSDs), suitable for small-scale I/O-intensive workloads."
                              },
                              {
                                "value": "P30",
                                "description": "Balanced tier for moderate throughput and latency-sensitive applications."
                              },
                              {
                                "value": "P40",
                                "description": "Enhanced performance for growing production workloads with consistent IOPS demands."
                              },
                              {
                                "value": "P50",
                                "description": "Optimized for enterprise-grade applications needing sustained high throughput."
                              },
                              {
                                "value": "P60",
                                "description": "High-capacity tier for large databases and analytics workloads with elevated IOPS."
                              },
                              {
                                "value": "P70",
                                "description": "Designed for mission-critical systems requiring ultra-low latency and high concurrency."
                              },
                              {
                                "value": "P80",
                                "description": "Top-tier SSD for maximum IOPS and throughput, ideal for the most demanding workloads."
                              }
                            ]
                          }
                        },
                        "iops": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                        },
                        "throughput": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "Premium_LRS",
                            "PremiumV2_LRS",
                            "UltraSSD_LRS"
                          ],
                          "x-ms-enum": {
                            "name": "StorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Premium_LRS",
                                "description": "Standard Solid State Disk (SSD) backed storage offering consistent performance for general purpose workloads."
                              },
                              {
                                "value": "PremiumV2_LRS",
                                "description": "Next generation Solid State Disk (SSD) storage with improved scalability and performance for demanding enterprise workloads."
                              },
                              {
                                "value": "UltraSSD_LRS",
                                "description": "High-end Solid State Disk (SSD) storage designed for extreme IOPS and latency-sensitive applications."
                              }
                            ]
                          },
                          "description": "Type of storage assigned to a server. Allowed values are Premium_LRS, PremiumV2_LRS, or UltraSSD_LRS. If not specified, it defaults to Premium_LRS."
                        }
                      }
                    },
                    "authConfig": {
                      "default": null,
                      "description": "Authentication configuration properties of a server.",
                      "type": "object",
                      "properties": {
                        "activeDirectoryAuth": {
                          "type": "string",
                          "description": "Indicates if the server supports Microsoft Entra authentication.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "MicrosoftEntraAuth",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Server supports Microsoft Entra authentication."
                              },
                              {
                                "value": "Disabled",
                                "description": "Server doesn't support Microsoft Entra authentication."
                              }
                            ]
                          }
                        },
                        "passwordAuth": {
                          "type": "string",
                          "default": "Enabled",
                          "description": "Indicates if the server supports password based authentication.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "PasswordBasedAuth",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Server supports password based authentication."
                              },
                              {
                                "value": "Disabled",
                                "description": "Server doesn't support password based authentication."
                              }
                            ]
                          }
                        },
                        "tenantId": {
                          "type": "string",
                          "default": "",
                          "description": "Identifier of the tenant of the delegated resource."
                        }
                      }
                    },
                    "dataEncryption": {
                      "default": null,
                      "description": "Data encryption properties of a server.",
                      "type": "object",
                      "properties": {
                        "primaryKeyURI": {
                          "type": "string",
                          "description": "URI of the key in Azure Key Vault used for data encryption of the primary storage associated to a server."
                        },
                        "primaryUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the primary storage associated to a server."
                        },
                        "geoBackupKeyURI": {
                          "type": "string",
                          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                        },
                        "geoBackupUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                        },
                        "type": {
                          "type": "string",
                          "description": "Data encryption type used by a server.",
                          "enum": [
                            "SystemManaged",
                            "AzureKeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "DataEncryptionType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "SystemManaged",
                                "description": "Encryption managed by Azure using platform managed keys for simplicity and compliance."
                              },
                              {
                                "value": "AzureKeyVault",
                                "description": "Encryption using customer managed keys stored in Azure Key Vault for enhanced control and security."
                              }
                            ]
                          }
                        },
                        "primaryEncryptionKeyStatus": {
                          "type": "string",
                          "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the primary storage associated to the server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "enum": [
                            "Valid",
                            "Invalid"
                          ],
                          "x-ms-enum": {
                            "name": "EncryptionKeyStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Valid",
                                "description": "Key is valid and can be used for encryption."
                              },
                              {
                                "value": "Invalid",
                                "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                              }
                            ]
                          }
                        },
                        "geoBackupEncryptionKeyStatus": {
                          "type": "string",
                          "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the geographically redundant storage associated to the server when it is configured to support geographically redundant backups.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "enum": [
                            "Valid",
                            "Invalid"
                          ],
                          "x-ms-enum": {
                            "name": "EncryptionKeyStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Valid",
                                "description": "Key is valid and can be used for encryption."
                              },
                              {
                                "value": "Invalid",
                                "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "backup": {
                      "default": null,
                      "description": "Backup properties of a server.",
                      "type": "object",
                      "properties": {
                        "backupRetentionDays": {
                          "type": "integer",
                          "format": "int32",
                          "default": 7,
                          "description": "Backup retention days for the server."
                        },
                        "geoRedundantBackup": {
                          "type": "string",
                          "default": "Disabled",
                          "description": "Indicates if the server is configured to create geographically redundant backups.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "GeographicallyRedundantBackup",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Server is configured to create geographically redundant backups."
                              },
                              {
                                "value": "Disabled",
                                "description": "Server is not configured to create geographically redundant backups."
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "earliestRestoreDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Earliest restore point time (ISO8601 format) for a server.",
                          "readOnly": true
                        }
                      }
                    },
                    "network": {
                      "default": null,
                      "description": "Network properties of a server. Only required if you want your server to be integrated into a virtual network provided by customer.",
                      "type": "object",
                      "properties": {
                        "publicNetworkAccess": {
                          "type": "string",
                          "description": "Indicates if public network access is enabled or not. This is only supported for servers that are not integrated into a virtual network which is owned and provided by customer when server is deployed.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "ServerPublicNetworkAccessState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Public network access is enabled. This allows the server to be accessed from the public internet, provided the necessary firewall rule that allows incoming traffic originating from the connecting client is in place. This is compatible with the use of private endpoints to connect to this server."
                              },
                              {
                                "value": "Disabled",
                                "description": "Public network access is disabled. This means the server cannot be accessed from the public internet, but only via private endpoints."
                              }
                            ]
                          }
                        },
                        "delegatedSubnetResourceId": {
                          "type": "string",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Network/virtualNetworks/subnets"
                              }
                            ]
                          },
                          "description": "Resource identifier of the delegated subnet. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                        },
                        "privateDnsZoneArmResourceId": {
                          "type": "string",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Network/privateDnsZones"
                              }
                            ]
                          },
                          "description": "Identifier of the private DNS zone. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                        }
                      }
                    },
                    "highAvailability": {
                      "default": null,
                      "description": "High availability properties of a server.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "default": "Disabled",
                          "description": "High availability mode for a server.",
                          "enum": [
                            "Disabled",
                            "ZoneRedundant",
                            "SameZone"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Disabled",
                                "description": "High availability is disabled for the server."
                              },
                              {
                                "value": "ZoneRedundant",
                                "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                              },
                              {
                                "value": "SameZone",
                                "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                              }
                            ]
                          }
                        },
                        "state": {
                          "type": "string",
                          "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
                          "enum": [
                            "NotEnabled",
                            "CreatingStandby",
                            "ReplicatingData",
                            "FailingOver",
                            "Healthy",
                            "RemovingStandby"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "NotEnabled",
                                "description": "High availability is not enabled for the server."
                              },
                              {
                                "value": "CreatingStandby",
                                "description": "Standby server is being created."
                              },
                              {
                                "value": "ReplicatingData",
                                "description": "Data is being replicated to the standby server."
                              },
                              {
                                "value": "FailingOver",
                                "description": "Failover operation to the standby server is in progress."
                              },
                              {
                                "value": "Healthy",
                                "description": "Standby server is healthy and ready to take over in case of a failover."
                              },
                              {
                                "value": "RemovingStandby",
                                "description": "Standby server is being removed."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "standbyAvailabilityZone": {
                          "type": "string",
                          "default": "",
                          "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
                        }
                      }
                    },
                    "maintenanceWindow": {
                      "default": null,
                      "description": "Maintenance window properties of a server.",
                      "x-ms-mutability": [
                        "update",
                        "read"
                      ],
                      "type": "object",
                      "properties": {
                        "customWindow": {
                          "type": "string",
                          "default": "Disabled",
                          "description": "Indicates whether custom window is enabled or disabled."
                        },
                        "startHour": {
                          "type": "integer",
                          "format": "int32",
                          "default": 0,
                          "description": "Start hour to be used for maintenance window."
                        },
                        "startMinute": {
                          "type": "integer",
                          "format": "int32",
                          "default": 0,
                          "description": "Start minute to be used for maintenance window."
                        },
                        "dayOfWeek": {
                          "type": "integer",
                          "format": "int32",
                          "default": 0,
                          "description": "Day of the week to be used for maintenance window."
                        }
                      }
                    },
                    "sourceServerResourceId": {
                      "type": "string",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.DBforPostgreSQL/flexibleServers"
                          }
                        ]
                      },
                      "description": "Identifier of the server to be used as the source of the new server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target server is a read replica.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "pointInTimeUTC": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation time (in ISO8601 format) of the backup which you want to restore in the new server. It's required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', or 'ReviveDropped'.",
                      "x-ms-mutability": [
                        "create"
                      ]
                    },
                    "availabilityZone": {
                      "type": "string",
                      "default": "",
                      "description": "Availability zone of a server.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "replicationRole": {
                      "description": "Role of the server in a replication set.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Primary",
                        "AsyncReplica",
                        "GeoAsyncReplica"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationRole",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "None",
                            "description": "No replication role assigned; the server operates independently."
                          },
                          {
                            "value": "Primary",
                            "description": "Acts as the source server for replication to one or more replicas."
                          },
                          {
                            "value": "AsyncReplica",
                            "description": "Receives data asynchronously from a primary server within the same region."
                          },
                          {
                            "value": "GeoAsyncReplica",
                            "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                          }
                        ]
                      }
                    },
                    "replicaCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of read replicas allowed for a server.",
                      "readOnly": true
                    },
                    "replica": {
                      "description": "Read replica properties of a server. Required only in case that you want to promote a server.",
                      "x-ms-mutability": [
                        "read",
                        "update"
                      ],
                      "type": "object",
                      "properties": {
                        "role": {
                          "description": "Role of the server in a replication set.",
                          "type": "string",
                          "enum": [
                            "None",
                            "Primary",
                            "AsyncReplica",
                            "GeoAsyncReplica"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationRole",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "None",
                                "description": "No replication role assigned; the server operates independently."
                              },
                              {
                                "value": "Primary",
                                "description": "Acts as the source server for replication to one or more replicas."
                              },
                              {
                                "value": "AsyncReplica",
                                "description": "Receives data asynchronously from a primary server within the same region."
                              },
                              {
                                "value": "GeoAsyncReplica",
                                "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                              }
                            ]
                          }
                        },
                        "capacity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Maximum number of read replicas allowed for a server.",
                          "readOnly": true
                        },
                        "replicationState": {
                          "type": "string",
                          "enum": [
                            "Active",
                            "Catchup",
                            "Provisioning",
                            "Updating",
                            "Broken",
                            "Reconfiguring"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Active",
                                "description": "Read replica is fully synchronized and actively replicating data from the primary server."
                              },
                              {
                                "value": "Catchup",
                                "description": "Read replica is behind the primary server and is currently catching up with pending changes."
                              },
                              {
                                "value": "Provisioning",
                                "description": "Read replica is being created and is in process of getting initialized."
                              },
                              {
                                "value": "Updating",
                                "description": "Read replica is undergoing some changes it can be changing compute size of promoting it to primary server."
                              },
                              {
                                "value": "Broken",
                                "description": "Replication has failed or been interrupted."
                              },
                              {
                                "value": "Reconfiguring",
                                "description": "Read replica is being reconfigured, possibly due to changes in source or settings."
                              }
                            ]
                          },
                          "description": "Indicates the replication state of a read replica. This property is returned only when the target server is a read replica. Possible  values are Active, Broken, Catchup, Provisioning, Reconfiguring, and Updating",
                          "readOnly": true
                        },
                        "promoteMode": {
                          "type": "string",
                          "description": "Type of operation to apply on the read replica. This property is write only. Standalone means that the read replica will be promoted to a standalone server, and will become a completely independent entity from the replication set. Switchover means that the read replica will roles with the primary server.",
                          "enum": [
                            "Standalone",
                            "Switchover"
                          ],
                          "x-ms-enum": {
                            "name": "ReadReplicaPromoteMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Standalone",
                                "description": "Read replica will become an independent server."
                              },
                              {
                                "value": "Switchover",
                                "description": "Read replica will swap roles with primary server."
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "update"
                          ]
                        },
                        "promoteOption": {
                          "type": "string",
                          "description": "Data synchronization option to use when processing the operation specified in the promoteMode property. This property is write only.",
                          "enum": [
                            "Planned",
                            "Forced"
                          ],
                          "x-ms-enum": {
                            "name": "ReadReplicaPromoteOption",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Planned",
                                "description": "The operation will wait for data in the read replica to be fully synchronized with its source server, before it initiates the operation."
                              },
                              {
                                "value": "Forced",
                                "description": "The operation will not wait for data in the read replica to be synchronized with its source server, before it initiates the operation."
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "update"
                          ]
                        }
                      }
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Creation mode of a new server.",
                      "enum": [
                        "Default",
                        "Create",
                        "Update",
                        "PointInTimeRestore",
                        "GeoRestore",
                        "Replica",
                        "ReviveDropped"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Default",
                            "description": "If the operation is triggered on a non-existing server, it's equivalent to 'Create'. If the operation is triggered on an existing server, it's equivalent to 'Update'."
                          },
                          {
                            "value": "Create",
                            "description": "Operation creates a new server."
                          },
                          {
                            "value": "Update",
                            "description": "Operation updates an existing server."
                          },
                          {
                            "value": "PointInTimeRestore",
                            "description": "Operation restores an existing backup of an existing server. This operation creates a new server, and then restores on it the backup of an existing server at a specific point in time."
                          },
                          {
                            "value": "GeoRestore",
                            "description": "Operation restores an existing backup of an existing server, on the paired region of the existing server. This operation creates a new server on the paired region of the existing server, and then restores on it the backup of an existing server at a specific point in time, in a different region. This operation is only supported on existing servers that were created with geographically redundant backups enabled."
                          },
                          {
                            "value": "Replica",
                            "description": "Operation creates a replica of an existing server. This operation creates a new server, restores a base backup of the existing server (referred to as primary), and configures physical replication to asynchronously stream all changes which are recorded in the transaction log of the primary."
                          },
                          {
                            "value": "ReviveDropped",
                            "description": "Operation creates a new server, initialized with the backup of a server that was recently deleted."
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "description": "List of private endpoint connections associated with the specified server.",
                      "readOnly": true
                    },
                    "cluster": {
                      "default": null,
                      "description": "Cluster properties of a server.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ],
                      "type": "object",
                      "properties": {
                        "clusterSize": {
                          "type": "integer",
                          "format": "int32",
                          "default": 0,
                          "description": "Number of nodes assigned to the elastic cluster."
                        },
                        "defaultDatabaseName": {
                          "type": "string",
                          "description": "Default database name for the elastic cluster."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Properties of a server."
            },
            "description": "Parameters required to create a new server or to update an existing server."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Update",
        "description": "Updates an existing server. The request body can contain one or multiple of the properties present in the normal server definition.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "sku": {
                  "description": "Compute tier and size of a server.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name by which is known a given compute size assigned to a server."
                    },
                    "tier": {
                      "type": "string",
                      "description": "Tier of the compute assigned to a server.",
                      "enum": [
                        "Burstable",
                        "GeneralPurpose",
                        "MemoryOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Burstable",
                            "description": "Cost-effective tier for infrequent CPU usage, ideal for development and testing workloads with low performance requirements."
                          },
                          {
                            "value": "GeneralPurpose",
                            "description": "Balanced compute and memory for most workloads, offering scalable performance and I/O throughput."
                          },
                          {
                            "value": "MemoryOptimized",
                            "description": "High memory-to-core ratio for demanding workloads needing fast in-memory processing and high concurrency."
                          }
                        ]
                      }
                    }
                  }
                },
                "identity": {
                  "description": "Describes the identity of the application.",
                  "type": "object",
                  "properties": {
                    "userAssignedIdentities": {
                      "description": "Map of user assigned managed identities.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "User assigned managed identity associated with a server.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Identifier of the client of the service principal associated to the user assigned managed identity."
                          }
                        }
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "Types of identities associated with a server.",
                      "enum": [
                        "None",
                        "UserAssigned",
                        "SystemAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "None",
                            "description": "No managed identity is assigned to the server."
                          },
                          {
                            "value": "UserAssigned",
                            "description": "One or more managed identities provided by the user are assigned to the server."
                          },
                          {
                            "value": "SystemAssigned",
                            "description": "Azure automatically creates and manages the identity associated to the lifecycle of the server."
                          },
                          {
                            "value": "SystemAssigned,UserAssigned",
                            "description": "Both system-assigned and user-assigned identities are assigned to the server."
                          }
                        ]
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Identifier of the tenant of a server.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the server.",
                  "type": "object",
                  "properties": {
                    "administratorLogin": {
                      "type": "string",
                      "description": "Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.",
                      "x-ms-mutability": [
                        "read"
                      ]
                    },
                    "administratorLoginPassword": {
                      "type": "string",
                      "description": "Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.",
                      "x-ms-secret": true,
                      "format": "password",
                      "x-ms-mutability": [
                        "update"
                      ]
                    },
                    "version": {
                      "description": "Major version of PostgreSQL database engine.",
                      "type": "string",
                      "enum": [
                        "18",
                        "17",
                        "16",
                        "15",
                        "14",
                        "13",
                        "12",
                        "11"
                      ],
                      "x-ms-enum": {
                        "name": "PostgresMajorVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "18",
                            "description": "PostgreSQL 18."
                          },
                          {
                            "value": "17",
                            "description": "PostgreSQL 17."
                          },
                          {
                            "value": "16",
                            "description": "PostgreSQL 16."
                          },
                          {
                            "value": "15",
                            "description": "PostgreSQL 15."
                          },
                          {
                            "value": "14",
                            "description": "PostgreSQL 14."
                          },
                          {
                            "value": "13",
                            "description": "PostgreSQL 13."
                          },
                          {
                            "value": "12",
                            "description": "PostgreSQL 12."
                          },
                          {
                            "value": "11",
                            "description": "PostgreSQL 11."
                          }
                        ]
                      }
                    },
                    "storage": {
                      "default": null,
                      "description": "Storage properties of a server.",
                      "type": "object",
                      "properties": {
                        "storageSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Size of storage assigned to a server."
                        },
                        "autoGrow": {
                          "type": "string",
                          "description": "Flag to enable or disable the automatic growth of storage size of a server when available space is nearing zero and conditions allow for automatically growing storage size.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "StorageAutoGrow",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Server should automatically grow storage size when available space is nearing zero and conditions allow for automatically growing storage size."
                              },
                              {
                                "value": "Disabled",
                                "description": "Server should not automatically grow storage size when available space is nearing zero."
                              }
                            ]
                          }
                        },
                        "tier": {
                          "type": "string",
                          "description": "Storage tier of a server.",
                          "enum": [
                            "P1",
                            "P2",
                            "P3",
                            "P4",
                            "P6",
                            "P10",
                            "P15",
                            "P20",
                            "P30",
                            "P40",
                            "P50",
                            "P60",
                            "P70",
                            "P80"
                          ],
                          "x-ms-enum": {
                            "name": "AzureManagedDiskPerformanceTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "P1",
                                "description": "Entry-level SSD for minimal IOPS, ideal for light development or testing workloads."
                              },
                              {
                                "value": "P2",
                                "description": "Slightly higher IOPS for small-scale applications needing consistent low latency."
                              },
                              {
                                "value": "P3",
                                "description": "Balanced performance for basic production workloads with moderate throughput."
                              },
                              {
                                "value": "P4",
                                "description": "Enhanced IOPS for growing apps with predictable performance needs."
                              },
                              {
                                "value": "P6",
                                "description": "Mid-tier SSD for steady workloads requiring reliable throughput and latency."
                              },
                              {
                                "value": "P10",
                                "description": "Popular choice for general-purpose production workloads with scalable performance."
                              },
                              {
                                "value": "P15",
                                "description": "High IOPS tier for demanding apps with frequent read/write operations."
                              },
                              {
                                "value": "P20",
                                "description": "Entry point for high-performance Solid State Disks (SSDs), suitable for small-scale I/O-intensive workloads."
                              },
                              {
                                "value": "P30",
                                "description": "Balanced tier for moderate throughput and latency-sensitive applications."
                              },
                              {
                                "value": "P40",
                                "description": "Enhanced performance for growing production workloads with consistent IOPS demands."
                              },
                              {
                                "value": "P50",
                                "description": "Optimized for enterprise-grade applications needing sustained high throughput."
                              },
                              {
                                "value": "P60",
                                "description": "High-capacity tier for large databases and analytics workloads with elevated IOPS."
                              },
                              {
                                "value": "P70",
                                "description": "Designed for mission-critical systems requiring ultra-low latency and high concurrency."
                              },
                              {
                                "value": "P80",
                                "description": "Top-tier SSD for maximum IOPS and throughput, ideal for the most demanding workloads."
                              }
                            ]
                          }
                        },
                        "iops": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                        },
                        "throughput": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "Premium_LRS",
                            "PremiumV2_LRS",
                            "UltraSSD_LRS"
                          ],
                          "x-ms-enum": {
                            "name": "StorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Premium_LRS",
                                "description": "Standard Solid State Disk (SSD) backed storage offering consistent performance for general purpose workloads."
                              },
                              {
                                "value": "PremiumV2_LRS",
                                "description": "Next generation Solid State Disk (SSD) storage with improved scalability and performance for demanding enterprise workloads."
                              },
                              {
                                "value": "UltraSSD_LRS",
                                "description": "High-end Solid State Disk (SSD) storage designed for extreme IOPS and latency-sensitive applications."
                              }
                            ]
                          },
                          "description": "Type of storage assigned to a server. Allowed values are Premium_LRS, PremiumV2_LRS, or UltraSSD_LRS. If not specified, it defaults to Premium_LRS."
                        }
                      }
                    },
                    "backup": {
                      "default": null,
                      "description": "Backup properties of a server.",
                      "type": "object",
                      "properties": {
                        "backupRetentionDays": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Backup retention days for the server."
                        },
                        "geoRedundantBackup": {
                          "type": "string",
                          "description": "Indicates if the server is configured to create geographically redundant backups.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "GeographicallyRedundantBackup",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Server is configured to create geographically redundant backups."
                              },
                              {
                                "value": "Disabled",
                                "description": "Server is not configured to create geographically redundant backups."
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "read"
                          ]
                        },
                        "earliestRestoreDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Earliest restore point time (ISO8601 format) for a server.",
                          "readOnly": true
                        }
                      }
                    },
                    "highAvailability": {
                      "default": null,
                      "description": "High availability properties of a server.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "description": "High availability mode for a server.",
                          "enum": [
                            "Disabled",
                            "ZoneRedundant",
                            "SameZone"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Disabled",
                                "description": "High availability is disabled for the server."
                              },
                              {
                                "value": "ZoneRedundant",
                                "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                              },
                              {
                                "value": "SameZone",
                                "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                              }
                            ]
                          }
                        },
                        "state": {
                          "type": "string",
                          "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
                          "enum": [
                            "NotEnabled",
                            "CreatingStandby",
                            "ReplicatingData",
                            "FailingOver",
                            "Healthy",
                            "RemovingStandby"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "NotEnabled",
                                "description": "High availability is not enabled for the server."
                              },
                              {
                                "value": "CreatingStandby",
                                "description": "Standby server is being created."
                              },
                              {
                                "value": "ReplicatingData",
                                "description": "Data is being replicated to the standby server."
                              },
                              {
                                "value": "FailingOver",
                                "description": "Failover operation to the standby server is in progress."
                              },
                              {
                                "value": "Healthy",
                                "description": "Standby server is healthy and ready to take over in case of a failover."
                              },
                              {
                                "value": "RemovingStandby",
                                "description": "Standby server is being removed."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "standbyAvailabilityZone": {
                          "type": "string",
                          "default": "",
                          "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
                        }
                      }
                    },
                    "maintenanceWindow": {
                      "default": null,
                      "description": "Maintenance window properties of a server.",
                      "x-ms-mutability": [
                        "update",
                        "read"
                      ],
                      "type": "object",
                      "properties": {
                        "customWindow": {
                          "type": "string",
                          "description": "Indicates whether custom window is enabled or disabled."
                        },
                        "startHour": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Start hour to be used for maintenance window."
                        },
                        "startMinute": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Start minute to be used for maintenance window."
                        },
                        "dayOfWeek": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Day of the week to be used for maintenance window."
                        }
                      }
                    },
                    "authConfig": {
                      "default": null,
                      "description": "Authentication configuration properties of a server.",
                      "type": "object",
                      "properties": {
                        "activeDirectoryAuth": {
                          "type": "string",
                          "description": "Indicates if the server supports Microsoft Entra authentication.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "MicrosoftEntraAuth",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Server supports Microsoft Entra authentication."
                              },
                              {
                                "value": "Disabled",
                                "description": "Server doesn't support Microsoft Entra authentication."
                              }
                            ]
                          }
                        },
                        "passwordAuth": {
                          "type": "string",
                          "description": "Indicates if the server supports password based authentication.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "PasswordBasedAuth",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Server supports password based authentication."
                              },
                              {
                                "value": "Disabled",
                                "description": "Server doesn't support password based authentication."
                              }
                            ]
                          }
                        },
                        "tenantId": {
                          "type": "string",
                          "description": "Identifier of the tenant of the delegated resource."
                        }
                      }
                    },
                    "dataEncryption": {
                      "default": null,
                      "description": "Data encryption properties of a server.",
                      "type": "object",
                      "properties": {
                        "primaryKeyURI": {
                          "type": "string",
                          "description": "URI of the key in Azure Key Vault used for data encryption of the primary storage associated to a server."
                        },
                        "primaryUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the primary storage associated to a server."
                        },
                        "geoBackupKeyURI": {
                          "type": "string",
                          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                        },
                        "geoBackupUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                        },
                        "type": {
                          "type": "string",
                          "description": "Data encryption type used by a server.",
                          "enum": [
                            "SystemManaged",
                            "AzureKeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "DataEncryptionType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "SystemManaged",
                                "description": "Encryption managed by Azure using platform managed keys for simplicity and compliance."
                              },
                              {
                                "value": "AzureKeyVault",
                                "description": "Encryption using customer managed keys stored in Azure Key Vault for enhanced control and security."
                              }
                            ]
                          }
                        },
                        "primaryEncryptionKeyStatus": {
                          "type": "string",
                          "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the primary storage associated to the server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "enum": [
                            "Valid",
                            "Invalid"
                          ],
                          "x-ms-enum": {
                            "name": "EncryptionKeyStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Valid",
                                "description": "Key is valid and can be used for encryption."
                              },
                              {
                                "value": "Invalid",
                                "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                              }
                            ]
                          }
                        },
                        "geoBackupEncryptionKeyStatus": {
                          "type": "string",
                          "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the geographically redundant storage associated to the server when it is configured to support geographically redundant backups.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "enum": [
                            "Valid",
                            "Invalid"
                          ],
                          "x-ms-enum": {
                            "name": "EncryptionKeyStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Valid",
                                "description": "Key is valid and can be used for encryption."
                              },
                              {
                                "value": "Invalid",
                                "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Update mode of an existing server.",
                      "enum": [
                        "Default",
                        "Update"
                      ],
                      "x-ms-enum": {
                        "name": "CreateModeForPatch",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Default",
                            "description": "It's equivalent to 'Update'."
                          },
                          {
                            "value": "Update",
                            "description": "Operation updates an existing server."
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "update"
                      ]
                    },
                    "replicationRole": {
                      "description": "Role of the server in a replication set.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Primary",
                        "AsyncReplica",
                        "GeoAsyncReplica"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationRole",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "None",
                            "description": "No replication role assigned; the server operates independently."
                          },
                          {
                            "value": "Primary",
                            "description": "Acts as the source server for replication to one or more replicas."
                          },
                          {
                            "value": "AsyncReplica",
                            "description": "Receives data asynchronously from a primary server within the same region."
                          },
                          {
                            "value": "GeoAsyncReplica",
                            "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                          }
                        ]
                      }
                    },
                    "replica": {
                      "description": "Read replica properties of a server. Required only in case that you want to promote a server.",
                      "x-ms-mutability": [
                        "read",
                        "update"
                      ],
                      "type": "object",
                      "properties": {
                        "role": {
                          "description": "Role of the server in a replication set.",
                          "type": "string",
                          "enum": [
                            "None",
                            "Primary",
                            "AsyncReplica",
                            "GeoAsyncReplica"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationRole",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "None",
                                "description": "No replication role assigned; the server operates independently."
                              },
                              {
                                "value": "Primary",
                                "description": "Acts as the source server for replication to one or more replicas."
                              },
                              {
                                "value": "AsyncReplica",
                                "description": "Receives data asynchronously from a primary server within the same region."
                              },
                              {
                                "value": "GeoAsyncReplica",
                                "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                              }
                            ]
                          }
                        },
                        "capacity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Maximum number of read replicas allowed for a server.",
                          "readOnly": true
                        },
                        "replicationState": {
                          "type": "string",
                          "enum": [
                            "Active",
                            "Catchup",
                            "Provisioning",
                            "Updating",
                            "Broken",
                            "Reconfiguring"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Active",
                                "description": "Read replica is fully synchronized and actively replicating data from the primary server."
                              },
                              {
                                "value": "Catchup",
                                "description": "Read replica is behind the primary server and is currently catching up with pending changes."
                              },
                              {
                                "value": "Provisioning",
                                "description": "Read replica is being created and is in process of getting initialized."
                              },
                              {
                                "value": "Updating",
                                "description": "Read replica is undergoing some changes it can be changing compute size of promoting it to primary server."
                              },
                              {
                                "value": "Broken",
                                "description": "Replication has failed or been interrupted."
                              },
                              {
                                "value": "Reconfiguring",
                                "description": "Read replica is being reconfigured, possibly due to changes in source or settings."
                              }
                            ]
                          },
                          "description": "Indicates the replication state of a read replica. This property is returned only when the target server is a read replica. Possible  values are Active, Broken, Catchup, Provisioning, Reconfiguring, and Updating",
                          "readOnly": true
                        },
                        "promoteMode": {
                          "type": "string",
                          "description": "Type of operation to apply on the read replica. This property is write only. Standalone means that the read replica will be promoted to a standalone server, and will become a completely independent entity from the replication set. Switchover means that the read replica will roles with the primary server.",
                          "enum": [
                            "Standalone",
                            "Switchover"
                          ],
                          "x-ms-enum": {
                            "name": "ReadReplicaPromoteMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Standalone",
                                "description": "Read replica will become an independent server."
                              },
                              {
                                "value": "Switchover",
                                "description": "Read replica will swap roles with primary server."
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "update"
                          ]
                        },
                        "promoteOption": {
                          "type": "string",
                          "description": "Data synchronization option to use when processing the operation specified in the promoteMode property. This property is write only.",
                          "enum": [
                            "Planned",
                            "Forced"
                          ],
                          "x-ms-enum": {
                            "name": "ReadReplicaPromoteOption",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Planned",
                                "description": "The operation will wait for data in the read replica to be fully synchronized with its source server, before it initiates the operation."
                              },
                              {
                                "value": "Forced",
                                "description": "The operation will not wait for data in the read replica to be synchronized with its source server, before it initiates the operation."
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "update"
                          ]
                        }
                      }
                    },
                    "network": {
                      "default": null,
                      "description": "Network properties of a server. Only required if you want your server to be integrated into a virtual network provided by customer.",
                      "type": "object",
                      "properties": {
                        "publicNetworkAccess": {
                          "type": "string",
                          "description": "Indicates if public network access is enabled or not. This is only supported for servers that are not integrated into a virtual network which is owned and provided by customer when server is deployed.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "ServerPublicNetworkAccessState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Public network access is enabled. This allows the server to be accessed from the public internet, provided the necessary firewall rule that allows incoming traffic originating from the connecting client is in place. This is compatible with the use of private endpoints to connect to this server."
                              },
                              {
                                "value": "Disabled",
                                "description": "Public network access is disabled. This means the server cannot be accessed from the public internet, but only via private endpoints."
                              }
                            ]
                          }
                        },
                        "delegatedSubnetResourceId": {
                          "type": "string",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Network/virtualNetworks/subnets"
                              }
                            ]
                          },
                          "description": "Resource identifier of the delegated subnet. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                        },
                        "privateDnsZoneArmResourceId": {
                          "type": "string",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Network/privateDnsZones"
                              }
                            ]
                          },
                          "description": "Identifier of the private DNS zone. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                        }
                      }
                    },
                    "cluster": {
                      "default": null,
                      "description": "Cluster properties of a server.",
                      "x-ms-mutability": [
                        "read",
                        "update"
                      ],
                      "type": "object",
                      "properties": {
                        "clusterSize": {
                          "type": "integer",
                          "format": "int32",
                          "default": 0,
                          "description": "Number of nodes assigned to the elastic cluster."
                        },
                        "defaultDatabaseName": {
                          "type": "string",
                          "description": "Default database name for the elastic cluster."
                        }
                      }
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Application-specific metadata in the form of key-value pairs."
                }
              },
              "description": "Represents a server to be updated."
            },
            "description": "Parameters required to update a server."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Delete",
        "description": "Deletes or drops an existing server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content."
          }
        }
      },
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Get",
        "description": "Gets information about an existing server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "sku": {
                  "description": "Compute tier and size of a server.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name by which is known a given compute size assigned to a server."
                    },
                    "tier": {
                      "type": "string",
                      "description": "Tier of the compute assigned to a server.",
                      "enum": [
                        "Burstable",
                        "GeneralPurpose",
                        "MemoryOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Burstable",
                            "description": "Cost-effective tier for infrequent CPU usage, ideal for development and testing workloads with low performance requirements."
                          },
                          {
                            "value": "GeneralPurpose",
                            "description": "Balanced compute and memory for most workloads, offering scalable performance and I/O throughput."
                          },
                          {
                            "value": "MemoryOptimized",
                            "description": "High memory-to-core ratio for demanding workloads needing fast in-memory processing and high concurrency."
                          }
                        ]
                      }
                    }
                  },
                  "required": [
                    "name",
                    "tier"
                  ]
                },
                "identity": {
                  "description": "User assigned managed identities assigned to the server.",
                  "type": "object",
                  "properties": {
                    "userAssignedIdentities": {
                      "description": "Map of user assigned managed identities.",
                      "type": "object",
                      "additionalProperties": {
                        "description": "User assigned managed identity associated with a server.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                          },
                          "clientId": {
                            "type": "string",
                            "description": "Identifier of the client of the service principal associated to the user assigned managed identity."
                          }
                        }
                      }
                    },
                    "principalId": {
                      "type": "string",
                      "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "Types of identities associated with a server.",
                      "enum": [
                        "None",
                        "UserAssigned",
                        "SystemAssigned",
                        "SystemAssigned,UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "IdentityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "None",
                            "description": "No managed identity is assigned to the server."
                          },
                          {
                            "value": "UserAssigned",
                            "description": "One or more managed identities provided by the user are assigned to the server."
                          },
                          {
                            "value": "SystemAssigned",
                            "description": "Azure automatically creates and manages the identity associated to the lifecycle of the server."
                          },
                          {
                            "value": "SystemAssigned,UserAssigned",
                            "description": "Both system-assigned and user-assigned identities are assigned to the server."
                          }
                        ]
                      }
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "Identifier of the tenant of a server.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of a server.",
                  "type": "object",
                  "properties": {
                    "administratorLogin": {
                      "type": "string",
                      "description": "Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "administratorLoginPassword": {
                      "type": "string",
                      "description": "Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.",
                      "x-ms-secret": true,
                      "format": "password",
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "version": {
                      "description": "Major version of PostgreSQL database engine.",
                      "type": "string",
                      "enum": [
                        "18",
                        "17",
                        "16",
                        "15",
                        "14",
                        "13",
                        "12",
                        "11"
                      ],
                      "x-ms-enum": {
                        "name": "PostgresMajorVersion",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "18",
                            "description": "PostgreSQL 18."
                          },
                          {
                            "value": "17",
                            "description": "PostgreSQL 17."
                          },
                          {
                            "value": "16",
                            "description": "PostgreSQL 16."
                          },
                          {
                            "value": "15",
                            "description": "PostgreSQL 15."
                          },
                          {
                            "value": "14",
                            "description": "PostgreSQL 14."
                          },
                          {
                            "value": "13",
                            "description": "PostgreSQL 13."
                          },
                          {
                            "value": "12",
                            "description": "PostgreSQL 12."
                          },
                          {
                            "value": "11",
                            "description": "PostgreSQL 11."
                          }
                        ]
                      }
                    },
                    "minorVersion": {
                      "type": "string",
                      "description": "Minor version of PostgreSQL database engine.",
                      "readOnly": true
                    },
                    "state": {
                      "type": "string",
                      "description": "Possible states of a server.",
                      "readOnly": true,
                      "enum": [
                        "Ready",
                        "Dropping",
                        "Disabled",
                        "Starting",
                        "Stopping",
                        "Stopped",
                        "Updating",
                        "Restarting",
                        "Inaccessible",
                        "Provisioning"
                      ],
                      "x-ms-enum": {
                        "name": "ServerState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Ready",
                            "description": "Server is healthy and not undergoing any operations at the management or control plane level. This doesn't mean that the server is fully operational at the data plane level."
                          },
                          {
                            "value": "Dropping",
                            "description": "Server is being deleted."
                          },
                          {
                            "value": "Disabled",
                            "description": "Server is disabled. Typical reasons include: the subscription on which the server is deployed is explicitly disabled or canceled by the administrator, the spending limit has been reached, or the bill is past due. May also happen when the server is being moved to another resource group or subscription."
                          },
                          {
                            "value": "Starting",
                            "description": "PostgreSQL database engine is being restarted."
                          },
                          {
                            "value": "Stopping",
                            "description": "Compute resources associated with the server are being stopped and deallocated. If the server has high availability enabled, the compute resources of the standby server are also stopped and deallocated."
                          },
                          {
                            "value": "Stopped",
                            "description": "Compute resources associated with the server are being stopped and deallocated."
                          },
                          {
                            "value": "Updating",
                            "description": "Server is undergoing some changes which may or may not impact the availability of the PostgreSQL database engine. For example, the compute resources of the server are being scaled up or down, which may cause temporary unavailability of the database engine. Or, for example, a firewall rule is being added or removed, which doesn't cause any unavailability of the database engine."
                          },
                          {
                            "value": "Restarting",
                            "description": "PostgreSQL database engine is being restarted."
                          },
                          {
                            "value": "Inaccessible",
                            "description": "Server isn't accessible, because the key provided to encrypt and decrypt the data is in invalid state."
                          },
                          {
                            "value": "Provisioning",
                            "description": "Server is in the process of being created."
                          }
                        ]
                      }
                    },
                    "fullyQualifiedDomainName": {
                      "type": "string",
                      "description": "Fully qualified domain name of a server.",
                      "readOnly": true
                    },
                    "storage": {
                      "default": null,
                      "description": "Storage properties of a server.",
                      "type": "object",
                      "properties": {
                        "storageSizeGB": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Size of storage assigned to a server."
                        },
                        "autoGrow": {
                          "type": "string",
                          "description": "Flag to enable or disable the automatic growth of storage size of a server when available space is nearing zero and conditions allow for automatically growing storage size.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "StorageAutoGrow",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Server should automatically grow storage size when available space is nearing zero and conditions allow for automatically growing storage size."
                              },
                              {
                                "value": "Disabled",
                                "description": "Server should not automatically grow storage size when available space is nearing zero."
                              }
                            ]
                          }
                        },
                        "tier": {
                          "type": "string",
                          "description": "Storage tier of a server.",
                          "enum": [
                            "P1",
                            "P2",
                            "P3",
                            "P4",
                            "P6",
                            "P10",
                            "P15",
                            "P20",
                            "P30",
                            "P40",
                            "P50",
                            "P60",
                            "P70",
                            "P80"
                          ],
                          "x-ms-enum": {
                            "name": "AzureManagedDiskPerformanceTier",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "P1",
                                "description": "Entry-level SSD for minimal IOPS, ideal for light development or testing workloads."
                              },
                              {
                                "value": "P2",
                                "description": "Slightly higher IOPS for small-scale applications needing consistent low latency."
                              },
                              {
                                "value": "P3",
                                "description": "Balanced performance for basic production workloads with moderate throughput."
                              },
                              {
                                "value": "P4",
                                "description": "Enhanced IOPS for growing apps with predictable performance needs."
                              },
                              {
                                "value": "P6",
                                "description": "Mid-tier SSD for steady workloads requiring reliable throughput and latency."
                              },
                              {
                                "value": "P10",
                                "description": "Popular choice for general-purpose production workloads with scalable performance."
                              },
                              {
                                "value": "P15",
                                "description": "High IOPS tier for demanding apps with frequent read/write operations."
                              },
                              {
                                "value": "P20",
                                "description": "Entry point for high-performance Solid State Disks (SSDs), suitable for small-scale I/O-intensive workloads."
                              },
                              {
                                "value": "P30",
                                "description": "Balanced tier for moderate throughput and latency-sensitive applications."
                              },
                              {
                                "value": "P40",
                                "description": "Enhanced performance for growing production workloads with consistent IOPS demands."
                              },
                              {
                                "value": "P50",
                                "description": "Optimized for enterprise-grade applications needing sustained high throughput."
                              },
                              {
                                "value": "P60",
                                "description": "High-capacity tier for large databases and analytics workloads with elevated IOPS."
                              },
                              {
                                "value": "P70",
                                "description": "Designed for mission-critical systems requiring ultra-low latency and high concurrency."
                              },
                              {
                                "value": "P80",
                                "description": "Top-tier SSD for maximum IOPS and throughput, ideal for the most demanding workloads."
                              }
                            ]
                          }
                        },
                        "iops": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                        },
                        "throughput": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                        },
                        "type": {
                          "type": "string",
                          "enum": [
                            "Premium_LRS",
                            "PremiumV2_LRS",
                            "UltraSSD_LRS"
                          ],
                          "x-ms-enum": {
                            "name": "StorageType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Premium_LRS",
                                "description": "Standard Solid State Disk (SSD) backed storage offering consistent performance for general purpose workloads."
                              },
                              {
                                "value": "PremiumV2_LRS",
                                "description": "Next generation Solid State Disk (SSD) storage with improved scalability and performance for demanding enterprise workloads."
                              },
                              {
                                "value": "UltraSSD_LRS",
                                "description": "High-end Solid State Disk (SSD) storage designed for extreme IOPS and latency-sensitive applications."
                              }
                            ]
                          },
                          "description": "Type of storage assigned to a server. Allowed values are Premium_LRS, PremiumV2_LRS, or UltraSSD_LRS. If not specified, it defaults to Premium_LRS."
                        }
                      }
                    },
                    "authConfig": {
                      "default": null,
                      "description": "Authentication configuration properties of a server.",
                      "type": "object",
                      "properties": {
                        "activeDirectoryAuth": {
                          "type": "string",
                          "description": "Indicates if the server supports Microsoft Entra authentication.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "MicrosoftEntraAuth",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Server supports Microsoft Entra authentication."
                              },
                              {
                                "value": "Disabled",
                                "description": "Server doesn't support Microsoft Entra authentication."
                              }
                            ]
                          }
                        },
                        "passwordAuth": {
                          "type": "string",
                          "default": "Enabled",
                          "description": "Indicates if the server supports password based authentication.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "PasswordBasedAuth",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Server supports password based authentication."
                              },
                              {
                                "value": "Disabled",
                                "description": "Server doesn't support password based authentication."
                              }
                            ]
                          }
                        },
                        "tenantId": {
                          "type": "string",
                          "default": "",
                          "description": "Identifier of the tenant of the delegated resource."
                        }
                      }
                    },
                    "dataEncryption": {
                      "default": null,
                      "description": "Data encryption properties of a server.",
                      "type": "object",
                      "properties": {
                        "primaryKeyURI": {
                          "type": "string",
                          "description": "URI of the key in Azure Key Vault used for data encryption of the primary storage associated to a server."
                        },
                        "primaryUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the primary storage associated to a server."
                        },
                        "geoBackupKeyURI": {
                          "type": "string",
                          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                        },
                        "geoBackupUserAssignedIdentityId": {
                          "type": "string",
                          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                        },
                        "type": {
                          "type": "string",
                          "description": "Data encryption type used by a server.",
                          "enum": [
                            "SystemManaged",
                            "AzureKeyVault"
                          ],
                          "x-ms-enum": {
                            "name": "DataEncryptionType",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "SystemManaged",
                                "description": "Encryption managed by Azure using platform managed keys for simplicity and compliance."
                              },
                              {
                                "value": "AzureKeyVault",
                                "description": "Encryption using customer managed keys stored in Azure Key Vault for enhanced control and security."
                              }
                            ]
                          }
                        },
                        "primaryEncryptionKeyStatus": {
                          "type": "string",
                          "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the primary storage associated to the server.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "enum": [
                            "Valid",
                            "Invalid"
                          ],
                          "x-ms-enum": {
                            "name": "EncryptionKeyStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Valid",
                                "description": "Key is valid and can be used for encryption."
                              },
                              {
                                "value": "Invalid",
                                "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                              }
                            ]
                          }
                        },
                        "geoBackupEncryptionKeyStatus": {
                          "type": "string",
                          "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the geographically redundant storage associated to the server when it is configured to support geographically redundant backups.",
                          "x-ms-mutability": [
                            "read"
                          ],
                          "enum": [
                            "Valid",
                            "Invalid"
                          ],
                          "x-ms-enum": {
                            "name": "EncryptionKeyStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Valid",
                                "description": "Key is valid and can be used for encryption."
                              },
                              {
                                "value": "Invalid",
                                "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "backup": {
                      "default": null,
                      "description": "Backup properties of a server.",
                      "type": "object",
                      "properties": {
                        "backupRetentionDays": {
                          "type": "integer",
                          "format": "int32",
                          "default": 7,
                          "description": "Backup retention days for the server."
                        },
                        "geoRedundantBackup": {
                          "type": "string",
                          "default": "Disabled",
                          "description": "Indicates if the server is configured to create geographically redundant backups.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "GeographicallyRedundantBackup",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Server is configured to create geographically redundant backups."
                              },
                              {
                                "value": "Disabled",
                                "description": "Server is not configured to create geographically redundant backups."
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "create",
                            "read"
                          ]
                        },
                        "earliestRestoreDate": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Earliest restore point time (ISO8601 format) for a server.",
                          "readOnly": true
                        }
                      }
                    },
                    "network": {
                      "default": null,
                      "description": "Network properties of a server. Only required if you want your server to be integrated into a virtual network provided by customer.",
                      "type": "object",
                      "properties": {
                        "publicNetworkAccess": {
                          "type": "string",
                          "description": "Indicates if public network access is enabled or not. This is only supported for servers that are not integrated into a virtual network which is owned and provided by customer when server is deployed.",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "ServerPublicNetworkAccessState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Enabled",
                                "description": "Public network access is enabled. This allows the server to be accessed from the public internet, provided the necessary firewall rule that allows incoming traffic originating from the connecting client is in place. This is compatible with the use of private endpoints to connect to this server."
                              },
                              {
                                "value": "Disabled",
                                "description": "Public network access is disabled. This means the server cannot be accessed from the public internet, but only via private endpoints."
                              }
                            ]
                          }
                        },
                        "delegatedSubnetResourceId": {
                          "type": "string",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Network/virtualNetworks/subnets"
                              }
                            ]
                          },
                          "description": "Resource identifier of the delegated subnet. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                        },
                        "privateDnsZoneArmResourceId": {
                          "type": "string",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Network/privateDnsZones"
                              }
                            ]
                          },
                          "description": "Identifier of the private DNS zone. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                        }
                      }
                    },
                    "highAvailability": {
                      "default": null,
                      "description": "High availability properties of a server.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "type": "string",
                          "default": "Disabled",
                          "description": "High availability mode for a server.",
                          "enum": [
                            "Disabled",
                            "ZoneRedundant",
                            "SameZone"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Disabled",
                                "description": "High availability is disabled for the server."
                              },
                              {
                                "value": "ZoneRedundant",
                                "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                              },
                              {
                                "value": "SameZone",
                                "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                              }
                            ]
                          }
                        },
                        "state": {
                          "type": "string",
                          "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
                          "enum": [
                            "NotEnabled",
                            "CreatingStandby",
                            "ReplicatingData",
                            "FailingOver",
                            "Healthy",
                            "RemovingStandby"
                          ],
                          "x-ms-enum": {
                            "name": "HighAvailabilityState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "NotEnabled",
                                "description": "High availability is not enabled for the server."
                              },
                              {
                                "value": "CreatingStandby",
                                "description": "Standby server is being created."
                              },
                              {
                                "value": "ReplicatingData",
                                "description": "Data is being replicated to the standby server."
                              },
                              {
                                "value": "FailingOver",
                                "description": "Failover operation to the standby server is in progress."
                              },
                              {
                                "value": "Healthy",
                                "description": "Standby server is healthy and ready to take over in case of a failover."
                              },
                              {
                                "value": "RemovingStandby",
                                "description": "Standby server is being removed."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "standbyAvailabilityZone": {
                          "type": "string",
                          "default": "",
                          "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
                        }
                      }
                    },
                    "maintenanceWindow": {
                      "default": null,
                      "description": "Maintenance window properties of a server.",
                      "x-ms-mutability": [
                        "update",
                        "read"
                      ],
                      "type": "object",
                      "properties": {
                        "customWindow": {
                          "type": "string",
                          "default": "Disabled",
                          "description": "Indicates whether custom window is enabled or disabled."
                        },
                        "startHour": {
                          "type": "integer",
                          "format": "int32",
                          "default": 0,
                          "description": "Start hour to be used for maintenance window."
                        },
                        "startMinute": {
                          "type": "integer",
                          "format": "int32",
                          "default": 0,
                          "description": "Start minute to be used for maintenance window."
                        },
                        "dayOfWeek": {
                          "type": "integer",
                          "format": "int32",
                          "default": 0,
                          "description": "Day of the week to be used for maintenance window."
                        }
                      }
                    },
                    "sourceServerResourceId": {
                      "type": "string",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.DBforPostgreSQL/flexibleServers"
                          }
                        ]
                      },
                      "description": "Identifier of the server to be used as the source of the new server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target server is a read replica.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "pointInTimeUTC": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Creation time (in ISO8601 format) of the backup which you want to restore in the new server. It's required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', or 'ReviveDropped'.",
                      "x-ms-mutability": [
                        "create"
                      ]
                    },
                    "availabilityZone": {
                      "type": "string",
                      "default": "",
                      "description": "Availability zone of a server.",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ]
                    },
                    "replicationRole": {
                      "description": "Role of the server in a replication set.",
                      "type": "string",
                      "enum": [
                        "None",
                        "Primary",
                        "AsyncReplica",
                        "GeoAsyncReplica"
                      ],
                      "x-ms-enum": {
                        "name": "ReplicationRole",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "None",
                            "description": "No replication role assigned; the server operates independently."
                          },
                          {
                            "value": "Primary",
                            "description": "Acts as the source server for replication to one or more replicas."
                          },
                          {
                            "value": "AsyncReplica",
                            "description": "Receives data asynchronously from a primary server within the same region."
                          },
                          {
                            "value": "GeoAsyncReplica",
                            "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                          }
                        ]
                      }
                    },
                    "replicaCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum number of read replicas allowed for a server.",
                      "readOnly": true
                    },
                    "replica": {
                      "description": "Read replica properties of a server. Required only in case that you want to promote a server.",
                      "x-ms-mutability": [
                        "read",
                        "update"
                      ],
                      "type": "object",
                      "properties": {
                        "role": {
                          "description": "Role of the server in a replication set.",
                          "type": "string",
                          "enum": [
                            "None",
                            "Primary",
                            "AsyncReplica",
                            "GeoAsyncReplica"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationRole",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "None",
                                "description": "No replication role assigned; the server operates independently."
                              },
                              {
                                "value": "Primary",
                                "description": "Acts as the source server for replication to one or more replicas."
                              },
                              {
                                "value": "AsyncReplica",
                                "description": "Receives data asynchronously from a primary server within the same region."
                              },
                              {
                                "value": "GeoAsyncReplica",
                                "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                              }
                            ]
                          }
                        },
                        "capacity": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Maximum number of read replicas allowed for a server.",
                          "readOnly": true
                        },
                        "replicationState": {
                          "type": "string",
                          "enum": [
                            "Active",
                            "Catchup",
                            "Provisioning",
                            "Updating",
                            "Broken",
                            "Reconfiguring"
                          ],
                          "x-ms-enum": {
                            "name": "ReplicationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Active",
                                "description": "Read replica is fully synchronized and actively replicating data from the primary server."
                              },
                              {
                                "value": "Catchup",
                                "description": "Read replica is behind the primary server and is currently catching up with pending changes."
                              },
                              {
                                "value": "Provisioning",
                                "description": "Read replica is being created and is in process of getting initialized."
                              },
                              {
                                "value": "Updating",
                                "description": "Read replica is undergoing some changes it can be changing compute size of promoting it to primary server."
                              },
                              {
                                "value": "Broken",
                                "description": "Replication has failed or been interrupted."
                              },
                              {
                                "value": "Reconfiguring",
                                "description": "Read replica is being reconfigured, possibly due to changes in source or settings."
                              }
                            ]
                          },
                          "description": "Indicates the replication state of a read replica. This property is returned only when the target server is a read replica. Possible  values are Active, Broken, Catchup, Provisioning, Reconfiguring, and Updating",
                          "readOnly": true
                        },
                        "promoteMode": {
                          "type": "string",
                          "description": "Type of operation to apply on the read replica. This property is write only. Standalone means that the read replica will be promoted to a standalone server, and will become a completely independent entity from the replication set. Switchover means that the read replica will roles with the primary server.",
                          "enum": [
                            "Standalone",
                            "Switchover"
                          ],
                          "x-ms-enum": {
                            "name": "ReadReplicaPromoteMode",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Standalone",
                                "description": "Read replica will become an independent server."
                              },
                              {
                                "value": "Switchover",
                                "description": "Read replica will swap roles with primary server."
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "update"
                          ]
                        },
                        "promoteOption": {
                          "type": "string",
                          "description": "Data synchronization option to use when processing the operation specified in the promoteMode property. This property is write only.",
                          "enum": [
                            "Planned",
                            "Forced"
                          ],
                          "x-ms-enum": {
                            "name": "ReadReplicaPromoteOption",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Planned",
                                "description": "The operation will wait for data in the read replica to be fully synchronized with its source server, before it initiates the operation."
                              },
                              {
                                "value": "Forced",
                                "description": "The operation will not wait for data in the read replica to be synchronized with its source server, before it initiates the operation."
                              }
                            ]
                          },
                          "x-ms-mutability": [
                            "update"
                          ]
                        }
                      }
                    },
                    "createMode": {
                      "type": "string",
                      "description": "Creation mode of a new server.",
                      "enum": [
                        "Default",
                        "Create",
                        "Update",
                        "PointInTimeRestore",
                        "GeoRestore",
                        "Replica",
                        "ReviveDropped"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Default",
                            "description": "If the operation is triggered on a non-existing server, it's equivalent to 'Create'. If the operation is triggered on an existing server, it's equivalent to 'Update'."
                          },
                          {
                            "value": "Create",
                            "description": "Operation creates a new server."
                          },
                          {
                            "value": "Update",
                            "description": "Operation updates an existing server."
                          },
                          {
                            "value": "PointInTimeRestore",
                            "description": "Operation restores an existing backup of an existing server. This operation creates a new server, and then restores on it the backup of an existing server at a specific point in time."
                          },
                          {
                            "value": "GeoRestore",
                            "description": "Operation restores an existing backup of an existing server, on the paired region of the existing server. This operation creates a new server on the paired region of the existing server, and then restores on it the backup of an existing server at a specific point in time, in a different region. This operation is only supported on existing servers that were created with geographically redundant backups enabled."
                          },
                          {
                            "value": "Replica",
                            "description": "Operation creates a replica of an existing server. This operation creates a new server, restores a base backup of the existing server (referred to as primary), and configures physical replication to asynchronously stream all changes which are recorded in the transaction log of the primary."
                          },
                          {
                            "value": "ReviveDropped",
                            "description": "Operation creates a new server, initialized with the backup of a server that was recently deleted."
                          }
                        ]
                      },
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ]
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The private endpoint connection resource.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                            "readOnly": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the resource",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                            "readOnly": true
                          },
                          "systemData": {
                            "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "createdBy": {
                                "type": "string",
                                "description": "The identity that created the resource."
                              },
                              "createdByType": {
                                "type": "string",
                                "description": "The type of identity that created the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "createdAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource creation (UTC)."
                              },
                              "lastModifiedBy": {
                                "type": "string",
                                "description": "The identity that last modified the resource."
                              },
                              "lastModifiedByType": {
                                "type": "string",
                                "description": "The type of identity that last modified the resource.",
                                "enum": [
                                  "User",
                                  "Application",
                                  "ManagedIdentity",
                                  "Key"
                                ],
                                "x-ms-enum": {
                                  "name": "createdByType",
                                  "modelAsString": true
                                }
                              },
                              "lastModifiedAt": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The timestamp of resource last modification (UTC)"
                              }
                            }
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "groupIds": {
                                "type": "array",
                                "description": "The group ids for the private endpoint resource.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "privateEndpoint": {
                                "description": "The private endpoint resource.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The ARM identifier for private endpoint.",
                                    "readOnly": true
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "A collection of information about the state of the connection between service consumer and provider.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                    "type": "string",
                                    "enum": [
                                      "Pending",
                                      "Approved",
                                      "Rejected"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PrivateEndpointServiceConnectionStatus",
                                      "modelAsString": true
                                    }
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The reason for approval/rejection of the connection."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                  }
                                }
                              },
                              "provisioningState": {
                                "description": "The provisioning state of the private endpoint connection resource.",
                                "type": "string",
                                "enum": [
                                  "Succeeded",
                                  "Creating",
                                  "Deleting",
                                  "Failed"
                                ],
                                "x-ms-enum": {
                                  "name": "PrivateEndpointConnectionProvisioningState",
                                  "modelAsString": true
                                },
                                "readOnly": true
                              }
                            },
                            "required": [
                              "privateLinkServiceConnectionState"
                            ]
                          }
                        }
                      },
                      "description": "List of private endpoint connections associated with the specified server.",
                      "readOnly": true
                    },
                    "cluster": {
                      "default": null,
                      "description": "Cluster properties of a server.",
                      "x-ms-mutability": [
                        "create",
                        "read",
                        "update"
                      ],
                      "type": "object",
                      "properties": {
                        "clusterSize": {
                          "type": "integer",
                          "format": "int32",
                          "default": 0,
                          "description": "Number of nodes assigned to the elastic cluster."
                        },
                        "defaultDatabaseName": {
                          "type": "string",
                          "description": "Default database name for the elastic cluster."
                        }
                      }
                    }
                  }
                }
              },
              "description": "Properties of a server."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_ListByResourceGroup",
        "description": "Lists all servers in a resource group.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "sku": {
                        "description": "Compute tier and size of a server.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name by which is known a given compute size assigned to a server."
                          },
                          "tier": {
                            "type": "string",
                            "description": "Tier of the compute assigned to a server.",
                            "enum": [
                              "Burstable",
                              "GeneralPurpose",
                              "MemoryOptimized"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Burstable",
                                  "description": "Cost-effective tier for infrequent CPU usage, ideal for development and testing workloads with low performance requirements."
                                },
                                {
                                  "value": "GeneralPurpose",
                                  "description": "Balanced compute and memory for most workloads, offering scalable performance and I/O throughput."
                                },
                                {
                                  "value": "MemoryOptimized",
                                  "description": "High memory-to-core ratio for demanding workloads needing fast in-memory processing and high concurrency."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "tier"
                        ]
                      },
                      "identity": {
                        "description": "User assigned managed identities assigned to the server.",
                        "type": "object",
                        "properties": {
                          "userAssignedIdentities": {
                            "description": "Map of user assigned managed identities.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "User assigned managed identity associated with a server.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                                },
                                "clientId": {
                                  "type": "string",
                                  "description": "Identifier of the client of the service principal associated to the user assigned managed identity."
                                }
                              }
                            }
                          },
                          "principalId": {
                            "type": "string",
                            "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                          },
                          "type": {
                            "type": "string",
                            "description": "Types of identities associated with a server.",
                            "enum": [
                              "None",
                              "UserAssigned",
                              "SystemAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "None",
                                  "description": "No managed identity is assigned to the server."
                                },
                                {
                                  "value": "UserAssigned",
                                  "description": "One or more managed identities provided by the user are assigned to the server."
                                },
                                {
                                  "value": "SystemAssigned",
                                  "description": "Azure automatically creates and manages the identity associated to the lifecycle of the server."
                                },
                                {
                                  "value": "SystemAssigned,UserAssigned",
                                  "description": "Both system-assigned and user-assigned identities are assigned to the server."
                                }
                              ]
                            }
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "Identifier of the tenant of a server.",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of a server.",
                        "type": "object",
                        "properties": {
                          "administratorLogin": {
                            "type": "string",
                            "description": "Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "administratorLoginPassword": {
                            "type": "string",
                            "description": "Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.",
                            "x-ms-secret": true,
                            "format": "password",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "version": {
                            "description": "Major version of PostgreSQL database engine.",
                            "type": "string",
                            "enum": [
                              "18",
                              "17",
                              "16",
                              "15",
                              "14",
                              "13",
                              "12",
                              "11"
                            ],
                            "x-ms-enum": {
                              "name": "PostgresMajorVersion",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "18",
                                  "description": "PostgreSQL 18."
                                },
                                {
                                  "value": "17",
                                  "description": "PostgreSQL 17."
                                },
                                {
                                  "value": "16",
                                  "description": "PostgreSQL 16."
                                },
                                {
                                  "value": "15",
                                  "description": "PostgreSQL 15."
                                },
                                {
                                  "value": "14",
                                  "description": "PostgreSQL 14."
                                },
                                {
                                  "value": "13",
                                  "description": "PostgreSQL 13."
                                },
                                {
                                  "value": "12",
                                  "description": "PostgreSQL 12."
                                },
                                {
                                  "value": "11",
                                  "description": "PostgreSQL 11."
                                }
                              ]
                            }
                          },
                          "minorVersion": {
                            "type": "string",
                            "description": "Minor version of PostgreSQL database engine.",
                            "readOnly": true
                          },
                          "state": {
                            "type": "string",
                            "description": "Possible states of a server.",
                            "readOnly": true,
                            "enum": [
                              "Ready",
                              "Dropping",
                              "Disabled",
                              "Starting",
                              "Stopping",
                              "Stopped",
                              "Updating",
                              "Restarting",
                              "Inaccessible",
                              "Provisioning"
                            ],
                            "x-ms-enum": {
                              "name": "ServerState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Ready",
                                  "description": "Server is healthy and not undergoing any operations at the management or control plane level. This doesn't mean that the server is fully operational at the data plane level."
                                },
                                {
                                  "value": "Dropping",
                                  "description": "Server is being deleted."
                                },
                                {
                                  "value": "Disabled",
                                  "description": "Server is disabled. Typical reasons include: the subscription on which the server is deployed is explicitly disabled or canceled by the administrator, the spending limit has been reached, or the bill is past due. May also happen when the server is being moved to another resource group or subscription."
                                },
                                {
                                  "value": "Starting",
                                  "description": "PostgreSQL database engine is being restarted."
                                },
                                {
                                  "value": "Stopping",
                                  "description": "Compute resources associated with the server are being stopped and deallocated. If the server has high availability enabled, the compute resources of the standby server are also stopped and deallocated."
                                },
                                {
                                  "value": "Stopped",
                                  "description": "Compute resources associated with the server are being stopped and deallocated."
                                },
                                {
                                  "value": "Updating",
                                  "description": "Server is undergoing some changes which may or may not impact the availability of the PostgreSQL database engine. For example, the compute resources of the server are being scaled up or down, which may cause temporary unavailability of the database engine. Or, for example, a firewall rule is being added or removed, which doesn't cause any unavailability of the database engine."
                                },
                                {
                                  "value": "Restarting",
                                  "description": "PostgreSQL database engine is being restarted."
                                },
                                {
                                  "value": "Inaccessible",
                                  "description": "Server isn't accessible, because the key provided to encrypt and decrypt the data is in invalid state."
                                },
                                {
                                  "value": "Provisioning",
                                  "description": "Server is in the process of being created."
                                }
                              ]
                            }
                          },
                          "fullyQualifiedDomainName": {
                            "type": "string",
                            "description": "Fully qualified domain name of a server.",
                            "readOnly": true
                          },
                          "storage": {
                            "default": null,
                            "description": "Storage properties of a server.",
                            "type": "object",
                            "properties": {
                              "storageSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Size of storage assigned to a server."
                              },
                              "autoGrow": {
                                "type": "string",
                                "description": "Flag to enable or disable the automatic growth of storage size of a server when available space is nearing zero and conditions allow for automatically growing storage size.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageAutoGrow",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Server should automatically grow storage size when available space is nearing zero and conditions allow for automatically growing storage size."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Server should not automatically grow storage size when available space is nearing zero."
                                    }
                                  ]
                                }
                              },
                              "tier": {
                                "type": "string",
                                "description": "Storage tier of a server.",
                                "enum": [
                                  "P1",
                                  "P2",
                                  "P3",
                                  "P4",
                                  "P6",
                                  "P10",
                                  "P15",
                                  "P20",
                                  "P30",
                                  "P40",
                                  "P50",
                                  "P60",
                                  "P70",
                                  "P80"
                                ],
                                "x-ms-enum": {
                                  "name": "AzureManagedDiskPerformanceTier",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "P1",
                                      "description": "Entry-level SSD for minimal IOPS, ideal for light development or testing workloads."
                                    },
                                    {
                                      "value": "P2",
                                      "description": "Slightly higher IOPS for small-scale applications needing consistent low latency."
                                    },
                                    {
                                      "value": "P3",
                                      "description": "Balanced performance for basic production workloads with moderate throughput."
                                    },
                                    {
                                      "value": "P4",
                                      "description": "Enhanced IOPS for growing apps with predictable performance needs."
                                    },
                                    {
                                      "value": "P6",
                                      "description": "Mid-tier SSD for steady workloads requiring reliable throughput and latency."
                                    },
                                    {
                                      "value": "P10",
                                      "description": "Popular choice for general-purpose production workloads with scalable performance."
                                    },
                                    {
                                      "value": "P15",
                                      "description": "High IOPS tier for demanding apps with frequent read/write operations."
                                    },
                                    {
                                      "value": "P20",
                                      "description": "Entry point for high-performance Solid State Disks (SSDs), suitable for small-scale I/O-intensive workloads."
                                    },
                                    {
                                      "value": "P30",
                                      "description": "Balanced tier for moderate throughput and latency-sensitive applications."
                                    },
                                    {
                                      "value": "P40",
                                      "description": "Enhanced performance for growing production workloads with consistent IOPS demands."
                                    },
                                    {
                                      "value": "P50",
                                      "description": "Optimized for enterprise-grade applications needing sustained high throughput."
                                    },
                                    {
                                      "value": "P60",
                                      "description": "High-capacity tier for large databases and analytics workloads with elevated IOPS."
                                    },
                                    {
                                      "value": "P70",
                                      "description": "Designed for mission-critical systems requiring ultra-low latency and high concurrency."
                                    },
                                    {
                                      "value": "P80",
                                      "description": "Top-tier SSD for maximum IOPS and throughput, ideal for the most demanding workloads."
                                    }
                                  ]
                                }
                              },
                              "iops": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                              },
                              "throughput": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Premium_LRS",
                                  "PremiumV2_LRS",
                                  "UltraSSD_LRS"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Premium_LRS",
                                      "description": "Standard Solid State Disk (SSD) backed storage offering consistent performance for general purpose workloads."
                                    },
                                    {
                                      "value": "PremiumV2_LRS",
                                      "description": "Next generation Solid State Disk (SSD) storage with improved scalability and performance for demanding enterprise workloads."
                                    },
                                    {
                                      "value": "UltraSSD_LRS",
                                      "description": "High-end Solid State Disk (SSD) storage designed for extreme IOPS and latency-sensitive applications."
                                    }
                                  ]
                                },
                                "description": "Type of storage assigned to a server. Allowed values are Premium_LRS, PremiumV2_LRS, or UltraSSD_LRS. If not specified, it defaults to Premium_LRS."
                              }
                            }
                          },
                          "authConfig": {
                            "default": null,
                            "description": "Authentication configuration properties of a server.",
                            "type": "object",
                            "properties": {
                              "activeDirectoryAuth": {
                                "type": "string",
                                "description": "Indicates if the server supports Microsoft Entra authentication.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "MicrosoftEntraAuth",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Server supports Microsoft Entra authentication."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Server doesn't support Microsoft Entra authentication."
                                    }
                                  ]
                                }
                              },
                              "passwordAuth": {
                                "type": "string",
                                "default": "Enabled",
                                "description": "Indicates if the server supports password based authentication.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "PasswordBasedAuth",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Server supports password based authentication."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Server doesn't support password based authentication."
                                    }
                                  ]
                                }
                              },
                              "tenantId": {
                                "type": "string",
                                "default": "",
                                "description": "Identifier of the tenant of the delegated resource."
                              }
                            }
                          },
                          "dataEncryption": {
                            "default": null,
                            "description": "Data encryption properties of a server.",
                            "type": "object",
                            "properties": {
                              "primaryKeyURI": {
                                "type": "string",
                                "description": "URI of the key in Azure Key Vault used for data encryption of the primary storage associated to a server."
                              },
                              "primaryUserAssignedIdentityId": {
                                "type": "string",
                                "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the primary storage associated to a server."
                              },
                              "geoBackupKeyURI": {
                                "type": "string",
                                "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                              },
                              "geoBackupUserAssignedIdentityId": {
                                "type": "string",
                                "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                              },
                              "type": {
                                "type": "string",
                                "description": "Data encryption type used by a server.",
                                "enum": [
                                  "SystemManaged",
                                  "AzureKeyVault"
                                ],
                                "x-ms-enum": {
                                  "name": "DataEncryptionType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "SystemManaged",
                                      "description": "Encryption managed by Azure using platform managed keys for simplicity and compliance."
                                    },
                                    {
                                      "value": "AzureKeyVault",
                                      "description": "Encryption using customer managed keys stored in Azure Key Vault for enhanced control and security."
                                    }
                                  ]
                                }
                              },
                              "primaryEncryptionKeyStatus": {
                                "type": "string",
                                "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the primary storage associated to the server.",
                                "x-ms-mutability": [
                                  "read"
                                ],
                                "enum": [
                                  "Valid",
                                  "Invalid"
                                ],
                                "x-ms-enum": {
                                  "name": "EncryptionKeyStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Valid",
                                      "description": "Key is valid and can be used for encryption."
                                    },
                                    {
                                      "value": "Invalid",
                                      "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                                    }
                                  ]
                                }
                              },
                              "geoBackupEncryptionKeyStatus": {
                                "type": "string",
                                "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the geographically redundant storage associated to the server when it is configured to support geographically redundant backups.",
                                "x-ms-mutability": [
                                  "read"
                                ],
                                "enum": [
                                  "Valid",
                                  "Invalid"
                                ],
                                "x-ms-enum": {
                                  "name": "EncryptionKeyStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Valid",
                                      "description": "Key is valid and can be used for encryption."
                                    },
                                    {
                                      "value": "Invalid",
                                      "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "backup": {
                            "default": null,
                            "description": "Backup properties of a server.",
                            "type": "object",
                            "properties": {
                              "backupRetentionDays": {
                                "type": "integer",
                                "format": "int32",
                                "default": 7,
                                "description": "Backup retention days for the server."
                              },
                              "geoRedundantBackup": {
                                "type": "string",
                                "default": "Disabled",
                                "description": "Indicates if the server is configured to create geographically redundant backups.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "GeographicallyRedundantBackup",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Server is configured to create geographically redundant backups."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Server is not configured to create geographically redundant backups."
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "earliestRestoreDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Earliest restore point time (ISO8601 format) for a server.",
                                "readOnly": true
                              }
                            }
                          },
                          "network": {
                            "default": null,
                            "description": "Network properties of a server. Only required if you want your server to be integrated into a virtual network provided by customer.",
                            "type": "object",
                            "properties": {
                              "publicNetworkAccess": {
                                "type": "string",
                                "description": "Indicates if public network access is enabled or not. This is only supported for servers that are not integrated into a virtual network which is owned and provided by customer when server is deployed.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "ServerPublicNetworkAccessState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Public network access is enabled. This allows the server to be accessed from the public internet, provided the necessary firewall rule that allows incoming traffic originating from the connecting client is in place. This is compatible with the use of private endpoints to connect to this server."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Public network access is disabled. This means the server cannot be accessed from the public internet, but only via private endpoints."
                                    }
                                  ]
                                }
                              },
                              "delegatedSubnetResourceId": {
                                "type": "string",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                },
                                "description": "Resource identifier of the delegated subnet. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                              },
                              "privateDnsZoneArmResourceId": {
                                "type": "string",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/privateDnsZones"
                                    }
                                  ]
                                },
                                "description": "Identifier of the private DNS zone. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                              }
                            }
                          },
                          "highAvailability": {
                            "default": null,
                            "description": "High availability properties of a server.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "type": "string",
                                "default": "Disabled",
                                "description": "High availability mode for a server.",
                                "enum": [
                                  "Disabled",
                                  "ZoneRedundant",
                                  "SameZone"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Disabled",
                                      "description": "High availability is disabled for the server."
                                    },
                                    {
                                      "value": "ZoneRedundant",
                                      "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                                    },
                                    {
                                      "value": "SameZone",
                                      "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                                    }
                                  ]
                                }
                              },
                              "state": {
                                "type": "string",
                                "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
                                "enum": [
                                  "NotEnabled",
                                  "CreatingStandby",
                                  "ReplicatingData",
                                  "FailingOver",
                                  "Healthy",
                                  "RemovingStandby"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "NotEnabled",
                                      "description": "High availability is not enabled for the server."
                                    },
                                    {
                                      "value": "CreatingStandby",
                                      "description": "Standby server is being created."
                                    },
                                    {
                                      "value": "ReplicatingData",
                                      "description": "Data is being replicated to the standby server."
                                    },
                                    {
                                      "value": "FailingOver",
                                      "description": "Failover operation to the standby server is in progress."
                                    },
                                    {
                                      "value": "Healthy",
                                      "description": "Standby server is healthy and ready to take over in case of a failover."
                                    },
                                    {
                                      "value": "RemovingStandby",
                                      "description": "Standby server is being removed."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "standbyAvailabilityZone": {
                                "type": "string",
                                "default": "",
                                "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
                              }
                            }
                          },
                          "maintenanceWindow": {
                            "default": null,
                            "description": "Maintenance window properties of a server.",
                            "x-ms-mutability": [
                              "update",
                              "read"
                            ],
                            "type": "object",
                            "properties": {
                              "customWindow": {
                                "type": "string",
                                "default": "Disabled",
                                "description": "Indicates whether custom window is enabled or disabled."
                              },
                              "startHour": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "Start hour to be used for maintenance window."
                              },
                              "startMinute": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "Start minute to be used for maintenance window."
                              },
                              "dayOfWeek": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "Day of the week to be used for maintenance window."
                              }
                            }
                          },
                          "sourceServerResourceId": {
                            "type": "string",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.DBforPostgreSQL/flexibleServers"
                                }
                              ]
                            },
                            "description": "Identifier of the server to be used as the source of the new server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target server is a read replica.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "pointInTimeUTC": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation time (in ISO8601 format) of the backup which you want to restore in the new server. It's required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', or 'ReviveDropped'.",
                            "x-ms-mutability": [
                              "create"
                            ]
                          },
                          "availabilityZone": {
                            "type": "string",
                            "default": "",
                            "description": "Availability zone of a server.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "replicationRole": {
                            "description": "Role of the server in a replication set.",
                            "type": "string",
                            "enum": [
                              "None",
                              "Primary",
                              "AsyncReplica",
                              "GeoAsyncReplica"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationRole",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "None",
                                  "description": "No replication role assigned; the server operates independently."
                                },
                                {
                                  "value": "Primary",
                                  "description": "Acts as the source server for replication to one or more replicas."
                                },
                                {
                                  "value": "AsyncReplica",
                                  "description": "Receives data asynchronously from a primary server within the same region."
                                },
                                {
                                  "value": "GeoAsyncReplica",
                                  "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                                }
                              ]
                            }
                          },
                          "replicaCapacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum number of read replicas allowed for a server.",
                            "readOnly": true
                          },
                          "replica": {
                            "description": "Read replica properties of a server. Required only in case that you want to promote a server.",
                            "x-ms-mutability": [
                              "read",
                              "update"
                            ],
                            "type": "object",
                            "properties": {
                              "role": {
                                "description": "Role of the server in a replication set.",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Primary",
                                  "AsyncReplica",
                                  "GeoAsyncReplica"
                                ],
                                "x-ms-enum": {
                                  "name": "ReplicationRole",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "None",
                                      "description": "No replication role assigned; the server operates independently."
                                    },
                                    {
                                      "value": "Primary",
                                      "description": "Acts as the source server for replication to one or more replicas."
                                    },
                                    {
                                      "value": "AsyncReplica",
                                      "description": "Receives data asynchronously from a primary server within the same region."
                                    },
                                    {
                                      "value": "GeoAsyncReplica",
                                      "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                                    }
                                  ]
                                }
                              },
                              "capacity": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Maximum number of read replicas allowed for a server.",
                                "readOnly": true
                              },
                              "replicationState": {
                                "type": "string",
                                "enum": [
                                  "Active",
                                  "Catchup",
                                  "Provisioning",
                                  "Updating",
                                  "Broken",
                                  "Reconfiguring"
                                ],
                                "x-ms-enum": {
                                  "name": "ReplicationState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Active",
                                      "description": "Read replica is fully synchronized and actively replicating data from the primary server."
                                    },
                                    {
                                      "value": "Catchup",
                                      "description": "Read replica is behind the primary server and is currently catching up with pending changes."
                                    },
                                    {
                                      "value": "Provisioning",
                                      "description": "Read replica is being created and is in process of getting initialized."
                                    },
                                    {
                                      "value": "Updating",
                                      "description": "Read replica is undergoing some changes it can be changing compute size of promoting it to primary server."
                                    },
                                    {
                                      "value": "Broken",
                                      "description": "Replication has failed or been interrupted."
                                    },
                                    {
                                      "value": "Reconfiguring",
                                      "description": "Read replica is being reconfigured, possibly due to changes in source or settings."
                                    }
                                  ]
                                },
                                "description": "Indicates the replication state of a read replica. This property is returned only when the target server is a read replica. Possible  values are Active, Broken, Catchup, Provisioning, Reconfiguring, and Updating",
                                "readOnly": true
                              },
                              "promoteMode": {
                                "type": "string",
                                "description": "Type of operation to apply on the read replica. This property is write only. Standalone means that the read replica will be promoted to a standalone server, and will become a completely independent entity from the replication set. Switchover means that the read replica will roles with the primary server.",
                                "enum": [
                                  "Standalone",
                                  "Switchover"
                                ],
                                "x-ms-enum": {
                                  "name": "ReadReplicaPromoteMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Standalone",
                                      "description": "Read replica will become an independent server."
                                    },
                                    {
                                      "value": "Switchover",
                                      "description": "Read replica will swap roles with primary server."
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "update"
                                ]
                              },
                              "promoteOption": {
                                "type": "string",
                                "description": "Data synchronization option to use when processing the operation specified in the promoteMode property. This property is write only.",
                                "enum": [
                                  "Planned",
                                  "Forced"
                                ],
                                "x-ms-enum": {
                                  "name": "ReadReplicaPromoteOption",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Planned",
                                      "description": "The operation will wait for data in the read replica to be fully synchronized with its source server, before it initiates the operation."
                                    },
                                    {
                                      "value": "Forced",
                                      "description": "The operation will not wait for data in the read replica to be synchronized with its source server, before it initiates the operation."
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "update"
                                ]
                              }
                            }
                          },
                          "createMode": {
                            "type": "string",
                            "description": "Creation mode of a new server.",
                            "enum": [
                              "Default",
                              "Create",
                              "Update",
                              "PointInTimeRestore",
                              "GeoRestore",
                              "Replica",
                              "ReviveDropped"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Default",
                                  "description": "If the operation is triggered on a non-existing server, it's equivalent to 'Create'. If the operation is triggered on an existing server, it's equivalent to 'Update'."
                                },
                                {
                                  "value": "Create",
                                  "description": "Operation creates a new server."
                                },
                                {
                                  "value": "Update",
                                  "description": "Operation updates an existing server."
                                },
                                {
                                  "value": "PointInTimeRestore",
                                  "description": "Operation restores an existing backup of an existing server. This operation creates a new server, and then restores on it the backup of an existing server at a specific point in time."
                                },
                                {
                                  "value": "GeoRestore",
                                  "description": "Operation restores an existing backup of an existing server, on the paired region of the existing server. This operation creates a new server on the paired region of the existing server, and then restores on it the backup of an existing server at a specific point in time, in a different region. This operation is only supported on existing servers that were created with geographically redundant backups enabled."
                                },
                                {
                                  "value": "Replica",
                                  "description": "Operation creates a replica of an existing server. This operation creates a new server, restores a base backup of the existing server (referred to as primary), and configures physical replication to asynchronously stream all changes which are recorded in the transaction log of the primary."
                                },
                                {
                                  "value": "ReviveDropped",
                                  "description": "Operation creates a new server, initialized with the backup of a server that was recently deleted."
                                }
                              ]
                            },
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The private endpoint connection resource.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "groupIds": {
                                      "type": "array",
                                      "description": "The group ids for the private endpoint resource.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "privateEndpoint": {
                                      "description": "The private endpoint resource.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ARM identifier for private endpoint.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              }
                            },
                            "description": "List of private endpoint connections associated with the specified server.",
                            "readOnly": true
                          },
                          "cluster": {
                            "default": null,
                            "description": "Cluster properties of a server.",
                            "x-ms-mutability": [
                              "create",
                              "read",
                              "update"
                            ],
                            "type": "object",
                            "properties": {
                              "clusterSize": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "Number of nodes assigned to the elastic cluster."
                              },
                              "defaultDatabaseName": {
                                "type": "string",
                                "description": "Default database name for the elastic cluster."
                              }
                            }
                          }
                        }
                      }
                    },
                    "description": "Properties of a server."
                  },
                  "description": "The list of servers"
                },
                "nextLink": {
                  "description": "The link used to get the next page of operations.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "A list of servers."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/flexibleServers": {
      "get": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_ListBySubscription",
        "description": "Lists all servers in a subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "sku": {
                        "description": "Compute tier and size of a server.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name by which is known a given compute size assigned to a server."
                          },
                          "tier": {
                            "type": "string",
                            "description": "Tier of the compute assigned to a server.",
                            "enum": [
                              "Burstable",
                              "GeneralPurpose",
                              "MemoryOptimized"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Burstable",
                                  "description": "Cost-effective tier for infrequent CPU usage, ideal for development and testing workloads with low performance requirements."
                                },
                                {
                                  "value": "GeneralPurpose",
                                  "description": "Balanced compute and memory for most workloads, offering scalable performance and I/O throughput."
                                },
                                {
                                  "value": "MemoryOptimized",
                                  "description": "High memory-to-core ratio for demanding workloads needing fast in-memory processing and high concurrency."
                                }
                              ]
                            }
                          }
                        },
                        "required": [
                          "name",
                          "tier"
                        ]
                      },
                      "identity": {
                        "description": "User assigned managed identities assigned to the server.",
                        "type": "object",
                        "properties": {
                          "userAssignedIdentities": {
                            "description": "Map of user assigned managed identities.",
                            "type": "object",
                            "additionalProperties": {
                              "description": "User assigned managed identity associated with a server.",
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                                },
                                "clientId": {
                                  "type": "string",
                                  "description": "Identifier of the client of the service principal associated to the user assigned managed identity."
                                }
                              }
                            }
                          },
                          "principalId": {
                            "type": "string",
                            "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                          },
                          "type": {
                            "type": "string",
                            "description": "Types of identities associated with a server.",
                            "enum": [
                              "None",
                              "UserAssigned",
                              "SystemAssigned",
                              "SystemAssigned,UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "IdentityType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "None",
                                  "description": "No managed identity is assigned to the server."
                                },
                                {
                                  "value": "UserAssigned",
                                  "description": "One or more managed identities provided by the user are assigned to the server."
                                },
                                {
                                  "value": "SystemAssigned",
                                  "description": "Azure automatically creates and manages the identity associated to the lifecycle of the server."
                                },
                                {
                                  "value": "SystemAssigned,UserAssigned",
                                  "description": "Both system-assigned and user-assigned identities are assigned to the server."
                                }
                              ]
                            }
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "Identifier of the tenant of a server.",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of a server.",
                        "type": "object",
                        "properties": {
                          "administratorLogin": {
                            "type": "string",
                            "description": "Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "administratorLoginPassword": {
                            "type": "string",
                            "description": "Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.",
                            "x-ms-secret": true,
                            "format": "password",
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "version": {
                            "description": "Major version of PostgreSQL database engine.",
                            "type": "string",
                            "enum": [
                              "18",
                              "17",
                              "16",
                              "15",
                              "14",
                              "13",
                              "12",
                              "11"
                            ],
                            "x-ms-enum": {
                              "name": "PostgresMajorVersion",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "18",
                                  "description": "PostgreSQL 18."
                                },
                                {
                                  "value": "17",
                                  "description": "PostgreSQL 17."
                                },
                                {
                                  "value": "16",
                                  "description": "PostgreSQL 16."
                                },
                                {
                                  "value": "15",
                                  "description": "PostgreSQL 15."
                                },
                                {
                                  "value": "14",
                                  "description": "PostgreSQL 14."
                                },
                                {
                                  "value": "13",
                                  "description": "PostgreSQL 13."
                                },
                                {
                                  "value": "12",
                                  "description": "PostgreSQL 12."
                                },
                                {
                                  "value": "11",
                                  "description": "PostgreSQL 11."
                                }
                              ]
                            }
                          },
                          "minorVersion": {
                            "type": "string",
                            "description": "Minor version of PostgreSQL database engine.",
                            "readOnly": true
                          },
                          "state": {
                            "type": "string",
                            "description": "Possible states of a server.",
                            "readOnly": true,
                            "enum": [
                              "Ready",
                              "Dropping",
                              "Disabled",
                              "Starting",
                              "Stopping",
                              "Stopped",
                              "Updating",
                              "Restarting",
                              "Inaccessible",
                              "Provisioning"
                            ],
                            "x-ms-enum": {
                              "name": "ServerState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Ready",
                                  "description": "Server is healthy and not undergoing any operations at the management or control plane level. This doesn't mean that the server is fully operational at the data plane level."
                                },
                                {
                                  "value": "Dropping",
                                  "description": "Server is being deleted."
                                },
                                {
                                  "value": "Disabled",
                                  "description": "Server is disabled. Typical reasons include: the subscription on which the server is deployed is explicitly disabled or canceled by the administrator, the spending limit has been reached, or the bill is past due. May also happen when the server is being moved to another resource group or subscription."
                                },
                                {
                                  "value": "Starting",
                                  "description": "PostgreSQL database engine is being restarted."
                                },
                                {
                                  "value": "Stopping",
                                  "description": "Compute resources associated with the server are being stopped and deallocated. If the server has high availability enabled, the compute resources of the standby server are also stopped and deallocated."
                                },
                                {
                                  "value": "Stopped",
                                  "description": "Compute resources associated with the server are being stopped and deallocated."
                                },
                                {
                                  "value": "Updating",
                                  "description": "Server is undergoing some changes which may or may not impact the availability of the PostgreSQL database engine. For example, the compute resources of the server are being scaled up or down, which may cause temporary unavailability of the database engine. Or, for example, a firewall rule is being added or removed, which doesn't cause any unavailability of the database engine."
                                },
                                {
                                  "value": "Restarting",
                                  "description": "PostgreSQL database engine is being restarted."
                                },
                                {
                                  "value": "Inaccessible",
                                  "description": "Server isn't accessible, because the key provided to encrypt and decrypt the data is in invalid state."
                                },
                                {
                                  "value": "Provisioning",
                                  "description": "Server is in the process of being created."
                                }
                              ]
                            }
                          },
                          "fullyQualifiedDomainName": {
                            "type": "string",
                            "description": "Fully qualified domain name of a server.",
                            "readOnly": true
                          },
                          "storage": {
                            "default": null,
                            "description": "Storage properties of a server.",
                            "type": "object",
                            "properties": {
                              "storageSizeGB": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Size of storage assigned to a server."
                              },
                              "autoGrow": {
                                "type": "string",
                                "description": "Flag to enable or disable the automatic growth of storage size of a server when available space is nearing zero and conditions allow for automatically growing storage size.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageAutoGrow",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Server should automatically grow storage size when available space is nearing zero and conditions allow for automatically growing storage size."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Server should not automatically grow storage size when available space is nearing zero."
                                    }
                                  ]
                                }
                              },
                              "tier": {
                                "type": "string",
                                "description": "Storage tier of a server.",
                                "enum": [
                                  "P1",
                                  "P2",
                                  "P3",
                                  "P4",
                                  "P6",
                                  "P10",
                                  "P15",
                                  "P20",
                                  "P30",
                                  "P40",
                                  "P50",
                                  "P60",
                                  "P70",
                                  "P80"
                                ],
                                "x-ms-enum": {
                                  "name": "AzureManagedDiskPerformanceTier",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "P1",
                                      "description": "Entry-level SSD for minimal IOPS, ideal for light development or testing workloads."
                                    },
                                    {
                                      "value": "P2",
                                      "description": "Slightly higher IOPS for small-scale applications needing consistent low latency."
                                    },
                                    {
                                      "value": "P3",
                                      "description": "Balanced performance for basic production workloads with moderate throughput."
                                    },
                                    {
                                      "value": "P4",
                                      "description": "Enhanced IOPS for growing apps with predictable performance needs."
                                    },
                                    {
                                      "value": "P6",
                                      "description": "Mid-tier SSD for steady workloads requiring reliable throughput and latency."
                                    },
                                    {
                                      "value": "P10",
                                      "description": "Popular choice for general-purpose production workloads with scalable performance."
                                    },
                                    {
                                      "value": "P15",
                                      "description": "High IOPS tier for demanding apps with frequent read/write operations."
                                    },
                                    {
                                      "value": "P20",
                                      "description": "Entry point for high-performance Solid State Disks (SSDs), suitable for small-scale I/O-intensive workloads."
                                    },
                                    {
                                      "value": "P30",
                                      "description": "Balanced tier for moderate throughput and latency-sensitive applications."
                                    },
                                    {
                                      "value": "P40",
                                      "description": "Enhanced performance for growing production workloads with consistent IOPS demands."
                                    },
                                    {
                                      "value": "P50",
                                      "description": "Optimized for enterprise-grade applications needing sustained high throughput."
                                    },
                                    {
                                      "value": "P60",
                                      "description": "High-capacity tier for large databases and analytics workloads with elevated IOPS."
                                    },
                                    {
                                      "value": "P70",
                                      "description": "Designed for mission-critical systems requiring ultra-low latency and high concurrency."
                                    },
                                    {
                                      "value": "P80",
                                      "description": "Top-tier SSD for maximum IOPS and throughput, ideal for the most demanding workloads."
                                    }
                                  ]
                                }
                              },
                              "iops": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                              },
                              "throughput": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                              },
                              "type": {
                                "type": "string",
                                "enum": [
                                  "Premium_LRS",
                                  "PremiumV2_LRS",
                                  "UltraSSD_LRS"
                                ],
                                "x-ms-enum": {
                                  "name": "StorageType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Premium_LRS",
                                      "description": "Standard Solid State Disk (SSD) backed storage offering consistent performance for general purpose workloads."
                                    },
                                    {
                                      "value": "PremiumV2_LRS",
                                      "description": "Next generation Solid State Disk (SSD) storage with improved scalability and performance for demanding enterprise workloads."
                                    },
                                    {
                                      "value": "UltraSSD_LRS",
                                      "description": "High-end Solid State Disk (SSD) storage designed for extreme IOPS and latency-sensitive applications."
                                    }
                                  ]
                                },
                                "description": "Type of storage assigned to a server. Allowed values are Premium_LRS, PremiumV2_LRS, or UltraSSD_LRS. If not specified, it defaults to Premium_LRS."
                              }
                            }
                          },
                          "authConfig": {
                            "default": null,
                            "description": "Authentication configuration properties of a server.",
                            "type": "object",
                            "properties": {
                              "activeDirectoryAuth": {
                                "type": "string",
                                "description": "Indicates if the server supports Microsoft Entra authentication.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "MicrosoftEntraAuth",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Server supports Microsoft Entra authentication."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Server doesn't support Microsoft Entra authentication."
                                    }
                                  ]
                                }
                              },
                              "passwordAuth": {
                                "type": "string",
                                "default": "Enabled",
                                "description": "Indicates if the server supports password based authentication.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "PasswordBasedAuth",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Server supports password based authentication."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Server doesn't support password based authentication."
                                    }
                                  ]
                                }
                              },
                              "tenantId": {
                                "type": "string",
                                "default": "",
                                "description": "Identifier of the tenant of the delegated resource."
                              }
                            }
                          },
                          "dataEncryption": {
                            "default": null,
                            "description": "Data encryption properties of a server.",
                            "type": "object",
                            "properties": {
                              "primaryKeyURI": {
                                "type": "string",
                                "description": "URI of the key in Azure Key Vault used for data encryption of the primary storage associated to a server."
                              },
                              "primaryUserAssignedIdentityId": {
                                "type": "string",
                                "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the primary storage associated to a server."
                              },
                              "geoBackupKeyURI": {
                                "type": "string",
                                "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                              },
                              "geoBackupUserAssignedIdentityId": {
                                "type": "string",
                                "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                              },
                              "type": {
                                "type": "string",
                                "description": "Data encryption type used by a server.",
                                "enum": [
                                  "SystemManaged",
                                  "AzureKeyVault"
                                ],
                                "x-ms-enum": {
                                  "name": "DataEncryptionType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "SystemManaged",
                                      "description": "Encryption managed by Azure using platform managed keys for simplicity and compliance."
                                    },
                                    {
                                      "value": "AzureKeyVault",
                                      "description": "Encryption using customer managed keys stored in Azure Key Vault for enhanced control and security."
                                    }
                                  ]
                                }
                              },
                              "primaryEncryptionKeyStatus": {
                                "type": "string",
                                "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the primary storage associated to the server.",
                                "x-ms-mutability": [
                                  "read"
                                ],
                                "enum": [
                                  "Valid",
                                  "Invalid"
                                ],
                                "x-ms-enum": {
                                  "name": "EncryptionKeyStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Valid",
                                      "description": "Key is valid and can be used for encryption."
                                    },
                                    {
                                      "value": "Invalid",
                                      "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                                    }
                                  ]
                                }
                              },
                              "geoBackupEncryptionKeyStatus": {
                                "type": "string",
                                "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the geographically redundant storage associated to the server when it is configured to support geographically redundant backups.",
                                "x-ms-mutability": [
                                  "read"
                                ],
                                "enum": [
                                  "Valid",
                                  "Invalid"
                                ],
                                "x-ms-enum": {
                                  "name": "EncryptionKeyStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Valid",
                                      "description": "Key is valid and can be used for encryption."
                                    },
                                    {
                                      "value": "Invalid",
                                      "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "backup": {
                            "default": null,
                            "description": "Backup properties of a server.",
                            "type": "object",
                            "properties": {
                              "backupRetentionDays": {
                                "type": "integer",
                                "format": "int32",
                                "default": 7,
                                "description": "Backup retention days for the server."
                              },
                              "geoRedundantBackup": {
                                "type": "string",
                                "default": "Disabled",
                                "description": "Indicates if the server is configured to create geographically redundant backups.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "GeographicallyRedundantBackup",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Server is configured to create geographically redundant backups."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Server is not configured to create geographically redundant backups."
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "create",
                                  "read"
                                ]
                              },
                              "earliestRestoreDate": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Earliest restore point time (ISO8601 format) for a server.",
                                "readOnly": true
                              }
                            }
                          },
                          "network": {
                            "default": null,
                            "description": "Network properties of a server. Only required if you want your server to be integrated into a virtual network provided by customer.",
                            "type": "object",
                            "properties": {
                              "publicNetworkAccess": {
                                "type": "string",
                                "description": "Indicates if public network access is enabled or not. This is only supported for servers that are not integrated into a virtual network which is owned and provided by customer when server is deployed.",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "ServerPublicNetworkAccessState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Enabled",
                                      "description": "Public network access is enabled. This allows the server to be accessed from the public internet, provided the necessary firewall rule that allows incoming traffic originating from the connecting client is in place. This is compatible with the use of private endpoints to connect to this server."
                                    },
                                    {
                                      "value": "Disabled",
                                      "description": "Public network access is disabled. This means the server cannot be accessed from the public internet, but only via private endpoints."
                                    }
                                  ]
                                }
                              },
                              "delegatedSubnetResourceId": {
                                "type": "string",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/virtualNetworks/subnets"
                                    }
                                  ]
                                },
                                "description": "Resource identifier of the delegated subnet. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                              },
                              "privateDnsZoneArmResourceId": {
                                "type": "string",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Network/privateDnsZones"
                                    }
                                  ]
                                },
                                "description": "Identifier of the private DNS zone. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                              }
                            }
                          },
                          "highAvailability": {
                            "default": null,
                            "description": "High availability properties of a server.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "type": "string",
                                "default": "Disabled",
                                "description": "High availability mode for a server.",
                                "enum": [
                                  "Disabled",
                                  "ZoneRedundant",
                                  "SameZone"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Disabled",
                                      "description": "High availability is disabled for the server."
                                    },
                                    {
                                      "value": "ZoneRedundant",
                                      "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                                    },
                                    {
                                      "value": "SameZone",
                                      "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                                    }
                                  ]
                                }
                              },
                              "state": {
                                "type": "string",
                                "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
                                "enum": [
                                  "NotEnabled",
                                  "CreatingStandby",
                                  "ReplicatingData",
                                  "FailingOver",
                                  "Healthy",
                                  "RemovingStandby"
                                ],
                                "x-ms-enum": {
                                  "name": "HighAvailabilityState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "NotEnabled",
                                      "description": "High availability is not enabled for the server."
                                    },
                                    {
                                      "value": "CreatingStandby",
                                      "description": "Standby server is being created."
                                    },
                                    {
                                      "value": "ReplicatingData",
                                      "description": "Data is being replicated to the standby server."
                                    },
                                    {
                                      "value": "FailingOver",
                                      "description": "Failover operation to the standby server is in progress."
                                    },
                                    {
                                      "value": "Healthy",
                                      "description": "Standby server is healthy and ready to take over in case of a failover."
                                    },
                                    {
                                      "value": "RemovingStandby",
                                      "description": "Standby server is being removed."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "standbyAvailabilityZone": {
                                "type": "string",
                                "default": "",
                                "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
                              }
                            }
                          },
                          "maintenanceWindow": {
                            "default": null,
                            "description": "Maintenance window properties of a server.",
                            "x-ms-mutability": [
                              "update",
                              "read"
                            ],
                            "type": "object",
                            "properties": {
                              "customWindow": {
                                "type": "string",
                                "default": "Disabled",
                                "description": "Indicates whether custom window is enabled or disabled."
                              },
                              "startHour": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "Start hour to be used for maintenance window."
                              },
                              "startMinute": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "Start minute to be used for maintenance window."
                              },
                              "dayOfWeek": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "Day of the week to be used for maintenance window."
                              }
                            }
                          },
                          "sourceServerResourceId": {
                            "type": "string",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.DBforPostgreSQL/flexibleServers"
                                }
                              ]
                            },
                            "description": "Identifier of the server to be used as the source of the new server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target server is a read replica.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "pointInTimeUTC": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation time (in ISO8601 format) of the backup which you want to restore in the new server. It's required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', or 'ReviveDropped'.",
                            "x-ms-mutability": [
                              "create"
                            ]
                          },
                          "availabilityZone": {
                            "type": "string",
                            "default": "",
                            "description": "Availability zone of a server.",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ]
                          },
                          "replicationRole": {
                            "description": "Role of the server in a replication set.",
                            "type": "string",
                            "enum": [
                              "None",
                              "Primary",
                              "AsyncReplica",
                              "GeoAsyncReplica"
                            ],
                            "x-ms-enum": {
                              "name": "ReplicationRole",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "None",
                                  "description": "No replication role assigned; the server operates independently."
                                },
                                {
                                  "value": "Primary",
                                  "description": "Acts as the source server for replication to one or more replicas."
                                },
                                {
                                  "value": "AsyncReplica",
                                  "description": "Receives data asynchronously from a primary server within the same region."
                                },
                                {
                                  "value": "GeoAsyncReplica",
                                  "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                                }
                              ]
                            }
                          },
                          "replicaCapacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum number of read replicas allowed for a server.",
                            "readOnly": true
                          },
                          "replica": {
                            "description": "Read replica properties of a server. Required only in case that you want to promote a server.",
                            "x-ms-mutability": [
                              "read",
                              "update"
                            ],
                            "type": "object",
                            "properties": {
                              "role": {
                                "description": "Role of the server in a replication set.",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "Primary",
                                  "AsyncReplica",
                                  "GeoAsyncReplica"
                                ],
                                "x-ms-enum": {
                                  "name": "ReplicationRole",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "None",
                                      "description": "No replication role assigned; the server operates independently."
                                    },
                                    {
                                      "value": "Primary",
                                      "description": "Acts as the source server for replication to one or more replicas."
                                    },
                                    {
                                      "value": "AsyncReplica",
                                      "description": "Receives data asynchronously from a primary server within the same region."
                                    },
                                    {
                                      "value": "GeoAsyncReplica",
                                      "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                                    }
                                  ]
                                }
                              },
                              "capacity": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Maximum number of read replicas allowed for a server.",
                                "readOnly": true
                              },
                              "replicationState": {
                                "type": "string",
                                "enum": [
                                  "Active",
                                  "Catchup",
                                  "Provisioning",
                                  "Updating",
                                  "Broken",
                                  "Reconfiguring"
                                ],
                                "x-ms-enum": {
                                  "name": "ReplicationState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Active",
                                      "description": "Read replica is fully synchronized and actively replicating data from the primary server."
                                    },
                                    {
                                      "value": "Catchup",
                                      "description": "Read replica is behind the primary server and is currently catching up with pending changes."
                                    },
                                    {
                                      "value": "Provisioning",
                                      "description": "Read replica is being created and is in process of getting initialized."
                                    },
                                    {
                                      "value": "Updating",
                                      "description": "Read replica is undergoing some changes it can be changing compute size of promoting it to primary server."
                                    },
                                    {
                                      "value": "Broken",
                                      "description": "Replication has failed or been interrupted."
                                    },
                                    {
                                      "value": "Reconfiguring",
                                      "description": "Read replica is being reconfigured, possibly due to changes in source or settings."
                                    }
                                  ]
                                },
                                "description": "Indicates the replication state of a read replica. This property is returned only when the target server is a read replica. Possible  values are Active, Broken, Catchup, Provisioning, Reconfiguring, and Updating",
                                "readOnly": true
                              },
                              "promoteMode": {
                                "type": "string",
                                "description": "Type of operation to apply on the read replica. This property is write only. Standalone means that the read replica will be promoted to a standalone server, and will become a completely independent entity from the replication set. Switchover means that the read replica will roles with the primary server.",
                                "enum": [
                                  "Standalone",
                                  "Switchover"
                                ],
                                "x-ms-enum": {
                                  "name": "ReadReplicaPromoteMode",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Standalone",
                                      "description": "Read replica will become an independent server."
                                    },
                                    {
                                      "value": "Switchover",
                                      "description": "Read replica will swap roles with primary server."
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "update"
                                ]
                              },
                              "promoteOption": {
                                "type": "string",
                                "description": "Data synchronization option to use when processing the operation specified in the promoteMode property. This property is write only.",
                                "enum": [
                                  "Planned",
                                  "Forced"
                                ],
                                "x-ms-enum": {
                                  "name": "ReadReplicaPromoteOption",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Planned",
                                      "description": "The operation will wait for data in the read replica to be fully synchronized with its source server, before it initiates the operation."
                                    },
                                    {
                                      "value": "Forced",
                                      "description": "The operation will not wait for data in the read replica to be synchronized with its source server, before it initiates the operation."
                                    }
                                  ]
                                },
                                "x-ms-mutability": [
                                  "update"
                                ]
                              }
                            }
                          },
                          "createMode": {
                            "type": "string",
                            "description": "Creation mode of a new server.",
                            "enum": [
                              "Default",
                              "Create",
                              "Update",
                              "PointInTimeRestore",
                              "GeoRestore",
                              "Replica",
                              "ReviveDropped"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Default",
                                  "description": "If the operation is triggered on a non-existing server, it's equivalent to 'Create'. If the operation is triggered on an existing server, it's equivalent to 'Update'."
                                },
                                {
                                  "value": "Create",
                                  "description": "Operation creates a new server."
                                },
                                {
                                  "value": "Update",
                                  "description": "Operation updates an existing server."
                                },
                                {
                                  "value": "PointInTimeRestore",
                                  "description": "Operation restores an existing backup of an existing server. This operation creates a new server, and then restores on it the backup of an existing server at a specific point in time."
                                },
                                {
                                  "value": "GeoRestore",
                                  "description": "Operation restores an existing backup of an existing server, on the paired region of the existing server. This operation creates a new server on the paired region of the existing server, and then restores on it the backup of an existing server at a specific point in time, in a different region. This operation is only supported on existing servers that were created with geographically redundant backups enabled."
                                },
                                {
                                  "value": "Replica",
                                  "description": "Operation creates a replica of an existing server. This operation creates a new server, restores a base backup of the existing server (referred to as primary), and configures physical replication to asynchronously stream all changes which are recorded in the transaction log of the primary."
                                },
                                {
                                  "value": "ReviveDropped",
                                  "description": "Operation creates a new server, initialized with the backup of a server that was recently deleted."
                                }
                              ]
                            },
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ]
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The private endpoint connection resource.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                                  "readOnly": true
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the resource",
                                  "readOnly": true
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                                  "readOnly": true
                                },
                                "systemData": {
                                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "createdBy": {
                                      "type": "string",
                                      "description": "The identity that created the resource."
                                    },
                                    "createdByType": {
                                      "type": "string",
                                      "description": "The type of identity that created the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "createdAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource creation (UTC)."
                                    },
                                    "lastModifiedBy": {
                                      "type": "string",
                                      "description": "The identity that last modified the resource."
                                    },
                                    "lastModifiedByType": {
                                      "type": "string",
                                      "description": "The type of identity that last modified the resource.",
                                      "enum": [
                                        "User",
                                        "Application",
                                        "ManagedIdentity",
                                        "Key"
                                      ],
                                      "x-ms-enum": {
                                        "name": "createdByType",
                                        "modelAsString": true
                                      }
                                    },
                                    "lastModifiedAt": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "The timestamp of resource last modification (UTC)"
                                    }
                                  }
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "groupIds": {
                                      "type": "array",
                                      "description": "The group ids for the private endpoint resource.",
                                      "items": {
                                        "type": "string"
                                      },
                                      "readOnly": true
                                    },
                                    "privateEndpoint": {
                                      "description": "The private endpoint resource.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The ARM identifier for private endpoint.",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "A collection of information about the state of the connection between service consumer and provider.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                          "type": "string",
                                          "enum": [
                                            "Pending",
                                            "Approved",
                                            "Rejected"
                                          ],
                                          "x-ms-enum": {
                                            "name": "PrivateEndpointServiceConnectionStatus",
                                            "modelAsString": true
                                          }
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The reason for approval/rejection of the connection."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                        }
                                      }
                                    },
                                    "provisioningState": {
                                      "description": "The provisioning state of the private endpoint connection resource.",
                                      "type": "string",
                                      "enum": [
                                        "Succeeded",
                                        "Creating",
                                        "Deleting",
                                        "Failed"
                                      ],
                                      "x-ms-enum": {
                                        "name": "PrivateEndpointConnectionProvisioningState",
                                        "modelAsString": true
                                      },
                                      "readOnly": true
                                    }
                                  },
                                  "required": [
                                    "privateLinkServiceConnectionState"
                                  ]
                                }
                              }
                            },
                            "description": "List of private endpoint connections associated with the specified server.",
                            "readOnly": true
                          },
                          "cluster": {
                            "default": null,
                            "description": "Cluster properties of a server.",
                            "x-ms-mutability": [
                              "create",
                              "read",
                              "update"
                            ],
                            "type": "object",
                            "properties": {
                              "clusterSize": {
                                "type": "integer",
                                "format": "int32",
                                "default": 0,
                                "description": "Number of nodes assigned to the elastic cluster."
                              },
                              "defaultDatabaseName": {
                                "type": "string",
                                "description": "Default database name for the elastic cluster."
                              }
                            }
                          }
                        }
                      }
                    },
                    "description": "Properties of a server."
                  },
                  "description": "The list of servers"
                },
                "nextLink": {
                  "description": "The link used to get the next page of operations.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "A list of servers."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/restart": {
      "post": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Restart",
        "description": "Restarts PostgreSQL database engine in a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "restartWithFailover": {
                  "type": "boolean",
                  "description": "Indicates if restart the PostgreSQL database engine should failover or switch over from primary to standby. This only works if server has high availability enabled."
                },
                "failoverMode": {
                  "type": "string",
                  "description": "Failover mode.",
                  "enum": [
                    "PlannedFailover",
                    "ForcedFailover",
                    "PlannedSwitchover",
                    "ForcedSwitchover"
                  ],
                  "x-ms-enum": {
                    "name": "FailoverMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "PlannedFailover",
                        "description": "Triggers a failover from primary to standby without killing the primary database process first. This is a graceful failover that attempts to preserve data consistency."
                      },
                      {
                        "value": "ForcedFailover",
                        "description": "Kills the primary database process first, then triggers the failover. This is more aggressive and used when the primary is unresponsive or in an unhealthy state."
                      },
                      {
                        "value": "PlannedSwitchover",
                        "description": "Similar to 'PlannedFailover' but prefers a switch over operation where roles are swapped between primary and standby."
                      },
                      {
                        "value": "ForcedSwitchover",
                        "description": "Kills the primary database process and then triggers a switch over with role swapping."
                      }
                    ]
                  }
                }
              },
              "description": "PostgreSQL database engine restart parameters."
            },
            "description": "Parameters to restart a server."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/start": {
      "post": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Start",
        "description": "Starts a stopped server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/stop": {
      "post": {
        "tags": [
          "Servers"
        ],
        "operationId": "Servers_Stop",
        "description": "Stops a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/tuningOptions/{tuningOption}": {
      "get": {
        "tags": [
          "TuningOptions"
        ],
        "operationId": "TuningOptions_Get",
        "description": "Gets the tuning options of a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "tuningOption",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "index",
              "table"
            ],
            "description": "The name of the tuning option.",
            "x-ms-enum": {
              "name": "TuningOption",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "Impact on some metric if this recommended action is applied.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/tuningOptions/{tuningOption}/recommendations": {
      "get": {
        "tags": [
          "TuningOptions"
        ],
        "operationId": "TuningOptions_ListRecommendations",
        "description": "Lists available object recommendations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "tuningOption",
            "in": "path",
            "required": true,
            "type": "string",
            "enum": [
              "index",
              "table"
            ],
            "description": "The name of the tuning option.",
            "x-ms-enum": {
              "name": "TuningOption",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          },
          {
            "name": "recommendationType",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "CreateIndex",
              "DropIndex",
              "AnalyzeTable"
            ],
            "description": "Recommendations list filter. Retrieves recommendations based on type.",
            "x-ms-enum": {
              "name": "RecommendationType",
              "modelAsString": true
            },
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "List of available object recommendations.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of available object recommendations.",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "kind": {
                        "type": "string",
                        "description": "Always empty.",
                        "x-ms-visibility": "internal"
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of an object recommendation.",
                        "type": "object",
                        "properties": {
                          "initialRecommendedTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Creation time (UTC) of this recommendation."
                          },
                          "lastRecommendedTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Last time (UTC) that this recommendation was produced."
                          },
                          "timesRecommended": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Number of times this recommendation has been produced."
                          },
                          "improvedQueryIds": {
                            "type": "array",
                            "items": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "description": "List of identifiers for all queries identified as targets for improvement if the recommendation is applied. The list is only populated for CREATE INDEX recommendations."
                          },
                          "recommendationReason": {
                            "type": "string",
                            "description": "Reason for this recommendation."
                          },
                          "currentState": {
                            "type": "string",
                            "description": "Current state."
                          },
                          "recommendationType": {
                            "type": "string",
                            "enum": [
                              "CreateIndex",
                              "DropIndex",
                              "ReIndex",
                              "AnalyzeTable"
                            ],
                            "x-ms-enum": {
                              "name": "RecommendationType",
                              "modelAsString": true
                            },
                            "description": "Type for this recommendation."
                          },
                          "implementationDetails": {
                            "type": "object",
                            "properties": {
                              "method": {
                                "type": "string",
                                "description": "Method of implementation for recommended action."
                              },
                              "script": {
                                "type": "string",
                                "description": "Implementation script for the recommended action."
                              }
                            },
                            "description": "Implementation details for the recommended action."
                          },
                          "analyzedWorkload": {
                            "type": "object",
                            "properties": {
                              "startTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Start time (UTC) of the workload analyzed."
                              },
                              "endTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "End time (UTC) of the workload analyzed."
                              },
                              "queryCount": {
                                "format": "int32",
                                "type": "integer",
                                "description": "Number of queries from the workload that were examined to produce this recommendation. For DROP INDEX recommendations it's 0 (zero)."
                              }
                            },
                            "description": "Workload information for the recommended action."
                          },
                          "estimatedImpact": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dimensionName": {
                                  "type": "string",
                                  "description": "Dimension name."
                                },
                                "unit": {
                                  "type": "string",
                                  "description": "Dimension unit."
                                },
                                "queryId": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Optional property that can be used to store the identifier of the query, if the metric is for a specific query."
                                },
                                "absoluteValue": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "Absolute value."
                                }
                              },
                              "description": "Impact on some metric if this recommended action is applied."
                            },
                            "x-ms-identifiers": [
                              "dimensionName"
                            ],
                            "readOnly": true,
                            "description": "Estimated impact of this recommended action."
                          },
                          "details": {
                            "description": "Recommendation details for the recommended action.",
                            "type": "object",
                            "properties": {
                              "databaseName": {
                                "type": "string",
                                "description": "Database name."
                              },
                              "schema": {
                                "type": "string",
                                "description": "Schema name."
                              },
                              "table": {
                                "type": "string",
                                "description": "Table name."
                              },
                              "indexType": {
                                "type": "string",
                                "description": "Index type."
                              },
                              "indexName": {
                                "type": "string",
                                "description": "Index name."
                              },
                              "indexColumns": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Index columns."
                              },
                              "includedColumns": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                },
                                "description": "Index included columns."
                              }
                            },
                            "readOnly": true
                          }
                        },
                        "readOnly": true
                      }
                    },
                    "description": "Object recommendation properties."
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "description": "Link used to get the next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/tuningOptions": {
      "get": {
        "tags": [
          "TuningOptions"
        ],
        "operationId": "TuningOptions_ListByServer",
        "description": "Lists the tuning options of a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "description": "List of server tuning options.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of available tuning options.",
                  "uniqueItems": false,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Impact on some metric if this recommended action is applied.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "description": "Link used to get the next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/virtualendpoints/{virtualEndpointName}": {
      "put": {
        "tags": [
          "VirtualEndpoints"
        ],
        "operationId": "VirtualEndpoints_Create",
        "description": "Creates a pair of virtual endpoints for a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Base name of the virtual endpoints.",
            "pattern": "^[A-Za-z0-9][A-Za-z0-9-]{0,62}(?<!-)$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Pair of virtual endpoints for a server.",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the pair of virtual endpoints.",
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "type": "string",
                      "description": "Type of endpoint for the virtual endpoints.",
                      "enum": [
                        "ReadWrite"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualEndpointType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ReadWrite",
                            "description": "Read-write endpoint."
                          }
                        ]
                      }
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Server that one of the virtual endpoints can refer to."
                      },
                      "description": "List of servers that one of the virtual endpoints can refer to."
                    },
                    "virtualEndpoints": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Virtual endpoints for a server."
                      },
                      "description": "List of virtual endpoints for a server.",
                      "readOnly": true
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            },
            "description": "Parameters required to create or update a pair of virtual endpoints."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "VirtualEndpoints"
        ],
        "operationId": "VirtualEndpoints_Update",
        "description": "Updates a pair of virtual endpoints for a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Base name of the virtual endpoints.",
            "pattern": "^[A-Za-z0-9][A-Za-z0-9-]{0,62}(?<!-)$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the pair of virtual endpoints.",
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "type": "string",
                      "description": "Type of endpoint for the virtual endpoints.",
                      "enum": [
                        "ReadWrite"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualEndpointType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ReadWrite",
                            "description": "Read-write endpoint."
                          }
                        ]
                      }
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Server that one of the virtual endpoints can refer to."
                      },
                      "description": "List of servers that one of the virtual endpoints can refer to."
                    },
                    "virtualEndpoints": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Virtual endpoints for a server."
                      },
                      "description": "List of virtual endpoints for a server.",
                      "readOnly": true
                    }
                  }
                }
              },
              "description": "Pair of virtual endpoints for a server."
            },
            "description": "Parameters required to update a pair of virtual endpoints."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "VirtualEndpoints"
        ],
        "operationId": "VirtualEndpoints_Delete",
        "description": "Deletes a pair of virtual endpoints.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Base name of the virtual endpoints.",
            "pattern": "^[A-Za-z0-9][A-Za-z0-9-]{0,62}(?<!-)$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted.",
            "headers": {
              "Location": {
                "type": "string"
              },
              "Azure-AsyncOperation": {
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content."
          }
        }
      },
      "get": {
        "tags": [
          "VirtualEndpoints"
        ],
        "operationId": "VirtualEndpoints_Get",
        "description": "Gets information about a pair of virtual endpoints.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "virtualEndpointName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Base name of the virtual endpoints.",
            "pattern": "^[A-Za-z0-9][A-Za-z0-9-]{0,62}(?<!-)$",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "description": "Pair of virtual endpoints for a server.",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties of the pair of virtual endpoints.",
                  "type": "object",
                  "properties": {
                    "endpointType": {
                      "type": "string",
                      "description": "Type of endpoint for the virtual endpoints.",
                      "enum": [
                        "ReadWrite"
                      ],
                      "x-ms-enum": {
                        "name": "VirtualEndpointType",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "ReadWrite",
                            "description": "Read-write endpoint."
                          }
                        ]
                      }
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Server that one of the virtual endpoints can refer to."
                      },
                      "description": "List of servers that one of the virtual endpoints can refer to."
                    },
                    "virtualEndpoints": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Virtual endpoints for a server."
                      },
                      "description": "List of virtual endpoints for a server.",
                      "readOnly": true
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforPostgreSQL/flexibleServers/{serverName}/virtualendpoints": {
      "get": {
        "tags": [
          "VirtualEndpoints"
        ],
        "operationId": "VirtualEndpoints_ListByServer",
        "description": "Lists pair of virtual endpoints associated to a server.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "serverName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the server.",
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
            "minLength": 3,
            "maxLength": 63,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Pair of virtual endpoints for a server.",
                    "properties": {
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties of the pair of virtual endpoints.",
                        "type": "object",
                        "properties": {
                          "endpointType": {
                            "type": "string",
                            "description": "Type of endpoint for the virtual endpoints.",
                            "enum": [
                              "ReadWrite"
                            ],
                            "x-ms-enum": {
                              "name": "VirtualEndpointType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "ReadWrite",
                                  "description": "Read-write endpoint."
                                }
                              ]
                            }
                          },
                          "members": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Server that one of the virtual endpoints can refer to."
                            },
                            "description": "List of servers that one of the virtual endpoints can refer to."
                          },
                          "virtualEndpoints": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Virtual endpoints for a server."
                            },
                            "description": "List of virtual endpoints for a server.",
                            "readOnly": true
                          }
                        }
                      },
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  },
                  "description": "List of virtual endpoints."
                },
                "nextLink": {
                  "description": "Link used to get the next page of results.",
                  "type": "string",
                  "format": "uri"
                }
              },
              "description": "List of virtual endpoints."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DBforPostgreSQL/locations/{locationName}/checkVirtualNetworkSubnetUsage": {
      "post": {
        "tags": [
          "VirtualNetworkSubnetUsage"
        ],
        "operationId": "VirtualNetworkSubnetUsage_List",
        "description": "Lists the virtual network subnet usage for a given virtual network.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "locationName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the location.",
            "minLength": 1,
            "pattern": "^[-\\w\\._]+$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "virtualNetworkArmResourceId": {
                  "type": "string",
                  "description": "Virtual network resource id."
                }
              },
              "description": "Virtual network subnet usage parameter"
            },
            "description": "The required parameters for creating or updating a server."
          }
        ],
        "responses": {
          "200": {
            "description": "OK.",
            "schema": {
              "type": "object",
              "properties": {
                "delegatedSubnetsUsage": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "subnetName": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Name of the delegated subnet for which IP addresses are in use"
                      },
                      "usage": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Number of IP addresses used by the delegated subnet"
                      }
                    },
                    "description": "Delegated subnet usage data."
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "subnetName"
                  ]
                },
                "location": {
                  "type": "string",
                  "readOnly": true,
                  "description": "location of the delegated subnet usage"
                },
                "subscriptionId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "subscriptionId of the delegated subnet usage"
                }
              },
              "description": "Virtual network subnet usage data."
            }
          }
        }
      }
    }
  },
  "definitions": {
    "AdministratorMicrosoftEntraAdd": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the server administrator associated to a Microsoft Entra principal.",
          "type": "object",
          "properties": {
            "principalType": {
              "type": "string",
              "description": "Type of Microsoft Entra principal to which the server administrator is associated.",
              "enum": [
                "Unknown",
                "User",
                "Group",
                "ServicePrincipal"
              ],
              "x-ms-enum": {
                "name": "PrincipalType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Unknown",
                    "description": "The principal type is not known or not specified."
                  },
                  {
                    "value": "User",
                    "description": "A Microsoft Entra user."
                  },
                  {
                    "value": "Group",
                    "description": "A Microsoft Entra group."
                  },
                  {
                    "value": "ServicePrincipal",
                    "description": "A Microsoft Entra service principal, typically representing an application or service identity"
                  }
                ]
              },
              "x-ms-mutability": [
                "create",
                "update",
                "read"
              ]
            },
            "principalName": {
              "type": "string",
              "description": "Name of the Microsoft Entra principal.",
              "x-ms-mutability": [
                "create",
                "update",
                "read"
              ]
            },
            "tenantId": {
              "type": "string",
              "description": "Identifier of the tenant in which the Microsoft Entra principal exists.",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            }
          }
        }
      },
      "description": "Server administrator associated to a Microsoft Entra principal."
    },
    "AdministratorMicrosoftEntraPropertiesForAdd": {
      "type": "object",
      "properties": {
        "principalType": {
          "type": "string",
          "description": "Type of Microsoft Entra principal to which the server administrator is associated.",
          "enum": [
            "Unknown",
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "PrincipalType",
            "modelAsString": true,
            "values": [
              {
                "value": "Unknown",
                "description": "The principal type is not known or not specified."
              },
              {
                "value": "User",
                "description": "A Microsoft Entra user."
              },
              {
                "value": "Group",
                "description": "A Microsoft Entra group."
              },
              {
                "value": "ServicePrincipal",
                "description": "A Microsoft Entra service principal, typically representing an application or service identity"
              }
            ]
          },
          "x-ms-mutability": [
            "create",
            "update",
            "read"
          ]
        },
        "principalName": {
          "type": "string",
          "description": "Name of the Microsoft Entra principal.",
          "x-ms-mutability": [
            "create",
            "update",
            "read"
          ]
        },
        "tenantId": {
          "type": "string",
          "description": "Identifier of the tenant in which the Microsoft Entra principal exists.",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        }
      },
      "description": "Properties of a server administrator associated to a Microsoft Entra principal."
    },
    "AdministratorMicrosoftEntraProperties": {
      "type": "object",
      "properties": {
        "principalType": {
          "type": "string",
          "description": "Type of Microsoft Entra principal to which the server administrator is associated.",
          "enum": [
            "Unknown",
            "User",
            "Group",
            "ServicePrincipal"
          ],
          "x-ms-enum": {
            "name": "PrincipalType",
            "modelAsString": true,
            "values": [
              {
                "value": "Unknown",
                "description": "The principal type is not known or not specified."
              },
              {
                "value": "User",
                "description": "A Microsoft Entra user."
              },
              {
                "value": "Group",
                "description": "A Microsoft Entra group."
              },
              {
                "value": "ServicePrincipal",
                "description": "A Microsoft Entra service principal, typically representing an application or service identity"
              }
            ]
          },
          "x-ms-mutability": [
            "create",
            "update",
            "read"
          ]
        },
        "principalName": {
          "type": "string",
          "description": "Name of the Microsoft Entra principal.",
          "x-ms-mutability": [
            "create",
            "update",
            "read"
          ]
        },
        "objectId": {
          "type": "string",
          "description": "Object identifier of the Microsoft Entra principal.",
          "x-ms-mutability": [
            "create",
            "update",
            "read"
          ]
        },
        "tenantId": {
          "type": "string",
          "description": "Identifier of the tenant in which the Microsoft Entra principal exists.",
          "x-ms-mutability": [
            "create",
            "update",
            "read"
          ]
        }
      },
      "description": "Properties of a server administrator associated to a Microsoft Entra principal."
    },
    "AdministratorMicrosoftEntra": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of a server administrator associated to a Microsoft Entra principal.",
          "type": "object",
          "properties": {
            "principalType": {
              "type": "string",
              "description": "Type of Microsoft Entra principal to which the server administrator is associated.",
              "enum": [
                "Unknown",
                "User",
                "Group",
                "ServicePrincipal"
              ],
              "x-ms-enum": {
                "name": "PrincipalType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Unknown",
                    "description": "The principal type is not known or not specified."
                  },
                  {
                    "value": "User",
                    "description": "A Microsoft Entra user."
                  },
                  {
                    "value": "Group",
                    "description": "A Microsoft Entra group."
                  },
                  {
                    "value": "ServicePrincipal",
                    "description": "A Microsoft Entra service principal, typically representing an application or service identity"
                  }
                ]
              },
              "x-ms-mutability": [
                "create",
                "update",
                "read"
              ]
            },
            "principalName": {
              "type": "string",
              "description": "Name of the Microsoft Entra principal.",
              "x-ms-mutability": [
                "create",
                "update",
                "read"
              ]
            },
            "objectId": {
              "type": "string",
              "description": "Object identifier of the Microsoft Entra principal.",
              "x-ms-mutability": [
                "create",
                "update",
                "read"
              ]
            },
            "tenantId": {
              "type": "string",
              "description": "Identifier of the tenant in which the Microsoft Entra principal exists.",
              "x-ms-mutability": [
                "create",
                "update",
                "read"
              ]
            }
          }
        }
      },
      "required": [
        "properties"
      ],
      "description": "Server administrator associated to a Microsoft Entra principal."
    },
    "AdministratorMicrosoftEntraList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of a server administrator associated to a Microsoft Entra principal.",
                "type": "object",
                "properties": {
                  "principalType": {
                    "type": "string",
                    "description": "Type of Microsoft Entra principal to which the server administrator is associated.",
                    "enum": [
                      "Unknown",
                      "User",
                      "Group",
                      "ServicePrincipal"
                    ],
                    "x-ms-enum": {
                      "name": "PrincipalType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Unknown",
                          "description": "The principal type is not known or not specified."
                        },
                        {
                          "value": "User",
                          "description": "A Microsoft Entra user."
                        },
                        {
                          "value": "Group",
                          "description": "A Microsoft Entra group."
                        },
                        {
                          "value": "ServicePrincipal",
                          "description": "A Microsoft Entra service principal, typically representing an application or service identity"
                        }
                      ]
                    },
                    "x-ms-mutability": [
                      "create",
                      "update",
                      "read"
                    ]
                  },
                  "principalName": {
                    "type": "string",
                    "description": "Name of the Microsoft Entra principal.",
                    "x-ms-mutability": [
                      "create",
                      "update",
                      "read"
                    ]
                  },
                  "objectId": {
                    "type": "string",
                    "description": "Object identifier of the Microsoft Entra principal.",
                    "x-ms-mutability": [
                      "create",
                      "update",
                      "read"
                    ]
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "Identifier of the tenant in which the Microsoft Entra principal exists.",
                    "x-ms-mutability": [
                      "create",
                      "update",
                      "read"
                    ]
                  }
                }
              }
            },
            "required": [
              "properties"
            ],
            "description": "Server administrator associated to a Microsoft Entra principal."
          },
          "description": "List of server administrators associated to Microsoft Entra principals."
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "format": "uri"
        }
      },
      "description": "List of server administrators associated to Microsoft Entra principals."
    },
    "AdvancedThreatProtectionSettingsProperties": {
      "description": "Properties of advanced threat protection state for a server.",
      "required": [
        "state"
      ],
      "type": "object",
      "properties": {
        "state": {
          "description": "Specifies the state of the advanced threat protection, whether it is enabled, disabled, or a state has not been applied yet on the server.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ThreatProtectionState",
            "modelAsString": false,
            "values": [
              {
                "value": "Enabled",
                "description": "Advanced threat protection is enabled."
              },
              {
                "value": "Disabled",
                "description": "Advanced threat protection is disabled."
              }
            ]
          }
        },
        "creationTime": {
          "format": "date-time",
          "description": "Specifies the creation time (UTC) of the policy.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AdvancedThreatProtectionSettingsModel": {
      "description": "Advanced threat protection settings of the server.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Advanced threat protection properties.",
          "x-ms-client-flatten": true,
          "required": [
            "state"
          ],
          "type": "object",
          "properties": {
            "state": {
              "description": "Specifies the state of the advanced threat protection, whether it is enabled, disabled, or a state has not been applied yet on the server.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ThreatProtectionState",
                "modelAsString": false,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Advanced threat protection is enabled."
                  },
                  {
                    "value": "Disabled",
                    "description": "Advanced threat protection is disabled."
                  }
                ]
              }
            },
            "creationTime": {
              "format": "date-time",
              "description": "Specifies the creation time (UTC) of the policy.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "AdvancedThreatProtectionSettingsList": {
      "description": "List of advanced threat protection settings for a server.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "description": "Advanced threat protection settings of the server.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Advanced threat protection properties.",
                "x-ms-client-flatten": true,
                "required": [
                  "state"
                ],
                "type": "object",
                "properties": {
                  "state": {
                    "description": "Specifies the state of the advanced threat protection, whether it is enabled, disabled, or a state has not been applied yet on the server.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ThreatProtectionState",
                      "modelAsString": false,
                      "values": [
                        {
                          "value": "Enabled",
                          "description": "Advanced threat protection is enabled."
                        },
                        {
                          "value": "Disabled",
                          "description": "Advanced threat protection is disabled."
                        }
                      ]
                    }
                  },
                  "creationTime": {
                    "format": "date-time",
                    "description": "Specifies the creation time (UTC) of the policy.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "BackupAutomaticAndOnDemandProperties": {
      "type": "object",
      "properties": {
        "backupType": {
          "type": "string",
          "description": "Type of backup.",
          "enum": [
            "Full",
            "Customer On-Demand"
          ],
          "x-ms-enum": {
            "name": "BackupType",
            "modelAsString": true,
            "values": [
              {
                "value": "Full",
                "description": "A full backup taken automatically by the service. These backups are retained for a period of time as defined by the backup retention policy, and they cannot be deleted by the customer."
              },
              {
                "value": "Customer On-Demand",
                "description": "A full backup triggered by the customer. These backups are retained for a period of time as defined by the backup retention policy, and they can also be deleted by the customer."
              }
            ]
          }
        },
        "completedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time(ISO8601 format) at which the backup was completed."
        },
        "source": {
          "type": "string",
          "description": "Source of the backup."
        }
      },
      "description": "Properties of a backup."
    },
    "BackupAutomaticAndOnDemand": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of a backup.",
          "type": "object",
          "properties": {
            "backupType": {
              "type": "string",
              "description": "Type of backup.",
              "enum": [
                "Full",
                "Customer On-Demand"
              ],
              "x-ms-enum": {
                "name": "BackupType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Full",
                    "description": "A full backup taken automatically by the service. These backups are retained for a period of time as defined by the backup retention policy, and they cannot be deleted by the customer."
                  },
                  {
                    "value": "Customer On-Demand",
                    "description": "A full backup triggered by the customer. These backups are retained for a period of time as defined by the backup retention policy, and they can also be deleted by the customer."
                  }
                ]
              }
            },
            "completedTime": {
              "type": "string",
              "format": "date-time",
              "description": "Time(ISO8601 format) at which the backup was completed."
            },
            "source": {
              "type": "string",
              "description": "Source of the backup."
            }
          }
        }
      },
      "description": "Properties of a backup."
    },
    "BackupAutomaticAndOnDemandList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of a backup.",
                "type": "object",
                "properties": {
                  "backupType": {
                    "type": "string",
                    "description": "Type of backup.",
                    "enum": [
                      "Full",
                      "Customer On-Demand"
                    ],
                    "x-ms-enum": {
                      "name": "BackupType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Full",
                          "description": "A full backup taken automatically by the service. These backups are retained for a period of time as defined by the backup retention policy, and they cannot be deleted by the customer."
                        },
                        {
                          "value": "Customer On-Demand",
                          "description": "A full backup triggered by the customer. These backups are retained for a period of time as defined by the backup retention policy, and they can also be deleted by the customer."
                        }
                      ]
                    }
                  },
                  "completedTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time(ISO8601 format) at which the backup was completed."
                  },
                  "source": {
                    "type": "string",
                    "description": "Source of the backup."
                  }
                }
              }
            },
            "description": "Properties of a backup."
          },
          "description": "List of available backups."
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "format": "uri"
        }
      },
      "description": "List of backups."
    },
    "BackupRequestBase": {
      "description": "BackupRequestBase is the base for all backup request.",
      "required": [
        "backupSettings"
      ],
      "type": "object",
      "properties": {
        "backupSettings": {
          "description": "Backup Settings",
          "type": "object",
          "required": [
            "backupName"
          ],
          "properties": {
            "backupName": {
              "type": "string",
              "description": "Backup Name for the current backup"
            }
          }
        }
      }
    },
    "BackupsLongTermRetentionRequest": {
      "description": "The request that is made for a long term retention backup.",
      "type": "object",
      "properties": {
        "backupSettings": {
          "description": "Backup Settings",
          "type": "object",
          "required": [
            "backupName"
          ],
          "properties": {
            "backupName": {
              "type": "string",
              "description": "Backup Name for the current backup"
            }
          }
        },
        "targetDetails": {
          "description": "Backup store detail for target server",
          "required": [
            "sasUriList"
          ],
          "type": "object",
          "properties": {
            "sasUriList": {
              "description": "List of SAS uri of storage containers where backup data is to be streamed/copied.",
              "type": "array",
              "items": {
                "type": "string",
                "description": "SAS URI of Azure Storage Account Container.",
                "x-ms-secret": true
              }
            }
          }
        }
      },
      "required": [
        "targetDetails"
      ]
    },
    "LtrPreBackupRequest": {
      "description": "A request that is made for pre-backup.",
      "type": "object",
      "properties": {
        "backupSettings": {
          "description": "Backup Settings",
          "type": "object",
          "required": [
            "backupName"
          ],
          "properties": {
            "backupName": {
              "type": "string",
              "description": "Backup Name for the current backup"
            }
          }
        }
      }
    },
    "BackupSettings": {
      "description": "The settings for the long term backup.",
      "type": "object",
      "required": [
        "backupName"
      ],
      "properties": {
        "backupName": {
          "type": "string",
          "description": "Backup Name for the current backup"
        }
      }
    },
    "BackupStoreDetails": {
      "description": "Details about the target where the backup content will be stored.",
      "required": [
        "sasUriList"
      ],
      "type": "object",
      "properties": {
        "sasUriList": {
          "description": "List of SAS uri of storage containers where backup data is to be streamed/copied.",
          "type": "array",
          "items": {
            "type": "string",
            "description": "SAS URI of Azure Storage Account Container.",
            "x-ms-secret": true
          }
        }
      }
    },
    "BackupsLongTermRetentionResponseProperties": {
      "description": "Response for the pre-backup request.",
      "type": "object",
      "required": [
        "numberOfContainers"
      ],
      "properties": {
        "numberOfContainers": {
          "format": "int32",
          "description": "Number of storage containers the plugin will use during backup. More than one containers may be used for size limitations, parallelism, or redundancy etc.",
          "type": "integer"
        }
      }
    },
    "LtrBackupOperationResponseProperties": {
      "description": "Response for the backup request.",
      "type": "object",
      "required": [
        "status",
        "startTime"
      ],
      "properties": {
        "datasourceSizeInBytes": {
          "format": "int64",
          "description": "Size of datasource in bytes",
          "type": "integer"
        },
        "dataTransferredInBytes": {
          "format": "int64",
          "description": "Data transferred in bytes",
          "type": "integer"
        },
        "backupName": {
          "description": "Name of Backup operation",
          "type": "string"
        },
        "backupMetadata": {
          "description": "Metadata to be stored in RP. Store everything that will be required to perform a successful restore using this Recovery point. e.g. Versions, DataFormat etc",
          "type": "string"
        },
        "status": {
          "description": "Service-set extensible enum indicating the status of operation",
          "enum": [
            "Running",
            "Cancelled",
            "Failed",
            "Succeeded"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "ExecutionStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Running",
                "description": "The operation is currently running."
              },
              {
                "value": "Cancelled",
                "description": "The operation was cancelled."
              },
              {
                "value": "Failed",
                "description": "The operation failed."
              },
              {
                "value": "Succeeded",
                "description": "The operation succeeded."
              }
            ]
          }
        },
        "startTime": {
          "description": "Start time of the operation.",
          "format": "date-time",
          "type": "string"
        },
        "endTime": {
          "description": "End time of the operation.",
          "format": "date-time",
          "type": "string"
        },
        "percentComplete": {
          "description": "PercentageCompleted",
          "format": "double",
          "type": "number",
          "minimum": 0,
          "maximum": 100
        },
        "errorCode": {
          "readOnly": true,
          "type": "string",
          "description": "The error code."
        },
        "errorMessage": {
          "readOnly": true,
          "type": "string",
          "description": "The error message."
        }
      }
    },
    "BackupsLongTermRetentionResponse": {
      "description": "Response for the LTR backup API call",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Long Term Retention Backup Operation Resource Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "required": [
            "status",
            "startTime"
          ],
          "properties": {
            "datasourceSizeInBytes": {
              "format": "int64",
              "description": "Size of datasource in bytes",
              "type": "integer"
            },
            "dataTransferredInBytes": {
              "format": "int64",
              "description": "Data transferred in bytes",
              "type": "integer"
            },
            "backupName": {
              "description": "Name of Backup operation",
              "type": "string"
            },
            "backupMetadata": {
              "description": "Metadata to be stored in RP. Store everything that will be required to perform a successful restore using this Recovery point. e.g. Versions, DataFormat etc",
              "type": "string"
            },
            "status": {
              "description": "Service-set extensible enum indicating the status of operation",
              "enum": [
                "Running",
                "Cancelled",
                "Failed",
                "Succeeded"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ExecutionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Running",
                    "description": "The operation is currently running."
                  },
                  {
                    "value": "Cancelled",
                    "description": "The operation was cancelled."
                  },
                  {
                    "value": "Failed",
                    "description": "The operation failed."
                  },
                  {
                    "value": "Succeeded",
                    "description": "The operation succeeded."
                  }
                ]
              }
            },
            "startTime": {
              "description": "Start time of the operation.",
              "format": "date-time",
              "type": "string"
            },
            "endTime": {
              "description": "End time of the operation.",
              "format": "date-time",
              "type": "string"
            },
            "percentComplete": {
              "description": "PercentageCompleted",
              "format": "double",
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "errorCode": {
              "readOnly": true,
              "type": "string",
              "description": "The error code."
            },
            "errorMessage": {
              "readOnly": true,
              "type": "string",
              "description": "The error message."
            }
          }
        }
      }
    },
    "BackupsLongTermRetentionOperation": {
      "description": "Response for the LTR backup Operation API call",
      "type": "object",
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Long Term Retention Backup Operation Resource Properties",
          "x-ms-client-flatten": true,
          "type": "object",
          "required": [
            "status",
            "startTime"
          ],
          "properties": {
            "datasourceSizeInBytes": {
              "format": "int64",
              "description": "Size of datasource in bytes",
              "type": "integer"
            },
            "dataTransferredInBytes": {
              "format": "int64",
              "description": "Data transferred in bytes",
              "type": "integer"
            },
            "backupName": {
              "description": "Name of Backup operation",
              "type": "string"
            },
            "backupMetadata": {
              "description": "Metadata to be stored in RP. Store everything that will be required to perform a successful restore using this Recovery point. e.g. Versions, DataFormat etc",
              "type": "string"
            },
            "status": {
              "description": "Service-set extensible enum indicating the status of operation",
              "enum": [
                "Running",
                "Cancelled",
                "Failed",
                "Succeeded"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "ExecutionStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Running",
                    "description": "The operation is currently running."
                  },
                  {
                    "value": "Cancelled",
                    "description": "The operation was cancelled."
                  },
                  {
                    "value": "Failed",
                    "description": "The operation failed."
                  },
                  {
                    "value": "Succeeded",
                    "description": "The operation succeeded."
                  }
                ]
              }
            },
            "startTime": {
              "description": "Start time of the operation.",
              "format": "date-time",
              "type": "string"
            },
            "endTime": {
              "description": "End time of the operation.",
              "format": "date-time",
              "type": "string"
            },
            "percentComplete": {
              "description": "PercentageCompleted",
              "format": "double",
              "type": "number",
              "minimum": 0,
              "maximum": 100
            },
            "errorCode": {
              "readOnly": true,
              "type": "string",
              "description": "The error code."
            },
            "errorMessage": {
              "readOnly": true,
              "type": "string",
              "description": "The error message."
            }
          }
        }
      }
    },
    "LtrServerBackupOperationList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "Response for the LTR backup Operation API call",
            "type": "object",
            "required": [
              "id",
              "name"
            ],
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Long Term Retention Backup Operation Resource Properties",
                "x-ms-client-flatten": true,
                "type": "object",
                "required": [
                  "status",
                  "startTime"
                ],
                "properties": {
                  "datasourceSizeInBytes": {
                    "format": "int64",
                    "description": "Size of datasource in bytes",
                    "type": "integer"
                  },
                  "dataTransferredInBytes": {
                    "format": "int64",
                    "description": "Data transferred in bytes",
                    "type": "integer"
                  },
                  "backupName": {
                    "description": "Name of Backup operation",
                    "type": "string"
                  },
                  "backupMetadata": {
                    "description": "Metadata to be stored in RP. Store everything that will be required to perform a successful restore using this Recovery point. e.g. Versions, DataFormat etc",
                    "type": "string"
                  },
                  "status": {
                    "description": "Service-set extensible enum indicating the status of operation",
                    "enum": [
                      "Running",
                      "Cancelled",
                      "Failed",
                      "Succeeded"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "ExecutionStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Running",
                          "description": "The operation is currently running."
                        },
                        {
                          "value": "Cancelled",
                          "description": "The operation was cancelled."
                        },
                        {
                          "value": "Failed",
                          "description": "The operation failed."
                        },
                        {
                          "value": "Succeeded",
                          "description": "The operation succeeded."
                        }
                      ]
                    }
                  },
                  "startTime": {
                    "description": "Start time of the operation.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "endTime": {
                    "description": "End time of the operation.",
                    "format": "date-time",
                    "type": "string"
                  },
                  "percentComplete": {
                    "description": "PercentageCompleted",
                    "format": "double",
                    "type": "number",
                    "minimum": 0,
                    "maximum": 100
                  },
                  "errorCode": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The error code."
                  },
                  "errorMessage": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The error message."
                  }
                }
              }
            }
          },
          "description": "The list of long term retention server backup operations"
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string",
          "format": "uri"
        }
      },
      "description": "A list of long term retention backup operations for server."
    },
    "LtrPreBackupResponse": {
      "description": "Response for the LTR pre-backup API call",
      "type": "object",
      "required": [
        "properties"
      ],
      "properties": {
        "properties": {
          "description": "Additional Properties for the pre backup response",
          "x-ms-client-flatten": true,
          "type": "object",
          "required": [
            "numberOfContainers"
          ],
          "properties": {
            "numberOfContainers": {
              "format": "int32",
              "description": "Number of storage containers the plugin will use during backup. More than one containers may be used for size limitations, parallelism, or redundancy etc.",
              "type": "integer"
            }
          }
        }
      }
    },
    "StorageTierCapability": {
      "type": "object",
      "description": "Capability of a storage tier.",
      "properties": {
        "status": {
          "description": "The status of the capability.",
          "enum": [
            "Visible",
            "Available",
            "Default",
            "Disabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": false
          }
        },
        "reason": {
          "description": "The reason for the capability not being available.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the storage tier.",
          "readOnly": true
        },
        "iops": {
          "type": "integer",
          "format": "int32",
          "description": "Supported IOPS for the storage tier.",
          "readOnly": true
        }
      }
    },
    "StorageMbCapability": {
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of the capability.",
          "enum": [
            "Visible",
            "Available",
            "Default",
            "Disabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": false
          }
        },
        "reason": {
          "description": "The reason for the capability not being available.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "supportedIops": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum IOPS supported by the storage size.",
          "readOnly": true
        },
        "supportedMaximumIops": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum IOPS supported by the storage size.",
          "readOnly": true
        },
        "storageSizeMb": {
          "type": "integer",
          "format": "int64",
          "description": "Minimum supported size (in MB) of storage.",
          "readOnly": true
        },
        "maximumStorageSizeMb": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum supported size (in MB) of storage.",
          "readOnly": true
        },
        "supportedThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "Minimum supported throughput (in MB/s) of storage.",
          "readOnly": true
        },
        "supportedMaximumThroughput": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum supported throughput (in MB/s) of storage.",
          "readOnly": true
        },
        "defaultIopsTier": {
          "type": "string",
          "description": "Default IOPS for this tier and storage size.",
          "readOnly": true
        },
        "supportedIopsTiers": {
          "type": "array",
          "description": "List of all supported storage tiers for this tier and storage size.",
          "items": {
            "type": "object",
            "description": "Capability of a storage tier.",
            "properties": {
              "status": {
                "description": "The status of the capability.",
                "enum": [
                  "Visible",
                  "Available",
                  "Default",
                  "Disabled"
                ],
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ],
                "x-ms-enum": {
                  "name": "CapabilityStatus",
                  "modelAsString": false
                }
              },
              "reason": {
                "description": "The reason for the capability not being available.",
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ]
              },
              "name": {
                "type": "string",
                "description": "Name of the storage tier.",
                "readOnly": true
              },
              "iops": {
                "type": "integer",
                "format": "int32",
                "description": "Supported IOPS for the storage tier.",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true
        }
      },
      "description": "Storage size (in MB) capability."
    },
    "ServerSkuCapability": {
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of the capability.",
          "enum": [
            "Visible",
            "Available",
            "Default",
            "Disabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": false
          }
        },
        "reason": {
          "description": "The reason for the capability not being available.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of the compute (SKU).",
          "readOnly": true
        },
        "vCores": {
          "type": "integer",
          "format": "int32",
          "description": "vCores available for this compute.",
          "readOnly": true
        },
        "supportedIops": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum IOPS supported by this compute.",
          "readOnly": true
        },
        "supportedMemoryPerVcoreMb": {
          "type": "integer",
          "format": "int64",
          "description": "Supported memory (in MB) per virtual core assigned to this compute.",
          "readOnly": true
        },
        "supportedZones": {
          "type": "array",
          "description": "List of supported availability zones. E.g. '1', '2', '3'",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "supportedHaMode": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Modes of high availability supported for this compute.",
            "enum": [
              "SameZone",
              "ZoneRedundant"
            ],
            "x-ms-enum": {
              "name": "HighAvailabilityMode",
              "modelAsString": true,
              "values": [
                {
                  "value": "ZoneRedundant",
                  "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                },
                {
                  "value": "SameZone",
                  "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                }
              ]
            }
          },
          "description": "Modes of high availability supported for this compute.",
          "readOnly": true
        },
        "supportedFeatures": {
          "type": "array",
          "description": "Features supported.",
          "items": {
            "type": "object",
            "description": "Features supported.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the feature.",
                "readOnly": true
              },
              "status": {
                "type": "string",
                "description": "Status of the feature. Indicates if the feature is enabled or not.",
                "readOnly": true,
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "FeatureStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Enabled",
                      "description": "Feature is enabled."
                    },
                    {
                      "value": "Disabled",
                      "description": "Feature is disabled."
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true
        },
        "securityProfile": {
          "type": "string",
          "description": "Security profile of the compute. Indicates if it's a Confidential Compute virtual machine.",
          "readOnly": true
        }
      },
      "description": "Capabilities in terms of compute."
    },
    "ServerVersion": {
      "type": "string",
      "description": "Major version of PostgreSQL database engine.",
      "enum": [
        "18",
        "17",
        "16",
        "15",
        "14",
        "13",
        "12",
        "11"
      ],
      "x-ms-enum": {
        "name": "PostgresMajorVersion",
        "modelAsString": true,
        "values": [
          {
            "value": "18",
            "description": "PostgreSQL 18."
          },
          {
            "value": "17",
            "description": "PostgreSQL 17."
          },
          {
            "value": "16",
            "description": "PostgreSQL 16."
          },
          {
            "value": "15",
            "description": "PostgreSQL 15."
          },
          {
            "value": "14",
            "description": "PostgreSQL 14."
          },
          {
            "value": "13",
            "description": "PostgreSQL 13."
          },
          {
            "value": "12",
            "description": "PostgreSQL 12."
          },
          {
            "value": "11",
            "description": "PostgreSQL 11."
          }
        ]
      }
    },
    "ServerVersionCapability": {
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of the capability.",
          "enum": [
            "Visible",
            "Available",
            "Default",
            "Disabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": false
          }
        },
        "reason": {
          "description": "The reason for the capability not being available.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "type": "string",
          "description": "Major version of PostgreSQL database engine.",
          "readOnly": true
        },
        "supportedVersionsToUpgrade": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Major versions of PostgreSQL database engine to which this version can be automatically upgraded.",
          "readOnly": true
        },
        "supportedFeatures": {
          "type": "array",
          "description": "Features supported.",
          "items": {
            "type": "object",
            "description": "Features supported.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the feature.",
                "readOnly": true
              },
              "status": {
                "type": "string",
                "description": "Status of the feature. Indicates if the feature is enabled or not.",
                "readOnly": true,
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "FeatureStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Enabled",
                      "description": "Feature is enabled."
                    },
                    {
                      "value": "Disabled",
                      "description": "Feature is disabled."
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true
        }
      },
      "description": "Capabilities in terms of major versions of PostgreSQL database engine."
    },
    "StorageEditionCapability": {
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of the capability.",
          "enum": [
            "Visible",
            "Available",
            "Default",
            "Disabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": false
          }
        },
        "reason": {
          "description": "The reason for the capability not being available.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of storage tier.",
          "readOnly": true
        },
        "defaultStorageSizeMb": {
          "type": "integer",
          "format": "int64",
          "description": "Default storage size (in MB) for this storage tier.",
          "readOnly": true
        },
        "supportedStorageMb": {
          "type": "array",
          "description": "Configurations of storage supported for this storage tier.",
          "items": {
            "type": "object",
            "properties": {
              "status": {
                "description": "The status of the capability.",
                "enum": [
                  "Visible",
                  "Available",
                  "Default",
                  "Disabled"
                ],
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ],
                "x-ms-enum": {
                  "name": "CapabilityStatus",
                  "modelAsString": false
                }
              },
              "reason": {
                "description": "The reason for the capability not being available.",
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ]
              },
              "supportedIops": {
                "type": "integer",
                "format": "int32",
                "description": "Minimum IOPS supported by the storage size.",
                "readOnly": true
              },
              "supportedMaximumIops": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum IOPS supported by the storage size.",
                "readOnly": true
              },
              "storageSizeMb": {
                "type": "integer",
                "format": "int64",
                "description": "Minimum supported size (in MB) of storage.",
                "readOnly": true
              },
              "maximumStorageSizeMb": {
                "type": "integer",
                "format": "int64",
                "description": "Maximum supported size (in MB) of storage.",
                "readOnly": true
              },
              "supportedThroughput": {
                "type": "integer",
                "format": "int32",
                "description": "Minimum supported throughput (in MB/s) of storage.",
                "readOnly": true
              },
              "supportedMaximumThroughput": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum supported throughput (in MB/s) of storage.",
                "readOnly": true
              },
              "defaultIopsTier": {
                "type": "string",
                "description": "Default IOPS for this tier and storage size.",
                "readOnly": true
              },
              "supportedIopsTiers": {
                "type": "array",
                "description": "List of all supported storage tiers for this tier and storage size.",
                "items": {
                  "type": "object",
                  "description": "Capability of a storage tier.",
                  "properties": {
                    "status": {
                      "description": "The status of the capability.",
                      "enum": [
                        "Visible",
                        "Available",
                        "Default",
                        "Disabled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "x-ms-enum": {
                        "name": "CapabilityStatus",
                        "modelAsString": false
                      }
                    },
                    "reason": {
                      "description": "The reason for the capability not being available.",
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the storage tier.",
                      "readOnly": true
                    },
                    "iops": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Supported IOPS for the storage tier.",
                      "readOnly": true
                    }
                  }
                },
                "x-ms-identifiers": [
                  "name"
                ],
                "readOnly": true
              }
            },
            "description": "Storage size (in MB) capability."
          },
          "x-ms-identifiers": [
            "storageSizeMb"
          ],
          "readOnly": true
        }
      },
      "description": "Capabilities in terms of storage tier."
    },
    "SupportedFeature": {
      "type": "object",
      "description": "Features supported.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the feature.",
          "readOnly": true
        },
        "status": {
          "type": "string",
          "description": "Status of the feature. Indicates if the feature is enabled or not.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FeatureStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Feature is enabled."
              },
              {
                "value": "Disabled",
                "description": "Feature is disabled."
              }
            ]
          }
        }
      }
    },
    "FastProvisioningEditionCapability": {
      "type": "object",
      "description": "Capability of a fast provisioning compute tier.",
      "properties": {
        "status": {
          "description": "The status of the capability.",
          "enum": [
            "Visible",
            "Available",
            "Default",
            "Disabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": false
          }
        },
        "reason": {
          "description": "The reason for the capability not being available.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "supportedTier": {
          "type": "string",
          "description": "Compute tier supporting fast provisioning.",
          "readOnly": true
        },
        "supportedSku": {
          "type": "string",
          "description": "Compute name (SKU) supporting fast provisioning.",
          "readOnly": true
        },
        "supportedStorageGb": {
          "type": "integer",
          "format": "int32",
          "description": "Storage size (in GB) supporting fast provisioning.",
          "readOnly": true
        },
        "supportedServerVersions": {
          "type": "string",
          "description": "Major version of PostgreSQL database engine supporting fast provisioning.",
          "readOnly": true
        },
        "serverCount": {
          "type": "integer",
          "description": "Count of servers in cache matching this specification.",
          "format": "int32",
          "readOnly": true
        }
      }
    },
    "ServerEditionCapability": {
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of the capability.",
          "enum": [
            "Visible",
            "Available",
            "Default",
            "Disabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": false
          }
        },
        "reason": {
          "description": "The reason for the capability not being available.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of compute tier.",
          "readOnly": true
        },
        "defaultSkuName": {
          "type": "string",
          "description": "Default compute name (SKU) for this computer tier.",
          "readOnly": true
        },
        "supportedStorageEditions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "status": {
                "description": "The status of the capability.",
                "enum": [
                  "Visible",
                  "Available",
                  "Default",
                  "Disabled"
                ],
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ],
                "x-ms-enum": {
                  "name": "CapabilityStatus",
                  "modelAsString": false
                }
              },
              "reason": {
                "description": "The reason for the capability not being available.",
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ]
              },
              "name": {
                "type": "string",
                "description": "Name of storage tier.",
                "readOnly": true
              },
              "defaultStorageSizeMb": {
                "type": "integer",
                "format": "int64",
                "description": "Default storage size (in MB) for this storage tier.",
                "readOnly": true
              },
              "supportedStorageMb": {
                "type": "array",
                "description": "Configurations of storage supported for this storage tier.",
                "items": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status of the capability.",
                      "enum": [
                        "Visible",
                        "Available",
                        "Default",
                        "Disabled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "x-ms-enum": {
                        "name": "CapabilityStatus",
                        "modelAsString": false
                      }
                    },
                    "reason": {
                      "description": "The reason for the capability not being available.",
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ]
                    },
                    "supportedIops": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Minimum IOPS supported by the storage size.",
                      "readOnly": true
                    },
                    "supportedMaximumIops": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum IOPS supported by the storage size.",
                      "readOnly": true
                    },
                    "storageSizeMb": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Minimum supported size (in MB) of storage.",
                      "readOnly": true
                    },
                    "maximumStorageSizeMb": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Maximum supported size (in MB) of storage.",
                      "readOnly": true
                    },
                    "supportedThroughput": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Minimum supported throughput (in MB/s) of storage.",
                      "readOnly": true
                    },
                    "supportedMaximumThroughput": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum supported throughput (in MB/s) of storage.",
                      "readOnly": true
                    },
                    "defaultIopsTier": {
                      "type": "string",
                      "description": "Default IOPS for this tier and storage size.",
                      "readOnly": true
                    },
                    "supportedIopsTiers": {
                      "type": "array",
                      "description": "List of all supported storage tiers for this tier and storage size.",
                      "items": {
                        "type": "object",
                        "description": "Capability of a storage tier.",
                        "properties": {
                          "status": {
                            "description": "The status of the capability.",
                            "enum": [
                              "Visible",
                              "Available",
                              "Default",
                              "Disabled"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-mutability": [
                              "read"
                            ],
                            "x-ms-enum": {
                              "name": "CapabilityStatus",
                              "modelAsString": false
                            }
                          },
                          "reason": {
                            "description": "The reason for the capability not being available.",
                            "type": "string",
                            "readOnly": true,
                            "x-ms-mutability": [
                              "read"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the storage tier.",
                            "readOnly": true
                          },
                          "iops": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Supported IOPS for the storage tier.",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "readOnly": true
                    }
                  },
                  "description": "Storage size (in MB) capability."
                },
                "x-ms-identifiers": [
                  "storageSizeMb"
                ],
                "readOnly": true
              }
            },
            "description": "Capabilities in terms of storage tier."
          },
          "description": "List of storage editions supported by this compute tier and compute name.",
          "readOnly": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "supportedServerSkus": {
          "type": "array",
          "description": "List of supported compute names (SKUs).",
          "items": {
            "type": "object",
            "properties": {
              "status": {
                "description": "The status of the capability.",
                "enum": [
                  "Visible",
                  "Available",
                  "Default",
                  "Disabled"
                ],
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ],
                "x-ms-enum": {
                  "name": "CapabilityStatus",
                  "modelAsString": false
                }
              },
              "reason": {
                "description": "The reason for the capability not being available.",
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ]
              },
              "name": {
                "type": "string",
                "description": "Name of the compute (SKU).",
                "readOnly": true
              },
              "vCores": {
                "type": "integer",
                "format": "int32",
                "description": "vCores available for this compute.",
                "readOnly": true
              },
              "supportedIops": {
                "type": "integer",
                "format": "int32",
                "description": "Maximum IOPS supported by this compute.",
                "readOnly": true
              },
              "supportedMemoryPerVcoreMb": {
                "type": "integer",
                "format": "int64",
                "description": "Supported memory (in MB) per virtual core assigned to this compute.",
                "readOnly": true
              },
              "supportedZones": {
                "type": "array",
                "description": "List of supported availability zones. E.g. '1', '2', '3'",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "supportedHaMode": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Modes of high availability supported for this compute.",
                  "enum": [
                    "SameZone",
                    "ZoneRedundant"
                  ],
                  "x-ms-enum": {
                    "name": "HighAvailabilityMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "ZoneRedundant",
                        "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                      },
                      {
                        "value": "SameZone",
                        "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                      }
                    ]
                  }
                },
                "description": "Modes of high availability supported for this compute.",
                "readOnly": true
              },
              "supportedFeatures": {
                "type": "array",
                "description": "Features supported.",
                "items": {
                  "type": "object",
                  "description": "Features supported.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the feature.",
                      "readOnly": true
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the feature. Indicates if the feature is enabled or not.",
                      "readOnly": true,
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FeatureStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Feature is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Feature is disabled."
                          }
                        ]
                      }
                    }
                  }
                },
                "x-ms-identifiers": [
                  "name"
                ],
                "readOnly": true
              },
              "securityProfile": {
                "type": "string",
                "description": "Security profile of the compute. Indicates if it's a Confidential Compute virtual machine.",
                "readOnly": true
              }
            },
            "description": "Capabilities in terms of compute."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true
        }
      },
      "description": "Capabilities in terms of compute tier."
    },
    "Capability": {
      "type": "object",
      "properties": {
        "status": {
          "description": "The status of the capability.",
          "enum": [
            "Visible",
            "Available",
            "Default",
            "Disabled"
          ],
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ],
          "x-ms-enum": {
            "name": "CapabilityStatus",
            "modelAsString": false
          }
        },
        "reason": {
          "description": "The reason for the capability not being available.",
          "type": "string",
          "readOnly": true,
          "x-ms-mutability": [
            "read"
          ]
        },
        "name": {
          "type": "string",
          "description": "Name of flexible servers capabilities."
        },
        "supportedServerEditions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "status": {
                "description": "The status of the capability.",
                "enum": [
                  "Visible",
                  "Available",
                  "Default",
                  "Disabled"
                ],
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ],
                "x-ms-enum": {
                  "name": "CapabilityStatus",
                  "modelAsString": false
                }
              },
              "reason": {
                "description": "The reason for the capability not being available.",
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ]
              },
              "name": {
                "type": "string",
                "description": "Name of compute tier.",
                "readOnly": true
              },
              "defaultSkuName": {
                "type": "string",
                "description": "Default compute name (SKU) for this computer tier.",
                "readOnly": true
              },
              "supportedStorageEditions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status of the capability.",
                      "enum": [
                        "Visible",
                        "Available",
                        "Default",
                        "Disabled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "x-ms-enum": {
                        "name": "CapabilityStatus",
                        "modelAsString": false
                      }
                    },
                    "reason": {
                      "description": "The reason for the capability not being available.",
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of storage tier.",
                      "readOnly": true
                    },
                    "defaultStorageSizeMb": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Default storage size (in MB) for this storage tier.",
                      "readOnly": true
                    },
                    "supportedStorageMb": {
                      "type": "array",
                      "description": "Configurations of storage supported for this storage tier.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "The status of the capability.",
                            "enum": [
                              "Visible",
                              "Available",
                              "Default",
                              "Disabled"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-mutability": [
                              "read"
                            ],
                            "x-ms-enum": {
                              "name": "CapabilityStatus",
                              "modelAsString": false
                            }
                          },
                          "reason": {
                            "description": "The reason for the capability not being available.",
                            "type": "string",
                            "readOnly": true,
                            "x-ms-mutability": [
                              "read"
                            ]
                          },
                          "supportedIops": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Minimum IOPS supported by the storage size.",
                            "readOnly": true
                          },
                          "supportedMaximumIops": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum IOPS supported by the storage size.",
                            "readOnly": true
                          },
                          "storageSizeMb": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Minimum supported size (in MB) of storage.",
                            "readOnly": true
                          },
                          "maximumStorageSizeMb": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Maximum supported size (in MB) of storage.",
                            "readOnly": true
                          },
                          "supportedThroughput": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Minimum supported throughput (in MB/s) of storage.",
                            "readOnly": true
                          },
                          "supportedMaximumThroughput": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum supported throughput (in MB/s) of storage.",
                            "readOnly": true
                          },
                          "defaultIopsTier": {
                            "type": "string",
                            "description": "Default IOPS for this tier and storage size.",
                            "readOnly": true
                          },
                          "supportedIopsTiers": {
                            "type": "array",
                            "description": "List of all supported storage tiers for this tier and storage size.",
                            "items": {
                              "type": "object",
                              "description": "Capability of a storage tier.",
                              "properties": {
                                "status": {
                                  "description": "The status of the capability.",
                                  "enum": [
                                    "Visible",
                                    "Available",
                                    "Default",
                                    "Disabled"
                                  ],
                                  "type": "string",
                                  "readOnly": true,
                                  "x-ms-mutability": [
                                    "read"
                                  ],
                                  "x-ms-enum": {
                                    "name": "CapabilityStatus",
                                    "modelAsString": false
                                  }
                                },
                                "reason": {
                                  "description": "The reason for the capability not being available.",
                                  "type": "string",
                                  "readOnly": true,
                                  "x-ms-mutability": [
                                    "read"
                                  ]
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name of the storage tier.",
                                  "readOnly": true
                                },
                                "iops": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Supported IOPS for the storage tier.",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "readOnly": true
                          }
                        },
                        "description": "Storage size (in MB) capability."
                      },
                      "x-ms-identifiers": [
                        "storageSizeMb"
                      ],
                      "readOnly": true
                    }
                  },
                  "description": "Capabilities in terms of storage tier."
                },
                "description": "List of storage editions supported by this compute tier and compute name.",
                "readOnly": true,
                "x-ms-identifiers": [
                  "name"
                ]
              },
              "supportedServerSkus": {
                "type": "array",
                "description": "List of supported compute names (SKUs).",
                "items": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status of the capability.",
                      "enum": [
                        "Visible",
                        "Available",
                        "Default",
                        "Disabled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "x-ms-enum": {
                        "name": "CapabilityStatus",
                        "modelAsString": false
                      }
                    },
                    "reason": {
                      "description": "The reason for the capability not being available.",
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the compute (SKU).",
                      "readOnly": true
                    },
                    "vCores": {
                      "type": "integer",
                      "format": "int32",
                      "description": "vCores available for this compute.",
                      "readOnly": true
                    },
                    "supportedIops": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Maximum IOPS supported by this compute.",
                      "readOnly": true
                    },
                    "supportedMemoryPerVcoreMb": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Supported memory (in MB) per virtual core assigned to this compute.",
                      "readOnly": true
                    },
                    "supportedZones": {
                      "type": "array",
                      "description": "List of supported availability zones. E.g. '1', '2', '3'",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "supportedHaMode": {
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "Modes of high availability supported for this compute.",
                        "enum": [
                          "SameZone",
                          "ZoneRedundant"
                        ],
                        "x-ms-enum": {
                          "name": "HighAvailabilityMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "ZoneRedundant",
                              "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                            },
                            {
                              "value": "SameZone",
                              "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                            }
                          ]
                        }
                      },
                      "description": "Modes of high availability supported for this compute.",
                      "readOnly": true
                    },
                    "supportedFeatures": {
                      "type": "array",
                      "description": "Features supported.",
                      "items": {
                        "type": "object",
                        "description": "Features supported.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the feature.",
                            "readOnly": true
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the feature. Indicates if the feature is enabled or not.",
                            "readOnly": true,
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "FeatureStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "Feature is enabled."
                                },
                                {
                                  "value": "Disabled",
                                  "description": "Feature is disabled."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "readOnly": true
                    },
                    "securityProfile": {
                      "type": "string",
                      "description": "Security profile of the compute. Indicates if it's a Confidential Compute virtual machine.",
                      "readOnly": true
                    }
                  },
                  "description": "Capabilities in terms of compute."
                },
                "x-ms-identifiers": [
                  "name"
                ],
                "readOnly": true
              }
            },
            "description": "Capabilities in terms of compute tier."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true,
          "description": "List of supported compute tiers."
        },
        "supportedServerVersions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "status": {
                "description": "The status of the capability.",
                "enum": [
                  "Visible",
                  "Available",
                  "Default",
                  "Disabled"
                ],
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ],
                "x-ms-enum": {
                  "name": "CapabilityStatus",
                  "modelAsString": false
                }
              },
              "reason": {
                "description": "The reason for the capability not being available.",
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ]
              },
              "name": {
                "type": "string",
                "description": "Major version of PostgreSQL database engine.",
                "readOnly": true
              },
              "supportedVersionsToUpgrade": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "Major versions of PostgreSQL database engine to which this version can be automatically upgraded.",
                "readOnly": true
              },
              "supportedFeatures": {
                "type": "array",
                "description": "Features supported.",
                "items": {
                  "type": "object",
                  "description": "Features supported.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the feature.",
                      "readOnly": true
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the feature. Indicates if the feature is enabled or not.",
                      "readOnly": true,
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FeatureStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Feature is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Feature is disabled."
                          }
                        ]
                      }
                    }
                  }
                },
                "x-ms-identifiers": [
                  "name"
                ],
                "readOnly": true
              }
            },
            "description": "Capabilities in terms of major versions of PostgreSQL database engine."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "description": "List of supported major versions of PostgreSQL database engine.",
          "readOnly": true
        },
        "supportedFeatures": {
          "type": "array",
          "description": "Features supported.",
          "items": {
            "type": "object",
            "description": "Features supported.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the feature.",
                "readOnly": true
              },
              "status": {
                "type": "string",
                "description": "Status of the feature. Indicates if the feature is enabled or not.",
                "readOnly": true,
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "FeatureStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Enabled",
                      "description": "Feature is enabled."
                    },
                    {
                      "value": "Disabled",
                      "description": "Feature is disabled."
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true
        },
        "fastProvisioningSupported": {
          "type": "string",
          "description": "Indicates if fast provisioning is supported. 'Enabled' means fast provisioning is supported. 'Disabled' stands for fast provisioning is not supported. Will be deprecated in the future. Look to Supported Features for 'FastProvisioning'.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "FastProvisioningSupport",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Fast provisioning is supported."
              },
              {
                "value": "Disabled",
                "description": "Fast provisioning is not supported."
              }
            ]
          }
        },
        "supportedFastProvisioningEditions": {
          "type": "array",
          "description": "List of compute tiers supporting fast provisioning.",
          "items": {
            "type": "object",
            "description": "Capability of a fast provisioning compute tier.",
            "properties": {
              "status": {
                "description": "The status of the capability.",
                "enum": [
                  "Visible",
                  "Available",
                  "Default",
                  "Disabled"
                ],
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ],
                "x-ms-enum": {
                  "name": "CapabilityStatus",
                  "modelAsString": false
                }
              },
              "reason": {
                "description": "The reason for the capability not being available.",
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ]
              },
              "supportedTier": {
                "type": "string",
                "description": "Compute tier supporting fast provisioning.",
                "readOnly": true
              },
              "supportedSku": {
                "type": "string",
                "description": "Compute name (SKU) supporting fast provisioning.",
                "readOnly": true
              },
              "supportedStorageGb": {
                "type": "integer",
                "format": "int32",
                "description": "Storage size (in GB) supporting fast provisioning.",
                "readOnly": true
              },
              "supportedServerVersions": {
                "type": "string",
                "description": "Major version of PostgreSQL database engine supporting fast provisioning.",
                "readOnly": true
              },
              "serverCount": {
                "type": "integer",
                "description": "Count of servers in cache matching this specification.",
                "format": "int32",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "supportedSku"
          ],
          "readOnly": true
        },
        "geoBackupSupported": {
          "type": "string",
          "description": "Indicates if geographically redundant backups are supported in this location. 'Enabled' means geographically redundant backups are supported. 'Disabled' stands for geographically redundant backup is not supported. Will be deprecated in the future. Look to Supported Features for 'GeoBackup'.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "GeographicallyRedundantBackupSupport",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Geographically redundant backups are supported."
              },
              {
                "value": "Disabled",
                "description": "Geographically redundant backups are not supported."
              }
            ]
          }
        },
        "zoneRedundantHaSupported": {
          "type": "string",
          "description": "Indicates if high availability with zone redundancy is supported in this location. 'Enabled' means high availability with zone redundancy is supported. 'Disabled' stands for high availability with zone redundancy is not supported. Will be deprecated in the future. Look to Supported Features for  'ZoneRedundantHa'.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ZoneRedundantHighAvailabilitySupport",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "High availability with zone redundancy is supported."
              },
              {
                "value": "Disabled",
                "description": "High availability with zone redundancy is not supported."
              }
            ]
          }
        },
        "zoneRedundantHaAndGeoBackupSupported": {
          "type": "string",
          "description": "Indicates if high availability with zone redundancy is supported in conjunction with geographically redundant backups in this location. 'Enabled' means high availability with zone redundancy is supported in conjunction with geographically redundant backups is supported. 'Disabled' stands for high availability with zone redundancy is supported in conjunction with geographically redundant backups is not supported. Will be deprecated in the future. Look to Supported Features for 'ZoneRedundantHaAndGeoBackup'.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ZoneRedundantHighAvailabilityAndGeographicallyRedundantBackupSupport",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "High availability with zone redundancy is supported in conjunction with geographically redundant backups."
              },
              {
                "value": "Disabled",
                "description": "High availability with zone redundancy is not supported in conjunction with geographically redundant backups."
              }
            ]
          }
        },
        "storageAutoGrowthSupported": {
          "type": "string",
          "description": "Indicates if storage autogrow is supported in this location. 'Enabled' means storage autogrow is supported. 'Disabled' stands for storage autogrow is not supported. Will be deprecated in the future. Look to Supported Features for 'StorageAutoGrowth'.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "StorageAutoGrowthSupport",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Storage autogrow is supported."
              },
              {
                "value": "Disabled",
                "description": "Storage autogrow is not supported."
              }
            ]
          }
        },
        "onlineResizeSupported": {
          "type": "string",
          "description": "Indicates if resizing the storage, without interrupting the operation of the database engine, is supported in this location for the given subscription. 'Enabled' means resizing the storage without interrupting the operation of the database engine is supported. 'Disabled' means resizing the storage without interrupting the operation of the database engine is not supported. Will be deprecated in the future. Look to Supported Features for 'OnlineResize'.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "OnlineStorageResizeSupport",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Resizing the storage without interrupting the operation of the database engine is supported."
              },
              {
                "value": "Disabled",
                "description": "Resizing the storage without interrupting the operation of the database engine is not supported."
              }
            ]
          }
        },
        "restricted": {
          "type": "string",
          "description": "Indicates if this location is restricted. 'Enabled' means location is restricted. 'Disabled' stands for location is not restricted. Will be deprecated in the future. Look to Supported Features for 'Restricted'.",
          "readOnly": true,
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "LocationRestricted",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Location is restricted."
              },
              {
                "value": "Disabled",
                "description": "Location is not restricted."
              }
            ]
          }
        }
      },
      "description": "Capability for the Azure Database for PostgreSQL flexible server."
    },
    "CapabilityList": {
      "type": "object",
      "properties": {
        "value": {
          "description": "List of supported capabilities.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "status": {
                "description": "The status of the capability.",
                "enum": [
                  "Visible",
                  "Available",
                  "Default",
                  "Disabled"
                ],
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ],
                "x-ms-enum": {
                  "name": "CapabilityStatus",
                  "modelAsString": false
                }
              },
              "reason": {
                "description": "The reason for the capability not being available.",
                "type": "string",
                "readOnly": true,
                "x-ms-mutability": [
                  "read"
                ]
              },
              "name": {
                "type": "string",
                "description": "Name of flexible servers capabilities."
              },
              "supportedServerEditions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status of the capability.",
                      "enum": [
                        "Visible",
                        "Available",
                        "Default",
                        "Disabled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "x-ms-enum": {
                        "name": "CapabilityStatus",
                        "modelAsString": false
                      }
                    },
                    "reason": {
                      "description": "The reason for the capability not being available.",
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of compute tier.",
                      "readOnly": true
                    },
                    "defaultSkuName": {
                      "type": "string",
                      "description": "Default compute name (SKU) for this computer tier.",
                      "readOnly": true
                    },
                    "supportedStorageEditions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "The status of the capability.",
                            "enum": [
                              "Visible",
                              "Available",
                              "Default",
                              "Disabled"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-mutability": [
                              "read"
                            ],
                            "x-ms-enum": {
                              "name": "CapabilityStatus",
                              "modelAsString": false
                            }
                          },
                          "reason": {
                            "description": "The reason for the capability not being available.",
                            "type": "string",
                            "readOnly": true,
                            "x-ms-mutability": [
                              "read"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of storage tier.",
                            "readOnly": true
                          },
                          "defaultStorageSizeMb": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Default storage size (in MB) for this storage tier.",
                            "readOnly": true
                          },
                          "supportedStorageMb": {
                            "type": "array",
                            "description": "Configurations of storage supported for this storage tier.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "The status of the capability.",
                                  "enum": [
                                    "Visible",
                                    "Available",
                                    "Default",
                                    "Disabled"
                                  ],
                                  "type": "string",
                                  "readOnly": true,
                                  "x-ms-mutability": [
                                    "read"
                                  ],
                                  "x-ms-enum": {
                                    "name": "CapabilityStatus",
                                    "modelAsString": false
                                  }
                                },
                                "reason": {
                                  "description": "The reason for the capability not being available.",
                                  "type": "string",
                                  "readOnly": true,
                                  "x-ms-mutability": [
                                    "read"
                                  ]
                                },
                                "supportedIops": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Minimum IOPS supported by the storage size.",
                                  "readOnly": true
                                },
                                "supportedMaximumIops": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Maximum IOPS supported by the storage size.",
                                  "readOnly": true
                                },
                                "storageSizeMb": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Minimum supported size (in MB) of storage.",
                                  "readOnly": true
                                },
                                "maximumStorageSizeMb": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "Maximum supported size (in MB) of storage.",
                                  "readOnly": true
                                },
                                "supportedThroughput": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Minimum supported throughput (in MB/s) of storage.",
                                  "readOnly": true
                                },
                                "supportedMaximumThroughput": {
                                  "type": "integer",
                                  "format": "int32",
                                  "description": "Maximum supported throughput (in MB/s) of storage.",
                                  "readOnly": true
                                },
                                "defaultIopsTier": {
                                  "type": "string",
                                  "description": "Default IOPS for this tier and storage size.",
                                  "readOnly": true
                                },
                                "supportedIopsTiers": {
                                  "type": "array",
                                  "description": "List of all supported storage tiers for this tier and storage size.",
                                  "items": {
                                    "type": "object",
                                    "description": "Capability of a storage tier.",
                                    "properties": {
                                      "status": {
                                        "description": "The status of the capability.",
                                        "enum": [
                                          "Visible",
                                          "Available",
                                          "Default",
                                          "Disabled"
                                        ],
                                        "type": "string",
                                        "readOnly": true,
                                        "x-ms-mutability": [
                                          "read"
                                        ],
                                        "x-ms-enum": {
                                          "name": "CapabilityStatus",
                                          "modelAsString": false
                                        }
                                      },
                                      "reason": {
                                        "description": "The reason for the capability not being available.",
                                        "type": "string",
                                        "readOnly": true,
                                        "x-ms-mutability": [
                                          "read"
                                        ]
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the storage tier.",
                                        "readOnly": true
                                      },
                                      "iops": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "Supported IOPS for the storage tier.",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "name"
                                  ],
                                  "readOnly": true
                                }
                              },
                              "description": "Storage size (in MB) capability."
                            },
                            "x-ms-identifiers": [
                              "storageSizeMb"
                            ],
                            "readOnly": true
                          }
                        },
                        "description": "Capabilities in terms of storage tier."
                      },
                      "description": "List of storage editions supported by this compute tier and compute name.",
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "supportedServerSkus": {
                      "type": "array",
                      "description": "List of supported compute names (SKUs).",
                      "items": {
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "The status of the capability.",
                            "enum": [
                              "Visible",
                              "Available",
                              "Default",
                              "Disabled"
                            ],
                            "type": "string",
                            "readOnly": true,
                            "x-ms-mutability": [
                              "read"
                            ],
                            "x-ms-enum": {
                              "name": "CapabilityStatus",
                              "modelAsString": false
                            }
                          },
                          "reason": {
                            "description": "The reason for the capability not being available.",
                            "type": "string",
                            "readOnly": true,
                            "x-ms-mutability": [
                              "read"
                            ]
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the compute (SKU).",
                            "readOnly": true
                          },
                          "vCores": {
                            "type": "integer",
                            "format": "int32",
                            "description": "vCores available for this compute.",
                            "readOnly": true
                          },
                          "supportedIops": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Maximum IOPS supported by this compute.",
                            "readOnly": true
                          },
                          "supportedMemoryPerVcoreMb": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Supported memory (in MB) per virtual core assigned to this compute.",
                            "readOnly": true
                          },
                          "supportedZones": {
                            "type": "array",
                            "description": "List of supported availability zones. E.g. '1', '2', '3'",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "supportedHaMode": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Modes of high availability supported for this compute.",
                              "enum": [
                                "SameZone",
                                "ZoneRedundant"
                              ],
                              "x-ms-enum": {
                                "name": "HighAvailabilityMode",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "ZoneRedundant",
                                    "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                                  },
                                  {
                                    "value": "SameZone",
                                    "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                                  }
                                ]
                              }
                            },
                            "description": "Modes of high availability supported for this compute.",
                            "readOnly": true
                          },
                          "supportedFeatures": {
                            "type": "array",
                            "description": "Features supported.",
                            "items": {
                              "type": "object",
                              "description": "Features supported.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the feature.",
                                  "readOnly": true
                                },
                                "status": {
                                  "type": "string",
                                  "description": "Status of the feature. Indicates if the feature is enabled or not.",
                                  "readOnly": true,
                                  "enum": [
                                    "Enabled",
                                    "Disabled"
                                  ],
                                  "x-ms-enum": {
                                    "name": "FeatureStatus",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Enabled",
                                        "description": "Feature is enabled."
                                      },
                                      {
                                        "value": "Disabled",
                                        "description": "Feature is disabled."
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ],
                            "readOnly": true
                          },
                          "securityProfile": {
                            "type": "string",
                            "description": "Security profile of the compute. Indicates if it's a Confidential Compute virtual machine.",
                            "readOnly": true
                          }
                        },
                        "description": "Capabilities in terms of compute."
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "readOnly": true
                    }
                  },
                  "description": "Capabilities in terms of compute tier."
                },
                "x-ms-identifiers": [
                  "name"
                ],
                "readOnly": true,
                "description": "List of supported compute tiers."
              },
              "supportedServerVersions": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "The status of the capability.",
                      "enum": [
                        "Visible",
                        "Available",
                        "Default",
                        "Disabled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "x-ms-enum": {
                        "name": "CapabilityStatus",
                        "modelAsString": false
                      }
                    },
                    "reason": {
                      "description": "The reason for the capability not being available.",
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ]
                    },
                    "name": {
                      "type": "string",
                      "description": "Major version of PostgreSQL database engine.",
                      "readOnly": true
                    },
                    "supportedVersionsToUpgrade": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "Major versions of PostgreSQL database engine to which this version can be automatically upgraded.",
                      "readOnly": true
                    },
                    "supportedFeatures": {
                      "type": "array",
                      "description": "Features supported.",
                      "items": {
                        "type": "object",
                        "description": "Features supported.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the feature.",
                            "readOnly": true
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the feature. Indicates if the feature is enabled or not.",
                            "readOnly": true,
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "x-ms-enum": {
                              "name": "FeatureStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Enabled",
                                  "description": "Feature is enabled."
                                },
                                {
                                  "value": "Disabled",
                                  "description": "Feature is disabled."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "name"
                      ],
                      "readOnly": true
                    }
                  },
                  "description": "Capabilities in terms of major versions of PostgreSQL database engine."
                },
                "x-ms-identifiers": [
                  "name"
                ],
                "description": "List of supported major versions of PostgreSQL database engine.",
                "readOnly": true
              },
              "supportedFeatures": {
                "type": "array",
                "description": "Features supported.",
                "items": {
                  "type": "object",
                  "description": "Features supported.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Name of the feature.",
                      "readOnly": true
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the feature. Indicates if the feature is enabled or not.",
                      "readOnly": true,
                      "enum": [
                        "Enabled",
                        "Disabled"
                      ],
                      "x-ms-enum": {
                        "name": "FeatureStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Enabled",
                            "description": "Feature is enabled."
                          },
                          {
                            "value": "Disabled",
                            "description": "Feature is disabled."
                          }
                        ]
                      }
                    }
                  }
                },
                "x-ms-identifiers": [
                  "name"
                ],
                "readOnly": true
              },
              "fastProvisioningSupported": {
                "type": "string",
                "description": "Indicates if fast provisioning is supported. 'Enabled' means fast provisioning is supported. 'Disabled' stands for fast provisioning is not supported. Will be deprecated in the future. Look to Supported Features for 'FastProvisioning'.",
                "readOnly": true,
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "FastProvisioningSupport",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Enabled",
                      "description": "Fast provisioning is supported."
                    },
                    {
                      "value": "Disabled",
                      "description": "Fast provisioning is not supported."
                    }
                  ]
                }
              },
              "supportedFastProvisioningEditions": {
                "type": "array",
                "description": "List of compute tiers supporting fast provisioning.",
                "items": {
                  "type": "object",
                  "description": "Capability of a fast provisioning compute tier.",
                  "properties": {
                    "status": {
                      "description": "The status of the capability.",
                      "enum": [
                        "Visible",
                        "Available",
                        "Default",
                        "Disabled"
                      ],
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "x-ms-enum": {
                        "name": "CapabilityStatus",
                        "modelAsString": false
                      }
                    },
                    "reason": {
                      "description": "The reason for the capability not being available.",
                      "type": "string",
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ]
                    },
                    "supportedTier": {
                      "type": "string",
                      "description": "Compute tier supporting fast provisioning.",
                      "readOnly": true
                    },
                    "supportedSku": {
                      "type": "string",
                      "description": "Compute name (SKU) supporting fast provisioning.",
                      "readOnly": true
                    },
                    "supportedStorageGb": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Storage size (in GB) supporting fast provisioning.",
                      "readOnly": true
                    },
                    "supportedServerVersions": {
                      "type": "string",
                      "description": "Major version of PostgreSQL database engine supporting fast provisioning.",
                      "readOnly": true
                    },
                    "serverCount": {
                      "type": "integer",
                      "description": "Count of servers in cache matching this specification.",
                      "format": "int32",
                      "readOnly": true
                    }
                  }
                },
                "x-ms-identifiers": [
                  "supportedSku"
                ],
                "readOnly": true
              },
              "geoBackupSupported": {
                "type": "string",
                "description": "Indicates if geographically redundant backups are supported in this location. 'Enabled' means geographically redundant backups are supported. 'Disabled' stands for geographically redundant backup is not supported. Will be deprecated in the future. Look to Supported Features for 'GeoBackup'.",
                "readOnly": true,
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "GeographicallyRedundantBackupSupport",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Enabled",
                      "description": "Geographically redundant backups are supported."
                    },
                    {
                      "value": "Disabled",
                      "description": "Geographically redundant backups are not supported."
                    }
                  ]
                }
              },
              "zoneRedundantHaSupported": {
                "type": "string",
                "description": "Indicates if high availability with zone redundancy is supported in this location. 'Enabled' means high availability with zone redundancy is supported. 'Disabled' stands for high availability with zone redundancy is not supported. Will be deprecated in the future. Look to Supported Features for  'ZoneRedundantHa'.",
                "readOnly": true,
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "ZoneRedundantHighAvailabilitySupport",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Enabled",
                      "description": "High availability with zone redundancy is supported."
                    },
                    {
                      "value": "Disabled",
                      "description": "High availability with zone redundancy is not supported."
                    }
                  ]
                }
              },
              "zoneRedundantHaAndGeoBackupSupported": {
                "type": "string",
                "description": "Indicates if high availability with zone redundancy is supported in conjunction with geographically redundant backups in this location. 'Enabled' means high availability with zone redundancy is supported in conjunction with geographically redundant backups is supported. 'Disabled' stands for high availability with zone redundancy is supported in conjunction with geographically redundant backups is not supported. Will be deprecated in the future. Look to Supported Features for 'ZoneRedundantHaAndGeoBackup'.",
                "readOnly": true,
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "ZoneRedundantHighAvailabilityAndGeographicallyRedundantBackupSupport",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Enabled",
                      "description": "High availability with zone redundancy is supported in conjunction with geographically redundant backups."
                    },
                    {
                      "value": "Disabled",
                      "description": "High availability with zone redundancy is not supported in conjunction with geographically redundant backups."
                    }
                  ]
                }
              },
              "storageAutoGrowthSupported": {
                "type": "string",
                "description": "Indicates if storage autogrow is supported in this location. 'Enabled' means storage autogrow is supported. 'Disabled' stands for storage autogrow is not supported. Will be deprecated in the future. Look to Supported Features for 'StorageAutoGrowth'.",
                "readOnly": true,
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "StorageAutoGrowthSupport",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Enabled",
                      "description": "Storage autogrow is supported."
                    },
                    {
                      "value": "Disabled",
                      "description": "Storage autogrow is not supported."
                    }
                  ]
                }
              },
              "onlineResizeSupported": {
                "type": "string",
                "description": "Indicates if resizing the storage, without interrupting the operation of the database engine, is supported in this location for the given subscription. 'Enabled' means resizing the storage without interrupting the operation of the database engine is supported. 'Disabled' means resizing the storage without interrupting the operation of the database engine is not supported. Will be deprecated in the future. Look to Supported Features for 'OnlineResize'.",
                "readOnly": true,
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "OnlineStorageResizeSupport",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Enabled",
                      "description": "Resizing the storage without interrupting the operation of the database engine is supported."
                    },
                    {
                      "value": "Disabled",
                      "description": "Resizing the storage without interrupting the operation of the database engine is not supported."
                    }
                  ]
                }
              },
              "restricted": {
                "type": "string",
                "description": "Indicates if this location is restricted. 'Enabled' means location is restricted. 'Disabled' stands for location is not restricted. Will be deprecated in the future. Look to Supported Features for 'Restricted'.",
                "readOnly": true,
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "x-ms-enum": {
                  "name": "LocationRestricted",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Enabled",
                      "description": "Location is restricted."
                    },
                    {
                      "value": "Disabled",
                      "description": "Location is not restricted."
                    }
                  ]
                }
              }
            },
            "description": "Capability for the Azure Database for PostgreSQL flexible server."
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "format": "uri"
        }
      },
      "description": "List of capabilities for the Azure Database for PostgreSQL flexible server."
    },
    "CapturedLogProperties": {
      "type": "object",
      "properties": {
        "createdTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation timestamp of the log file."
        },
        "lastModifiedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last modified timestamp of the log file."
        },
        "sizeInKb": {
          "type": "integer",
          "format": "int64",
          "description": "Size (in KB) of the log file."
        },
        "type": {
          "type": "string",
          "description": "Type of log file. Can be 'ServerLogs' or 'UpgradeLogs'."
        },
        "url": {
          "type": "string",
          "description": "URL to download the log file from."
        }
      },
      "description": "Properties of a log file."
    },
    "CapturedLog": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of a log file.",
          "type": "object",
          "properties": {
            "createdTime": {
              "type": "string",
              "format": "date-time",
              "description": "Creation timestamp of the log file."
            },
            "lastModifiedTime": {
              "type": "string",
              "format": "date-time",
              "description": "Last modified timestamp of the log file."
            },
            "sizeInKb": {
              "type": "integer",
              "format": "int64",
              "description": "Size (in KB) of the log file."
            },
            "type": {
              "type": "string",
              "description": "Type of log file. Can be 'ServerLogs' or 'UpgradeLogs'."
            },
            "url": {
              "type": "string",
              "description": "URL to download the log file from."
            }
          }
        }
      },
      "description": "Log file."
    },
    "CapturedLogList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of a log file.",
                "type": "object",
                "properties": {
                  "createdTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation timestamp of the log file."
                  },
                  "lastModifiedTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last modified timestamp of the log file."
                  },
                  "sizeInKb": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Size (in KB) of the log file."
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of log file. Can be 'ServerLogs' or 'UpgradeLogs'."
                  },
                  "url": {
                    "type": "string",
                    "description": "URL to download the log file from."
                  }
                }
              }
            },
            "description": "Log file."
          },
          "description": "List of log files in a server."
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "format": "uri"
        }
      },
      "description": "List of log files."
    },
    "ConfigurationProperties": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Value of the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Description of the configuration (also known as server parameter)."
        },
        "defaultValue": {
          "type": "string",
          "readOnly": true,
          "description": "Value assigned by default to the configuration (also known as server parameter)."
        },
        "dataType": {
          "type": "string",
          "readOnly": true,
          "description": "Data type of the configuration (also known as server parameter).",
          "enum": [
            "Boolean",
            "Numeric",
            "Integer",
            "Enumeration",
            "String",
            "Set"
          ],
          "x-ms-enum": {
            "name": "ConfigurationDataType",
            "modelAsString": true,
            "values": [
              {
                "value": "Boolean",
                "description": "A boolean value."
              },
              {
                "value": "Numeric",
                "description": "A numeric value."
              },
              {
                "value": "Integer",
                "description": "An integer value."
              },
              {
                "value": "Enumeration",
                "description": "An enumeration value."
              },
              {
                "value": "String",
                "description": "A string value."
              },
              {
                "value": "Set",
                "description": "A set of values."
              }
            ]
          }
        },
        "allowedValues": {
          "type": "string",
          "readOnly": true,
          "description": "Allowed values of the configuration (also known as server parameter)."
        },
        "source": {
          "type": "string",
          "description": "Source of the value assigned to the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
        },
        "isDynamicConfig": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates if it's a dynamic (true) or static (false) configuration (also known as server parameter). Static server parameters require a server restart after changing the value assigned to them, for the change to take effect. Dynamic server parameters do not require a server restart after changing the value assigned to them, for the change to take effect."
        },
        "isReadOnly": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates if it's a read-only (true) or modifiable (false) configuration (also known as server parameter)."
        },
        "isConfigPendingRestart": {
          "type": "boolean",
          "readOnly": true,
          "description": "Indicates if the value assigned to the configuration (also known as server parameter) is pending a server restart for it to take effect."
        },
        "unit": {
          "type": "string",
          "readOnly": true,
          "description": "Units in which the configuration (also known as server parameter) value is expressed."
        },
        "documentationLink": {
          "type": "string",
          "readOnly": true,
          "description": "Link pointing to the documentation of the configuration (also known as server parameter)."
        }
      },
      "description": "Properties of a configuration (also known as server parameter)."
    },
    "Configuration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of a configuration (also known as server parameter).",
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "Value of the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
            },
            "description": {
              "type": "string",
              "readOnly": true,
              "description": "Description of the configuration (also known as server parameter)."
            },
            "defaultValue": {
              "type": "string",
              "readOnly": true,
              "description": "Value assigned by default to the configuration (also known as server parameter)."
            },
            "dataType": {
              "type": "string",
              "readOnly": true,
              "description": "Data type of the configuration (also known as server parameter).",
              "enum": [
                "Boolean",
                "Numeric",
                "Integer",
                "Enumeration",
                "String",
                "Set"
              ],
              "x-ms-enum": {
                "name": "ConfigurationDataType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Boolean",
                    "description": "A boolean value."
                  },
                  {
                    "value": "Numeric",
                    "description": "A numeric value."
                  },
                  {
                    "value": "Integer",
                    "description": "An integer value."
                  },
                  {
                    "value": "Enumeration",
                    "description": "An enumeration value."
                  },
                  {
                    "value": "String",
                    "description": "A string value."
                  },
                  {
                    "value": "Set",
                    "description": "A set of values."
                  }
                ]
              }
            },
            "allowedValues": {
              "type": "string",
              "readOnly": true,
              "description": "Allowed values of the configuration (also known as server parameter)."
            },
            "source": {
              "type": "string",
              "description": "Source of the value assigned to the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
            },
            "isDynamicConfig": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates if it's a dynamic (true) or static (false) configuration (also known as server parameter). Static server parameters require a server restart after changing the value assigned to them, for the change to take effect. Dynamic server parameters do not require a server restart after changing the value assigned to them, for the change to take effect."
            },
            "isReadOnly": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates if it's a read-only (true) or modifiable (false) configuration (also known as server parameter)."
            },
            "isConfigPendingRestart": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates if the value assigned to the configuration (also known as server parameter) is pending a server restart for it to take effect."
            },
            "unit": {
              "type": "string",
              "readOnly": true,
              "description": "Units in which the configuration (also known as server parameter) value is expressed."
            },
            "documentationLink": {
              "type": "string",
              "readOnly": true,
              "description": "Link pointing to the documentation of the configuration (also known as server parameter)."
            }
          }
        }
      },
      "description": "Configuration (also known as server parameter)."
    },
    "ConfigurationForUpdate": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of a configuration (also known as server parameter).",
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "Value of the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
            },
            "description": {
              "type": "string",
              "readOnly": true,
              "description": "Description of the configuration (also known as server parameter)."
            },
            "defaultValue": {
              "type": "string",
              "readOnly": true,
              "description": "Value assigned by default to the configuration (also known as server parameter)."
            },
            "dataType": {
              "type": "string",
              "readOnly": true,
              "description": "Data type of the configuration (also known as server parameter).",
              "enum": [
                "Boolean",
                "Numeric",
                "Integer",
                "Enumeration",
                "String",
                "Set"
              ],
              "x-ms-enum": {
                "name": "ConfigurationDataType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Boolean",
                    "description": "A boolean value."
                  },
                  {
                    "value": "Numeric",
                    "description": "A numeric value."
                  },
                  {
                    "value": "Integer",
                    "description": "An integer value."
                  },
                  {
                    "value": "Enumeration",
                    "description": "An enumeration value."
                  },
                  {
                    "value": "String",
                    "description": "A string value."
                  },
                  {
                    "value": "Set",
                    "description": "A set of values."
                  }
                ]
              }
            },
            "allowedValues": {
              "type": "string",
              "readOnly": true,
              "description": "Allowed values of the configuration (also known as server parameter)."
            },
            "source": {
              "type": "string",
              "description": "Source of the value assigned to the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
            },
            "isDynamicConfig": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates if it's a dynamic (true) or static (false) configuration (also known as server parameter). Static server parameters require a server restart after changing the value assigned to them, for the change to take effect. Dynamic server parameters do not require a server restart after changing the value assigned to them, for the change to take effect."
            },
            "isReadOnly": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates if it's a read-only (true) or modifiable (false) configuration (also known as server parameter)."
            },
            "isConfigPendingRestart": {
              "type": "boolean",
              "readOnly": true,
              "description": "Indicates if the value assigned to the configuration (also known as server parameter) is pending a server restart for it to take effect."
            },
            "unit": {
              "type": "string",
              "readOnly": true,
              "description": "Units in which the configuration (also known as server parameter) value is expressed."
            },
            "documentationLink": {
              "type": "string",
              "readOnly": true,
              "description": "Link pointing to the documentation of the configuration (also known as server parameter)."
            }
          }
        }
      },
      "description": "Configuration (also known as server parameter)."
    },
    "ConfigurationList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of a configuration (also known as server parameter).",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Value of the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
                  },
                  "description": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Description of the configuration (also known as server parameter)."
                  },
                  "defaultValue": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Value assigned by default to the configuration (also known as server parameter)."
                  },
                  "dataType": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Data type of the configuration (also known as server parameter).",
                    "enum": [
                      "Boolean",
                      "Numeric",
                      "Integer",
                      "Enumeration",
                      "String",
                      "Set"
                    ],
                    "x-ms-enum": {
                      "name": "ConfigurationDataType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Boolean",
                          "description": "A boolean value."
                        },
                        {
                          "value": "Numeric",
                          "description": "A numeric value."
                        },
                        {
                          "value": "Integer",
                          "description": "An integer value."
                        },
                        {
                          "value": "Enumeration",
                          "description": "An enumeration value."
                        },
                        {
                          "value": "String",
                          "description": "A string value."
                        },
                        {
                          "value": "Set",
                          "description": "A set of values."
                        }
                      ]
                    }
                  },
                  "allowedValues": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Allowed values of the configuration (also known as server parameter)."
                  },
                  "source": {
                    "type": "string",
                    "description": "Source of the value assigned to the configuration (also known as server parameter). Required to update the value assigned to a specific modifiable configuration."
                  },
                  "isDynamicConfig": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Indicates if it's a dynamic (true) or static (false) configuration (also known as server parameter). Static server parameters require a server restart after changing the value assigned to them, for the change to take effect. Dynamic server parameters do not require a server restart after changing the value assigned to them, for the change to take effect."
                  },
                  "isReadOnly": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Indicates if it's a read-only (true) or modifiable (false) configuration (also known as server parameter)."
                  },
                  "isConfigPendingRestart": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Indicates if the value assigned to the configuration (also known as server parameter) is pending a server restart for it to take effect."
                  },
                  "unit": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Units in which the configuration (also known as server parameter) value is expressed."
                  },
                  "documentationLink": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Link pointing to the documentation of the configuration (also known as server parameter)."
                  }
                }
              }
            },
            "description": "Configuration (also known as server parameter)."
          },
          "description": "List of configurations (also known as server parameters)."
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "format": "uri"
        }
      },
      "description": "List of configurations (also known as server parameters)."
    },
    "DatabaseProperties": {
      "type": "object",
      "properties": {
        "charset": {
          "type": "string",
          "description": "Character set of the database.",
          "pattern": "^[a-zA-Z]+\\w*$"
        },
        "collation": {
          "type": "string",
          "description": "Collation of the database.",
          "pattern": "^[a-zA-Z\\-]+([. ]|\\w)*$"
        }
      },
      "description": "Properties of a database."
    },
    "Database": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of a database.",
          "type": "object",
          "properties": {
            "charset": {
              "type": "string",
              "description": "Character set of the database.",
              "pattern": "^[a-zA-Z]+\\w*$"
            },
            "collation": {
              "type": "string",
              "description": "Collation of the database.",
              "pattern": "^[a-zA-Z\\-]+([. ]|\\w)*$"
            }
          }
        }
      },
      "description": "Represents a database."
    },
    "DatabaseList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of a database.",
                "type": "object",
                "properties": {
                  "charset": {
                    "type": "string",
                    "description": "Character set of the database.",
                    "pattern": "^[a-zA-Z]+\\w*$"
                  },
                  "collation": {
                    "type": "string",
                    "description": "Collation of the database.",
                    "pattern": "^[a-zA-Z\\-]+([. ]|\\w)*$"
                  }
                }
              }
            },
            "description": "Represents a database."
          },
          "description": "List of all databases in a server."
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "format": "uri"
        }
      },
      "description": "List of all databases in a server."
    },
    "FirewallRuleProperties": {
      "type": "object",
      "properties": {
        "startIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
          "description": "IP address defining the start of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
        },
        "endIpAddress": {
          "type": "string",
          "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
          "description": "IP address defining the end of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
        }
      },
      "required": [
        "startIpAddress",
        "endIpAddress"
      ],
      "description": "Properties of a firewall rule."
    },
    "FirewallRule": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of a firewall rule.",
          "type": "object",
          "properties": {
            "startIpAddress": {
              "type": "string",
              "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
              "description": "IP address defining the start of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
            },
            "endIpAddress": {
              "type": "string",
              "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
              "description": "IP address defining the end of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
            }
          },
          "required": [
            "startIpAddress",
            "endIpAddress"
          ]
        }
      },
      "required": [
        "properties"
      ],
      "description": "Firewall rule."
    },
    "FirewallRuleList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of a firewall rule.",
                "type": "object",
                "properties": {
                  "startIpAddress": {
                    "type": "string",
                    "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
                    "description": "IP address defining the start of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
                  },
                  "endIpAddress": {
                    "type": "string",
                    "pattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$",
                    "description": "IP address defining the end of the range of addresses of a firewall rule. Must be expressed in IPv4 format."
                  }
                },
                "required": [
                  "startIpAddress",
                  "endIpAddress"
                ]
              }
            },
            "required": [
              "properties"
            ],
            "description": "Firewall rule."
          },
          "description": "List of firewall rules in a server."
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "format": "uri"
        }
      },
      "description": "List of firewall rules."
    },
    "Migration": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "properties": {
          "description": "Migration properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "migrationId": {
              "type": "string",
              "readOnly": true,
              "description": "Identifier of a migration."
            },
            "currentStatus": {
              "readOnly": true,
              "description": "Current status of a migration.",
              "type": "object",
              "properties": {
                "state": {
                  "readOnly": true,
                  "description": "State of migration.",
                  "enum": [
                    "InProgress",
                    "WaitingForUserAction",
                    "Canceled",
                    "Failed",
                    "Succeeded",
                    "ValidationFailed",
                    "CleaningUp"
                  ],
                  "type": "string",
                  "x-ms-enum": {
                    "name": "MigrationState",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "InProgress",
                        "description": "Migration is in progress."
                      },
                      {
                        "value": "WaitingForUserAction",
                        "description": "Migration is waiting for user action."
                      },
                      {
                        "value": "Canceled",
                        "description": "Migration has been canceled."
                      },
                      {
                        "value": "Failed",
                        "description": "Migration has failed."
                      },
                      {
                        "value": "Succeeded",
                        "description": "Migration has succeeded."
                      },
                      {
                        "value": "ValidationFailed",
                        "description": "Validation for migration has failed."
                      },
                      {
                        "value": "CleaningUp",
                        "description": "Migration is cleaning up resources."
                      }
                    ]
                  }
                },
                "error": {
                  "type": "string",
                  "readOnly": true,
                  "description": "Error message, if any, for the migration state."
                },
                "currentSubStateDetails": {
                  "readOnly": true,
                  "description": "Current migration sub state details.",
                  "type": "object",
                  "properties": {
                    "currentSubState": {
                      "readOnly": true,
                      "enum": [
                        "PerformingPreRequisiteSteps",
                        "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                        "WaitingForDBsToMigrateSpecification",
                        "WaitingForTargetDBOverwriteConfirmation",
                        "WaitingForDataMigrationScheduling",
                        "WaitingForDataMigrationWindow",
                        "MigratingData",
                        "WaitingForCutoverTrigger",
                        "CompletingMigration",
                        "Completed",
                        "CancelingRequestedDBMigrations",
                        "ValidationInProgress"
                      ],
                      "type": "string",
                      "description": "Substate of migration.",
                      "x-ms-enum": {
                        "name": "MigrationSubstate",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "PerformingPreRequisiteSteps",
                            "description": "Performing pre-requisite steps for migration."
                          },
                          {
                            "value": "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                            "description": "Waiting for logical replication setup request on source database."
                          },
                          {
                            "value": "WaitingForDBsToMigrateSpecification",
                            "description": "Waiting for databases to migrate specification."
                          },
                          {
                            "value": "WaitingForTargetDBOverwriteConfirmation",
                            "description": "Waiting for target database overwrite confirmation."
                          },
                          {
                            "value": "WaitingForDataMigrationScheduling",
                            "description": "Waiting for data migration scheduling."
                          },
                          {
                            "value": "WaitingForDataMigrationWindow",
                            "description": "Waiting for data migration window."
                          },
                          {
                            "value": "MigratingData",
                            "description": "Migrating data."
                          },
                          {
                            "value": "WaitingForCutoverTrigger",
                            "description": "Waiting for cutover trigger."
                          },
                          {
                            "value": "CompletingMigration",
                            "description": "Completing migration."
                          },
                          {
                            "value": "Completed",
                            "description": "Migration completed."
                          },
                          {
                            "value": "CancelingRequestedDBMigrations",
                            "description": "Canceling requested database migrations."
                          },
                          {
                            "value": "ValidationInProgress",
                            "description": "Validation in progress."
                          }
                        ]
                      }
                    },
                    "dbDetails": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "description": "Migration state of a database.",
                        "properties": {
                          "databaseName": {
                            "type": "string",
                            "description": "Name of database."
                          },
                          "migrationState": {
                            "type": "string",
                            "description": "Migration state of a database.",
                            "enum": [
                              "InProgress",
                              "WaitingForCutoverTrigger",
                              "Failed",
                              "Canceled",
                              "Succeeded",
                              "Canceling"
                            ],
                            "x-ms-enum": {
                              "name": "MigrationDatabaseState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "InProgress",
                                  "description": "Migration is in progress for the database."
                                },
                                {
                                  "value": "WaitingForCutoverTrigger",
                                  "description": "Migration is waiting for cutover trigger for the database."
                                },
                                {
                                  "value": "Failed",
                                  "description": "Migration has failed for the database."
                                },
                                {
                                  "value": "Canceled",
                                  "description": "Migration has been canceled for the database."
                                },
                                {
                                  "value": "Succeeded",
                                  "description": "Migration has succeeded for the database."
                                },
                                {
                                  "value": "Canceling",
                                  "description": "Migration is canceling for the database."
                                }
                              ]
                            }
                          },
                          "migrationOperation": {
                            "type": "string",
                            "description": "Migration operation of a database."
                          },
                          "startedOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Start time of a migration state."
                          },
                          "endedOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "End time of a migration state."
                          },
                          "fullLoadQueuedTables": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Number of tables queued for the migration of a database."
                          },
                          "fullLoadErroredTables": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Number of tables encountering errors during the migration of a database."
                          },
                          "fullLoadLoadingTables": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Number of tables loading during the migration of a database."
                          },
                          "fullLoadCompletedTables": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Number of tables loaded during the migration of a database."
                          },
                          "cdcUpdateCounter": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Change Data Capture update counter."
                          },
                          "cdcDeleteCounter": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Change Data Capture delete counter."
                          },
                          "cdcInsertCounter": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Change Data Capture insert counter."
                          },
                          "appliedChanges": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Change Data Capture applied changes counter."
                          },
                          "incomingChanges": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Change Data Capture incoming changes counter."
                          },
                          "latency": {
                            "format": "int32",
                            "type": "integer",
                            "description": "Lag in seconds between source and target during online phase."
                          },
                          "message": {
                            "type": "string",
                            "description": "Error message, if any, for the migration state."
                          }
                        }
                      }
                    },
                    "validationDetails": {
                      "type": "object",
                      "description": "Details for the validation for migration.",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "Validation status for migration.",
                          "enum": [
                            "Failed",
                            "Succeeded",
                            "Warning"
                          ],
                          "x-ms-enum": {
                            "name": "ValidationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Failed",
                                "description": "Validation has failed."
                              },
                              {
                                "value": "Succeeded",
                                "description": "Validation has succeeded."
                              },
                              {
                                "value": "Warning",
                                "description": "Validation has succeeded with warnings."
                              }
                            ]
                          }
                        },
                        "validationStartTimeInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Start time (UTC) for validation."
                        },
                        "validationEndTimeInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "End time (UTC) for validation."
                        },
                        "serverLevelValidationDetails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Validation summary object.",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "Validation type."
                              },
                              "state": {
                                "type": "string",
                                "description": "Validation status for migration.",
                                "enum": [
                                  "Failed",
                                  "Succeeded",
                                  "Warning"
                                ],
                                "x-ms-enum": {
                                  "name": "ValidationState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Failed",
                                      "description": "Validation has failed."
                                    },
                                    {
                                      "value": "Succeeded",
                                      "description": "Validation has succeeded."
                                    },
                                    {
                                      "value": "Warning",
                                      "description": "Validation has succeeded with warnings."
                                    }
                                  ]
                                }
                              },
                              "messages": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Validation message object.",
                                  "properties": {
                                    "state": {
                                      "type": "string",
                                      "description": "Validation status for migration.",
                                      "enum": [
                                        "Failed",
                                        "Succeeded",
                                        "Warning"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ValidationState",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "Failed",
                                            "description": "Validation has failed."
                                          },
                                          {
                                            "value": "Succeeded",
                                            "description": "Validation has succeeded."
                                          },
                                          {
                                            "value": "Warning",
                                            "description": "Validation has succeeded with warnings."
                                          }
                                        ]
                                      }
                                    },
                                    "message": {
                                      "type": "string",
                                      "description": "Validation message string."
                                    }
                                  }
                                },
                                "description": "Validation messages.",
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "description": "Details of server level validations.",
                          "x-ms-identifiers": []
                        },
                        "dbLevelValidationDetails": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Validation status summary for a database.",
                            "properties": {
                              "databaseName": {
                                "type": "string",
                                "description": "Name of database."
                              },
                              "startedOn": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Start time of a database level validation."
                              },
                              "endedOn": {
                                "type": "string",
                                "format": "date-time",
                                "description": "End time of a database level validation."
                              },
                              "summary": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Validation summary object.",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Validation type."
                                    },
                                    "state": {
                                      "type": "string",
                                      "description": "Validation status for migration.",
                                      "enum": [
                                        "Failed",
                                        "Succeeded",
                                        "Warning"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ValidationState",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "Failed",
                                            "description": "Validation has failed."
                                          },
                                          {
                                            "value": "Succeeded",
                                            "description": "Validation has succeeded."
                                          },
                                          {
                                            "value": "Warning",
                                            "description": "Validation has succeeded with warnings."
                                          }
                                        ]
                                      }
                                    },
                                    "messages": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Validation message object.",
                                        "properties": {
                                          "state": {
                                            "type": "string",
                                            "description": "Validation status for migration.",
                                            "enum": [
                                              "Failed",
                                              "Succeeded",
                                              "Warning"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ValidationState",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "Failed",
                                                  "description": "Validation has failed."
                                                },
                                                {
                                                  "value": "Succeeded",
                                                  "description": "Validation has succeeded."
                                                },
                                                {
                                                  "value": "Warning",
                                                  "description": "Validation has succeeded with warnings."
                                                }
                                              ]
                                            }
                                          },
                                          "message": {
                                            "type": "string",
                                            "description": "Validation message string."
                                          }
                                        }
                                      },
                                      "description": "Validation messages.",
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "description": "Summary of database level validations.",
                                "x-ms-identifiers": []
                              }
                            }
                          },
                          "description": "Details of server level validations.",
                          "x-ms-identifiers": [
                            "databaseName"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            },
            "migrationInstanceResourceId": {
              "type": "string",
              "format": "arm-id",
              "description": "Identifier of the private endpoint migration instance."
            },
            "migrationMode": {
              "description": "Mode used to perform the migration: Online or Offline.",
              "enum": [
                "Offline",
                "Online"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MigrationMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Offline",
                    "description": "Offline migration mode."
                  },
                  {
                    "value": "Online",
                    "description": "Online migration mode."
                  }
                ]
              }
            },
            "migrationOption": {
              "description": "Supported option for a migration.",
              "enum": [
                "Validate",
                "Migrate",
                "ValidateAndMigrate"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MigrationOption",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Validate",
                    "description": "Validate the migration without performing it."
                  },
                  {
                    "value": "Migrate",
                    "description": "Perform the migration."
                  },
                  {
                    "value": "ValidateAndMigrate",
                    "description": "Validate and perform the migration."
                  }
                ]
              }
            },
            "sourceType": {
              "description": "Source server type used for the migration: ApsaraDB_RDS, AWS, AWS_AURORA, AWS_EC2, AWS_RDS, AzureVM, Crunchy_PostgreSQL, Digital_Ocean_Droplets, Digital_Ocean_PostgreSQL, EDB, EDB_Oracle_Server, EDB_PostgreSQL, GCP, GCP_AlloyDB, GCP_CloudSQL, GCP_Compute, Heroku_PostgreSQL, Huawei_Compute, Huawei_RDS, OnPremises, PostgreSQLCosmosDB, PostgreSQLFlexibleServer, PostgreSQLSingleServer, or Supabase_PostgreSQL",
              "enum": [
                "OnPremises",
                "AWS",
                "GCP",
                "AzureVM",
                "PostgreSQLSingleServer",
                "AWS_RDS",
                "AWS_AURORA",
                "AWS_EC2",
                "GCP_CloudSQL",
                "GCP_AlloyDB",
                "GCP_Compute",
                "EDB",
                "EDB_Oracle_Server",
                "EDB_PostgreSQL",
                "PostgreSQLFlexibleServer",
                "PostgreSQLCosmosDB",
                "Huawei_RDS",
                "Huawei_Compute",
                "Heroku_PostgreSQL",
                "Crunchy_PostgreSQL",
                "ApsaraDB_RDS",
                "Digital_Ocean_Droplets",
                "Digital_Ocean_PostgreSQL",
                "Supabase_PostgreSQL"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SourceType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "OnPremises",
                    "description": "On-premises PostgreSQL server."
                  },
                  {
                    "value": "AWS",
                    "description": "Amazon Web Services PostgreSQL server."
                  },
                  {
                    "value": "GCP",
                    "description": "Google Cloud Platform PostgreSQL server."
                  },
                  {
                    "value": "AzureVM",
                    "description": "Azure Virtual Machine PostgreSQL server."
                  },
                  {
                    "value": "PostgreSQLSingleServer",
                    "description": "Azure Database for PostgreSQL single server."
                  },
                  {
                    "value": "AWS_RDS",
                    "description": "Amazon RDS for PostgreSQL."
                  },
                  {
                    "value": "AWS_AURORA",
                    "description": "Amazon Aurora for PostgreSQL."
                  },
                  {
                    "value": "AWS_EC2",
                    "description": "Amazon EC2 for PostgreSQL."
                  },
                  {
                    "value": "GCP_CloudSQL",
                    "description": "Google Cloud SQL for PostgreSQL."
                  },
                  {
                    "value": "GCP_AlloyDB",
                    "description": "Google Cloud AlloyDB for PostgreSQL."
                  },
                  {
                    "value": "GCP_Compute",
                    "description": "Google Compute Engine for PostgreSQL."
                  },
                  {
                    "value": "EDB",
                    "description": "EnterpriseDB PostgreSQL server."
                  },
                  {
                    "value": "EDB_Oracle_Server",
                    "description": "EnterpriseDB Oracle Server."
                  },
                  {
                    "value": "EDB_PostgreSQL",
                    "description": "EnterpriseDB PostgreSQL server."
                  },
                  {
                    "value": "PostgreSQLFlexibleServer",
                    "description": "Azure Database for PostgreSQL flexible server."
                  },
                  {
                    "value": "PostgreSQLCosmosDB",
                    "description": ".NET Cosmos DB for PostgreSQL"
                  },
                  {
                    "value": "Huawei_RDS",
                    "description": "Huawei RDS for PostgreSQL"
                  },
                  {
                    "value": "Huawei_Compute",
                    "description": "Huawei Compute for PostgreSQL"
                  },
                  {
                    "value": "Heroku_PostgreSQL",
                    "description": "Heroku PostgreSQL"
                  },
                  {
                    "value": "Crunchy_PostgreSQL",
                    "description": "Crunchy PostgreSQL"
                  },
                  {
                    "value": "ApsaraDB_RDS",
                    "description": "ApsaraDB RDS for PostgreSQL"
                  },
                  {
                    "value": "Digital_Ocean_Droplets",
                    "description": "Digital Ocean Droplets for PostgreSQL"
                  },
                  {
                    "value": "Digital_Ocean_PostgreSQL",
                    "description": "Digital Ocean PostgreSQL"
                  },
                  {
                    "value": "Supabase_PostgreSQL",
                    "description": "Supabase PostgreSQL"
                  }
                ]
              }
            },
            "sslMode": {
              "description": "SSL mode used by a migration. Default SSL mode for 'PostgreSQLSingleServer' is 'VerifyFull'. Default SSL mode for other source types is 'Prefer'.",
              "enum": [
                "Prefer",
                "Require",
                "VerifyCA",
                "VerifyFull"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "SslMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Prefer",
                    "description": "Prefer SSL connection. If the server does not support SSL, the connection will be established without SSL."
                  },
                  {
                    "value": "Require",
                    "description": "Require SSL connection. If the server does not support SSL, the connection will fail."
                  },
                  {
                    "value": "VerifyCA",
                    "description": "Require SSL connection and verify the server certificate against the CA certificate."
                  },
                  {
                    "value": "VerifyFull",
                    "description": "Require SSL connection, verify the server certificate against the CA certificate, and verify that the server hostname matches the certificate."
                  }
                ]
              }
            },
            "sourceDbServerMetadata": {
              "readOnly": true,
              "description": "Metadata of source database server.",
              "type": "object",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "Location of database server.",
                  "x-ms-mutability": [
                    "read"
                  ],
                  "readOnly": true
                },
                "version": {
                  "type": "string",
                  "description": "Major version of PostgreSQL database engine."
                },
                "storageMb": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Storage size (in MB) for database server."
                },
                "sku": {
                  "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                    },
                    "tier": {
                      "type": "string",
                      "description": "Tier of the compute assigned to a server.",
                      "enum": [
                        "Burstable",
                        "GeneralPurpose",
                        "MemoryOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            },
            "targetDbServerMetadata": {
              "readOnly": true,
              "description": "Metadata of target database server.",
              "type": "object",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "Location of database server.",
                  "x-ms-mutability": [
                    "read"
                  ],
                  "readOnly": true
                },
                "version": {
                  "type": "string",
                  "description": "Major version of PostgreSQL database engine."
                },
                "storageMb": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Storage size (in MB) for database server."
                },
                "sku": {
                  "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                    },
                    "tier": {
                      "type": "string",
                      "description": "Tier of the compute assigned to a server.",
                      "enum": [
                        "Burstable",
                        "GeneralPurpose",
                        "MemoryOptimized"
                      ],
                      "x-ms-enum": {
                        "name": "SkuTier",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            },
            "sourceDbServerResourceId": {
              "type": "string",
              "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
            },
            "sourceDbServerFullyQualifiedDomainName": {
              "type": "string",
              "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
            },
            "targetDbServerResourceId": {
              "type": "string",
              "readOnly": true,
              "description": "Identifier of the target database server resource."
            },
            "targetDbServerFullyQualifiedDomainName": {
              "type": "string",
              "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
            },
            "secretParameters": {
              "description": "Migration secret parameters.",
              "required": [
                "adminCredentials"
              ],
              "type": "object",
              "properties": {
                "adminCredentials": {
                  "x-ms-secret": true,
                  "x-ms-external": true,
                  "description": "Credentials of administrator users for source and target servers.",
                  "type": "object",
                  "required": [
                    "sourceServerPassword",
                    "targetServerPassword"
                  ],
                  "properties": {
                    "sourceServerPassword": {
                      "type": "string",
                      "x-ms-secret": true,
                      "x-ms-external": true,
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "Password for the user of the source server."
                    },
                    "targetServerPassword": {
                      "type": "string",
                      "x-ms-secret": true,
                      "x-ms-external": true,
                      "x-ms-mutability": [
                        "create",
                        "update"
                      ],
                      "description": "Password for the user of the target server."
                    }
                  }
                },
                "sourceServerUsername": {
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "update"
                  ],
                  "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
                },
                "targetServerUsername": {
                  "type": "string",
                  "x-ms-mutability": [
                    "create",
                    "update"
                  ],
                  "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
                }
              }
            },
            "dbsToMigrate": {
              "maxItems": 50,
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Names of databases to migrate.",
              "x-ms-identifiers": []
            },
            "setupLogicalReplicationOnSourceDbIfNeeded": {
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "LogicalReplicationOnSourceServer",
                "modelAsString": true,
                "values": [
                  {
                    "value": "True",
                    "description": "Logical replication will be set up on the source server."
                  },
                  {
                    "value": "False",
                    "description": "Logical replication will not be set up on the source server."
                  }
                ]
              },
              "description": "Indicates whether to setup logical replication on source server, if needed."
            },
            "overwriteDbsInTarget": {
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "OverwriteDatabasesOnTargetServer",
                "modelAsString": true,
                "values": [
                  {
                    "value": "True",
                    "description": "Databases on the target server can be overwritten when already present."
                  },
                  {
                    "value": "False",
                    "description": "Databases on the target server cannot be overwritten when already present."
                  }
                ]
              },
              "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
            },
            "migrationWindowStartTimeInUtc": {
              "format": "date-time",
              "type": "string",
              "description": "Start time (UTC) for migration window."
            },
            "migrationWindowEndTimeInUtc": {
              "format": "date-time",
              "type": "string",
              "description": "End time (UTC) for migration window."
            },
            "migrateRoles": {
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "MigrateRolesAndPermissions",
                "modelAsString": true,
                "values": [
                  {
                    "value": "True",
                    "description": "Roles and permissions will be migrated."
                  },
                  {
                    "value": "False",
                    "description": "Roles and permissions will not be migrated."
                  }
                ]
              },
              "description": "Indicates if roles and permissions must be migrated."
            },
            "startDataMigration": {
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "StartDataMigration",
                "modelAsString": true,
                "values": [
                  {
                    "value": "True",
                    "description": "Data migration must start right away."
                  },
                  {
                    "value": "False",
                    "description": "Data migration must not start right away."
                  }
                ]
              },
              "description": "Indicates if data migration must start right away."
            },
            "triggerCutover": {
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "TriggerCutover",
                "modelAsString": true,
                "values": [
                  {
                    "value": "True",
                    "description": "Cutover must be triggered for the entire migration."
                  },
                  {
                    "value": "False",
                    "description": "Cutover must not be triggered for the entire migration."
                  }
                ]
              },
              "description": "Indicates if cutover must be triggered for the entire migration."
            },
            "dbsToTriggerCutoverOn": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
              "x-ms-identifiers": []
            },
            "cancel": {
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "Cancel",
                "modelAsString": true,
                "values": [
                  {
                    "value": "True",
                    "description": "Cancel must be triggered for the entire migration."
                  },
                  {
                    "value": "False",
                    "description": "Cancel must not be triggered for the entire migration."
                  }
                ]
              },
              "description": "Indicates if cancel must be triggered for the entire migration."
            },
            "dbsToCancelMigrationOn": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
              "x-ms-identifiers": []
            }
          }
        }
      },
      "description": "Properties of a migration."
    },
    "MigrationProperties": {
      "type": "object",
      "properties": {
        "migrationId": {
          "type": "string",
          "readOnly": true,
          "description": "Identifier of a migration."
        },
        "currentStatus": {
          "readOnly": true,
          "description": "Current status of a migration.",
          "type": "object",
          "properties": {
            "state": {
              "readOnly": true,
              "description": "State of migration.",
              "enum": [
                "InProgress",
                "WaitingForUserAction",
                "Canceled",
                "Failed",
                "Succeeded",
                "ValidationFailed",
                "CleaningUp"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MigrationState",
                "modelAsString": true,
                "values": [
                  {
                    "value": "InProgress",
                    "description": "Migration is in progress."
                  },
                  {
                    "value": "WaitingForUserAction",
                    "description": "Migration is waiting for user action."
                  },
                  {
                    "value": "Canceled",
                    "description": "Migration has been canceled."
                  },
                  {
                    "value": "Failed",
                    "description": "Migration has failed."
                  },
                  {
                    "value": "Succeeded",
                    "description": "Migration has succeeded."
                  },
                  {
                    "value": "ValidationFailed",
                    "description": "Validation for migration has failed."
                  },
                  {
                    "value": "CleaningUp",
                    "description": "Migration is cleaning up resources."
                  }
                ]
              }
            },
            "error": {
              "type": "string",
              "readOnly": true,
              "description": "Error message, if any, for the migration state."
            },
            "currentSubStateDetails": {
              "readOnly": true,
              "description": "Current migration sub state details.",
              "type": "object",
              "properties": {
                "currentSubState": {
                  "readOnly": true,
                  "enum": [
                    "PerformingPreRequisiteSteps",
                    "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                    "WaitingForDBsToMigrateSpecification",
                    "WaitingForTargetDBOverwriteConfirmation",
                    "WaitingForDataMigrationScheduling",
                    "WaitingForDataMigrationWindow",
                    "MigratingData",
                    "WaitingForCutoverTrigger",
                    "CompletingMigration",
                    "Completed",
                    "CancelingRequestedDBMigrations",
                    "ValidationInProgress"
                  ],
                  "type": "string",
                  "description": "Substate of migration.",
                  "x-ms-enum": {
                    "name": "MigrationSubstate",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "PerformingPreRequisiteSteps",
                        "description": "Performing pre-requisite steps for migration."
                      },
                      {
                        "value": "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                        "description": "Waiting for logical replication setup request on source database."
                      },
                      {
                        "value": "WaitingForDBsToMigrateSpecification",
                        "description": "Waiting for databases to migrate specification."
                      },
                      {
                        "value": "WaitingForTargetDBOverwriteConfirmation",
                        "description": "Waiting for target database overwrite confirmation."
                      },
                      {
                        "value": "WaitingForDataMigrationScheduling",
                        "description": "Waiting for data migration scheduling."
                      },
                      {
                        "value": "WaitingForDataMigrationWindow",
                        "description": "Waiting for data migration window."
                      },
                      {
                        "value": "MigratingData",
                        "description": "Migrating data."
                      },
                      {
                        "value": "WaitingForCutoverTrigger",
                        "description": "Waiting for cutover trigger."
                      },
                      {
                        "value": "CompletingMigration",
                        "description": "Completing migration."
                      },
                      {
                        "value": "Completed",
                        "description": "Migration completed."
                      },
                      {
                        "value": "CancelingRequestedDBMigrations",
                        "description": "Canceling requested database migrations."
                      },
                      {
                        "value": "ValidationInProgress",
                        "description": "Validation in progress."
                      }
                    ]
                  }
                },
                "dbDetails": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "description": "Migration state of a database.",
                    "properties": {
                      "databaseName": {
                        "type": "string",
                        "description": "Name of database."
                      },
                      "migrationState": {
                        "type": "string",
                        "description": "Migration state of a database.",
                        "enum": [
                          "InProgress",
                          "WaitingForCutoverTrigger",
                          "Failed",
                          "Canceled",
                          "Succeeded",
                          "Canceling"
                        ],
                        "x-ms-enum": {
                          "name": "MigrationDatabaseState",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "InProgress",
                              "description": "Migration is in progress for the database."
                            },
                            {
                              "value": "WaitingForCutoverTrigger",
                              "description": "Migration is waiting for cutover trigger for the database."
                            },
                            {
                              "value": "Failed",
                              "description": "Migration has failed for the database."
                            },
                            {
                              "value": "Canceled",
                              "description": "Migration has been canceled for the database."
                            },
                            {
                              "value": "Succeeded",
                              "description": "Migration has succeeded for the database."
                            },
                            {
                              "value": "Canceling",
                              "description": "Migration is canceling for the database."
                            }
                          ]
                        }
                      },
                      "migrationOperation": {
                        "type": "string",
                        "description": "Migration operation of a database."
                      },
                      "startedOn": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of a migration state."
                      },
                      "endedOn": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End time of a migration state."
                      },
                      "fullLoadQueuedTables": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Number of tables queued for the migration of a database."
                      },
                      "fullLoadErroredTables": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Number of tables encountering errors during the migration of a database."
                      },
                      "fullLoadLoadingTables": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Number of tables loading during the migration of a database."
                      },
                      "fullLoadCompletedTables": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Number of tables loaded during the migration of a database."
                      },
                      "cdcUpdateCounter": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Change Data Capture update counter."
                      },
                      "cdcDeleteCounter": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Change Data Capture delete counter."
                      },
                      "cdcInsertCounter": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Change Data Capture insert counter."
                      },
                      "appliedChanges": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Change Data Capture applied changes counter."
                      },
                      "incomingChanges": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Change Data Capture incoming changes counter."
                      },
                      "latency": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Lag in seconds between source and target during online phase."
                      },
                      "message": {
                        "type": "string",
                        "description": "Error message, if any, for the migration state."
                      }
                    }
                  }
                },
                "validationDetails": {
                  "type": "object",
                  "description": "Details for the validation for migration.",
                  "properties": {
                    "status": {
                      "type": "string",
                      "description": "Validation status for migration.",
                      "enum": [
                        "Failed",
                        "Succeeded",
                        "Warning"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Failed",
                            "description": "Validation has failed."
                          },
                          {
                            "value": "Succeeded",
                            "description": "Validation has succeeded."
                          },
                          {
                            "value": "Warning",
                            "description": "Validation has succeeded with warnings."
                          }
                        ]
                      }
                    },
                    "validationStartTimeInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Start time (UTC) for validation."
                    },
                    "validationEndTimeInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "End time (UTC) for validation."
                    },
                    "serverLevelValidationDetails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Validation summary object.",
                        "properties": {
                          "type": {
                            "type": "string",
                            "description": "Validation type."
                          },
                          "state": {
                            "type": "string",
                            "description": "Validation status for migration.",
                            "enum": [
                              "Failed",
                              "Succeeded",
                              "Warning"
                            ],
                            "x-ms-enum": {
                              "name": "ValidationState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Failed",
                                  "description": "Validation has failed."
                                },
                                {
                                  "value": "Succeeded",
                                  "description": "Validation has succeeded."
                                },
                                {
                                  "value": "Warning",
                                  "description": "Validation has succeeded with warnings."
                                }
                              ]
                            }
                          },
                          "messages": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Validation message object.",
                              "properties": {
                                "state": {
                                  "type": "string",
                                  "description": "Validation status for migration.",
                                  "enum": [
                                    "Failed",
                                    "Succeeded",
                                    "Warning"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ValidationState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Failed",
                                        "description": "Validation has failed."
                                      },
                                      {
                                        "value": "Succeeded",
                                        "description": "Validation has succeeded."
                                      },
                                      {
                                        "value": "Warning",
                                        "description": "Validation has succeeded with warnings."
                                      }
                                    ]
                                  }
                                },
                                "message": {
                                  "type": "string",
                                  "description": "Validation message string."
                                }
                              }
                            },
                            "description": "Validation messages.",
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "description": "Details of server level validations.",
                      "x-ms-identifiers": []
                    },
                    "dbLevelValidationDetails": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Validation status summary for a database.",
                        "properties": {
                          "databaseName": {
                            "type": "string",
                            "description": "Name of database."
                          },
                          "startedOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Start time of a database level validation."
                          },
                          "endedOn": {
                            "type": "string",
                            "format": "date-time",
                            "description": "End time of a database level validation."
                          },
                          "summary": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Validation summary object.",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "Validation type."
                                },
                                "state": {
                                  "type": "string",
                                  "description": "Validation status for migration.",
                                  "enum": [
                                    "Failed",
                                    "Succeeded",
                                    "Warning"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ValidationState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "Failed",
                                        "description": "Validation has failed."
                                      },
                                      {
                                        "value": "Succeeded",
                                        "description": "Validation has succeeded."
                                      },
                                      {
                                        "value": "Warning",
                                        "description": "Validation has succeeded with warnings."
                                      }
                                    ]
                                  }
                                },
                                "messages": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Validation message object.",
                                    "properties": {
                                      "state": {
                                        "type": "string",
                                        "description": "Validation status for migration.",
                                        "enum": [
                                          "Failed",
                                          "Succeeded",
                                          "Warning"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ValidationState",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "value": "Failed",
                                              "description": "Validation has failed."
                                            },
                                            {
                                              "value": "Succeeded",
                                              "description": "Validation has succeeded."
                                            },
                                            {
                                              "value": "Warning",
                                              "description": "Validation has succeeded with warnings."
                                            }
                                          ]
                                        }
                                      },
                                      "message": {
                                        "type": "string",
                                        "description": "Validation message string."
                                      }
                                    }
                                  },
                                  "description": "Validation messages.",
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "description": "Summary of database level validations.",
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "description": "Details of server level validations.",
                      "x-ms-identifiers": [
                        "databaseName"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "migrationInstanceResourceId": {
          "type": "string",
          "format": "arm-id",
          "description": "Identifier of the private endpoint migration instance."
        },
        "migrationMode": {
          "description": "Mode used to perform the migration: Online or Offline.",
          "enum": [
            "Offline",
            "Online"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MigrationMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Offline",
                "description": "Offline migration mode."
              },
              {
                "value": "Online",
                "description": "Online migration mode."
              }
            ]
          }
        },
        "migrationOption": {
          "description": "Supported option for a migration.",
          "enum": [
            "Validate",
            "Migrate",
            "ValidateAndMigrate"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MigrationOption",
            "modelAsString": true,
            "values": [
              {
                "value": "Validate",
                "description": "Validate the migration without performing it."
              },
              {
                "value": "Migrate",
                "description": "Perform the migration."
              },
              {
                "value": "ValidateAndMigrate",
                "description": "Validate and perform the migration."
              }
            ]
          }
        },
        "sourceType": {
          "description": "Source server type used for the migration: ApsaraDB_RDS, AWS, AWS_AURORA, AWS_EC2, AWS_RDS, AzureVM, Crunchy_PostgreSQL, Digital_Ocean_Droplets, Digital_Ocean_PostgreSQL, EDB, EDB_Oracle_Server, EDB_PostgreSQL, GCP, GCP_AlloyDB, GCP_CloudSQL, GCP_Compute, Heroku_PostgreSQL, Huawei_Compute, Huawei_RDS, OnPremises, PostgreSQLCosmosDB, PostgreSQLFlexibleServer, PostgreSQLSingleServer, or Supabase_PostgreSQL",
          "enum": [
            "OnPremises",
            "AWS",
            "GCP",
            "AzureVM",
            "PostgreSQLSingleServer",
            "AWS_RDS",
            "AWS_AURORA",
            "AWS_EC2",
            "GCP_CloudSQL",
            "GCP_AlloyDB",
            "GCP_Compute",
            "EDB",
            "EDB_Oracle_Server",
            "EDB_PostgreSQL",
            "PostgreSQLFlexibleServer",
            "PostgreSQLCosmosDB",
            "Huawei_RDS",
            "Huawei_Compute",
            "Heroku_PostgreSQL",
            "Crunchy_PostgreSQL",
            "ApsaraDB_RDS",
            "Digital_Ocean_Droplets",
            "Digital_Ocean_PostgreSQL",
            "Supabase_PostgreSQL"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SourceType",
            "modelAsString": true,
            "values": [
              {
                "value": "OnPremises",
                "description": "On-premises PostgreSQL server."
              },
              {
                "value": "AWS",
                "description": "Amazon Web Services PostgreSQL server."
              },
              {
                "value": "GCP",
                "description": "Google Cloud Platform PostgreSQL server."
              },
              {
                "value": "AzureVM",
                "description": "Azure Virtual Machine PostgreSQL server."
              },
              {
                "value": "PostgreSQLSingleServer",
                "description": "Azure Database for PostgreSQL single server."
              },
              {
                "value": "AWS_RDS",
                "description": "Amazon RDS for PostgreSQL."
              },
              {
                "value": "AWS_AURORA",
                "description": "Amazon Aurora for PostgreSQL."
              },
              {
                "value": "AWS_EC2",
                "description": "Amazon EC2 for PostgreSQL."
              },
              {
                "value": "GCP_CloudSQL",
                "description": "Google Cloud SQL for PostgreSQL."
              },
              {
                "value": "GCP_AlloyDB",
                "description": "Google Cloud AlloyDB for PostgreSQL."
              },
              {
                "value": "GCP_Compute",
                "description": "Google Compute Engine for PostgreSQL."
              },
              {
                "value": "EDB",
                "description": "EnterpriseDB PostgreSQL server."
              },
              {
                "value": "EDB_Oracle_Server",
                "description": "EnterpriseDB Oracle Server."
              },
              {
                "value": "EDB_PostgreSQL",
                "description": "EnterpriseDB PostgreSQL server."
              },
              {
                "value": "PostgreSQLFlexibleServer",
                "description": "Azure Database for PostgreSQL flexible server."
              },
              {
                "value": "PostgreSQLCosmosDB",
                "description": ".NET Cosmos DB for PostgreSQL"
              },
              {
                "value": "Huawei_RDS",
                "description": "Huawei RDS for PostgreSQL"
              },
              {
                "value": "Huawei_Compute",
                "description": "Huawei Compute for PostgreSQL"
              },
              {
                "value": "Heroku_PostgreSQL",
                "description": "Heroku PostgreSQL"
              },
              {
                "value": "Crunchy_PostgreSQL",
                "description": "Crunchy PostgreSQL"
              },
              {
                "value": "ApsaraDB_RDS",
                "description": "ApsaraDB RDS for PostgreSQL"
              },
              {
                "value": "Digital_Ocean_Droplets",
                "description": "Digital Ocean Droplets for PostgreSQL"
              },
              {
                "value": "Digital_Ocean_PostgreSQL",
                "description": "Digital Ocean PostgreSQL"
              },
              {
                "value": "Supabase_PostgreSQL",
                "description": "Supabase PostgreSQL"
              }
            ]
          }
        },
        "sslMode": {
          "description": "SSL mode used by a migration. Default SSL mode for 'PostgreSQLSingleServer' is 'VerifyFull'. Default SSL mode for other source types is 'Prefer'.",
          "enum": [
            "Prefer",
            "Require",
            "VerifyCA",
            "VerifyFull"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "SslMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Prefer",
                "description": "Prefer SSL connection. If the server does not support SSL, the connection will be established without SSL."
              },
              {
                "value": "Require",
                "description": "Require SSL connection. If the server does not support SSL, the connection will fail."
              },
              {
                "value": "VerifyCA",
                "description": "Require SSL connection and verify the server certificate against the CA certificate."
              },
              {
                "value": "VerifyFull",
                "description": "Require SSL connection, verify the server certificate against the CA certificate, and verify that the server hostname matches the certificate."
              }
            ]
          }
        },
        "sourceDbServerMetadata": {
          "readOnly": true,
          "description": "Metadata of source database server.",
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location of database server.",
              "x-ms-mutability": [
                "read"
              ],
              "readOnly": true
            },
            "version": {
              "type": "string",
              "description": "Major version of PostgreSQL database engine."
            },
            "storageMb": {
              "format": "int32",
              "type": "integer",
              "description": "Storage size (in MB) for database server."
            },
            "sku": {
              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                },
                "tier": {
                  "type": "string",
                  "description": "Tier of the compute assigned to a server.",
                  "enum": [
                    "Burstable",
                    "GeneralPurpose",
                    "MemoryOptimized"
                  ],
                  "x-ms-enum": {
                    "name": "SkuTier",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        },
        "targetDbServerMetadata": {
          "readOnly": true,
          "description": "Metadata of target database server.",
          "type": "object",
          "properties": {
            "location": {
              "type": "string",
              "description": "Location of database server.",
              "x-ms-mutability": [
                "read"
              ],
              "readOnly": true
            },
            "version": {
              "type": "string",
              "description": "Major version of PostgreSQL database engine."
            },
            "storageMb": {
              "format": "int32",
              "type": "integer",
              "description": "Storage size (in MB) for database server."
            },
            "sku": {
              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                },
                "tier": {
                  "type": "string",
                  "description": "Tier of the compute assigned to a server.",
                  "enum": [
                    "Burstable",
                    "GeneralPurpose",
                    "MemoryOptimized"
                  ],
                  "x-ms-enum": {
                    "name": "SkuTier",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        },
        "sourceDbServerResourceId": {
          "type": "string",
          "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
        },
        "sourceDbServerFullyQualifiedDomainName": {
          "type": "string",
          "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
        },
        "targetDbServerResourceId": {
          "type": "string",
          "readOnly": true,
          "description": "Identifier of the target database server resource."
        },
        "targetDbServerFullyQualifiedDomainName": {
          "type": "string",
          "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
        },
        "secretParameters": {
          "description": "Migration secret parameters.",
          "required": [
            "adminCredentials"
          ],
          "type": "object",
          "properties": {
            "adminCredentials": {
              "x-ms-secret": true,
              "x-ms-external": true,
              "description": "Credentials of administrator users for source and target servers.",
              "type": "object",
              "required": [
                "sourceServerPassword",
                "targetServerPassword"
              ],
              "properties": {
                "sourceServerPassword": {
                  "type": "string",
                  "x-ms-secret": true,
                  "x-ms-external": true,
                  "x-ms-mutability": [
                    "create",
                    "update"
                  ],
                  "description": "Password for the user of the source server."
                },
                "targetServerPassword": {
                  "type": "string",
                  "x-ms-secret": true,
                  "x-ms-external": true,
                  "x-ms-mutability": [
                    "create",
                    "update"
                  ],
                  "description": "Password for the user of the target server."
                }
              }
            },
            "sourceServerUsername": {
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
            },
            "targetServerUsername": {
              "type": "string",
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
            }
          }
        },
        "dbsToMigrate": {
          "maxItems": 50,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Names of databases to migrate.",
          "x-ms-identifiers": []
        },
        "setupLogicalReplicationOnSourceDbIfNeeded": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "LogicalReplicationOnSourceServer",
            "modelAsString": true,
            "values": [
              {
                "value": "True",
                "description": "Logical replication will be set up on the source server."
              },
              {
                "value": "False",
                "description": "Logical replication will not be set up on the source server."
              }
            ]
          },
          "description": "Indicates whether to setup logical replication on source server, if needed."
        },
        "overwriteDbsInTarget": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "OverwriteDatabasesOnTargetServer",
            "modelAsString": true,
            "values": [
              {
                "value": "True",
                "description": "Databases on the target server can be overwritten when already present."
              },
              {
                "value": "False",
                "description": "Databases on the target server cannot be overwritten when already present."
              }
            ]
          },
          "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
        },
        "migrationWindowStartTimeInUtc": {
          "format": "date-time",
          "type": "string",
          "description": "Start time (UTC) for migration window."
        },
        "migrationWindowEndTimeInUtc": {
          "format": "date-time",
          "type": "string",
          "description": "End time (UTC) for migration window."
        },
        "migrateRoles": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "MigrateRolesAndPermissions",
            "modelAsString": true,
            "values": [
              {
                "value": "True",
                "description": "Roles and permissions will be migrated."
              },
              {
                "value": "False",
                "description": "Roles and permissions will not be migrated."
              }
            ]
          },
          "description": "Indicates if roles and permissions must be migrated."
        },
        "startDataMigration": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "StartDataMigration",
            "modelAsString": true,
            "values": [
              {
                "value": "True",
                "description": "Data migration must start right away."
              },
              {
                "value": "False",
                "description": "Data migration must not start right away."
              }
            ]
          },
          "description": "Indicates if data migration must start right away."
        },
        "triggerCutover": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "TriggerCutover",
            "modelAsString": true,
            "values": [
              {
                "value": "True",
                "description": "Cutover must be triggered for the entire migration."
              },
              {
                "value": "False",
                "description": "Cutover must not be triggered for the entire migration."
              }
            ]
          },
          "description": "Indicates if cutover must be triggered for the entire migration."
        },
        "dbsToTriggerCutoverOn": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
          "x-ms-identifiers": []
        },
        "cancel": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "Cancel",
            "modelAsString": true,
            "values": [
              {
                "value": "True",
                "description": "Cancel must be triggered for the entire migration."
              },
              {
                "value": "False",
                "description": "Cancel must not be triggered for the entire migration."
              }
            ]
          },
          "description": "Indicates if cancel must be triggered for the entire migration."
        },
        "dbsToCancelMigrationOn": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
          "x-ms-identifiers": []
        }
      },
      "description": "Migration."
    },
    "MigrationList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "properties": {
                "description": "Migration properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "migrationId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Identifier of a migration."
                  },
                  "currentStatus": {
                    "readOnly": true,
                    "description": "Current status of a migration.",
                    "type": "object",
                    "properties": {
                      "state": {
                        "readOnly": true,
                        "description": "State of migration.",
                        "enum": [
                          "InProgress",
                          "WaitingForUserAction",
                          "Canceled",
                          "Failed",
                          "Succeeded",
                          "ValidationFailed",
                          "CleaningUp"
                        ],
                        "type": "string",
                        "x-ms-enum": {
                          "name": "MigrationState",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "InProgress",
                              "description": "Migration is in progress."
                            },
                            {
                              "value": "WaitingForUserAction",
                              "description": "Migration is waiting for user action."
                            },
                            {
                              "value": "Canceled",
                              "description": "Migration has been canceled."
                            },
                            {
                              "value": "Failed",
                              "description": "Migration has failed."
                            },
                            {
                              "value": "Succeeded",
                              "description": "Migration has succeeded."
                            },
                            {
                              "value": "ValidationFailed",
                              "description": "Validation for migration has failed."
                            },
                            {
                              "value": "CleaningUp",
                              "description": "Migration is cleaning up resources."
                            }
                          ]
                        }
                      },
                      "error": {
                        "type": "string",
                        "readOnly": true,
                        "description": "Error message, if any, for the migration state."
                      },
                      "currentSubStateDetails": {
                        "readOnly": true,
                        "description": "Current migration sub state details.",
                        "type": "object",
                        "properties": {
                          "currentSubState": {
                            "readOnly": true,
                            "enum": [
                              "PerformingPreRequisiteSteps",
                              "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                              "WaitingForDBsToMigrateSpecification",
                              "WaitingForTargetDBOverwriteConfirmation",
                              "WaitingForDataMigrationScheduling",
                              "WaitingForDataMigrationWindow",
                              "MigratingData",
                              "WaitingForCutoverTrigger",
                              "CompletingMigration",
                              "Completed",
                              "CancelingRequestedDBMigrations",
                              "ValidationInProgress"
                            ],
                            "type": "string",
                            "description": "Substate of migration.",
                            "x-ms-enum": {
                              "name": "MigrationSubstate",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "PerformingPreRequisiteSteps",
                                  "description": "Performing pre-requisite steps for migration."
                                },
                                {
                                  "value": "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                                  "description": "Waiting for logical replication setup request on source database."
                                },
                                {
                                  "value": "WaitingForDBsToMigrateSpecification",
                                  "description": "Waiting for databases to migrate specification."
                                },
                                {
                                  "value": "WaitingForTargetDBOverwriteConfirmation",
                                  "description": "Waiting for target database overwrite confirmation."
                                },
                                {
                                  "value": "WaitingForDataMigrationScheduling",
                                  "description": "Waiting for data migration scheduling."
                                },
                                {
                                  "value": "WaitingForDataMigrationWindow",
                                  "description": "Waiting for data migration window."
                                },
                                {
                                  "value": "MigratingData",
                                  "description": "Migrating data."
                                },
                                {
                                  "value": "WaitingForCutoverTrigger",
                                  "description": "Waiting for cutover trigger."
                                },
                                {
                                  "value": "CompletingMigration",
                                  "description": "Completing migration."
                                },
                                {
                                  "value": "Completed",
                                  "description": "Migration completed."
                                },
                                {
                                  "value": "CancelingRequestedDBMigrations",
                                  "description": "Canceling requested database migrations."
                                },
                                {
                                  "value": "ValidationInProgress",
                                  "description": "Validation in progress."
                                }
                              ]
                            }
                          },
                          "dbDetails": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "description": "Migration state of a database.",
                              "properties": {
                                "databaseName": {
                                  "type": "string",
                                  "description": "Name of database."
                                },
                                "migrationState": {
                                  "type": "string",
                                  "description": "Migration state of a database.",
                                  "enum": [
                                    "InProgress",
                                    "WaitingForCutoverTrigger",
                                    "Failed",
                                    "Canceled",
                                    "Succeeded",
                                    "Canceling"
                                  ],
                                  "x-ms-enum": {
                                    "name": "MigrationDatabaseState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "value": "InProgress",
                                        "description": "Migration is in progress for the database."
                                      },
                                      {
                                        "value": "WaitingForCutoverTrigger",
                                        "description": "Migration is waiting for cutover trigger for the database."
                                      },
                                      {
                                        "value": "Failed",
                                        "description": "Migration has failed for the database."
                                      },
                                      {
                                        "value": "Canceled",
                                        "description": "Migration has been canceled for the database."
                                      },
                                      {
                                        "value": "Succeeded",
                                        "description": "Migration has succeeded for the database."
                                      },
                                      {
                                        "value": "Canceling",
                                        "description": "Migration is canceling for the database."
                                      }
                                    ]
                                  }
                                },
                                "migrationOperation": {
                                  "type": "string",
                                  "description": "Migration operation of a database."
                                },
                                "startedOn": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Start time of a migration state."
                                },
                                "endedOn": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "End time of a migration state."
                                },
                                "fullLoadQueuedTables": {
                                  "format": "int32",
                                  "type": "integer",
                                  "description": "Number of tables queued for the migration of a database."
                                },
                                "fullLoadErroredTables": {
                                  "format": "int32",
                                  "type": "integer",
                                  "description": "Number of tables encountering errors during the migration of a database."
                                },
                                "fullLoadLoadingTables": {
                                  "format": "int32",
                                  "type": "integer",
                                  "description": "Number of tables loading during the migration of a database."
                                },
                                "fullLoadCompletedTables": {
                                  "format": "int32",
                                  "type": "integer",
                                  "description": "Number of tables loaded during the migration of a database."
                                },
                                "cdcUpdateCounter": {
                                  "format": "int32",
                                  "type": "integer",
                                  "description": "Change Data Capture update counter."
                                },
                                "cdcDeleteCounter": {
                                  "format": "int32",
                                  "type": "integer",
                                  "description": "Change Data Capture delete counter."
                                },
                                "cdcInsertCounter": {
                                  "format": "int32",
                                  "type": "integer",
                                  "description": "Change Data Capture insert counter."
                                },
                                "appliedChanges": {
                                  "format": "int32",
                                  "type": "integer",
                                  "description": "Change Data Capture applied changes counter."
                                },
                                "incomingChanges": {
                                  "format": "int32",
                                  "type": "integer",
                                  "description": "Change Data Capture incoming changes counter."
                                },
                                "latency": {
                                  "format": "int32",
                                  "type": "integer",
                                  "description": "Lag in seconds between source and target during online phase."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "Error message, if any, for the migration state."
                                }
                              }
                            }
                          },
                          "validationDetails": {
                            "type": "object",
                            "description": "Details for the validation for migration.",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "Validation status for migration.",
                                "enum": [
                                  "Failed",
                                  "Succeeded",
                                  "Warning"
                                ],
                                "x-ms-enum": {
                                  "name": "ValidationState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Failed",
                                      "description": "Validation has failed."
                                    },
                                    {
                                      "value": "Succeeded",
                                      "description": "Validation has succeeded."
                                    },
                                    {
                                      "value": "Warning",
                                      "description": "Validation has succeeded with warnings."
                                    }
                                  ]
                                }
                              },
                              "validationStartTimeInUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Start time (UTC) for validation."
                              },
                              "validationEndTimeInUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "End time (UTC) for validation."
                              },
                              "serverLevelValidationDetails": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Validation summary object.",
                                  "properties": {
                                    "type": {
                                      "type": "string",
                                      "description": "Validation type."
                                    },
                                    "state": {
                                      "type": "string",
                                      "description": "Validation status for migration.",
                                      "enum": [
                                        "Failed",
                                        "Succeeded",
                                        "Warning"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ValidationState",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "value": "Failed",
                                            "description": "Validation has failed."
                                          },
                                          {
                                            "value": "Succeeded",
                                            "description": "Validation has succeeded."
                                          },
                                          {
                                            "value": "Warning",
                                            "description": "Validation has succeeded with warnings."
                                          }
                                        ]
                                      }
                                    },
                                    "messages": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Validation message object.",
                                        "properties": {
                                          "state": {
                                            "type": "string",
                                            "description": "Validation status for migration.",
                                            "enum": [
                                              "Failed",
                                              "Succeeded",
                                              "Warning"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ValidationState",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "Failed",
                                                  "description": "Validation has failed."
                                                },
                                                {
                                                  "value": "Succeeded",
                                                  "description": "Validation has succeeded."
                                                },
                                                {
                                                  "value": "Warning",
                                                  "description": "Validation has succeeded with warnings."
                                                }
                                              ]
                                            }
                                          },
                                          "message": {
                                            "type": "string",
                                            "description": "Validation message string."
                                          }
                                        }
                                      },
                                      "description": "Validation messages.",
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "description": "Details of server level validations.",
                                "x-ms-identifiers": []
                              },
                              "dbLevelValidationDetails": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Validation status summary for a database.",
                                  "properties": {
                                    "databaseName": {
                                      "type": "string",
                                      "description": "Name of database."
                                    },
                                    "startedOn": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "Start time of a database level validation."
                                    },
                                    "endedOn": {
                                      "type": "string",
                                      "format": "date-time",
                                      "description": "End time of a database level validation."
                                    },
                                    "summary": {
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "Validation summary object.",
                                        "properties": {
                                          "type": {
                                            "type": "string",
                                            "description": "Validation type."
                                          },
                                          "state": {
                                            "type": "string",
                                            "description": "Validation status for migration.",
                                            "enum": [
                                              "Failed",
                                              "Succeeded",
                                              "Warning"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ValidationState",
                                              "modelAsString": true,
                                              "values": [
                                                {
                                                  "value": "Failed",
                                                  "description": "Validation has failed."
                                                },
                                                {
                                                  "value": "Succeeded",
                                                  "description": "Validation has succeeded."
                                                },
                                                {
                                                  "value": "Warning",
                                                  "description": "Validation has succeeded with warnings."
                                                }
                                              ]
                                            }
                                          },
                                          "messages": {
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": "Validation message object.",
                                              "properties": {
                                                "state": {
                                                  "type": "string",
                                                  "description": "Validation status for migration.",
                                                  "enum": [
                                                    "Failed",
                                                    "Succeeded",
                                                    "Warning"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "ValidationState",
                                                    "modelAsString": true,
                                                    "values": [
                                                      {
                                                        "value": "Failed",
                                                        "description": "Validation has failed."
                                                      },
                                                      {
                                                        "value": "Succeeded",
                                                        "description": "Validation has succeeded."
                                                      },
                                                      {
                                                        "value": "Warning",
                                                        "description": "Validation has succeeded with warnings."
                                                      }
                                                    ]
                                                  }
                                                },
                                                "message": {
                                                  "type": "string",
                                                  "description": "Validation message string."
                                                }
                                              }
                                            },
                                            "description": "Validation messages.",
                                            "x-ms-identifiers": []
                                          }
                                        }
                                      },
                                      "description": "Summary of database level validations.",
                                      "x-ms-identifiers": []
                                    }
                                  }
                                },
                                "description": "Details of server level validations.",
                                "x-ms-identifiers": [
                                  "databaseName"
                                ]
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "migrationInstanceResourceId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Identifier of the private endpoint migration instance."
                  },
                  "migrationMode": {
                    "description": "Mode used to perform the migration: Online or Offline.",
                    "enum": [
                      "Offline",
                      "Online"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "MigrationMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Offline",
                          "description": "Offline migration mode."
                        },
                        {
                          "value": "Online",
                          "description": "Online migration mode."
                        }
                      ]
                    }
                  },
                  "migrationOption": {
                    "description": "Supported option for a migration.",
                    "enum": [
                      "Validate",
                      "Migrate",
                      "ValidateAndMigrate"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "MigrationOption",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Validate",
                          "description": "Validate the migration without performing it."
                        },
                        {
                          "value": "Migrate",
                          "description": "Perform the migration."
                        },
                        {
                          "value": "ValidateAndMigrate",
                          "description": "Validate and perform the migration."
                        }
                      ]
                    }
                  },
                  "sourceType": {
                    "description": "Source server type used for the migration: ApsaraDB_RDS, AWS, AWS_AURORA, AWS_EC2, AWS_RDS, AzureVM, Crunchy_PostgreSQL, Digital_Ocean_Droplets, Digital_Ocean_PostgreSQL, EDB, EDB_Oracle_Server, EDB_PostgreSQL, GCP, GCP_AlloyDB, GCP_CloudSQL, GCP_Compute, Heroku_PostgreSQL, Huawei_Compute, Huawei_RDS, OnPremises, PostgreSQLCosmosDB, PostgreSQLFlexibleServer, PostgreSQLSingleServer, or Supabase_PostgreSQL",
                    "enum": [
                      "OnPremises",
                      "AWS",
                      "GCP",
                      "AzureVM",
                      "PostgreSQLSingleServer",
                      "AWS_RDS",
                      "AWS_AURORA",
                      "AWS_EC2",
                      "GCP_CloudSQL",
                      "GCP_AlloyDB",
                      "GCP_Compute",
                      "EDB",
                      "EDB_Oracle_Server",
                      "EDB_PostgreSQL",
                      "PostgreSQLFlexibleServer",
                      "PostgreSQLCosmosDB",
                      "Huawei_RDS",
                      "Huawei_Compute",
                      "Heroku_PostgreSQL",
                      "Crunchy_PostgreSQL",
                      "ApsaraDB_RDS",
                      "Digital_Ocean_Droplets",
                      "Digital_Ocean_PostgreSQL",
                      "Supabase_PostgreSQL"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "SourceType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "OnPremises",
                          "description": "On-premises PostgreSQL server."
                        },
                        {
                          "value": "AWS",
                          "description": "Amazon Web Services PostgreSQL server."
                        },
                        {
                          "value": "GCP",
                          "description": "Google Cloud Platform PostgreSQL server."
                        },
                        {
                          "value": "AzureVM",
                          "description": "Azure Virtual Machine PostgreSQL server."
                        },
                        {
                          "value": "PostgreSQLSingleServer",
                          "description": "Azure Database for PostgreSQL single server."
                        },
                        {
                          "value": "AWS_RDS",
                          "description": "Amazon RDS for PostgreSQL."
                        },
                        {
                          "value": "AWS_AURORA",
                          "description": "Amazon Aurora for PostgreSQL."
                        },
                        {
                          "value": "AWS_EC2",
                          "description": "Amazon EC2 for PostgreSQL."
                        },
                        {
                          "value": "GCP_CloudSQL",
                          "description": "Google Cloud SQL for PostgreSQL."
                        },
                        {
                          "value": "GCP_AlloyDB",
                          "description": "Google Cloud AlloyDB for PostgreSQL."
                        },
                        {
                          "value": "GCP_Compute",
                          "description": "Google Compute Engine for PostgreSQL."
                        },
                        {
                          "value": "EDB",
                          "description": "EnterpriseDB PostgreSQL server."
                        },
                        {
                          "value": "EDB_Oracle_Server",
                          "description": "EnterpriseDB Oracle Server."
                        },
                        {
                          "value": "EDB_PostgreSQL",
                          "description": "EnterpriseDB PostgreSQL server."
                        },
                        {
                          "value": "PostgreSQLFlexibleServer",
                          "description": "Azure Database for PostgreSQL flexible server."
                        },
                        {
                          "value": "PostgreSQLCosmosDB",
                          "description": ".NET Cosmos DB for PostgreSQL"
                        },
                        {
                          "value": "Huawei_RDS",
                          "description": "Huawei RDS for PostgreSQL"
                        },
                        {
                          "value": "Huawei_Compute",
                          "description": "Huawei Compute for PostgreSQL"
                        },
                        {
                          "value": "Heroku_PostgreSQL",
                          "description": "Heroku PostgreSQL"
                        },
                        {
                          "value": "Crunchy_PostgreSQL",
                          "description": "Crunchy PostgreSQL"
                        },
                        {
                          "value": "ApsaraDB_RDS",
                          "description": "ApsaraDB RDS for PostgreSQL"
                        },
                        {
                          "value": "Digital_Ocean_Droplets",
                          "description": "Digital Ocean Droplets for PostgreSQL"
                        },
                        {
                          "value": "Digital_Ocean_PostgreSQL",
                          "description": "Digital Ocean PostgreSQL"
                        },
                        {
                          "value": "Supabase_PostgreSQL",
                          "description": "Supabase PostgreSQL"
                        }
                      ]
                    }
                  },
                  "sslMode": {
                    "description": "SSL mode used by a migration. Default SSL mode for 'PostgreSQLSingleServer' is 'VerifyFull'. Default SSL mode for other source types is 'Prefer'.",
                    "enum": [
                      "Prefer",
                      "Require",
                      "VerifyCA",
                      "VerifyFull"
                    ],
                    "type": "string",
                    "x-ms-enum": {
                      "name": "SslMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Prefer",
                          "description": "Prefer SSL connection. If the server does not support SSL, the connection will be established without SSL."
                        },
                        {
                          "value": "Require",
                          "description": "Require SSL connection. If the server does not support SSL, the connection will fail."
                        },
                        {
                          "value": "VerifyCA",
                          "description": "Require SSL connection and verify the server certificate against the CA certificate."
                        },
                        {
                          "value": "VerifyFull",
                          "description": "Require SSL connection, verify the server certificate against the CA certificate, and verify that the server hostname matches the certificate."
                        }
                      ]
                    }
                  },
                  "sourceDbServerMetadata": {
                    "readOnly": true,
                    "description": "Metadata of source database server.",
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "Location of database server.",
                        "x-ms-mutability": [
                          "read"
                        ],
                        "readOnly": true
                      },
                      "version": {
                        "type": "string",
                        "description": "Major version of PostgreSQL database engine."
                      },
                      "storageMb": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Storage size (in MB) for database server."
                      },
                      "sku": {
                        "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                          },
                          "tier": {
                            "type": "string",
                            "description": "Tier of the compute assigned to a server.",
                            "enum": [
                              "Burstable",
                              "GeneralPurpose",
                              "MemoryOptimized"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    }
                  },
                  "targetDbServerMetadata": {
                    "readOnly": true,
                    "description": "Metadata of target database server.",
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "description": "Location of database server.",
                        "x-ms-mutability": [
                          "read"
                        ],
                        "readOnly": true
                      },
                      "version": {
                        "type": "string",
                        "description": "Major version of PostgreSQL database engine."
                      },
                      "storageMb": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Storage size (in MB) for database server."
                      },
                      "sku": {
                        "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
                          },
                          "tier": {
                            "type": "string",
                            "description": "Tier of the compute assigned to a server.",
                            "enum": [
                              "Burstable",
                              "GeneralPurpose",
                              "MemoryOptimized"
                            ],
                            "x-ms-enum": {
                              "name": "SkuTier",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    }
                  },
                  "sourceDbServerResourceId": {
                    "type": "string",
                    "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
                  },
                  "sourceDbServerFullyQualifiedDomainName": {
                    "type": "string",
                    "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
                  },
                  "targetDbServerResourceId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Identifier of the target database server resource."
                  },
                  "targetDbServerFullyQualifiedDomainName": {
                    "type": "string",
                    "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
                  },
                  "secretParameters": {
                    "description": "Migration secret parameters.",
                    "required": [
                      "adminCredentials"
                    ],
                    "type": "object",
                    "properties": {
                      "adminCredentials": {
                        "x-ms-secret": true,
                        "x-ms-external": true,
                        "description": "Credentials of administrator users for source and target servers.",
                        "type": "object",
                        "required": [
                          "sourceServerPassword",
                          "targetServerPassword"
                        ],
                        "properties": {
                          "sourceServerPassword": {
                            "type": "string",
                            "x-ms-secret": true,
                            "x-ms-external": true,
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Password for the user of the source server."
                          },
                          "targetServerPassword": {
                            "type": "string",
                            "x-ms-secret": true,
                            "x-ms-external": true,
                            "x-ms-mutability": [
                              "create",
                              "update"
                            ],
                            "description": "Password for the user of the target server."
                          }
                        }
                      },
                      "sourceServerUsername": {
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "update"
                        ],
                        "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
                      },
                      "targetServerUsername": {
                        "type": "string",
                        "x-ms-mutability": [
                          "create",
                          "update"
                        ],
                        "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
                      }
                    }
                  },
                  "dbsToMigrate": {
                    "maxItems": 50,
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Names of databases to migrate.",
                    "x-ms-identifiers": []
                  },
                  "setupLogicalReplicationOnSourceDbIfNeeded": {
                    "type": "string",
                    "enum": [
                      "True",
                      "False"
                    ],
                    "x-ms-enum": {
                      "name": "LogicalReplicationOnSourceServer",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "True",
                          "description": "Logical replication will be set up on the source server."
                        },
                        {
                          "value": "False",
                          "description": "Logical replication will not be set up on the source server."
                        }
                      ]
                    },
                    "description": "Indicates whether to setup logical replication on source server, if needed."
                  },
                  "overwriteDbsInTarget": {
                    "type": "string",
                    "enum": [
                      "True",
                      "False"
                    ],
                    "x-ms-enum": {
                      "name": "OverwriteDatabasesOnTargetServer",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "True",
                          "description": "Databases on the target server can be overwritten when already present."
                        },
                        {
                          "value": "False",
                          "description": "Databases on the target server cannot be overwritten when already present."
                        }
                      ]
                    },
                    "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
                  },
                  "migrationWindowStartTimeInUtc": {
                    "format": "date-time",
                    "type": "string",
                    "description": "Start time (UTC) for migration window."
                  },
                  "migrationWindowEndTimeInUtc": {
                    "format": "date-time",
                    "type": "string",
                    "description": "End time (UTC) for migration window."
                  },
                  "migrateRoles": {
                    "type": "string",
                    "enum": [
                      "True",
                      "False"
                    ],
                    "x-ms-enum": {
                      "name": "MigrateRolesAndPermissions",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "True",
                          "description": "Roles and permissions will be migrated."
                        },
                        {
                          "value": "False",
                          "description": "Roles and permissions will not be migrated."
                        }
                      ]
                    },
                    "description": "Indicates if roles and permissions must be migrated."
                  },
                  "startDataMigration": {
                    "type": "string",
                    "enum": [
                      "True",
                      "False"
                    ],
                    "x-ms-enum": {
                      "name": "StartDataMigration",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "True",
                          "description": "Data migration must start right away."
                        },
                        {
                          "value": "False",
                          "description": "Data migration must not start right away."
                        }
                      ]
                    },
                    "description": "Indicates if data migration must start right away."
                  },
                  "triggerCutover": {
                    "type": "string",
                    "enum": [
                      "True",
                      "False"
                    ],
                    "x-ms-enum": {
                      "name": "TriggerCutover",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "True",
                          "description": "Cutover must be triggered for the entire migration."
                        },
                        {
                          "value": "False",
                          "description": "Cutover must not be triggered for the entire migration."
                        }
                      ]
                    },
                    "description": "Indicates if cutover must be triggered for the entire migration."
                  },
                  "dbsToTriggerCutoverOn": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                    "x-ms-identifiers": []
                  },
                  "cancel": {
                    "type": "string",
                    "enum": [
                      "True",
                      "False"
                    ],
                    "x-ms-enum": {
                      "name": "Cancel",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "True",
                          "description": "Cancel must be triggered for the entire migration."
                        },
                        {
                          "value": "False",
                          "description": "Cancel must not be triggered for the entire migration."
                        }
                      ]
                    },
                    "description": "Indicates if cancel must be triggered for the entire migration."
                  },
                  "dbsToCancelMigrationOn": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
                    "x-ms-identifiers": []
                  }
                }
              }
            },
            "description": "Properties of a migration."
          },
          "readOnly": true,
          "description": "List of migrations.",
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "format": "uri"
        }
      },
      "description": "List of migrations."
    },
    "MigrationResourceForPatch": {
      "type": "object",
      "properties": {
        "properties": {
          "description": "Migration properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "sourceDbServerResourceId": {
              "type": "string",
              "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
            },
            "sourceDbServerFullyQualifiedDomainName": {
              "type": "string",
              "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
            },
            "targetDbServerFullyQualifiedDomainName": {
              "type": "string",
              "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
            },
            "secretParameters": {
              "description": "Migration secret parameters.",
              "type": "object",
              "properties": {
                "adminCredentials": {
                  "x-ms-secret": true,
                  "x-ms-external": true,
                  "description": "Credentials of administrator users for source and target servers.",
                  "type": "object",
                  "properties": {
                    "sourceServerPassword": {
                      "type": "string",
                      "x-ms-secret": true,
                      "x-ms-external": true,
                      "x-ms-mutability": [
                        "update"
                      ],
                      "description": "Password for the user of the source server."
                    },
                    "targetServerPassword": {
                      "type": "string",
                      "x-ms-secret": true,
                      "x-ms-external": true,
                      "x-ms-mutability": [
                        "update"
                      ],
                      "description": "Password for the user of the target server."
                    }
                  }
                },
                "sourceServerUsername": {
                  "type": "string",
                  "x-ms-mutability": [
                    "update"
                  ],
                  "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
                },
                "targetServerUsername": {
                  "type": "string",
                  "x-ms-mutability": [
                    "update"
                  ],
                  "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
                }
              }
            },
            "dbsToMigrate": {
              "maxItems": 50,
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Names of databases to migrate.",
              "x-ms-identifiers": []
            },
            "setupLogicalReplicationOnSourceDbIfNeeded": {
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "LogicalReplicationOnSourceServer",
                "modelAsString": true,
                "values": [
                  {
                    "value": "True",
                    "description": "Logical replication will be set up on the source server."
                  },
                  {
                    "value": "False",
                    "description": "Logical replication will not be set up on the source server."
                  }
                ]
              },
              "description": "Indicates whether to setup logical replication on source server, if needed."
            },
            "overwriteDbsInTarget": {
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "OverwriteDatabasesOnTargetServer",
                "modelAsString": true,
                "values": [
                  {
                    "value": "True",
                    "description": "Databases on the target server can be overwritten when already present."
                  },
                  {
                    "value": "False",
                    "description": "Databases on the target server cannot be overwritten when already present."
                  }
                ]
              },
              "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
            },
            "migrationWindowStartTimeInUtc": {
              "format": "date-time",
              "type": "string",
              "description": "Start time (UTC) for migration window."
            },
            "migrateRoles": {
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "MigrateRolesAndPermissions",
                "modelAsString": true,
                "values": [
                  {
                    "value": "True",
                    "description": "Roles and permissions will be migrated."
                  },
                  {
                    "value": "False",
                    "description": "Roles and permissions will not be migrated."
                  }
                ]
              },
              "description": "Indicates if roles and permissions must be migrated."
            },
            "startDataMigration": {
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "StartDataMigration",
                "modelAsString": true,
                "values": [
                  {
                    "value": "True",
                    "description": "Data migration must start right away."
                  },
                  {
                    "value": "False",
                    "description": "Data migration must not start right away."
                  }
                ]
              },
              "description": "Indicates if data migration must start right away."
            },
            "triggerCutover": {
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "TriggerCutover",
                "modelAsString": true,
                "values": [
                  {
                    "value": "True",
                    "description": "Cutover must be triggered for the entire migration."
                  },
                  {
                    "value": "False",
                    "description": "Cutover must not be triggered for the entire migration."
                  }
                ]
              },
              "description": "Indicates if cutover must be triggered for the entire migration."
            },
            "dbsToTriggerCutoverOn": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
              "x-ms-identifiers": []
            },
            "cancel": {
              "type": "string",
              "enum": [
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "Cancel",
                "modelAsString": true,
                "values": [
                  {
                    "value": "True",
                    "description": "Cancel must be triggered for the entire migration."
                  },
                  {
                    "value": "False",
                    "description": "Cancel must not be triggered for the entire migration."
                  }
                ]
              },
              "description": "Indicates if cancel must be triggered for the entire migration."
            },
            "dbsToCancelMigrationOn": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
              "x-ms-identifiers": []
            },
            "migrationMode": {
              "description": "Mode used to perform the migration: Online or Offline.",
              "enum": [
                "Offline",
                "Online"
              ],
              "type": "string",
              "x-ms-enum": {
                "name": "MigrationMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Offline",
                    "description": "Offline migration mode."
                  },
                  {
                    "value": "Online",
                    "description": "Online migration mode."
                  }
                ]
              }
            }
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      },
      "description": "Migration."
    },
    "MigrationPropertiesForPatch": {
      "type": "object",
      "properties": {
        "sourceDbServerResourceId": {
          "type": "string",
          "description": "Identifier of the source database server resource, when 'sourceType' is 'PostgreSQLSingleServer'. For other source types this must be set to ipaddress:port@username or hostname:port@username."
        },
        "sourceDbServerFullyQualifiedDomainName": {
          "type": "string",
          "description": "Fully qualified domain name (FQDN) or IP address of the source server. This property is optional. When provided, the migration service will always use it to connect to the source server."
        },
        "targetDbServerFullyQualifiedDomainName": {
          "type": "string",
          "description": "Fully qualified domain name (FQDN) or IP address of the target server. This property is optional. When provided, the migration service will always use it to connect to the target server."
        },
        "secretParameters": {
          "description": "Migration secret parameters.",
          "type": "object",
          "properties": {
            "adminCredentials": {
              "x-ms-secret": true,
              "x-ms-external": true,
              "description": "Credentials of administrator users for source and target servers.",
              "type": "object",
              "properties": {
                "sourceServerPassword": {
                  "type": "string",
                  "x-ms-secret": true,
                  "x-ms-external": true,
                  "x-ms-mutability": [
                    "update"
                  ],
                  "description": "Password for the user of the source server."
                },
                "targetServerPassword": {
                  "type": "string",
                  "x-ms-secret": true,
                  "x-ms-external": true,
                  "x-ms-mutability": [
                    "update"
                  ],
                  "description": "Password for the user of the target server."
                }
              }
            },
            "sourceServerUsername": {
              "type": "string",
              "x-ms-mutability": [
                "update"
              ],
              "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
            },
            "targetServerUsername": {
              "type": "string",
              "x-ms-mutability": [
                "update"
              ],
              "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
            }
          }
        },
        "dbsToMigrate": {
          "maxItems": 50,
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Names of databases to migrate.",
          "x-ms-identifiers": []
        },
        "setupLogicalReplicationOnSourceDbIfNeeded": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "LogicalReplicationOnSourceServer",
            "modelAsString": true,
            "values": [
              {
                "value": "True",
                "description": "Logical replication will be set up on the source server."
              },
              {
                "value": "False",
                "description": "Logical replication will not be set up on the source server."
              }
            ]
          },
          "description": "Indicates whether to setup logical replication on source server, if needed."
        },
        "overwriteDbsInTarget": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "OverwriteDatabasesOnTargetServer",
            "modelAsString": true,
            "values": [
              {
                "value": "True",
                "description": "Databases on the target server can be overwritten when already present."
              },
              {
                "value": "False",
                "description": "Databases on the target server cannot be overwritten when already present."
              }
            ]
          },
          "description": "Indicates if databases on the target server can be overwritten when already present. If set to 'False', when the migration workflow detects that the database already exists on the target server, it will wait for a confirmation."
        },
        "migrationWindowStartTimeInUtc": {
          "format": "date-time",
          "type": "string",
          "description": "Start time (UTC) for migration window."
        },
        "migrateRoles": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "MigrateRolesAndPermissions",
            "modelAsString": true,
            "values": [
              {
                "value": "True",
                "description": "Roles and permissions will be migrated."
              },
              {
                "value": "False",
                "description": "Roles and permissions will not be migrated."
              }
            ]
          },
          "description": "Indicates if roles and permissions must be migrated."
        },
        "startDataMigration": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "StartDataMigration",
            "modelAsString": true,
            "values": [
              {
                "value": "True",
                "description": "Data migration must start right away."
              },
              {
                "value": "False",
                "description": "Data migration must not start right away."
              }
            ]
          },
          "description": "Indicates if data migration must start right away."
        },
        "triggerCutover": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "TriggerCutover",
            "modelAsString": true,
            "values": [
              {
                "value": "True",
                "description": "Cutover must be triggered for the entire migration."
              },
              {
                "value": "False",
                "description": "Cutover must not be triggered for the entire migration."
              }
            ]
          },
          "description": "Indicates if cutover must be triggered for the entire migration."
        },
        "dbsToTriggerCutoverOn": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "When you want to trigger cutover for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
          "x-ms-identifiers": []
        },
        "cancel": {
          "type": "string",
          "enum": [
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "Cancel",
            "modelAsString": true,
            "values": [
              {
                "value": "True",
                "description": "Cancel must be triggered for the entire migration."
              },
              {
                "value": "False",
                "description": "Cancel must not be triggered for the entire migration."
              }
            ]
          },
          "description": "Indicates if cancel must be triggered for the entire migration."
        },
        "dbsToCancelMigrationOn": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "When you want to trigger cancel for specific databases set 'triggerCutover' to 'True' and the names of the specific databases in this array.",
          "x-ms-identifiers": []
        },
        "migrationMode": {
          "description": "Mode used to perform the migration: Online or Offline.",
          "enum": [
            "Offline",
            "Online"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MigrationMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Offline",
                "description": "Offline migration mode."
              },
              {
                "value": "Online",
                "description": "Online migration mode."
              }
            ]
          }
        }
      },
      "description": "Migration properties."
    },
    "MigrationSecretParameters": {
      "required": [
        "adminCredentials"
      ],
      "type": "object",
      "properties": {
        "adminCredentials": {
          "x-ms-secret": true,
          "x-ms-external": true,
          "description": "Credentials of administrator users for source and target servers.",
          "type": "object",
          "required": [
            "sourceServerPassword",
            "targetServerPassword"
          ],
          "properties": {
            "sourceServerPassword": {
              "type": "string",
              "x-ms-secret": true,
              "x-ms-external": true,
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "Password for the user of the source server."
            },
            "targetServerPassword": {
              "type": "string",
              "x-ms-secret": true,
              "x-ms-external": true,
              "x-ms-mutability": [
                "create",
                "update"
              ],
              "description": "Password for the user of the target server."
            }
          }
        },
        "sourceServerUsername": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
        },
        "targetServerUsername": {
          "type": "string",
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
        }
      },
      "description": "Migration secret parameters."
    },
    "AdminCredentials": {
      "type": "object",
      "required": [
        "sourceServerPassword",
        "targetServerPassword"
      ],
      "properties": {
        "sourceServerPassword": {
          "type": "string",
          "x-ms-secret": true,
          "x-ms-external": true,
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "Password for the user of the source server."
        },
        "targetServerPassword": {
          "type": "string",
          "x-ms-secret": true,
          "x-ms-external": true,
          "x-ms-mutability": [
            "create",
            "update"
          ],
          "description": "Password for the user of the target server."
        }
      },
      "description": "Credentials of administrator users for source and target servers."
    },
    "MigrationSecretParametersForPatch": {
      "type": "object",
      "properties": {
        "adminCredentials": {
          "x-ms-secret": true,
          "x-ms-external": true,
          "description": "Credentials of administrator users for source and target servers.",
          "type": "object",
          "properties": {
            "sourceServerPassword": {
              "type": "string",
              "x-ms-secret": true,
              "x-ms-external": true,
              "x-ms-mutability": [
                "update"
              ],
              "description": "Password for the user of the source server."
            },
            "targetServerPassword": {
              "type": "string",
              "x-ms-secret": true,
              "x-ms-external": true,
              "x-ms-mutability": [
                "update"
              ],
              "description": "Password for the user of the target server."
            }
          }
        },
        "sourceServerUsername": {
          "type": "string",
          "x-ms-mutability": [
            "update"
          ],
          "description": "Gets or sets the name of the user for the source server. This user doesn't need to be an administrator."
        },
        "targetServerUsername": {
          "type": "string",
          "x-ms-mutability": [
            "update"
          ],
          "description": "Gets or sets the name of the user for the target server. This user doesn't need to be an administrator."
        }
      },
      "description": "Migration secret parameters."
    },
    "AdminCredentialsForPatch": {
      "type": "object",
      "properties": {
        "sourceServerPassword": {
          "type": "string",
          "x-ms-secret": true,
          "x-ms-external": true,
          "x-ms-mutability": [
            "update"
          ],
          "description": "Password for the user of the source server."
        },
        "targetServerPassword": {
          "type": "string",
          "x-ms-secret": true,
          "x-ms-external": true,
          "x-ms-mutability": [
            "update"
          ],
          "description": "Password for the user of the target server."
        }
      },
      "description": "Credentials of administrator users for source and target servers."
    },
    "DbServerMetadata": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Location of database server.",
          "x-ms-mutability": [
            "read"
          ],
          "readOnly": true
        },
        "version": {
          "type": "string",
          "description": "Major version of PostgreSQL database engine."
        },
        "storageMb": {
          "format": "int32",
          "type": "integer",
          "description": "Storage size (in MB) for database server."
        },
        "sku": {
          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
            },
            "tier": {
              "type": "string",
              "description": "Tier of the compute assigned to a server.",
              "enum": [
                "Burstable",
                "GeneralPurpose",
                "MemoryOptimized"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": true
              }
            }
          }
        }
      },
      "description": "Database server metadata."
    },
    "MigrationDetailsLevel": {
      "enum": [
        "Default",
        "Summary",
        "Full"
      ],
      "type": "string",
      "description": "Level of details of a migration.",
      "x-ms-enum": {
        "name": "MigrationDetailsLevel",
        "modelAsString": true,
        "values": [
          {
            "value": "Default",
            "description": "Default level of details."
          },
          {
            "value": "Summary",
            "description": "Summary level of details."
          },
          {
            "value": "Full",
            "description": "Full level of details."
          }
        ]
      }
    },
    "MigrationMode": {
      "enum": [
        "Offline",
        "Online"
      ],
      "type": "string",
      "description": "Mode used to perform the migration: Online or Offline.",
      "x-ms-enum": {
        "name": "MigrationMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Offline",
            "description": "Offline migration mode."
          },
          {
            "value": "Online",
            "description": "Online migration mode."
          }
        ]
      }
    },
    "MigrationOption": {
      "enum": [
        "Validate",
        "Migrate",
        "ValidateAndMigrate"
      ],
      "type": "string",
      "description": "Supported option for a migration",
      "x-ms-enum": {
        "name": "MigrationOption",
        "modelAsString": true,
        "values": [
          {
            "value": "Validate",
            "description": "Validate the migration without performing it."
          },
          {
            "value": "Migrate",
            "description": "Perform the migration."
          },
          {
            "value": "ValidateAndMigrate",
            "description": "Validate and perform the migration."
          }
        ]
      }
    },
    "MigrationState": {
      "enum": [
        "InProgress",
        "WaitingForUserAction",
        "Canceled",
        "Failed",
        "Succeeded",
        "ValidationFailed",
        "CleaningUp"
      ],
      "type": "string",
      "description": "State of migration.",
      "x-ms-enum": {
        "name": "MigrationState",
        "modelAsString": true,
        "values": [
          {
            "value": "InProgress",
            "description": "Migration is in progress."
          },
          {
            "value": "WaitingForUserAction",
            "description": "Migration is waiting for user action."
          },
          {
            "value": "Canceled",
            "description": "Migration has been canceled."
          },
          {
            "value": "Failed",
            "description": "Migration has failed."
          },
          {
            "value": "Succeeded",
            "description": "Migration has succeeded."
          },
          {
            "value": "ValidationFailed",
            "description": "Validation for migration has failed."
          },
          {
            "value": "CleaningUp",
            "description": "Migration is cleaning up resources."
          }
        ]
      }
    },
    "MigrationStatus": {
      "type": "object",
      "properties": {
        "state": {
          "readOnly": true,
          "description": "State of migration.",
          "enum": [
            "InProgress",
            "WaitingForUserAction",
            "Canceled",
            "Failed",
            "Succeeded",
            "ValidationFailed",
            "CleaningUp"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MigrationState",
            "modelAsString": true,
            "values": [
              {
                "value": "InProgress",
                "description": "Migration is in progress."
              },
              {
                "value": "WaitingForUserAction",
                "description": "Migration is waiting for user action."
              },
              {
                "value": "Canceled",
                "description": "Migration has been canceled."
              },
              {
                "value": "Failed",
                "description": "Migration has failed."
              },
              {
                "value": "Succeeded",
                "description": "Migration has succeeded."
              },
              {
                "value": "ValidationFailed",
                "description": "Validation for migration has failed."
              },
              {
                "value": "CleaningUp",
                "description": "Migration is cleaning up resources."
              }
            ]
          }
        },
        "error": {
          "type": "string",
          "readOnly": true,
          "description": "Error message, if any, for the migration state."
        },
        "currentSubStateDetails": {
          "readOnly": true,
          "description": "Current migration sub state details.",
          "type": "object",
          "properties": {
            "currentSubState": {
              "readOnly": true,
              "enum": [
                "PerformingPreRequisiteSteps",
                "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                "WaitingForDBsToMigrateSpecification",
                "WaitingForTargetDBOverwriteConfirmation",
                "WaitingForDataMigrationScheduling",
                "WaitingForDataMigrationWindow",
                "MigratingData",
                "WaitingForCutoverTrigger",
                "CompletingMigration",
                "Completed",
                "CancelingRequestedDBMigrations",
                "ValidationInProgress"
              ],
              "type": "string",
              "description": "Substate of migration.",
              "x-ms-enum": {
                "name": "MigrationSubstate",
                "modelAsString": true,
                "values": [
                  {
                    "value": "PerformingPreRequisiteSteps",
                    "description": "Performing pre-requisite steps for migration."
                  },
                  {
                    "value": "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                    "description": "Waiting for logical replication setup request on source database."
                  },
                  {
                    "value": "WaitingForDBsToMigrateSpecification",
                    "description": "Waiting for databases to migrate specification."
                  },
                  {
                    "value": "WaitingForTargetDBOverwriteConfirmation",
                    "description": "Waiting for target database overwrite confirmation."
                  },
                  {
                    "value": "WaitingForDataMigrationScheduling",
                    "description": "Waiting for data migration scheduling."
                  },
                  {
                    "value": "WaitingForDataMigrationWindow",
                    "description": "Waiting for data migration window."
                  },
                  {
                    "value": "MigratingData",
                    "description": "Migrating data."
                  },
                  {
                    "value": "WaitingForCutoverTrigger",
                    "description": "Waiting for cutover trigger."
                  },
                  {
                    "value": "CompletingMigration",
                    "description": "Completing migration."
                  },
                  {
                    "value": "Completed",
                    "description": "Migration completed."
                  },
                  {
                    "value": "CancelingRequestedDBMigrations",
                    "description": "Canceling requested database migrations."
                  },
                  {
                    "value": "ValidationInProgress",
                    "description": "Validation in progress."
                  }
                ]
              }
            },
            "dbDetails": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "description": "Migration state of a database.",
                "properties": {
                  "databaseName": {
                    "type": "string",
                    "description": "Name of database."
                  },
                  "migrationState": {
                    "type": "string",
                    "description": "Migration state of a database.",
                    "enum": [
                      "InProgress",
                      "WaitingForCutoverTrigger",
                      "Failed",
                      "Canceled",
                      "Succeeded",
                      "Canceling"
                    ],
                    "x-ms-enum": {
                      "name": "MigrationDatabaseState",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "InProgress",
                          "description": "Migration is in progress for the database."
                        },
                        {
                          "value": "WaitingForCutoverTrigger",
                          "description": "Migration is waiting for cutover trigger for the database."
                        },
                        {
                          "value": "Failed",
                          "description": "Migration has failed for the database."
                        },
                        {
                          "value": "Canceled",
                          "description": "Migration has been canceled for the database."
                        },
                        {
                          "value": "Succeeded",
                          "description": "Migration has succeeded for the database."
                        },
                        {
                          "value": "Canceling",
                          "description": "Migration is canceling for the database."
                        }
                      ]
                    }
                  },
                  "migrationOperation": {
                    "type": "string",
                    "description": "Migration operation of a database."
                  },
                  "startedOn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start time of a migration state."
                  },
                  "endedOn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End time of a migration state."
                  },
                  "fullLoadQueuedTables": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Number of tables queued for the migration of a database."
                  },
                  "fullLoadErroredTables": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Number of tables encountering errors during the migration of a database."
                  },
                  "fullLoadLoadingTables": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Number of tables loading during the migration of a database."
                  },
                  "fullLoadCompletedTables": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Number of tables loaded during the migration of a database."
                  },
                  "cdcUpdateCounter": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Change Data Capture update counter."
                  },
                  "cdcDeleteCounter": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Change Data Capture delete counter."
                  },
                  "cdcInsertCounter": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Change Data Capture insert counter."
                  },
                  "appliedChanges": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Change Data Capture applied changes counter."
                  },
                  "incomingChanges": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Change Data Capture incoming changes counter."
                  },
                  "latency": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Lag in seconds between source and target during online phase."
                  },
                  "message": {
                    "type": "string",
                    "description": "Error message, if any, for the migration state."
                  }
                }
              }
            },
            "validationDetails": {
              "type": "object",
              "description": "Details for the validation for migration.",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "Validation status for migration.",
                  "enum": [
                    "Failed",
                    "Succeeded",
                    "Warning"
                  ],
                  "x-ms-enum": {
                    "name": "ValidationState",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Failed",
                        "description": "Validation has failed."
                      },
                      {
                        "value": "Succeeded",
                        "description": "Validation has succeeded."
                      },
                      {
                        "value": "Warning",
                        "description": "Validation has succeeded with warnings."
                      }
                    ]
                  }
                },
                "validationStartTimeInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start time (UTC) for validation."
                },
                "validationEndTimeInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End time (UTC) for validation."
                },
                "serverLevelValidationDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Validation summary object.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Validation type."
                      },
                      "state": {
                        "type": "string",
                        "description": "Validation status for migration.",
                        "enum": [
                          "Failed",
                          "Succeeded",
                          "Warning"
                        ],
                        "x-ms-enum": {
                          "name": "ValidationState",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Failed",
                              "description": "Validation has failed."
                            },
                            {
                              "value": "Succeeded",
                              "description": "Validation has succeeded."
                            },
                            {
                              "value": "Warning",
                              "description": "Validation has succeeded with warnings."
                            }
                          ]
                        }
                      },
                      "messages": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Validation message object.",
                          "properties": {
                            "state": {
                              "type": "string",
                              "description": "Validation status for migration.",
                              "enum": [
                                "Failed",
                                "Succeeded",
                                "Warning"
                              ],
                              "x-ms-enum": {
                                "name": "ValidationState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Failed",
                                    "description": "Validation has failed."
                                  },
                                  {
                                    "value": "Succeeded",
                                    "description": "Validation has succeeded."
                                  },
                                  {
                                    "value": "Warning",
                                    "description": "Validation has succeeded with warnings."
                                  }
                                ]
                              }
                            },
                            "message": {
                              "type": "string",
                              "description": "Validation message string."
                            }
                          }
                        },
                        "description": "Validation messages.",
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "description": "Details of server level validations.",
                  "x-ms-identifiers": []
                },
                "dbLevelValidationDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Validation status summary for a database.",
                    "properties": {
                      "databaseName": {
                        "type": "string",
                        "description": "Name of database."
                      },
                      "startedOn": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time of a database level validation."
                      },
                      "endedOn": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End time of a database level validation."
                      },
                      "summary": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Validation summary object.",
                          "properties": {
                            "type": {
                              "type": "string",
                              "description": "Validation type."
                            },
                            "state": {
                              "type": "string",
                              "description": "Validation status for migration.",
                              "enum": [
                                "Failed",
                                "Succeeded",
                                "Warning"
                              ],
                              "x-ms-enum": {
                                "name": "ValidationState",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "value": "Failed",
                                    "description": "Validation has failed."
                                  },
                                  {
                                    "value": "Succeeded",
                                    "description": "Validation has succeeded."
                                  },
                                  {
                                    "value": "Warning",
                                    "description": "Validation has succeeded with warnings."
                                  }
                                ]
                              }
                            },
                            "messages": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Validation message object.",
                                "properties": {
                                  "state": {
                                    "type": "string",
                                    "description": "Validation status for migration.",
                                    "enum": [
                                      "Failed",
                                      "Succeeded",
                                      "Warning"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ValidationState",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "value": "Failed",
                                          "description": "Validation has failed."
                                        },
                                        {
                                          "value": "Succeeded",
                                          "description": "Validation has succeeded."
                                        },
                                        {
                                          "value": "Warning",
                                          "description": "Validation has succeeded with warnings."
                                        }
                                      ]
                                    }
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "Validation message string."
                                  }
                                }
                              },
                              "description": "Validation messages.",
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "description": "Summary of database level validations.",
                        "x-ms-identifiers": []
                      }
                    }
                  },
                  "description": "Details of server level validations.",
                  "x-ms-identifiers": [
                    "databaseName"
                  ]
                }
              }
            }
          }
        }
      },
      "description": "State of migration."
    },
    "MigrationSubstate": {
      "enum": [
        "PerformingPreRequisiteSteps",
        "WaitingForLogicalReplicationSetupRequestOnSourceDB",
        "WaitingForDBsToMigrateSpecification",
        "WaitingForTargetDBOverwriteConfirmation",
        "WaitingForDataMigrationScheduling",
        "WaitingForDataMigrationWindow",
        "MigratingData",
        "WaitingForCutoverTrigger",
        "CompletingMigration",
        "Completed",
        "CancelingRequestedDBMigrations",
        "ValidationInProgress"
      ],
      "type": "string",
      "description": "Substate of migration.",
      "x-ms-enum": {
        "name": "MigrationSubstate",
        "modelAsString": true,
        "values": [
          {
            "value": "PerformingPreRequisiteSteps",
            "description": "Performing pre-requisite steps for migration."
          },
          {
            "value": "WaitingForLogicalReplicationSetupRequestOnSourceDB",
            "description": "Waiting for logical replication setup request on source database."
          },
          {
            "value": "WaitingForDBsToMigrateSpecification",
            "description": "Waiting for databases to migrate specification."
          },
          {
            "value": "WaitingForTargetDBOverwriteConfirmation",
            "description": "Waiting for target database overwrite confirmation."
          },
          {
            "value": "WaitingForDataMigrationScheduling",
            "description": "Waiting for data migration scheduling."
          },
          {
            "value": "WaitingForDataMigrationWindow",
            "description": "Waiting for data migration window."
          },
          {
            "value": "MigratingData",
            "description": "Migrating data."
          },
          {
            "value": "WaitingForCutoverTrigger",
            "description": "Waiting for cutover trigger."
          },
          {
            "value": "CompletingMigration",
            "description": "Completing migration."
          },
          {
            "value": "Completed",
            "description": "Migration completed."
          },
          {
            "value": "CancelingRequestedDBMigrations",
            "description": "Canceling requested database migrations."
          },
          {
            "value": "ValidationInProgress",
            "description": "Validation in progress."
          }
        ]
      }
    },
    "MigrationSubstateDetails": {
      "type": "object",
      "properties": {
        "currentSubState": {
          "readOnly": true,
          "enum": [
            "PerformingPreRequisiteSteps",
            "WaitingForLogicalReplicationSetupRequestOnSourceDB",
            "WaitingForDBsToMigrateSpecification",
            "WaitingForTargetDBOverwriteConfirmation",
            "WaitingForDataMigrationScheduling",
            "WaitingForDataMigrationWindow",
            "MigratingData",
            "WaitingForCutoverTrigger",
            "CompletingMigration",
            "Completed",
            "CancelingRequestedDBMigrations",
            "ValidationInProgress"
          ],
          "type": "string",
          "description": "Substate of migration.",
          "x-ms-enum": {
            "name": "MigrationSubstate",
            "modelAsString": true,
            "values": [
              {
                "value": "PerformingPreRequisiteSteps",
                "description": "Performing pre-requisite steps for migration."
              },
              {
                "value": "WaitingForLogicalReplicationSetupRequestOnSourceDB",
                "description": "Waiting for logical replication setup request on source database."
              },
              {
                "value": "WaitingForDBsToMigrateSpecification",
                "description": "Waiting for databases to migrate specification."
              },
              {
                "value": "WaitingForTargetDBOverwriteConfirmation",
                "description": "Waiting for target database overwrite confirmation."
              },
              {
                "value": "WaitingForDataMigrationScheduling",
                "description": "Waiting for data migration scheduling."
              },
              {
                "value": "WaitingForDataMigrationWindow",
                "description": "Waiting for data migration window."
              },
              {
                "value": "MigratingData",
                "description": "Migrating data."
              },
              {
                "value": "WaitingForCutoverTrigger",
                "description": "Waiting for cutover trigger."
              },
              {
                "value": "CompletingMigration",
                "description": "Completing migration."
              },
              {
                "value": "Completed",
                "description": "Migration completed."
              },
              {
                "value": "CancelingRequestedDBMigrations",
                "description": "Canceling requested database migrations."
              },
              {
                "value": "ValidationInProgress",
                "description": "Validation in progress."
              }
            ]
          }
        },
        "dbDetails": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "description": "Migration state of a database.",
            "properties": {
              "databaseName": {
                "type": "string",
                "description": "Name of database."
              },
              "migrationState": {
                "type": "string",
                "description": "Migration state of a database.",
                "enum": [
                  "InProgress",
                  "WaitingForCutoverTrigger",
                  "Failed",
                  "Canceled",
                  "Succeeded",
                  "Canceling"
                ],
                "x-ms-enum": {
                  "name": "MigrationDatabaseState",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "InProgress",
                      "description": "Migration is in progress for the database."
                    },
                    {
                      "value": "WaitingForCutoverTrigger",
                      "description": "Migration is waiting for cutover trigger for the database."
                    },
                    {
                      "value": "Failed",
                      "description": "Migration has failed for the database."
                    },
                    {
                      "value": "Canceled",
                      "description": "Migration has been canceled for the database."
                    },
                    {
                      "value": "Succeeded",
                      "description": "Migration has succeeded for the database."
                    },
                    {
                      "value": "Canceling",
                      "description": "Migration is canceling for the database."
                    }
                  ]
                }
              },
              "migrationOperation": {
                "type": "string",
                "description": "Migration operation of a database."
              },
              "startedOn": {
                "type": "string",
                "format": "date-time",
                "description": "Start time of a migration state."
              },
              "endedOn": {
                "type": "string",
                "format": "date-time",
                "description": "End time of a migration state."
              },
              "fullLoadQueuedTables": {
                "format": "int32",
                "type": "integer",
                "description": "Number of tables queued for the migration of a database."
              },
              "fullLoadErroredTables": {
                "format": "int32",
                "type": "integer",
                "description": "Number of tables encountering errors during the migration of a database."
              },
              "fullLoadLoadingTables": {
                "format": "int32",
                "type": "integer",
                "description": "Number of tables loading during the migration of a database."
              },
              "fullLoadCompletedTables": {
                "format": "int32",
                "type": "integer",
                "description": "Number of tables loaded during the migration of a database."
              },
              "cdcUpdateCounter": {
                "format": "int32",
                "type": "integer",
                "description": "Change Data Capture update counter."
              },
              "cdcDeleteCounter": {
                "format": "int32",
                "type": "integer",
                "description": "Change Data Capture delete counter."
              },
              "cdcInsertCounter": {
                "format": "int32",
                "type": "integer",
                "description": "Change Data Capture insert counter."
              },
              "appliedChanges": {
                "format": "int32",
                "type": "integer",
                "description": "Change Data Capture applied changes counter."
              },
              "incomingChanges": {
                "format": "int32",
                "type": "integer",
                "description": "Change Data Capture incoming changes counter."
              },
              "latency": {
                "format": "int32",
                "type": "integer",
                "description": "Lag in seconds between source and target during online phase."
              },
              "message": {
                "type": "string",
                "description": "Error message, if any, for the migration state."
              }
            }
          }
        },
        "validationDetails": {
          "type": "object",
          "description": "Details for the validation for migration.",
          "properties": {
            "status": {
              "type": "string",
              "description": "Validation status for migration.",
              "enum": [
                "Failed",
                "Succeeded",
                "Warning"
              ],
              "x-ms-enum": {
                "name": "ValidationState",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Failed",
                    "description": "Validation has failed."
                  },
                  {
                    "value": "Succeeded",
                    "description": "Validation has succeeded."
                  },
                  {
                    "value": "Warning",
                    "description": "Validation has succeeded with warnings."
                  }
                ]
              }
            },
            "validationStartTimeInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Start time (UTC) for validation."
            },
            "validationEndTimeInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "End time (UTC) for validation."
            },
            "serverLevelValidationDetails": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Validation summary object.",
                "properties": {
                  "type": {
                    "type": "string",
                    "description": "Validation type."
                  },
                  "state": {
                    "type": "string",
                    "description": "Validation status for migration.",
                    "enum": [
                      "Failed",
                      "Succeeded",
                      "Warning"
                    ],
                    "x-ms-enum": {
                      "name": "ValidationState",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Failed",
                          "description": "Validation has failed."
                        },
                        {
                          "value": "Succeeded",
                          "description": "Validation has succeeded."
                        },
                        {
                          "value": "Warning",
                          "description": "Validation has succeeded with warnings."
                        }
                      ]
                    }
                  },
                  "messages": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Validation message object.",
                      "properties": {
                        "state": {
                          "type": "string",
                          "description": "Validation status for migration.",
                          "enum": [
                            "Failed",
                            "Succeeded",
                            "Warning"
                          ],
                          "x-ms-enum": {
                            "name": "ValidationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Failed",
                                "description": "Validation has failed."
                              },
                              {
                                "value": "Succeeded",
                                "description": "Validation has succeeded."
                              },
                              {
                                "value": "Warning",
                                "description": "Validation has succeeded with warnings."
                              }
                            ]
                          }
                        },
                        "message": {
                          "type": "string",
                          "description": "Validation message string."
                        }
                      }
                    },
                    "description": "Validation messages.",
                    "x-ms-identifiers": []
                  }
                }
              },
              "description": "Details of server level validations.",
              "x-ms-identifiers": []
            },
            "dbLevelValidationDetails": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Validation status summary for a database.",
                "properties": {
                  "databaseName": {
                    "type": "string",
                    "description": "Name of database."
                  },
                  "startedOn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Start time of a database level validation."
                  },
                  "endedOn": {
                    "type": "string",
                    "format": "date-time",
                    "description": "End time of a database level validation."
                  },
                  "summary": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Validation summary object.",
                      "properties": {
                        "type": {
                          "type": "string",
                          "description": "Validation type."
                        },
                        "state": {
                          "type": "string",
                          "description": "Validation status for migration.",
                          "enum": [
                            "Failed",
                            "Succeeded",
                            "Warning"
                          ],
                          "x-ms-enum": {
                            "name": "ValidationState",
                            "modelAsString": true,
                            "values": [
                              {
                                "value": "Failed",
                                "description": "Validation has failed."
                              },
                              {
                                "value": "Succeeded",
                                "description": "Validation has succeeded."
                              },
                              {
                                "value": "Warning",
                                "description": "Validation has succeeded with warnings."
                              }
                            ]
                          }
                        },
                        "messages": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Validation message object.",
                            "properties": {
                              "state": {
                                "type": "string",
                                "description": "Validation status for migration.",
                                "enum": [
                                  "Failed",
                                  "Succeeded",
                                  "Warning"
                                ],
                                "x-ms-enum": {
                                  "name": "ValidationState",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "value": "Failed",
                                      "description": "Validation has failed."
                                    },
                                    {
                                      "value": "Succeeded",
                                      "description": "Validation has succeeded."
                                    },
                                    {
                                      "value": "Warning",
                                      "description": "Validation has succeeded with warnings."
                                    }
                                  ]
                                }
                              },
                              "message": {
                                "type": "string",
                                "description": "Validation message string."
                              }
                            }
                          },
                          "description": "Validation messages.",
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "description": "Summary of database level validations.",
                    "x-ms-identifiers": []
                  }
                }
              },
              "description": "Details of server level validations.",
              "x-ms-identifiers": [
                "databaseName"
              ]
            }
          }
        }
      },
      "description": "Details of migration substate."
    },
    "DatabaseMigrationState": {
      "type": "object",
      "description": "Migration state of a database.",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "Name of database."
        },
        "migrationState": {
          "type": "string",
          "description": "Migration state of a database.",
          "enum": [
            "InProgress",
            "WaitingForCutoverTrigger",
            "Failed",
            "Canceled",
            "Succeeded",
            "Canceling"
          ],
          "x-ms-enum": {
            "name": "MigrationDatabaseState",
            "modelAsString": true,
            "values": [
              {
                "value": "InProgress",
                "description": "Migration is in progress for the database."
              },
              {
                "value": "WaitingForCutoverTrigger",
                "description": "Migration is waiting for cutover trigger for the database."
              },
              {
                "value": "Failed",
                "description": "Migration has failed for the database."
              },
              {
                "value": "Canceled",
                "description": "Migration has been canceled for the database."
              },
              {
                "value": "Succeeded",
                "description": "Migration has succeeded for the database."
              },
              {
                "value": "Canceling",
                "description": "Migration is canceling for the database."
              }
            ]
          }
        },
        "migrationOperation": {
          "type": "string",
          "description": "Migration operation of a database."
        },
        "startedOn": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of a migration state."
        },
        "endedOn": {
          "type": "string",
          "format": "date-time",
          "description": "End time of a migration state."
        },
        "fullLoadQueuedTables": {
          "format": "int32",
          "type": "integer",
          "description": "Number of tables queued for the migration of a database."
        },
        "fullLoadErroredTables": {
          "format": "int32",
          "type": "integer",
          "description": "Number of tables encountering errors during the migration of a database."
        },
        "fullLoadLoadingTables": {
          "format": "int32",
          "type": "integer",
          "description": "Number of tables loading during the migration of a database."
        },
        "fullLoadCompletedTables": {
          "format": "int32",
          "type": "integer",
          "description": "Number of tables loaded during the migration of a database."
        },
        "cdcUpdateCounter": {
          "format": "int32",
          "type": "integer",
          "description": "Change Data Capture update counter."
        },
        "cdcDeleteCounter": {
          "format": "int32",
          "type": "integer",
          "description": "Change Data Capture delete counter."
        },
        "cdcInsertCounter": {
          "format": "int32",
          "type": "integer",
          "description": "Change Data Capture insert counter."
        },
        "appliedChanges": {
          "format": "int32",
          "type": "integer",
          "description": "Change Data Capture applied changes counter."
        },
        "incomingChanges": {
          "format": "int32",
          "type": "integer",
          "description": "Change Data Capture incoming changes counter."
        },
        "latency": {
          "format": "int32",
          "type": "integer",
          "description": "Lag in seconds between source and target during online phase."
        },
        "message": {
          "type": "string",
          "description": "Error message, if any, for the migration state."
        }
      }
    },
    "ValidationDetails": {
      "type": "object",
      "description": "Details for the validation for migration.",
      "properties": {
        "status": {
          "type": "string",
          "description": "Validation status for migration.",
          "enum": [
            "Failed",
            "Succeeded",
            "Warning"
          ],
          "x-ms-enum": {
            "name": "ValidationState",
            "modelAsString": true,
            "values": [
              {
                "value": "Failed",
                "description": "Validation has failed."
              },
              {
                "value": "Succeeded",
                "description": "Validation has succeeded."
              },
              {
                "value": "Warning",
                "description": "Validation has succeeded with warnings."
              }
            ]
          }
        },
        "validationStartTimeInUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Start time (UTC) for validation."
        },
        "validationEndTimeInUtc": {
          "type": "string",
          "format": "date-time",
          "description": "End time (UTC) for validation."
        },
        "serverLevelValidationDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Validation summary object.",
            "properties": {
              "type": {
                "type": "string",
                "description": "Validation type."
              },
              "state": {
                "type": "string",
                "description": "Validation status for migration.",
                "enum": [
                  "Failed",
                  "Succeeded",
                  "Warning"
                ],
                "x-ms-enum": {
                  "name": "ValidationState",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Failed",
                      "description": "Validation has failed."
                    },
                    {
                      "value": "Succeeded",
                      "description": "Validation has succeeded."
                    },
                    {
                      "value": "Warning",
                      "description": "Validation has succeeded with warnings."
                    }
                  ]
                }
              },
              "messages": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Validation message object.",
                  "properties": {
                    "state": {
                      "type": "string",
                      "description": "Validation status for migration.",
                      "enum": [
                        "Failed",
                        "Succeeded",
                        "Warning"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Failed",
                            "description": "Validation has failed."
                          },
                          {
                            "value": "Succeeded",
                            "description": "Validation has succeeded."
                          },
                          {
                            "value": "Warning",
                            "description": "Validation has succeeded with warnings."
                          }
                        ]
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "Validation message string."
                    }
                  }
                },
                "description": "Validation messages.",
                "x-ms-identifiers": []
              }
            }
          },
          "description": "Details of server level validations.",
          "x-ms-identifiers": []
        },
        "dbLevelValidationDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Validation status summary for a database.",
            "properties": {
              "databaseName": {
                "type": "string",
                "description": "Name of database."
              },
              "startedOn": {
                "type": "string",
                "format": "date-time",
                "description": "Start time of a database level validation."
              },
              "endedOn": {
                "type": "string",
                "format": "date-time",
                "description": "End time of a database level validation."
              },
              "summary": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Validation summary object.",
                  "properties": {
                    "type": {
                      "type": "string",
                      "description": "Validation type."
                    },
                    "state": {
                      "type": "string",
                      "description": "Validation status for migration.",
                      "enum": [
                        "Failed",
                        "Succeeded",
                        "Warning"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Failed",
                            "description": "Validation has failed."
                          },
                          {
                            "value": "Succeeded",
                            "description": "Validation has succeeded."
                          },
                          {
                            "value": "Warning",
                            "description": "Validation has succeeded with warnings."
                          }
                        ]
                      }
                    },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Validation message object.",
                        "properties": {
                          "state": {
                            "type": "string",
                            "description": "Validation status for migration.",
                            "enum": [
                              "Failed",
                              "Succeeded",
                              "Warning"
                            ],
                            "x-ms-enum": {
                              "name": "ValidationState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "value": "Failed",
                                  "description": "Validation has failed."
                                },
                                {
                                  "value": "Succeeded",
                                  "description": "Validation has succeeded."
                                },
                                {
                                  "value": "Warning",
                                  "description": "Validation has succeeded with warnings."
                                }
                              ]
                            }
                          },
                          "message": {
                            "type": "string",
                            "description": "Validation message string."
                          }
                        }
                      },
                      "description": "Validation messages.",
                      "x-ms-identifiers": []
                    }
                  }
                },
                "description": "Summary of database level validations.",
                "x-ms-identifiers": []
              }
            }
          },
          "description": "Details of server level validations.",
          "x-ms-identifiers": [
            "databaseName"
          ]
        }
      }
    },
    "DbLevelValidationStatus": {
      "type": "object",
      "description": "Validation status summary for a database.",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "Name of database."
        },
        "startedOn": {
          "type": "string",
          "format": "date-time",
          "description": "Start time of a database level validation."
        },
        "endedOn": {
          "type": "string",
          "format": "date-time",
          "description": "End time of a database level validation."
        },
        "summary": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Validation summary object.",
            "properties": {
              "type": {
                "type": "string",
                "description": "Validation type."
              },
              "state": {
                "type": "string",
                "description": "Validation status for migration.",
                "enum": [
                  "Failed",
                  "Succeeded",
                  "Warning"
                ],
                "x-ms-enum": {
                  "name": "ValidationState",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Failed",
                      "description": "Validation has failed."
                    },
                    {
                      "value": "Succeeded",
                      "description": "Validation has succeeded."
                    },
                    {
                      "value": "Warning",
                      "description": "Validation has succeeded with warnings."
                    }
                  ]
                }
              },
              "messages": {
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "Validation message object.",
                  "properties": {
                    "state": {
                      "type": "string",
                      "description": "Validation status for migration.",
                      "enum": [
                        "Failed",
                        "Succeeded",
                        "Warning"
                      ],
                      "x-ms-enum": {
                        "name": "ValidationState",
                        "modelAsString": true,
                        "values": [
                          {
                            "value": "Failed",
                            "description": "Validation has failed."
                          },
                          {
                            "value": "Succeeded",
                            "description": "Validation has succeeded."
                          },
                          {
                            "value": "Warning",
                            "description": "Validation has succeeded with warnings."
                          }
                        ]
                      }
                    },
                    "message": {
                      "type": "string",
                      "description": "Validation message string."
                    }
                  }
                },
                "description": "Validation messages.",
                "x-ms-identifiers": []
              }
            }
          },
          "description": "Summary of database level validations.",
          "x-ms-identifiers": []
        }
      }
    },
    "ValidationSummaryItem": {
      "type": "object",
      "description": "Validation summary object.",
      "properties": {
        "type": {
          "type": "string",
          "description": "Validation type."
        },
        "state": {
          "type": "string",
          "description": "Validation status for migration.",
          "enum": [
            "Failed",
            "Succeeded",
            "Warning"
          ],
          "x-ms-enum": {
            "name": "ValidationState",
            "modelAsString": true,
            "values": [
              {
                "value": "Failed",
                "description": "Validation has failed."
              },
              {
                "value": "Succeeded",
                "description": "Validation has succeeded."
              },
              {
                "value": "Warning",
                "description": "Validation has succeeded with warnings."
              }
            ]
          }
        },
        "messages": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Validation message object.",
            "properties": {
              "state": {
                "type": "string",
                "description": "Validation status for migration.",
                "enum": [
                  "Failed",
                  "Succeeded",
                  "Warning"
                ],
                "x-ms-enum": {
                  "name": "ValidationState",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "Failed",
                      "description": "Validation has failed."
                    },
                    {
                      "value": "Succeeded",
                      "description": "Validation has succeeded."
                    },
                    {
                      "value": "Warning",
                      "description": "Validation has succeeded with warnings."
                    }
                  ]
                }
              },
              "message": {
                "type": "string",
                "description": "Validation message string."
              }
            }
          },
          "description": "Validation messages.",
          "x-ms-identifiers": []
        }
      }
    },
    "ValidationMessage": {
      "type": "object",
      "description": "Validation message object.",
      "properties": {
        "state": {
          "type": "string",
          "description": "Validation status for migration.",
          "enum": [
            "Failed",
            "Succeeded",
            "Warning"
          ],
          "x-ms-enum": {
            "name": "ValidationState",
            "modelAsString": true,
            "values": [
              {
                "value": "Failed",
                "description": "Validation has failed."
              },
              {
                "value": "Succeeded",
                "description": "Validation has succeeded."
              },
              {
                "value": "Warning",
                "description": "Validation has succeeded with warnings."
              }
            ]
          }
        },
        "message": {
          "type": "string",
          "description": "Validation message string."
        }
      }
    },
    "ValidationState": {
      "type": "string",
      "description": "Validation status for migration.",
      "enum": [
        "Failed",
        "Succeeded",
        "Warning"
      ],
      "x-ms-enum": {
        "name": "ValidationState",
        "modelAsString": true,
        "values": [
          {
            "value": "Failed",
            "description": "Validation has failed."
          },
          {
            "value": "Succeeded",
            "description": "Validation has succeeded."
          },
          {
            "value": "Warning",
            "description": "Validation has succeeded with warnings."
          }
        ]
      }
    },
    "SourceType": {
      "enum": [
        "OnPremises",
        "AWS",
        "GCP",
        "AzureVM",
        "PostgreSQLSingleServer",
        "AWS_RDS",
        "AWS_AURORA",
        "AWS_EC2",
        "GCP_CloudSQL",
        "GCP_AlloyDB",
        "GCP_Compute",
        "EDB",
        "EDB_Oracle_Server",
        "EDB_PostgreSQL",
        "PostgreSQLFlexibleServer",
        "PostgreSQLCosmosDB",
        "Huawei_RDS",
        "Huawei_Compute",
        "Heroku_PostgreSQL",
        "Crunchy_PostgreSQL",
        "ApsaraDB_RDS",
        "Digital_Ocean_Droplets",
        "Digital_Ocean_PostgreSQL",
        "Supabase_PostgreSQL"
      ],
      "type": "string",
      "description": "Source server type used for the migration: ApsaraDB_RDS, AWS, AWS_AURORA, AWS_EC2, AWS_RDS, AzureVM, Crunchy_PostgreSQL, Digital_Ocean_Droplets, Digital_Ocean_PostgreSQL, EDB, EDB_Oracle_Server, EDB_PostgreSQL, GCP, GCP_AlloyDB, GCP_CloudSQL, GCP_Compute, Heroku_PostgreSQL, Huawei_Compute, Huawei_RDS, OnPremises, PostgreSQLCosmosDB, PostgreSQLFlexibleServer, PostgreSQLSingleServer, or Supabase_PostgreSQL",
      "x-ms-enum": {
        "name": "SourceType",
        "modelAsString": true,
        "values": [
          {
            "value": "OnPremises",
            "description": "On-premises PostgreSQL server."
          },
          {
            "value": "AWS",
            "description": "Amazon Web Services PostgreSQL server."
          },
          {
            "value": "GCP",
            "description": "Google Cloud Platform PostgreSQL server."
          },
          {
            "value": "AzureVM",
            "description": "Azure Virtual Machine PostgreSQL server."
          },
          {
            "value": "PostgreSQLSingleServer",
            "description": "Azure Database for PostgreSQL single server."
          },
          {
            "value": "AWS_RDS",
            "description": "Amazon RDS for PostgreSQL."
          },
          {
            "value": "AWS_AURORA",
            "description": "Amazon Aurora for PostgreSQL."
          },
          {
            "value": "AWS_EC2",
            "description": "Amazon EC2 for PostgreSQL."
          },
          {
            "value": "GCP_CloudSQL",
            "description": "Google Cloud SQL for PostgreSQL."
          },
          {
            "value": "GCP_AlloyDB",
            "description": "Google Cloud AlloyDB for PostgreSQL."
          },
          {
            "value": "GCP_Compute",
            "description": "Google Compute Engine for PostgreSQL."
          },
          {
            "value": "EDB",
            "description": "EnterpriseDB PostgreSQL server."
          },
          {
            "value": "EDB_Oracle_Server",
            "description": "EnterpriseDB Oracle Server."
          },
          {
            "value": "EDB_PostgreSQL",
            "description": "EnterpriseDB PostgreSQL server."
          },
          {
            "value": "PostgreSQLFlexibleServer",
            "description": "Azure Database for PostgreSQL flexible server."
          },
          {
            "value": "PostgreSQLCosmosDB",
            "description": ".NET Cosmos DB for PostgreSQL"
          },
          {
            "value": "Huawei_RDS",
            "description": "Huawei RDS for PostgreSQL"
          },
          {
            "value": "Huawei_Compute",
            "description": "Huawei Compute for PostgreSQL"
          },
          {
            "value": "Heroku_PostgreSQL",
            "description": "Heroku PostgreSQL"
          },
          {
            "value": "Crunchy_PostgreSQL",
            "description": "Crunchy PostgreSQL"
          },
          {
            "value": "ApsaraDB_RDS",
            "description": "ApsaraDB RDS for PostgreSQL"
          },
          {
            "value": "Digital_Ocean_Droplets",
            "description": "Digital Ocean Droplets for PostgreSQL"
          },
          {
            "value": "Digital_Ocean_PostgreSQL",
            "description": "Digital Ocean PostgreSQL"
          },
          {
            "value": "Supabase_PostgreSQL",
            "description": "Supabase PostgreSQL"
          }
        ]
      }
    },
    "SslMode": {
      "enum": [
        "Prefer",
        "Require",
        "VerifyCA",
        "VerifyFull"
      ],
      "type": "string",
      "description": "SSL mode used by a migration. Default SSL mode for 'PostgreSQLSingleServer' is 'VerifyFull'. Default SSL mode for other source types is 'Prefer'.",
      "x-ms-enum": {
        "name": "SslMode",
        "modelAsString": true,
        "values": [
          {
            "value": "Prefer",
            "description": "Prefer SSL connection. If the server does not support SSL, the connection will be established without SSL."
          },
          {
            "value": "Require",
            "description": "Require SSL connection. If the server does not support SSL, the connection will fail."
          },
          {
            "value": "VerifyCA",
            "description": "Require SSL connection and verify the server certificate against the CA certificate."
          },
          {
            "value": "VerifyFull",
            "description": "Require SSL connection, verify the server certificate against the CA certificate, and verify that the server hostname matches the certificate."
          }
        ]
      }
    },
    "ServerSku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Compute tier and size of the database server. This object is empty for an Azure Database for PostgreSQL single server."
        },
        "tier": {
          "type": "string",
          "description": "Tier of the compute assigned to a server.",
          "enum": [
            "Burstable",
            "GeneralPurpose",
            "MemoryOptimized"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true
          }
        }
      },
      "description": "Compute information of a server."
    },
    "MigrationNameAvailabilityReason": {
      "enum": [
        "Invalid",
        "AlreadyExists"
      ],
      "type": "string",
      "description": "Migration name availability reason.",
      "x-ms-enum": {
        "name": "MigrationNameAvailabilityReason",
        "modelAsString": true,
        "values": [
          {
            "value": "Invalid",
            "description": "Migration name is invalid."
          },
          {
            "value": "AlreadyExists",
            "description": "Migration name already exists."
          }
        ]
      }
    },
    "MigrationNameAvailability": {
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the migration to check for validity and availability."
        },
        "type": {
          "type": "string",
          "description": "Type of resource."
        },
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the migration name is available.",
          "readOnly": true
        },
        "reason": {
          "description": "Migration name availability reason.",
          "readOnly": true,
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "type": "string",
          "x-ms-enum": {
            "name": "MigrationNameAvailabilityReason",
            "modelAsString": true,
            "values": [
              {
                "value": "Invalid",
                "description": "Migration name is invalid."
              },
              {
                "value": "AlreadyExists",
                "description": "Migration name already exists."
              }
            ]
          }
        },
        "message": {
          "type": "string",
          "description": "Migration name availability message.",
          "readOnly": true
        }
      },
      "description": "Availability of a migration name."
    },
    "NameAvailabilityModel": {
      "type": "object",
      "properties": {
        "nameAvailable": {
          "type": "boolean",
          "description": "Indicates if the resource name is available."
        },
        "reason": {
          "type": "string",
          "description": "The reason why the given name is not available.",
          "enum": [
            "Invalid",
            "AlreadyExists"
          ],
          "x-ms-enum": {
            "name": "CheckNameAvailabilityReason",
            "modelAsString": true
          }
        },
        "message": {
          "type": "string",
          "description": "Detailed reason why the given name is available."
        },
        "name": {
          "type": "string",
          "description": "Name for which validity and availability was checked.",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "Type of resource. It can be 'Microsoft.DBforPostgreSQL/flexibleServers' or 'Microsoft.DBforPostgreSQL/flexibleServers/virtualendpoints'.",
          "readOnly": true
        }
      },
      "description": "Availability of a name."
    },
    "OperationDisplay": {
      "type": "object",
      "properties": {
        "provider": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the resource provider."
        },
        "resource": {
          "type": "string",
          "readOnly": true,
          "description": "Type of resource on which the operation is performed."
        },
        "operation": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the operation."
        },
        "description": {
          "type": "string",
          "readOnly": true,
          "description": "Description of the operation."
        }
      },
      "description": "Display metadata associated with the operation."
    },
    "Operation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the operation being performed on this particular object."
        },
        "display": {
          "readOnly": true,
          "description": "Localized display information for this particular operation or action.",
          "type": "object",
          "properties": {
            "provider": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the resource provider."
            },
            "resource": {
              "type": "string",
              "readOnly": true,
              "description": "Type of resource on which the operation is performed."
            },
            "operation": {
              "type": "string",
              "readOnly": true,
              "description": "Name of the operation."
            },
            "description": {
              "type": "string",
              "readOnly": true,
              "description": "Description of the operation."
            }
          }
        },
        "isDataAction": {
          "description": "Indicates if the operation is a data action.",
          "type": "boolean"
        },
        "origin": {
          "type": "string",
          "readOnly": true,
          "description": "Intended executor of the operation.",
          "enum": [
            "NotSpecified",
            "user",
            "system"
          ],
          "x-ms-enum": {
            "name": "OperationOrigin",
            "modelAsString": true,
            "values": [
              {
                "value": "NotSpecified",
                "description": "The origin is not specified."
              },
              {
                "value": "user",
                "description": "The operation is initiated by a user."
              },
              {
                "value": "system",
                "description": "The operation is initiated by the system."
              }
            ]
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "object"
          },
          "readOnly": true,
          "x-ms-client-flatten": false,
          "description": "Additional descriptions for the operation."
        }
      },
      "description": "REST API operation definition."
    },
    "OperationList": {
      "description": "List of resource provider operations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Collection of available operation details",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "readOnly": true,
                "description": "Name of the operation being performed on this particular object."
              },
              "display": {
                "readOnly": true,
                "description": "Localized display information for this particular operation or action.",
                "type": "object",
                "properties": {
                  "provider": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Name of the resource provider."
                  },
                  "resource": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Type of resource on which the operation is performed."
                  },
                  "operation": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Name of the operation."
                  },
                  "description": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Description of the operation."
                  }
                }
              },
              "isDataAction": {
                "description": "Indicates if the operation is a data action.",
                "type": "boolean"
              },
              "origin": {
                "type": "string",
                "readOnly": true,
                "description": "Intended executor of the operation.",
                "enum": [
                  "NotSpecified",
                  "user",
                  "system"
                ],
                "x-ms-enum": {
                  "name": "OperationOrigin",
                  "modelAsString": true,
                  "values": [
                    {
                      "value": "NotSpecified",
                      "description": "The origin is not specified."
                    },
                    {
                      "value": "user",
                      "description": "The operation is initiated by a user."
                    },
                    {
                      "value": "system",
                      "description": "The operation is initiated by the system."
                    }
                  ]
                }
              },
              "properties": {
                "type": "object",
                "additionalProperties": {
                  "type": "object"
                },
                "readOnly": true,
                "x-ms-client-flatten": false,
                "description": "Additional descriptions for the operation."
              }
            },
            "description": "REST API operation definition."
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string"
        }
      }
    },
    "PrivateDnsZoneSuffix": {
      "type": "string",
      "description": "Private DNS suffix."
    },
    "PrivateEndpointConnectionList": {
      "description": "List of private endpoint connections.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "The private endpoint connection resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupIds": {
                    "type": "array",
                    "description": "The group ids for the private endpoint resource.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "privateEndpoint": {
                    "description": "The private endpoint resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ARM identifier for private endpoint.",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "PrivateLinkResourceList": {
      "description": "A list of private link resources",
      "type": "object",
      "properties": {
        "value": {
          "description": "Array of results.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "A private link resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupId": {
                    "type": "string",
                    "description": "The private link resource group id.",
                    "readOnly": true
                  },
                  "requiredMembers": {
                    "type": "array",
                    "description": "The private link resource required member names.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "requiredZoneNames": {
                    "type": "array",
                    "description": "The private link resource private link DNS zone name.",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "QuotaUsage": {
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of quota usage for servers",
          "type": "object",
          "properties": {
            "value": {
              "type": "string",
              "description": "Name value"
            },
            "localizedValue": {
              "type": "string",
              "description": "Localized name"
            }
          }
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Quota limit"
        },
        "unit": {
          "type": "string",
          "description": "Quota unit",
          "default": "Count"
        },
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "description": "Current Quota usage value"
        },
        "id": {
          "type": "string",
          "description": "Fully qualified ARM resource Id"
        }
      },
      "description": "Quota usage for servers"
    },
    "NameProperty": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "Name value"
        },
        "localizedValue": {
          "type": "string",
          "description": "Localized name"
        }
      },
      "description": "Name property for quota usage"
    },
    "QuotaUsageList": {
      "type": "object",
      "properties": {
        "value": {
          "description": "A list of quota usages.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of quota usage for servers",
                "type": "object",
                "properties": {
                  "value": {
                    "type": "string",
                    "description": "Name value"
                  },
                  "localizedValue": {
                    "type": "string",
                    "description": "Localized name"
                  }
                }
              },
              "limit": {
                "type": "integer",
                "format": "int64",
                "description": "Quota limit"
              },
              "unit": {
                "type": "string",
                "description": "Quota unit",
                "default": "Count"
              },
              "currentValue": {
                "type": "integer",
                "format": "int64",
                "description": "Current Quota usage value"
              },
              "id": {
                "type": "string",
                "description": "Fully qualified ARM resource Id"
              }
            },
            "description": "Quota usage for servers"
          },
          "x-ms-identifiers": [
            "name"
          ],
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to retrieve next page of results.",
          "type": "string",
          "format": "uri"
        }
      },
      "description": "Capability for the PostgreSQL server"
    },
    "Replica": {
      "type": "object",
      "description": "Replica properties of a server.",
      "properties": {
        "role": {
          "description": "Role of the server in a replication set.",
          "type": "string",
          "enum": [
            "None",
            "Primary",
            "AsyncReplica",
            "GeoAsyncReplica"
          ],
          "x-ms-enum": {
            "name": "ReplicationRole",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "No replication role assigned; the server operates independently."
              },
              {
                "value": "Primary",
                "description": "Acts as the source server for replication to one or more replicas."
              },
              {
                "value": "AsyncReplica",
                "description": "Receives data asynchronously from a primary server within the same region."
              },
              {
                "value": "GeoAsyncReplica",
                "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
              }
            ]
          }
        },
        "capacity": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of read replicas allowed for a server.",
          "readOnly": true
        },
        "replicationState": {
          "type": "string",
          "enum": [
            "Active",
            "Catchup",
            "Provisioning",
            "Updating",
            "Broken",
            "Reconfiguring"
          ],
          "x-ms-enum": {
            "name": "ReplicationState",
            "modelAsString": true,
            "values": [
              {
                "value": "Active",
                "description": "Read replica is fully synchronized and actively replicating data from the primary server."
              },
              {
                "value": "Catchup",
                "description": "Read replica is behind the primary server and is currently catching up with pending changes."
              },
              {
                "value": "Provisioning",
                "description": "Read replica is being created and is in process of getting initialized."
              },
              {
                "value": "Updating",
                "description": "Read replica is undergoing some changes it can be changing compute size of promoting it to primary server."
              },
              {
                "value": "Broken",
                "description": "Replication has failed or been interrupted."
              },
              {
                "value": "Reconfiguring",
                "description": "Read replica is being reconfigured, possibly due to changes in source or settings."
              }
            ]
          },
          "description": "Indicates the replication state of a read replica. This property is returned only when the target server is a read replica. Possible  values are Active, Broken, Catchup, Provisioning, Reconfiguring, and Updating",
          "readOnly": true
        },
        "promoteMode": {
          "type": "string",
          "description": "Type of operation to apply on the read replica. This property is write only. Standalone means that the read replica will be promoted to a standalone server, and will become a completely independent entity from the replication set. Switchover means that the read replica will roles with the primary server.",
          "enum": [
            "Standalone",
            "Switchover"
          ],
          "x-ms-enum": {
            "name": "ReadReplicaPromoteMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Standalone",
                "description": "Read replica will become an independent server."
              },
              {
                "value": "Switchover",
                "description": "Read replica will swap roles with primary server."
              }
            ]
          },
          "x-ms-mutability": [
            "update"
          ]
        },
        "promoteOption": {
          "type": "string",
          "description": "Data synchronization option to use when processing the operation specified in the promoteMode property. This property is write only.",
          "enum": [
            "Planned",
            "Forced"
          ],
          "x-ms-enum": {
            "name": "ReadReplicaPromoteOption",
            "modelAsString": true,
            "values": [
              {
                "value": "Planned",
                "description": "The operation will wait for data in the read replica to be fully synchronized with its source server, before it initiates the operation."
              },
              {
                "value": "Forced",
                "description": "The operation will not wait for data in the read replica to be synchronized with its source server, before it initiates the operation."
              }
            ]
          },
          "x-ms-mutability": [
            "update"
          ]
        }
      }
    },
    "ServerProperties": {
      "type": "object",
      "properties": {
        "administratorLogin": {
          "type": "string",
          "description": "Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "administratorLoginPassword": {
          "type": "string",
          "description": "Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.",
          "x-ms-secret": true,
          "format": "password",
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "version": {
          "description": "Major version of PostgreSQL database engine.",
          "type": "string",
          "enum": [
            "18",
            "17",
            "16",
            "15",
            "14",
            "13",
            "12",
            "11"
          ],
          "x-ms-enum": {
            "name": "PostgresMajorVersion",
            "modelAsString": true,
            "values": [
              {
                "value": "18",
                "description": "PostgreSQL 18."
              },
              {
                "value": "17",
                "description": "PostgreSQL 17."
              },
              {
                "value": "16",
                "description": "PostgreSQL 16."
              },
              {
                "value": "15",
                "description": "PostgreSQL 15."
              },
              {
                "value": "14",
                "description": "PostgreSQL 14."
              },
              {
                "value": "13",
                "description": "PostgreSQL 13."
              },
              {
                "value": "12",
                "description": "PostgreSQL 12."
              },
              {
                "value": "11",
                "description": "PostgreSQL 11."
              }
            ]
          }
        },
        "minorVersion": {
          "type": "string",
          "description": "Minor version of PostgreSQL database engine.",
          "readOnly": true
        },
        "state": {
          "type": "string",
          "description": "Possible states of a server.",
          "readOnly": true,
          "enum": [
            "Ready",
            "Dropping",
            "Disabled",
            "Starting",
            "Stopping",
            "Stopped",
            "Updating",
            "Restarting",
            "Inaccessible",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "ServerState",
            "modelAsString": true,
            "values": [
              {
                "value": "Ready",
                "description": "Server is healthy and not undergoing any operations at the management or control plane level. This doesn't mean that the server is fully operational at the data plane level."
              },
              {
                "value": "Dropping",
                "description": "Server is being deleted."
              },
              {
                "value": "Disabled",
                "description": "Server is disabled. Typical reasons include: the subscription on which the server is deployed is explicitly disabled or canceled by the administrator, the spending limit has been reached, or the bill is past due. May also happen when the server is being moved to another resource group or subscription."
              },
              {
                "value": "Starting",
                "description": "PostgreSQL database engine is being restarted."
              },
              {
                "value": "Stopping",
                "description": "Compute resources associated with the server are being stopped and deallocated. If the server has high availability enabled, the compute resources of the standby server are also stopped and deallocated."
              },
              {
                "value": "Stopped",
                "description": "Compute resources associated with the server are being stopped and deallocated."
              },
              {
                "value": "Updating",
                "description": "Server is undergoing some changes which may or may not impact the availability of the PostgreSQL database engine. For example, the compute resources of the server are being scaled up or down, which may cause temporary unavailability of the database engine. Or, for example, a firewall rule is being added or removed, which doesn't cause any unavailability of the database engine."
              },
              {
                "value": "Restarting",
                "description": "PostgreSQL database engine is being restarted."
              },
              {
                "value": "Inaccessible",
                "description": "Server isn't accessible, because the key provided to encrypt and decrypt the data is in invalid state."
              },
              {
                "value": "Provisioning",
                "description": "Server is in the process of being created."
              }
            ]
          }
        },
        "fullyQualifiedDomainName": {
          "type": "string",
          "description": "Fully qualified domain name of a server.",
          "readOnly": true
        },
        "storage": {
          "default": null,
          "description": "Storage properties of a server.",
          "type": "object",
          "properties": {
            "storageSizeGB": {
              "type": "integer",
              "format": "int32",
              "description": "Size of storage assigned to a server."
            },
            "autoGrow": {
              "type": "string",
              "description": "Flag to enable or disable the automatic growth of storage size of a server when available space is nearing zero and conditions allow for automatically growing storage size.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "StorageAutoGrow",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Server should automatically grow storage size when available space is nearing zero and conditions allow for automatically growing storage size."
                  },
                  {
                    "value": "Disabled",
                    "description": "Server should not automatically grow storage size when available space is nearing zero."
                  }
                ]
              }
            },
            "tier": {
              "type": "string",
              "description": "Storage tier of a server.",
              "enum": [
                "P1",
                "P2",
                "P3",
                "P4",
                "P6",
                "P10",
                "P15",
                "P20",
                "P30",
                "P40",
                "P50",
                "P60",
                "P70",
                "P80"
              ],
              "x-ms-enum": {
                "name": "AzureManagedDiskPerformanceTier",
                "modelAsString": true,
                "values": [
                  {
                    "value": "P1",
                    "description": "Entry-level SSD for minimal IOPS, ideal for light development or testing workloads."
                  },
                  {
                    "value": "P2",
                    "description": "Slightly higher IOPS for small-scale applications needing consistent low latency."
                  },
                  {
                    "value": "P3",
                    "description": "Balanced performance for basic production workloads with moderate throughput."
                  },
                  {
                    "value": "P4",
                    "description": "Enhanced IOPS for growing apps with predictable performance needs."
                  },
                  {
                    "value": "P6",
                    "description": "Mid-tier SSD for steady workloads requiring reliable throughput and latency."
                  },
                  {
                    "value": "P10",
                    "description": "Popular choice for general-purpose production workloads with scalable performance."
                  },
                  {
                    "value": "P15",
                    "description": "High IOPS tier for demanding apps with frequent read/write operations."
                  },
                  {
                    "value": "P20",
                    "description": "Entry point for high-performance Solid State Disks (SSDs), suitable for small-scale I/O-intensive workloads."
                  },
                  {
                    "value": "P30",
                    "description": "Balanced tier for moderate throughput and latency-sensitive applications."
                  },
                  {
                    "value": "P40",
                    "description": "Enhanced performance for growing production workloads with consistent IOPS demands."
                  },
                  {
                    "value": "P50",
                    "description": "Optimized for enterprise-grade applications needing sustained high throughput."
                  },
                  {
                    "value": "P60",
                    "description": "High-capacity tier for large databases and analytics workloads with elevated IOPS."
                  },
                  {
                    "value": "P70",
                    "description": "Designed for mission-critical systems requiring ultra-low latency and high concurrency."
                  },
                  {
                    "value": "P80",
                    "description": "Top-tier SSD for maximum IOPS and throughput, ideal for the most demanding workloads."
                  }
                ]
              }
            },
            "iops": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
            },
            "throughput": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
            },
            "type": {
              "type": "string",
              "enum": [
                "Premium_LRS",
                "PremiumV2_LRS",
                "UltraSSD_LRS"
              ],
              "x-ms-enum": {
                "name": "StorageType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Premium_LRS",
                    "description": "Standard Solid State Disk (SSD) backed storage offering consistent performance for general purpose workloads."
                  },
                  {
                    "value": "PremiumV2_LRS",
                    "description": "Next generation Solid State Disk (SSD) storage with improved scalability and performance for demanding enterprise workloads."
                  },
                  {
                    "value": "UltraSSD_LRS",
                    "description": "High-end Solid State Disk (SSD) storage designed for extreme IOPS and latency-sensitive applications."
                  }
                ]
              },
              "description": "Type of storage assigned to a server. Allowed values are Premium_LRS, PremiumV2_LRS, or UltraSSD_LRS. If not specified, it defaults to Premium_LRS."
            }
          }
        },
        "authConfig": {
          "default": null,
          "description": "Authentication configuration properties of a server.",
          "type": "object",
          "properties": {
            "activeDirectoryAuth": {
              "type": "string",
              "description": "Indicates if the server supports Microsoft Entra authentication.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "MicrosoftEntraAuth",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Server supports Microsoft Entra authentication."
                  },
                  {
                    "value": "Disabled",
                    "description": "Server doesn't support Microsoft Entra authentication."
                  }
                ]
              }
            },
            "passwordAuth": {
              "type": "string",
              "default": "Enabled",
              "description": "Indicates if the server supports password based authentication.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PasswordBasedAuth",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Server supports password based authentication."
                  },
                  {
                    "value": "Disabled",
                    "description": "Server doesn't support password based authentication."
                  }
                ]
              }
            },
            "tenantId": {
              "type": "string",
              "default": "",
              "description": "Identifier of the tenant of the delegated resource."
            }
          }
        },
        "dataEncryption": {
          "default": null,
          "description": "Data encryption properties of a server.",
          "type": "object",
          "properties": {
            "primaryKeyURI": {
              "type": "string",
              "description": "URI of the key in Azure Key Vault used for data encryption of the primary storage associated to a server."
            },
            "primaryUserAssignedIdentityId": {
              "type": "string",
              "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the primary storage associated to a server."
            },
            "geoBackupKeyURI": {
              "type": "string",
              "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
            },
            "geoBackupUserAssignedIdentityId": {
              "type": "string",
              "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
            },
            "type": {
              "type": "string",
              "description": "Data encryption type used by a server.",
              "enum": [
                "SystemManaged",
                "AzureKeyVault"
              ],
              "x-ms-enum": {
                "name": "DataEncryptionType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "SystemManaged",
                    "description": "Encryption managed by Azure using platform managed keys for simplicity and compliance."
                  },
                  {
                    "value": "AzureKeyVault",
                    "description": "Encryption using customer managed keys stored in Azure Key Vault for enhanced control and security."
                  }
                ]
              }
            },
            "primaryEncryptionKeyStatus": {
              "type": "string",
              "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the primary storage associated to the server.",
              "x-ms-mutability": [
                "read"
              ],
              "enum": [
                "Valid",
                "Invalid"
              ],
              "x-ms-enum": {
                "name": "EncryptionKeyStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Valid",
                    "description": "Key is valid and can be used for encryption."
                  },
                  {
                    "value": "Invalid",
                    "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                  }
                ]
              }
            },
            "geoBackupEncryptionKeyStatus": {
              "type": "string",
              "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the geographically redundant storage associated to the server when it is configured to support geographically redundant backups.",
              "x-ms-mutability": [
                "read"
              ],
              "enum": [
                "Valid",
                "Invalid"
              ],
              "x-ms-enum": {
                "name": "EncryptionKeyStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Valid",
                    "description": "Key is valid and can be used for encryption."
                  },
                  {
                    "value": "Invalid",
                    "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                  }
                ]
              }
            }
          }
        },
        "backup": {
          "default": null,
          "description": "Backup properties of a server.",
          "type": "object",
          "properties": {
            "backupRetentionDays": {
              "type": "integer",
              "format": "int32",
              "default": 7,
              "description": "Backup retention days for the server."
            },
            "geoRedundantBackup": {
              "type": "string",
              "default": "Disabled",
              "description": "Indicates if the server is configured to create geographically redundant backups.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "GeographicallyRedundantBackup",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Server is configured to create geographically redundant backups."
                  },
                  {
                    "value": "Disabled",
                    "description": "Server is not configured to create geographically redundant backups."
                  }
                ]
              },
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "earliestRestoreDate": {
              "type": "string",
              "format": "date-time",
              "description": "Earliest restore point time (ISO8601 format) for a server.",
              "readOnly": true
            }
          }
        },
        "network": {
          "default": null,
          "description": "Network properties of a server. Only required if you want your server to be integrated into a virtual network provided by customer.",
          "type": "object",
          "properties": {
            "publicNetworkAccess": {
              "type": "string",
              "description": "Indicates if public network access is enabled or not. This is only supported for servers that are not integrated into a virtual network which is owned and provided by customer when server is deployed.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "ServerPublicNetworkAccessState",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Public network access is enabled. This allows the server to be accessed from the public internet, provided the necessary firewall rule that allows incoming traffic originating from the connecting client is in place. This is compatible with the use of private endpoints to connect to this server."
                  },
                  {
                    "value": "Disabled",
                    "description": "Public network access is disabled. This means the server cannot be accessed from the public internet, but only via private endpoints."
                  }
                ]
              }
            },
            "delegatedSubnetResourceId": {
              "type": "string",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                  }
                ]
              },
              "description": "Resource identifier of the delegated subnet. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
            },
            "privateDnsZoneArmResourceId": {
              "type": "string",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Network/privateDnsZones"
                  }
                ]
              },
              "description": "Identifier of the private DNS zone. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
            }
          }
        },
        "highAvailability": {
          "default": null,
          "description": "High availability properties of a server.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "default": "Disabled",
              "description": "High availability mode for a server.",
              "enum": [
                "Disabled",
                "ZoneRedundant",
                "SameZone"
              ],
              "x-ms-enum": {
                "name": "HighAvailabilityMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Disabled",
                    "description": "High availability is disabled for the server."
                  },
                  {
                    "value": "ZoneRedundant",
                    "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                  },
                  {
                    "value": "SameZone",
                    "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                  }
                ]
              }
            },
            "state": {
              "type": "string",
              "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
              "enum": [
                "NotEnabled",
                "CreatingStandby",
                "ReplicatingData",
                "FailingOver",
                "Healthy",
                "RemovingStandby"
              ],
              "x-ms-enum": {
                "name": "HighAvailabilityState",
                "modelAsString": true,
                "values": [
                  {
                    "value": "NotEnabled",
                    "description": "High availability is not enabled for the server."
                  },
                  {
                    "value": "CreatingStandby",
                    "description": "Standby server is being created."
                  },
                  {
                    "value": "ReplicatingData",
                    "description": "Data is being replicated to the standby server."
                  },
                  {
                    "value": "FailingOver",
                    "description": "Failover operation to the standby server is in progress."
                  },
                  {
                    "value": "Healthy",
                    "description": "Standby server is healthy and ready to take over in case of a failover."
                  },
                  {
                    "value": "RemovingStandby",
                    "description": "Standby server is being removed."
                  }
                ]
              },
              "readOnly": true
            },
            "standbyAvailabilityZone": {
              "type": "string",
              "default": "",
              "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
            }
          }
        },
        "maintenanceWindow": {
          "default": null,
          "description": "Maintenance window properties of a server.",
          "x-ms-mutability": [
            "update",
            "read"
          ],
          "type": "object",
          "properties": {
            "customWindow": {
              "type": "string",
              "default": "Disabled",
              "description": "Indicates whether custom window is enabled or disabled."
            },
            "startHour": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "description": "Start hour to be used for maintenance window."
            },
            "startMinute": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "description": "Start minute to be used for maintenance window."
            },
            "dayOfWeek": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "description": "Day of the week to be used for maintenance window."
            }
          }
        },
        "sourceServerResourceId": {
          "type": "string",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.DBforPostgreSQL/flexibleServers"
              }
            ]
          },
          "description": "Identifier of the server to be used as the source of the new server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target server is a read replica.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "pointInTimeUTC": {
          "type": "string",
          "format": "date-time",
          "description": "Creation time (in ISO8601 format) of the backup which you want to restore in the new server. It's required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', or 'ReviveDropped'.",
          "x-ms-mutability": [
            "create"
          ]
        },
        "availabilityZone": {
          "type": "string",
          "default": "",
          "description": "Availability zone of a server.",
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "replicationRole": {
          "description": "Role of the server in a replication set.",
          "type": "string",
          "enum": [
            "None",
            "Primary",
            "AsyncReplica",
            "GeoAsyncReplica"
          ],
          "x-ms-enum": {
            "name": "ReplicationRole",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "No replication role assigned; the server operates independently."
              },
              {
                "value": "Primary",
                "description": "Acts as the source server for replication to one or more replicas."
              },
              {
                "value": "AsyncReplica",
                "description": "Receives data asynchronously from a primary server within the same region."
              },
              {
                "value": "GeoAsyncReplica",
                "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
              }
            ]
          }
        },
        "replicaCapacity": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum number of read replicas allowed for a server.",
          "readOnly": true
        },
        "replica": {
          "description": "Read replica properties of a server. Required only in case that you want to promote a server.",
          "x-ms-mutability": [
            "read",
            "update"
          ],
          "type": "object",
          "properties": {
            "role": {
              "description": "Role of the server in a replication set.",
              "type": "string",
              "enum": [
                "None",
                "Primary",
                "AsyncReplica",
                "GeoAsyncReplica"
              ],
              "x-ms-enum": {
                "name": "ReplicationRole",
                "modelAsString": true,
                "values": [
                  {
                    "value": "None",
                    "description": "No replication role assigned; the server operates independently."
                  },
                  {
                    "value": "Primary",
                    "description": "Acts as the source server for replication to one or more replicas."
                  },
                  {
                    "value": "AsyncReplica",
                    "description": "Receives data asynchronously from a primary server within the same region."
                  },
                  {
                    "value": "GeoAsyncReplica",
                    "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                  }
                ]
              }
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of read replicas allowed for a server.",
              "readOnly": true
            },
            "replicationState": {
              "type": "string",
              "enum": [
                "Active",
                "Catchup",
                "Provisioning",
                "Updating",
                "Broken",
                "Reconfiguring"
              ],
              "x-ms-enum": {
                "name": "ReplicationState",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Active",
                    "description": "Read replica is fully synchronized and actively replicating data from the primary server."
                  },
                  {
                    "value": "Catchup",
                    "description": "Read replica is behind the primary server and is currently catching up with pending changes."
                  },
                  {
                    "value": "Provisioning",
                    "description": "Read replica is being created and is in process of getting initialized."
                  },
                  {
                    "value": "Updating",
                    "description": "Read replica is undergoing some changes it can be changing compute size of promoting it to primary server."
                  },
                  {
                    "value": "Broken",
                    "description": "Replication has failed or been interrupted."
                  },
                  {
                    "value": "Reconfiguring",
                    "description": "Read replica is being reconfigured, possibly due to changes in source or settings."
                  }
                ]
              },
              "description": "Indicates the replication state of a read replica. This property is returned only when the target server is a read replica. Possible  values are Active, Broken, Catchup, Provisioning, Reconfiguring, and Updating",
              "readOnly": true
            },
            "promoteMode": {
              "type": "string",
              "description": "Type of operation to apply on the read replica. This property is write only. Standalone means that the read replica will be promoted to a standalone server, and will become a completely independent entity from the replication set. Switchover means that the read replica will roles with the primary server.",
              "enum": [
                "Standalone",
                "Switchover"
              ],
              "x-ms-enum": {
                "name": "ReadReplicaPromoteMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Standalone",
                    "description": "Read replica will become an independent server."
                  },
                  {
                    "value": "Switchover",
                    "description": "Read replica will swap roles with primary server."
                  }
                ]
              },
              "x-ms-mutability": [
                "update"
              ]
            },
            "promoteOption": {
              "type": "string",
              "description": "Data synchronization option to use when processing the operation specified in the promoteMode property. This property is write only.",
              "enum": [
                "Planned",
                "Forced"
              ],
              "x-ms-enum": {
                "name": "ReadReplicaPromoteOption",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Planned",
                    "description": "The operation will wait for data in the read replica to be fully synchronized with its source server, before it initiates the operation."
                  },
                  {
                    "value": "Forced",
                    "description": "The operation will not wait for data in the read replica to be synchronized with its source server, before it initiates the operation."
                  }
                ]
              },
              "x-ms-mutability": [
                "update"
              ]
            }
          }
        },
        "createMode": {
          "type": "string",
          "description": "Creation mode of a new server.",
          "enum": [
            "Default",
            "Create",
            "Update",
            "PointInTimeRestore",
            "GeoRestore",
            "Replica",
            "ReviveDropped"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Default",
                "description": "If the operation is triggered on a non-existing server, it's equivalent to 'Create'. If the operation is triggered on an existing server, it's equivalent to 'Update'."
              },
              {
                "value": "Create",
                "description": "Operation creates a new server."
              },
              {
                "value": "Update",
                "description": "Operation updates an existing server."
              },
              {
                "value": "PointInTimeRestore",
                "description": "Operation restores an existing backup of an existing server. This operation creates a new server, and then restores on it the backup of an existing server at a specific point in time."
              },
              {
                "value": "GeoRestore",
                "description": "Operation restores an existing backup of an existing server, on the paired region of the existing server. This operation creates a new server on the paired region of the existing server, and then restores on it the backup of an existing server at a specific point in time, in a different region. This operation is only supported on existing servers that were created with geographically redundant backups enabled."
              },
              {
                "value": "Replica",
                "description": "Operation creates a replica of an existing server. This operation creates a new server, restores a base backup of the existing server (referred to as primary), and configures physical replication to asynchronously stream all changes which are recorded in the transaction log of the primary."
              },
              {
                "value": "ReviveDropped",
                "description": "Operation creates a new server, initialized with the backup of a server that was recently deleted."
              }
            ]
          },
          "x-ms-mutability": [
            "create",
            "update"
          ]
        },
        "privateEndpointConnections": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "The private endpoint connection resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupIds": {
                    "type": "array",
                    "description": "The group ids for the private endpoint resource.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "privateEndpoint": {
                    "description": "The private endpoint resource.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The ARM identifier for private endpoint.",
                        "readOnly": true
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "A collection of information about the state of the connection between service consumer and provider.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                        "type": "string",
                        "enum": [
                          "Pending",
                          "Approved",
                          "Rejected"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointServiceConnectionStatus",
                          "modelAsString": true
                        }
                      },
                      "description": {
                        "type": "string",
                        "description": "The reason for approval/rejection of the connection."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "A message indicating if changes on the service provider require any updates on the consumer."
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The provisioning state of the private endpoint connection resource.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Creating",
                      "Deleting",
                      "Failed"
                    ],
                    "x-ms-enum": {
                      "name": "PrivateEndpointConnectionProvisioningState",
                      "modelAsString": true
                    },
                    "readOnly": true
                  }
                },
                "required": [
                  "privateLinkServiceConnectionState"
                ]
              }
            }
          },
          "description": "List of private endpoint connections associated with the specified server.",
          "readOnly": true
        },
        "cluster": {
          "default": null,
          "description": "Cluster properties of a server.",
          "x-ms-mutability": [
            "create",
            "read",
            "update"
          ],
          "type": "object",
          "properties": {
            "clusterSize": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "description": "Number of nodes assigned to the elastic cluster."
            },
            "defaultDatabaseName": {
              "type": "string",
              "description": "Default database name for the elastic cluster."
            }
          }
        }
      },
      "description": "Properties of a server."
    },
    "Server": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "sku": {
          "description": "Compute tier and size of a server.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name by which is known a given compute size assigned to a server."
            },
            "tier": {
              "type": "string",
              "description": "Tier of the compute assigned to a server.",
              "enum": [
                "Burstable",
                "GeneralPurpose",
                "MemoryOptimized"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Burstable",
                    "description": "Cost-effective tier for infrequent CPU usage, ideal for development and testing workloads with low performance requirements."
                  },
                  {
                    "value": "GeneralPurpose",
                    "description": "Balanced compute and memory for most workloads, offering scalable performance and I/O throughput."
                  },
                  {
                    "value": "MemoryOptimized",
                    "description": "High memory-to-core ratio for demanding workloads needing fast in-memory processing and high concurrency."
                  }
                ]
              }
            }
          },
          "required": [
            "name",
            "tier"
          ]
        },
        "identity": {
          "description": "User assigned managed identities assigned to the server.",
          "type": "object",
          "properties": {
            "userAssignedIdentities": {
              "description": "Map of user assigned managed identities.",
              "type": "object",
              "additionalProperties": {
                "description": "User assigned managed identity associated with a server.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                  },
                  "clientId": {
                    "type": "string",
                    "description": "Identifier of the client of the service principal associated to the user assigned managed identity."
                  }
                }
              }
            },
            "principalId": {
              "type": "string",
              "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
            },
            "type": {
              "type": "string",
              "description": "Types of identities associated with a server.",
              "enum": [
                "None",
                "UserAssigned",
                "SystemAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "None",
                    "description": "No managed identity is assigned to the server."
                  },
                  {
                    "value": "UserAssigned",
                    "description": "One or more managed identities provided by the user are assigned to the server."
                  },
                  {
                    "value": "SystemAssigned",
                    "description": "Azure automatically creates and manages the identity associated to the lifecycle of the server."
                  },
                  {
                    "value": "SystemAssigned,UserAssigned",
                    "description": "Both system-assigned and user-assigned identities are assigned to the server."
                  }
                ]
              }
            },
            "tenantId": {
              "type": "string",
              "description": "Identifier of the tenant of a server.",
              "readOnly": true
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of a server.",
          "type": "object",
          "properties": {
            "administratorLogin": {
              "type": "string",
              "description": "Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "administratorLoginPassword": {
              "type": "string",
              "description": "Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.",
              "x-ms-secret": true,
              "format": "password",
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "version": {
              "description": "Major version of PostgreSQL database engine.",
              "type": "string",
              "enum": [
                "18",
                "17",
                "16",
                "15",
                "14",
                "13",
                "12",
                "11"
              ],
              "x-ms-enum": {
                "name": "PostgresMajorVersion",
                "modelAsString": true,
                "values": [
                  {
                    "value": "18",
                    "description": "PostgreSQL 18."
                  },
                  {
                    "value": "17",
                    "description": "PostgreSQL 17."
                  },
                  {
                    "value": "16",
                    "description": "PostgreSQL 16."
                  },
                  {
                    "value": "15",
                    "description": "PostgreSQL 15."
                  },
                  {
                    "value": "14",
                    "description": "PostgreSQL 14."
                  },
                  {
                    "value": "13",
                    "description": "PostgreSQL 13."
                  },
                  {
                    "value": "12",
                    "description": "PostgreSQL 12."
                  },
                  {
                    "value": "11",
                    "description": "PostgreSQL 11."
                  }
                ]
              }
            },
            "minorVersion": {
              "type": "string",
              "description": "Minor version of PostgreSQL database engine.",
              "readOnly": true
            },
            "state": {
              "type": "string",
              "description": "Possible states of a server.",
              "readOnly": true,
              "enum": [
                "Ready",
                "Dropping",
                "Disabled",
                "Starting",
                "Stopping",
                "Stopped",
                "Updating",
                "Restarting",
                "Inaccessible",
                "Provisioning"
              ],
              "x-ms-enum": {
                "name": "ServerState",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Ready",
                    "description": "Server is healthy and not undergoing any operations at the management or control plane level. This doesn't mean that the server is fully operational at the data plane level."
                  },
                  {
                    "value": "Dropping",
                    "description": "Server is being deleted."
                  },
                  {
                    "value": "Disabled",
                    "description": "Server is disabled. Typical reasons include: the subscription on which the server is deployed is explicitly disabled or canceled by the administrator, the spending limit has been reached, or the bill is past due. May also happen when the server is being moved to another resource group or subscription."
                  },
                  {
                    "value": "Starting",
                    "description": "PostgreSQL database engine is being restarted."
                  },
                  {
                    "value": "Stopping",
                    "description": "Compute resources associated with the server are being stopped and deallocated. If the server has high availability enabled, the compute resources of the standby server are also stopped and deallocated."
                  },
                  {
                    "value": "Stopped",
                    "description": "Compute resources associated with the server are being stopped and deallocated."
                  },
                  {
                    "value": "Updating",
                    "description": "Server is undergoing some changes which may or may not impact the availability of the PostgreSQL database engine. For example, the compute resources of the server are being scaled up or down, which may cause temporary unavailability of the database engine. Or, for example, a firewall rule is being added or removed, which doesn't cause any unavailability of the database engine."
                  },
                  {
                    "value": "Restarting",
                    "description": "PostgreSQL database engine is being restarted."
                  },
                  {
                    "value": "Inaccessible",
                    "description": "Server isn't accessible, because the key provided to encrypt and decrypt the data is in invalid state."
                  },
                  {
                    "value": "Provisioning",
                    "description": "Server is in the process of being created."
                  }
                ]
              }
            },
            "fullyQualifiedDomainName": {
              "type": "string",
              "description": "Fully qualified domain name of a server.",
              "readOnly": true
            },
            "storage": {
              "default": null,
              "description": "Storage properties of a server.",
              "type": "object",
              "properties": {
                "storageSizeGB": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Size of storage assigned to a server."
                },
                "autoGrow": {
                  "type": "string",
                  "description": "Flag to enable or disable the automatic growth of storage size of a server when available space is nearing zero and conditions allow for automatically growing storage size.",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "StorageAutoGrow",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Server should automatically grow storage size when available space is nearing zero and conditions allow for automatically growing storage size."
                      },
                      {
                        "value": "Disabled",
                        "description": "Server should not automatically grow storage size when available space is nearing zero."
                      }
                    ]
                  }
                },
                "tier": {
                  "type": "string",
                  "description": "Storage tier of a server.",
                  "enum": [
                    "P1",
                    "P2",
                    "P3",
                    "P4",
                    "P6",
                    "P10",
                    "P15",
                    "P20",
                    "P30",
                    "P40",
                    "P50",
                    "P60",
                    "P70",
                    "P80"
                  ],
                  "x-ms-enum": {
                    "name": "AzureManagedDiskPerformanceTier",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "P1",
                        "description": "Entry-level SSD for minimal IOPS, ideal for light development or testing workloads."
                      },
                      {
                        "value": "P2",
                        "description": "Slightly higher IOPS for small-scale applications needing consistent low latency."
                      },
                      {
                        "value": "P3",
                        "description": "Balanced performance for basic production workloads with moderate throughput."
                      },
                      {
                        "value": "P4",
                        "description": "Enhanced IOPS for growing apps with predictable performance needs."
                      },
                      {
                        "value": "P6",
                        "description": "Mid-tier SSD for steady workloads requiring reliable throughput and latency."
                      },
                      {
                        "value": "P10",
                        "description": "Popular choice for general-purpose production workloads with scalable performance."
                      },
                      {
                        "value": "P15",
                        "description": "High IOPS tier for demanding apps with frequent read/write operations."
                      },
                      {
                        "value": "P20",
                        "description": "Entry point for high-performance Solid State Disks (SSDs), suitable for small-scale I/O-intensive workloads."
                      },
                      {
                        "value": "P30",
                        "description": "Balanced tier for moderate throughput and latency-sensitive applications."
                      },
                      {
                        "value": "P40",
                        "description": "Enhanced performance for growing production workloads with consistent IOPS demands."
                      },
                      {
                        "value": "P50",
                        "description": "Optimized for enterprise-grade applications needing sustained high throughput."
                      },
                      {
                        "value": "P60",
                        "description": "High-capacity tier for large databases and analytics workloads with elevated IOPS."
                      },
                      {
                        "value": "P70",
                        "description": "Designed for mission-critical systems requiring ultra-low latency and high concurrency."
                      },
                      {
                        "value": "P80",
                        "description": "Top-tier SSD for maximum IOPS and throughput, ideal for the most demanding workloads."
                      }
                    ]
                  }
                },
                "iops": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                },
                "throughput": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Premium_LRS",
                    "PremiumV2_LRS",
                    "UltraSSD_LRS"
                  ],
                  "x-ms-enum": {
                    "name": "StorageType",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Premium_LRS",
                        "description": "Standard Solid State Disk (SSD) backed storage offering consistent performance for general purpose workloads."
                      },
                      {
                        "value": "PremiumV2_LRS",
                        "description": "Next generation Solid State Disk (SSD) storage with improved scalability and performance for demanding enterprise workloads."
                      },
                      {
                        "value": "UltraSSD_LRS",
                        "description": "High-end Solid State Disk (SSD) storage designed for extreme IOPS and latency-sensitive applications."
                      }
                    ]
                  },
                  "description": "Type of storage assigned to a server. Allowed values are Premium_LRS, PremiumV2_LRS, or UltraSSD_LRS. If not specified, it defaults to Premium_LRS."
                }
              }
            },
            "authConfig": {
              "default": null,
              "description": "Authentication configuration properties of a server.",
              "type": "object",
              "properties": {
                "activeDirectoryAuth": {
                  "type": "string",
                  "description": "Indicates if the server supports Microsoft Entra authentication.",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "MicrosoftEntraAuth",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Server supports Microsoft Entra authentication."
                      },
                      {
                        "value": "Disabled",
                        "description": "Server doesn't support Microsoft Entra authentication."
                      }
                    ]
                  }
                },
                "passwordAuth": {
                  "type": "string",
                  "default": "Enabled",
                  "description": "Indicates if the server supports password based authentication.",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "PasswordBasedAuth",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Server supports password based authentication."
                      },
                      {
                        "value": "Disabled",
                        "description": "Server doesn't support password based authentication."
                      }
                    ]
                  }
                },
                "tenantId": {
                  "type": "string",
                  "default": "",
                  "description": "Identifier of the tenant of the delegated resource."
                }
              }
            },
            "dataEncryption": {
              "default": null,
              "description": "Data encryption properties of a server.",
              "type": "object",
              "properties": {
                "primaryKeyURI": {
                  "type": "string",
                  "description": "URI of the key in Azure Key Vault used for data encryption of the primary storage associated to a server."
                },
                "primaryUserAssignedIdentityId": {
                  "type": "string",
                  "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the primary storage associated to a server."
                },
                "geoBackupKeyURI": {
                  "type": "string",
                  "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                },
                "geoBackupUserAssignedIdentityId": {
                  "type": "string",
                  "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                },
                "type": {
                  "type": "string",
                  "description": "Data encryption type used by a server.",
                  "enum": [
                    "SystemManaged",
                    "AzureKeyVault"
                  ],
                  "x-ms-enum": {
                    "name": "DataEncryptionType",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "SystemManaged",
                        "description": "Encryption managed by Azure using platform managed keys for simplicity and compliance."
                      },
                      {
                        "value": "AzureKeyVault",
                        "description": "Encryption using customer managed keys stored in Azure Key Vault for enhanced control and security."
                      }
                    ]
                  }
                },
                "primaryEncryptionKeyStatus": {
                  "type": "string",
                  "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the primary storage associated to the server.",
                  "x-ms-mutability": [
                    "read"
                  ],
                  "enum": [
                    "Valid",
                    "Invalid"
                  ],
                  "x-ms-enum": {
                    "name": "EncryptionKeyStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Valid",
                        "description": "Key is valid and can be used for encryption."
                      },
                      {
                        "value": "Invalid",
                        "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                      }
                    ]
                  }
                },
                "geoBackupEncryptionKeyStatus": {
                  "type": "string",
                  "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the geographically redundant storage associated to the server when it is configured to support geographically redundant backups.",
                  "x-ms-mutability": [
                    "read"
                  ],
                  "enum": [
                    "Valid",
                    "Invalid"
                  ],
                  "x-ms-enum": {
                    "name": "EncryptionKeyStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Valid",
                        "description": "Key is valid and can be used for encryption."
                      },
                      {
                        "value": "Invalid",
                        "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                      }
                    ]
                  }
                }
              }
            },
            "backup": {
              "default": null,
              "description": "Backup properties of a server.",
              "type": "object",
              "properties": {
                "backupRetentionDays": {
                  "type": "integer",
                  "format": "int32",
                  "default": 7,
                  "description": "Backup retention days for the server."
                },
                "geoRedundantBackup": {
                  "type": "string",
                  "default": "Disabled",
                  "description": "Indicates if the server is configured to create geographically redundant backups.",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "GeographicallyRedundantBackup",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Server is configured to create geographically redundant backups."
                      },
                      {
                        "value": "Disabled",
                        "description": "Server is not configured to create geographically redundant backups."
                      }
                    ]
                  },
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ]
                },
                "earliestRestoreDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Earliest restore point time (ISO8601 format) for a server.",
                  "readOnly": true
                }
              }
            },
            "network": {
              "default": null,
              "description": "Network properties of a server. Only required if you want your server to be integrated into a virtual network provided by customer.",
              "type": "object",
              "properties": {
                "publicNetworkAccess": {
                  "type": "string",
                  "description": "Indicates if public network access is enabled or not. This is only supported for servers that are not integrated into a virtual network which is owned and provided by customer when server is deployed.",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "ServerPublicNetworkAccessState",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Public network access is enabled. This allows the server to be accessed from the public internet, provided the necessary firewall rule that allows incoming traffic originating from the connecting client is in place. This is compatible with the use of private endpoints to connect to this server."
                      },
                      {
                        "value": "Disabled",
                        "description": "Public network access is disabled. This means the server cannot be accessed from the public internet, but only via private endpoints."
                      }
                    ]
                  }
                },
                "delegatedSubnetResourceId": {
                  "type": "string",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                      }
                    ]
                  },
                  "description": "Resource identifier of the delegated subnet. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                },
                "privateDnsZoneArmResourceId": {
                  "type": "string",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Network/privateDnsZones"
                      }
                    ]
                  },
                  "description": "Identifier of the private DNS zone. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                }
              }
            },
            "highAvailability": {
              "default": null,
              "description": "High availability properties of a server.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "default": "Disabled",
                  "description": "High availability mode for a server.",
                  "enum": [
                    "Disabled",
                    "ZoneRedundant",
                    "SameZone"
                  ],
                  "x-ms-enum": {
                    "name": "HighAvailabilityMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Disabled",
                        "description": "High availability is disabled for the server."
                      },
                      {
                        "value": "ZoneRedundant",
                        "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                      },
                      {
                        "value": "SameZone",
                        "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                      }
                    ]
                  }
                },
                "state": {
                  "type": "string",
                  "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
                  "enum": [
                    "NotEnabled",
                    "CreatingStandby",
                    "ReplicatingData",
                    "FailingOver",
                    "Healthy",
                    "RemovingStandby"
                  ],
                  "x-ms-enum": {
                    "name": "HighAvailabilityState",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "NotEnabled",
                        "description": "High availability is not enabled for the server."
                      },
                      {
                        "value": "CreatingStandby",
                        "description": "Standby server is being created."
                      },
                      {
                        "value": "ReplicatingData",
                        "description": "Data is being replicated to the standby server."
                      },
                      {
                        "value": "FailingOver",
                        "description": "Failover operation to the standby server is in progress."
                      },
                      {
                        "value": "Healthy",
                        "description": "Standby server is healthy and ready to take over in case of a failover."
                      },
                      {
                        "value": "RemovingStandby",
                        "description": "Standby server is being removed."
                      }
                    ]
                  },
                  "readOnly": true
                },
                "standbyAvailabilityZone": {
                  "type": "string",
                  "default": "",
                  "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
                }
              }
            },
            "maintenanceWindow": {
              "default": null,
              "description": "Maintenance window properties of a server.",
              "x-ms-mutability": [
                "update",
                "read"
              ],
              "type": "object",
              "properties": {
                "customWindow": {
                  "type": "string",
                  "default": "Disabled",
                  "description": "Indicates whether custom window is enabled or disabled."
                },
                "startHour": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "description": "Start hour to be used for maintenance window."
                },
                "startMinute": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "description": "Start minute to be used for maintenance window."
                },
                "dayOfWeek": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "description": "Day of the week to be used for maintenance window."
                }
              }
            },
            "sourceServerResourceId": {
              "type": "string",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.DBforPostgreSQL/flexibleServers"
                  }
                ]
              },
              "description": "Identifier of the server to be used as the source of the new server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target server is a read replica.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "pointInTimeUTC": {
              "type": "string",
              "format": "date-time",
              "description": "Creation time (in ISO8601 format) of the backup which you want to restore in the new server. It's required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', or 'ReviveDropped'.",
              "x-ms-mutability": [
                "create"
              ]
            },
            "availabilityZone": {
              "type": "string",
              "default": "",
              "description": "Availability zone of a server.",
              "x-ms-mutability": [
                "create",
                "read"
              ]
            },
            "replicationRole": {
              "description": "Role of the server in a replication set.",
              "type": "string",
              "enum": [
                "None",
                "Primary",
                "AsyncReplica",
                "GeoAsyncReplica"
              ],
              "x-ms-enum": {
                "name": "ReplicationRole",
                "modelAsString": true,
                "values": [
                  {
                    "value": "None",
                    "description": "No replication role assigned; the server operates independently."
                  },
                  {
                    "value": "Primary",
                    "description": "Acts as the source server for replication to one or more replicas."
                  },
                  {
                    "value": "AsyncReplica",
                    "description": "Receives data asynchronously from a primary server within the same region."
                  },
                  {
                    "value": "GeoAsyncReplica",
                    "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                  }
                ]
              }
            },
            "replicaCapacity": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of read replicas allowed for a server.",
              "readOnly": true
            },
            "replica": {
              "description": "Read replica properties of a server. Required only in case that you want to promote a server.",
              "x-ms-mutability": [
                "read",
                "update"
              ],
              "type": "object",
              "properties": {
                "role": {
                  "description": "Role of the server in a replication set.",
                  "type": "string",
                  "enum": [
                    "None",
                    "Primary",
                    "AsyncReplica",
                    "GeoAsyncReplica"
                  ],
                  "x-ms-enum": {
                    "name": "ReplicationRole",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "None",
                        "description": "No replication role assigned; the server operates independently."
                      },
                      {
                        "value": "Primary",
                        "description": "Acts as the source server for replication to one or more replicas."
                      },
                      {
                        "value": "AsyncReplica",
                        "description": "Receives data asynchronously from a primary server within the same region."
                      },
                      {
                        "value": "GeoAsyncReplica",
                        "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                      }
                    ]
                  }
                },
                "capacity": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum number of read replicas allowed for a server.",
                  "readOnly": true
                },
                "replicationState": {
                  "type": "string",
                  "enum": [
                    "Active",
                    "Catchup",
                    "Provisioning",
                    "Updating",
                    "Broken",
                    "Reconfiguring"
                  ],
                  "x-ms-enum": {
                    "name": "ReplicationState",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Active",
                        "description": "Read replica is fully synchronized and actively replicating data from the primary server."
                      },
                      {
                        "value": "Catchup",
                        "description": "Read replica is behind the primary server and is currently catching up with pending changes."
                      },
                      {
                        "value": "Provisioning",
                        "description": "Read replica is being created and is in process of getting initialized."
                      },
                      {
                        "value": "Updating",
                        "description": "Read replica is undergoing some changes it can be changing compute size of promoting it to primary server."
                      },
                      {
                        "value": "Broken",
                        "description": "Replication has failed or been interrupted."
                      },
                      {
                        "value": "Reconfiguring",
                        "description": "Read replica is being reconfigured, possibly due to changes in source or settings."
                      }
                    ]
                  },
                  "description": "Indicates the replication state of a read replica. This property is returned only when the target server is a read replica. Possible  values are Active, Broken, Catchup, Provisioning, Reconfiguring, and Updating",
                  "readOnly": true
                },
                "promoteMode": {
                  "type": "string",
                  "description": "Type of operation to apply on the read replica. This property is write only. Standalone means that the read replica will be promoted to a standalone server, and will become a completely independent entity from the replication set. Switchover means that the read replica will roles with the primary server.",
                  "enum": [
                    "Standalone",
                    "Switchover"
                  ],
                  "x-ms-enum": {
                    "name": "ReadReplicaPromoteMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Standalone",
                        "description": "Read replica will become an independent server."
                      },
                      {
                        "value": "Switchover",
                        "description": "Read replica will swap roles with primary server."
                      }
                    ]
                  },
                  "x-ms-mutability": [
                    "update"
                  ]
                },
                "promoteOption": {
                  "type": "string",
                  "description": "Data synchronization option to use when processing the operation specified in the promoteMode property. This property is write only.",
                  "enum": [
                    "Planned",
                    "Forced"
                  ],
                  "x-ms-enum": {
                    "name": "ReadReplicaPromoteOption",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Planned",
                        "description": "The operation will wait for data in the read replica to be fully synchronized with its source server, before it initiates the operation."
                      },
                      {
                        "value": "Forced",
                        "description": "The operation will not wait for data in the read replica to be synchronized with its source server, before it initiates the operation."
                      }
                    ]
                  },
                  "x-ms-mutability": [
                    "update"
                  ]
                }
              }
            },
            "createMode": {
              "type": "string",
              "description": "Creation mode of a new server.",
              "enum": [
                "Default",
                "Create",
                "Update",
                "PointInTimeRestore",
                "GeoRestore",
                "Replica",
                "ReviveDropped"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Default",
                    "description": "If the operation is triggered on a non-existing server, it's equivalent to 'Create'. If the operation is triggered on an existing server, it's equivalent to 'Update'."
                  },
                  {
                    "value": "Create",
                    "description": "Operation creates a new server."
                  },
                  {
                    "value": "Update",
                    "description": "Operation updates an existing server."
                  },
                  {
                    "value": "PointInTimeRestore",
                    "description": "Operation restores an existing backup of an existing server. This operation creates a new server, and then restores on it the backup of an existing server at a specific point in time."
                  },
                  {
                    "value": "GeoRestore",
                    "description": "Operation restores an existing backup of an existing server, on the paired region of the existing server. This operation creates a new server on the paired region of the existing server, and then restores on it the backup of an existing server at a specific point in time, in a different region. This operation is only supported on existing servers that were created with geographically redundant backups enabled."
                  },
                  {
                    "value": "Replica",
                    "description": "Operation creates a replica of an existing server. This operation creates a new server, restores a base backup of the existing server (referred to as primary), and configures physical replication to asynchronously stream all changes which are recorded in the transaction log of the primary."
                  },
                  {
                    "value": "ReviveDropped",
                    "description": "Operation creates a new server, initialized with the backup of a server that was recently deleted."
                  }
                ]
              },
              "x-ms-mutability": [
                "create",
                "update"
              ]
            },
            "privateEndpointConnections": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "The private endpoint connection resource.",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                    "readOnly": true
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the resource",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                    "readOnly": true
                  },
                  "systemData": {
                    "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "createdBy": {
                        "type": "string",
                        "description": "The identity that created the resource."
                      },
                      "createdByType": {
                        "type": "string",
                        "description": "The type of identity that created the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource creation (UTC)."
                      },
                      "lastModifiedBy": {
                        "type": "string",
                        "description": "The identity that last modified the resource."
                      },
                      "lastModifiedByType": {
                        "type": "string",
                        "description": "The type of identity that last modified the resource.",
                        "enum": [
                          "User",
                          "Application",
                          "ManagedIdentity",
                          "Key"
                        ],
                        "x-ms-enum": {
                          "name": "createdByType",
                          "modelAsString": true
                        }
                      },
                      "lastModifiedAt": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The timestamp of resource last modification (UTC)"
                      }
                    }
                  },
                  "properties": {
                    "description": "Resource properties.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "groupIds": {
                        "type": "array",
                        "description": "The group ids for the private endpoint resource.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "privateEndpoint": {
                        "description": "The private endpoint resource.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ARM identifier for private endpoint.",
                            "readOnly": true
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "A collection of information about the state of the connection between service consumer and provider.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                            "type": "string",
                            "enum": [
                              "Pending",
                              "Approved",
                              "Rejected"
                            ],
                            "x-ms-enum": {
                              "name": "PrivateEndpointServiceConnectionStatus",
                              "modelAsString": true
                            }
                          },
                          "description": {
                            "type": "string",
                            "description": "The reason for approval/rejection of the connection."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "A message indicating if changes on the service provider require any updates on the consumer."
                          }
                        }
                      },
                      "provisioningState": {
                        "description": "The provisioning state of the private endpoint connection resource.",
                        "type": "string",
                        "enum": [
                          "Succeeded",
                          "Creating",
                          "Deleting",
                          "Failed"
                        ],
                        "x-ms-enum": {
                          "name": "PrivateEndpointConnectionProvisioningState",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    },
                    "required": [
                      "privateLinkServiceConnectionState"
                    ]
                  }
                }
              },
              "description": "List of private endpoint connections associated with the specified server.",
              "readOnly": true
            },
            "cluster": {
              "default": null,
              "description": "Cluster properties of a server.",
              "x-ms-mutability": [
                "create",
                "read",
                "update"
              ],
              "type": "object",
              "properties": {
                "clusterSize": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "description": "Number of nodes assigned to the elastic cluster."
                },
                "defaultDatabaseName": {
                  "type": "string",
                  "description": "Default database name for the elastic cluster."
                }
              }
            }
          }
        }
      },
      "description": "Properties of a server."
    },
    "ServerPropertiesForPatch": {
      "type": "object",
      "properties": {
        "administratorLogin": {
          "type": "string",
          "description": "Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.",
          "x-ms-mutability": [
            "read"
          ]
        },
        "administratorLoginPassword": {
          "type": "string",
          "description": "Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.",
          "x-ms-secret": true,
          "format": "password",
          "x-ms-mutability": [
            "update"
          ]
        },
        "version": {
          "description": "Major version of PostgreSQL database engine.",
          "type": "string",
          "enum": [
            "18",
            "17",
            "16",
            "15",
            "14",
            "13",
            "12",
            "11"
          ],
          "x-ms-enum": {
            "name": "PostgresMajorVersion",
            "modelAsString": true,
            "values": [
              {
                "value": "18",
                "description": "PostgreSQL 18."
              },
              {
                "value": "17",
                "description": "PostgreSQL 17."
              },
              {
                "value": "16",
                "description": "PostgreSQL 16."
              },
              {
                "value": "15",
                "description": "PostgreSQL 15."
              },
              {
                "value": "14",
                "description": "PostgreSQL 14."
              },
              {
                "value": "13",
                "description": "PostgreSQL 13."
              },
              {
                "value": "12",
                "description": "PostgreSQL 12."
              },
              {
                "value": "11",
                "description": "PostgreSQL 11."
              }
            ]
          }
        },
        "storage": {
          "default": null,
          "description": "Storage properties of a server.",
          "type": "object",
          "properties": {
            "storageSizeGB": {
              "type": "integer",
              "format": "int32",
              "description": "Size of storage assigned to a server."
            },
            "autoGrow": {
              "type": "string",
              "description": "Flag to enable or disable the automatic growth of storage size of a server when available space is nearing zero and conditions allow for automatically growing storage size.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "StorageAutoGrow",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Server should automatically grow storage size when available space is nearing zero and conditions allow for automatically growing storage size."
                  },
                  {
                    "value": "Disabled",
                    "description": "Server should not automatically grow storage size when available space is nearing zero."
                  }
                ]
              }
            },
            "tier": {
              "type": "string",
              "description": "Storage tier of a server.",
              "enum": [
                "P1",
                "P2",
                "P3",
                "P4",
                "P6",
                "P10",
                "P15",
                "P20",
                "P30",
                "P40",
                "P50",
                "P60",
                "P70",
                "P80"
              ],
              "x-ms-enum": {
                "name": "AzureManagedDiskPerformanceTier",
                "modelAsString": true,
                "values": [
                  {
                    "value": "P1",
                    "description": "Entry-level SSD for minimal IOPS, ideal for light development or testing workloads."
                  },
                  {
                    "value": "P2",
                    "description": "Slightly higher IOPS for small-scale applications needing consistent low latency."
                  },
                  {
                    "value": "P3",
                    "description": "Balanced performance for basic production workloads with moderate throughput."
                  },
                  {
                    "value": "P4",
                    "description": "Enhanced IOPS for growing apps with predictable performance needs."
                  },
                  {
                    "value": "P6",
                    "description": "Mid-tier SSD for steady workloads requiring reliable throughput and latency."
                  },
                  {
                    "value": "P10",
                    "description": "Popular choice for general-purpose production workloads with scalable performance."
                  },
                  {
                    "value": "P15",
                    "description": "High IOPS tier for demanding apps with frequent read/write operations."
                  },
                  {
                    "value": "P20",
                    "description": "Entry point for high-performance Solid State Disks (SSDs), suitable for small-scale I/O-intensive workloads."
                  },
                  {
                    "value": "P30",
                    "description": "Balanced tier for moderate throughput and latency-sensitive applications."
                  },
                  {
                    "value": "P40",
                    "description": "Enhanced performance for growing production workloads with consistent IOPS demands."
                  },
                  {
                    "value": "P50",
                    "description": "Optimized for enterprise-grade applications needing sustained high throughput."
                  },
                  {
                    "value": "P60",
                    "description": "High-capacity tier for large databases and analytics workloads with elevated IOPS."
                  },
                  {
                    "value": "P70",
                    "description": "Designed for mission-critical systems requiring ultra-low latency and high concurrency."
                  },
                  {
                    "value": "P80",
                    "description": "Top-tier SSD for maximum IOPS and throughput, ideal for the most demanding workloads."
                  }
                ]
              }
            },
            "iops": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
            },
            "throughput": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
            },
            "type": {
              "type": "string",
              "enum": [
                "Premium_LRS",
                "PremiumV2_LRS",
                "UltraSSD_LRS"
              ],
              "x-ms-enum": {
                "name": "StorageType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Premium_LRS",
                    "description": "Standard Solid State Disk (SSD) backed storage offering consistent performance for general purpose workloads."
                  },
                  {
                    "value": "PremiumV2_LRS",
                    "description": "Next generation Solid State Disk (SSD) storage with improved scalability and performance for demanding enterprise workloads."
                  },
                  {
                    "value": "UltraSSD_LRS",
                    "description": "High-end Solid State Disk (SSD) storage designed for extreme IOPS and latency-sensitive applications."
                  }
                ]
              },
              "description": "Type of storage assigned to a server. Allowed values are Premium_LRS, PremiumV2_LRS, or UltraSSD_LRS. If not specified, it defaults to Premium_LRS."
            }
          }
        },
        "backup": {
          "default": null,
          "description": "Backup properties of a server.",
          "type": "object",
          "properties": {
            "backupRetentionDays": {
              "type": "integer",
              "format": "int32",
              "description": "Backup retention days for the server."
            },
            "geoRedundantBackup": {
              "type": "string",
              "description": "Indicates if the server is configured to create geographically redundant backups.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "GeographicallyRedundantBackup",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Server is configured to create geographically redundant backups."
                  },
                  {
                    "value": "Disabled",
                    "description": "Server is not configured to create geographically redundant backups."
                  }
                ]
              },
              "x-ms-mutability": [
                "read"
              ]
            },
            "earliestRestoreDate": {
              "type": "string",
              "format": "date-time",
              "description": "Earliest restore point time (ISO8601 format) for a server.",
              "readOnly": true
            }
          }
        },
        "highAvailability": {
          "default": null,
          "description": "High availability properties of a server.",
          "type": "object",
          "properties": {
            "mode": {
              "type": "string",
              "description": "High availability mode for a server.",
              "enum": [
                "Disabled",
                "ZoneRedundant",
                "SameZone"
              ],
              "x-ms-enum": {
                "name": "HighAvailabilityMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Disabled",
                    "description": "High availability is disabled for the server."
                  },
                  {
                    "value": "ZoneRedundant",
                    "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                  },
                  {
                    "value": "SameZone",
                    "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                  }
                ]
              }
            },
            "state": {
              "type": "string",
              "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
              "enum": [
                "NotEnabled",
                "CreatingStandby",
                "ReplicatingData",
                "FailingOver",
                "Healthy",
                "RemovingStandby"
              ],
              "x-ms-enum": {
                "name": "HighAvailabilityState",
                "modelAsString": true,
                "values": [
                  {
                    "value": "NotEnabled",
                    "description": "High availability is not enabled for the server."
                  },
                  {
                    "value": "CreatingStandby",
                    "description": "Standby server is being created."
                  },
                  {
                    "value": "ReplicatingData",
                    "description": "Data is being replicated to the standby server."
                  },
                  {
                    "value": "FailingOver",
                    "description": "Failover operation to the standby server is in progress."
                  },
                  {
                    "value": "Healthy",
                    "description": "Standby server is healthy and ready to take over in case of a failover."
                  },
                  {
                    "value": "RemovingStandby",
                    "description": "Standby server is being removed."
                  }
                ]
              },
              "readOnly": true
            },
            "standbyAvailabilityZone": {
              "type": "string",
              "default": "",
              "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
            }
          }
        },
        "maintenanceWindow": {
          "default": null,
          "description": "Maintenance window properties of a server.",
          "x-ms-mutability": [
            "update",
            "read"
          ],
          "type": "object",
          "properties": {
            "customWindow": {
              "type": "string",
              "description": "Indicates whether custom window is enabled or disabled."
            },
            "startHour": {
              "type": "integer",
              "format": "int32",
              "description": "Start hour to be used for maintenance window."
            },
            "startMinute": {
              "type": "integer",
              "format": "int32",
              "description": "Start minute to be used for maintenance window."
            },
            "dayOfWeek": {
              "type": "integer",
              "format": "int32",
              "description": "Day of the week to be used for maintenance window."
            }
          }
        },
        "authConfig": {
          "default": null,
          "description": "Authentication configuration properties of a server.",
          "type": "object",
          "properties": {
            "activeDirectoryAuth": {
              "type": "string",
              "description": "Indicates if the server supports Microsoft Entra authentication.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "MicrosoftEntraAuth",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Server supports Microsoft Entra authentication."
                  },
                  {
                    "value": "Disabled",
                    "description": "Server doesn't support Microsoft Entra authentication."
                  }
                ]
              }
            },
            "passwordAuth": {
              "type": "string",
              "description": "Indicates if the server supports password based authentication.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "PasswordBasedAuth",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Server supports password based authentication."
                  },
                  {
                    "value": "Disabled",
                    "description": "Server doesn't support password based authentication."
                  }
                ]
              }
            },
            "tenantId": {
              "type": "string",
              "description": "Identifier of the tenant of the delegated resource."
            }
          }
        },
        "dataEncryption": {
          "default": null,
          "description": "Data encryption properties of a server.",
          "type": "object",
          "properties": {
            "primaryKeyURI": {
              "type": "string",
              "description": "URI of the key in Azure Key Vault used for data encryption of the primary storage associated to a server."
            },
            "primaryUserAssignedIdentityId": {
              "type": "string",
              "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the primary storage associated to a server."
            },
            "geoBackupKeyURI": {
              "type": "string",
              "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
            },
            "geoBackupUserAssignedIdentityId": {
              "type": "string",
              "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
            },
            "type": {
              "type": "string",
              "description": "Data encryption type used by a server.",
              "enum": [
                "SystemManaged",
                "AzureKeyVault"
              ],
              "x-ms-enum": {
                "name": "DataEncryptionType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "SystemManaged",
                    "description": "Encryption managed by Azure using platform managed keys for simplicity and compliance."
                  },
                  {
                    "value": "AzureKeyVault",
                    "description": "Encryption using customer managed keys stored in Azure Key Vault for enhanced control and security."
                  }
                ]
              }
            },
            "primaryEncryptionKeyStatus": {
              "type": "string",
              "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the primary storage associated to the server.",
              "x-ms-mutability": [
                "read"
              ],
              "enum": [
                "Valid",
                "Invalid"
              ],
              "x-ms-enum": {
                "name": "EncryptionKeyStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Valid",
                    "description": "Key is valid and can be used for encryption."
                  },
                  {
                    "value": "Invalid",
                    "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                  }
                ]
              }
            },
            "geoBackupEncryptionKeyStatus": {
              "type": "string",
              "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the geographically redundant storage associated to the server when it is configured to support geographically redundant backups.",
              "x-ms-mutability": [
                "read"
              ],
              "enum": [
                "Valid",
                "Invalid"
              ],
              "x-ms-enum": {
                "name": "EncryptionKeyStatus",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Valid",
                    "description": "Key is valid and can be used for encryption."
                  },
                  {
                    "value": "Invalid",
                    "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                  }
                ]
              }
            }
          }
        },
        "createMode": {
          "type": "string",
          "description": "Update mode of an existing server.",
          "enum": [
            "Default",
            "Update"
          ],
          "x-ms-enum": {
            "name": "CreateModeForPatch",
            "modelAsString": true,
            "values": [
              {
                "value": "Default",
                "description": "It's equivalent to 'Update'."
              },
              {
                "value": "Update",
                "description": "Operation updates an existing server."
              }
            ]
          },
          "x-ms-mutability": [
            "update"
          ]
        },
        "replicationRole": {
          "description": "Role of the server in a replication set.",
          "type": "string",
          "enum": [
            "None",
            "Primary",
            "AsyncReplica",
            "GeoAsyncReplica"
          ],
          "x-ms-enum": {
            "name": "ReplicationRole",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "No replication role assigned; the server operates independently."
              },
              {
                "value": "Primary",
                "description": "Acts as the source server for replication to one or more replicas."
              },
              {
                "value": "AsyncReplica",
                "description": "Receives data asynchronously from a primary server within the same region."
              },
              {
                "value": "GeoAsyncReplica",
                "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
              }
            ]
          }
        },
        "replica": {
          "description": "Read replica properties of a server. Required only in case that you want to promote a server.",
          "x-ms-mutability": [
            "read",
            "update"
          ],
          "type": "object",
          "properties": {
            "role": {
              "description": "Role of the server in a replication set.",
              "type": "string",
              "enum": [
                "None",
                "Primary",
                "AsyncReplica",
                "GeoAsyncReplica"
              ],
              "x-ms-enum": {
                "name": "ReplicationRole",
                "modelAsString": true,
                "values": [
                  {
                    "value": "None",
                    "description": "No replication role assigned; the server operates independently."
                  },
                  {
                    "value": "Primary",
                    "description": "Acts as the source server for replication to one or more replicas."
                  },
                  {
                    "value": "AsyncReplica",
                    "description": "Receives data asynchronously from a primary server within the same region."
                  },
                  {
                    "value": "GeoAsyncReplica",
                    "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                  }
                ]
              }
            },
            "capacity": {
              "type": "integer",
              "format": "int32",
              "description": "Maximum number of read replicas allowed for a server.",
              "readOnly": true
            },
            "replicationState": {
              "type": "string",
              "enum": [
                "Active",
                "Catchup",
                "Provisioning",
                "Updating",
                "Broken",
                "Reconfiguring"
              ],
              "x-ms-enum": {
                "name": "ReplicationState",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Active",
                    "description": "Read replica is fully synchronized and actively replicating data from the primary server."
                  },
                  {
                    "value": "Catchup",
                    "description": "Read replica is behind the primary server and is currently catching up with pending changes."
                  },
                  {
                    "value": "Provisioning",
                    "description": "Read replica is being created and is in process of getting initialized."
                  },
                  {
                    "value": "Updating",
                    "description": "Read replica is undergoing some changes it can be changing compute size of promoting it to primary server."
                  },
                  {
                    "value": "Broken",
                    "description": "Replication has failed or been interrupted."
                  },
                  {
                    "value": "Reconfiguring",
                    "description": "Read replica is being reconfigured, possibly due to changes in source or settings."
                  }
                ]
              },
              "description": "Indicates the replication state of a read replica. This property is returned only when the target server is a read replica. Possible  values are Active, Broken, Catchup, Provisioning, Reconfiguring, and Updating",
              "readOnly": true
            },
            "promoteMode": {
              "type": "string",
              "description": "Type of operation to apply on the read replica. This property is write only. Standalone means that the read replica will be promoted to a standalone server, and will become a completely independent entity from the replication set. Switchover means that the read replica will roles with the primary server.",
              "enum": [
                "Standalone",
                "Switchover"
              ],
              "x-ms-enum": {
                "name": "ReadReplicaPromoteMode",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Standalone",
                    "description": "Read replica will become an independent server."
                  },
                  {
                    "value": "Switchover",
                    "description": "Read replica will swap roles with primary server."
                  }
                ]
              },
              "x-ms-mutability": [
                "update"
              ]
            },
            "promoteOption": {
              "type": "string",
              "description": "Data synchronization option to use when processing the operation specified in the promoteMode property. This property is write only.",
              "enum": [
                "Planned",
                "Forced"
              ],
              "x-ms-enum": {
                "name": "ReadReplicaPromoteOption",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Planned",
                    "description": "The operation will wait for data in the read replica to be fully synchronized with its source server, before it initiates the operation."
                  },
                  {
                    "value": "Forced",
                    "description": "The operation will not wait for data in the read replica to be synchronized with its source server, before it initiates the operation."
                  }
                ]
              },
              "x-ms-mutability": [
                "update"
              ]
            }
          }
        },
        "network": {
          "default": null,
          "description": "Network properties of a server. Only required if you want your server to be integrated into a virtual network provided by customer.",
          "type": "object",
          "properties": {
            "publicNetworkAccess": {
              "type": "string",
              "description": "Indicates if public network access is enabled or not. This is only supported for servers that are not integrated into a virtual network which is owned and provided by customer when server is deployed.",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "ServerPublicNetworkAccessState",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Enabled",
                    "description": "Public network access is enabled. This allows the server to be accessed from the public internet, provided the necessary firewall rule that allows incoming traffic originating from the connecting client is in place. This is compatible with the use of private endpoints to connect to this server."
                  },
                  {
                    "value": "Disabled",
                    "description": "Public network access is disabled. This means the server cannot be accessed from the public internet, but only via private endpoints."
                  }
                ]
              }
            },
            "delegatedSubnetResourceId": {
              "type": "string",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Network/virtualNetworks/subnets"
                  }
                ]
              },
              "description": "Resource identifier of the delegated subnet. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
            },
            "privateDnsZoneArmResourceId": {
              "type": "string",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Network/privateDnsZones"
                  }
                ]
              },
              "description": "Identifier of the private DNS zone. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
            }
          }
        },
        "cluster": {
          "default": null,
          "description": "Cluster properties of a server.",
          "x-ms-mutability": [
            "read",
            "update"
          ],
          "type": "object",
          "properties": {
            "clusterSize": {
              "type": "integer",
              "format": "int32",
              "default": 0,
              "description": "Number of nodes assigned to the elastic cluster."
            },
            "defaultDatabaseName": {
              "type": "string",
              "description": "Default database name for the elastic cluster."
            }
          }
        }
      },
      "description": "Properties of a server."
    },
    "ServerForPatch": {
      "type": "object",
      "properties": {
        "sku": {
          "description": "Compute tier and size of a server.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "Name by which is known a given compute size assigned to a server."
            },
            "tier": {
              "type": "string",
              "description": "Tier of the compute assigned to a server.",
              "enum": [
                "Burstable",
                "GeneralPurpose",
                "MemoryOptimized"
              ],
              "x-ms-enum": {
                "name": "SkuTier",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Burstable",
                    "description": "Cost-effective tier for infrequent CPU usage, ideal for development and testing workloads with low performance requirements."
                  },
                  {
                    "value": "GeneralPurpose",
                    "description": "Balanced compute and memory for most workloads, offering scalable performance and I/O throughput."
                  },
                  {
                    "value": "MemoryOptimized",
                    "description": "High memory-to-core ratio for demanding workloads needing fast in-memory processing and high concurrency."
                  }
                ]
              }
            }
          }
        },
        "identity": {
          "description": "Describes the identity of the application.",
          "type": "object",
          "properties": {
            "userAssignedIdentities": {
              "description": "Map of user assigned managed identities.",
              "type": "object",
              "additionalProperties": {
                "description": "User assigned managed identity associated with a server.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                  },
                  "clientId": {
                    "type": "string",
                    "description": "Identifier of the client of the service principal associated to the user assigned managed identity."
                  }
                }
              }
            },
            "principalId": {
              "type": "string",
              "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
            },
            "type": {
              "type": "string",
              "description": "Types of identities associated with a server.",
              "enum": [
                "None",
                "UserAssigned",
                "SystemAssigned",
                "SystemAssigned,UserAssigned"
              ],
              "x-ms-enum": {
                "name": "IdentityType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "None",
                    "description": "No managed identity is assigned to the server."
                  },
                  {
                    "value": "UserAssigned",
                    "description": "One or more managed identities provided by the user are assigned to the server."
                  },
                  {
                    "value": "SystemAssigned",
                    "description": "Azure automatically creates and manages the identity associated to the lifecycle of the server."
                  },
                  {
                    "value": "SystemAssigned,UserAssigned",
                    "description": "Both system-assigned and user-assigned identities are assigned to the server."
                  }
                ]
              }
            },
            "tenantId": {
              "type": "string",
              "description": "Identifier of the tenant of a server.",
              "readOnly": true
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the server.",
          "type": "object",
          "properties": {
            "administratorLogin": {
              "type": "string",
              "description": "Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.",
              "x-ms-mutability": [
                "read"
              ]
            },
            "administratorLoginPassword": {
              "type": "string",
              "description": "Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.",
              "x-ms-secret": true,
              "format": "password",
              "x-ms-mutability": [
                "update"
              ]
            },
            "version": {
              "description": "Major version of PostgreSQL database engine.",
              "type": "string",
              "enum": [
                "18",
                "17",
                "16",
                "15",
                "14",
                "13",
                "12",
                "11"
              ],
              "x-ms-enum": {
                "name": "PostgresMajorVersion",
                "modelAsString": true,
                "values": [
                  {
                    "value": "18",
                    "description": "PostgreSQL 18."
                  },
                  {
                    "value": "17",
                    "description": "PostgreSQL 17."
                  },
                  {
                    "value": "16",
                    "description": "PostgreSQL 16."
                  },
                  {
                    "value": "15",
                    "description": "PostgreSQL 15."
                  },
                  {
                    "value": "14",
                    "description": "PostgreSQL 14."
                  },
                  {
                    "value": "13",
                    "description": "PostgreSQL 13."
                  },
                  {
                    "value": "12",
                    "description": "PostgreSQL 12."
                  },
                  {
                    "value": "11",
                    "description": "PostgreSQL 11."
                  }
                ]
              }
            },
            "storage": {
              "default": null,
              "description": "Storage properties of a server.",
              "type": "object",
              "properties": {
                "storageSizeGB": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Size of storage assigned to a server."
                },
                "autoGrow": {
                  "type": "string",
                  "description": "Flag to enable or disable the automatic growth of storage size of a server when available space is nearing zero and conditions allow for automatically growing storage size.",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "StorageAutoGrow",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Server should automatically grow storage size when available space is nearing zero and conditions allow for automatically growing storage size."
                      },
                      {
                        "value": "Disabled",
                        "description": "Server should not automatically grow storage size when available space is nearing zero."
                      }
                    ]
                  }
                },
                "tier": {
                  "type": "string",
                  "description": "Storage tier of a server.",
                  "enum": [
                    "P1",
                    "P2",
                    "P3",
                    "P4",
                    "P6",
                    "P10",
                    "P15",
                    "P20",
                    "P30",
                    "P40",
                    "P50",
                    "P60",
                    "P70",
                    "P80"
                  ],
                  "x-ms-enum": {
                    "name": "AzureManagedDiskPerformanceTier",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "P1",
                        "description": "Entry-level SSD for minimal IOPS, ideal for light development or testing workloads."
                      },
                      {
                        "value": "P2",
                        "description": "Slightly higher IOPS for small-scale applications needing consistent low latency."
                      },
                      {
                        "value": "P3",
                        "description": "Balanced performance for basic production workloads with moderate throughput."
                      },
                      {
                        "value": "P4",
                        "description": "Enhanced IOPS for growing apps with predictable performance needs."
                      },
                      {
                        "value": "P6",
                        "description": "Mid-tier SSD for steady workloads requiring reliable throughput and latency."
                      },
                      {
                        "value": "P10",
                        "description": "Popular choice for general-purpose production workloads with scalable performance."
                      },
                      {
                        "value": "P15",
                        "description": "High IOPS tier for demanding apps with frequent read/write operations."
                      },
                      {
                        "value": "P20",
                        "description": "Entry point for high-performance Solid State Disks (SSDs), suitable for small-scale I/O-intensive workloads."
                      },
                      {
                        "value": "P30",
                        "description": "Balanced tier for moderate throughput and latency-sensitive applications."
                      },
                      {
                        "value": "P40",
                        "description": "Enhanced performance for growing production workloads with consistent IOPS demands."
                      },
                      {
                        "value": "P50",
                        "description": "Optimized for enterprise-grade applications needing sustained high throughput."
                      },
                      {
                        "value": "P60",
                        "description": "High-capacity tier for large databases and analytics workloads with elevated IOPS."
                      },
                      {
                        "value": "P70",
                        "description": "Designed for mission-critical systems requiring ultra-low latency and high concurrency."
                      },
                      {
                        "value": "P80",
                        "description": "Top-tier SSD for maximum IOPS and throughput, ideal for the most demanding workloads."
                      }
                    ]
                  }
                },
                "iops": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                },
                "throughput": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Premium_LRS",
                    "PremiumV2_LRS",
                    "UltraSSD_LRS"
                  ],
                  "x-ms-enum": {
                    "name": "StorageType",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Premium_LRS",
                        "description": "Standard Solid State Disk (SSD) backed storage offering consistent performance for general purpose workloads."
                      },
                      {
                        "value": "PremiumV2_LRS",
                        "description": "Next generation Solid State Disk (SSD) storage with improved scalability and performance for demanding enterprise workloads."
                      },
                      {
                        "value": "UltraSSD_LRS",
                        "description": "High-end Solid State Disk (SSD) storage designed for extreme IOPS and latency-sensitive applications."
                      }
                    ]
                  },
                  "description": "Type of storage assigned to a server. Allowed values are Premium_LRS, PremiumV2_LRS, or UltraSSD_LRS. If not specified, it defaults to Premium_LRS."
                }
              }
            },
            "backup": {
              "default": null,
              "description": "Backup properties of a server.",
              "type": "object",
              "properties": {
                "backupRetentionDays": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Backup retention days for the server."
                },
                "geoRedundantBackup": {
                  "type": "string",
                  "description": "Indicates if the server is configured to create geographically redundant backups.",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "GeographicallyRedundantBackup",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Server is configured to create geographically redundant backups."
                      },
                      {
                        "value": "Disabled",
                        "description": "Server is not configured to create geographically redundant backups."
                      }
                    ]
                  },
                  "x-ms-mutability": [
                    "read"
                  ]
                },
                "earliestRestoreDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Earliest restore point time (ISO8601 format) for a server.",
                  "readOnly": true
                }
              }
            },
            "highAvailability": {
              "default": null,
              "description": "High availability properties of a server.",
              "type": "object",
              "properties": {
                "mode": {
                  "type": "string",
                  "description": "High availability mode for a server.",
                  "enum": [
                    "Disabled",
                    "ZoneRedundant",
                    "SameZone"
                  ],
                  "x-ms-enum": {
                    "name": "HighAvailabilityMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Disabled",
                        "description": "High availability is disabled for the server."
                      },
                      {
                        "value": "ZoneRedundant",
                        "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                      },
                      {
                        "value": "SameZone",
                        "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                      }
                    ]
                  }
                },
                "state": {
                  "type": "string",
                  "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
                  "enum": [
                    "NotEnabled",
                    "CreatingStandby",
                    "ReplicatingData",
                    "FailingOver",
                    "Healthy",
                    "RemovingStandby"
                  ],
                  "x-ms-enum": {
                    "name": "HighAvailabilityState",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "NotEnabled",
                        "description": "High availability is not enabled for the server."
                      },
                      {
                        "value": "CreatingStandby",
                        "description": "Standby server is being created."
                      },
                      {
                        "value": "ReplicatingData",
                        "description": "Data is being replicated to the standby server."
                      },
                      {
                        "value": "FailingOver",
                        "description": "Failover operation to the standby server is in progress."
                      },
                      {
                        "value": "Healthy",
                        "description": "Standby server is healthy and ready to take over in case of a failover."
                      },
                      {
                        "value": "RemovingStandby",
                        "description": "Standby server is being removed."
                      }
                    ]
                  },
                  "readOnly": true
                },
                "standbyAvailabilityZone": {
                  "type": "string",
                  "default": "",
                  "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
                }
              }
            },
            "maintenanceWindow": {
              "default": null,
              "description": "Maintenance window properties of a server.",
              "x-ms-mutability": [
                "update",
                "read"
              ],
              "type": "object",
              "properties": {
                "customWindow": {
                  "type": "string",
                  "description": "Indicates whether custom window is enabled or disabled."
                },
                "startHour": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Start hour to be used for maintenance window."
                },
                "startMinute": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Start minute to be used for maintenance window."
                },
                "dayOfWeek": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Day of the week to be used for maintenance window."
                }
              }
            },
            "authConfig": {
              "default": null,
              "description": "Authentication configuration properties of a server.",
              "type": "object",
              "properties": {
                "activeDirectoryAuth": {
                  "type": "string",
                  "description": "Indicates if the server supports Microsoft Entra authentication.",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "MicrosoftEntraAuth",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Server supports Microsoft Entra authentication."
                      },
                      {
                        "value": "Disabled",
                        "description": "Server doesn't support Microsoft Entra authentication."
                      }
                    ]
                  }
                },
                "passwordAuth": {
                  "type": "string",
                  "description": "Indicates if the server supports password based authentication.",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "PasswordBasedAuth",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Server supports password based authentication."
                      },
                      {
                        "value": "Disabled",
                        "description": "Server doesn't support password based authentication."
                      }
                    ]
                  }
                },
                "tenantId": {
                  "type": "string",
                  "description": "Identifier of the tenant of the delegated resource."
                }
              }
            },
            "dataEncryption": {
              "default": null,
              "description": "Data encryption properties of a server.",
              "type": "object",
              "properties": {
                "primaryKeyURI": {
                  "type": "string",
                  "description": "URI of the key in Azure Key Vault used for data encryption of the primary storage associated to a server."
                },
                "primaryUserAssignedIdentityId": {
                  "type": "string",
                  "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the primary storage associated to a server."
                },
                "geoBackupKeyURI": {
                  "type": "string",
                  "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                },
                "geoBackupUserAssignedIdentityId": {
                  "type": "string",
                  "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                },
                "type": {
                  "type": "string",
                  "description": "Data encryption type used by a server.",
                  "enum": [
                    "SystemManaged",
                    "AzureKeyVault"
                  ],
                  "x-ms-enum": {
                    "name": "DataEncryptionType",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "SystemManaged",
                        "description": "Encryption managed by Azure using platform managed keys for simplicity and compliance."
                      },
                      {
                        "value": "AzureKeyVault",
                        "description": "Encryption using customer managed keys stored in Azure Key Vault for enhanced control and security."
                      }
                    ]
                  }
                },
                "primaryEncryptionKeyStatus": {
                  "type": "string",
                  "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the primary storage associated to the server.",
                  "x-ms-mutability": [
                    "read"
                  ],
                  "enum": [
                    "Valid",
                    "Invalid"
                  ],
                  "x-ms-enum": {
                    "name": "EncryptionKeyStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Valid",
                        "description": "Key is valid and can be used for encryption."
                      },
                      {
                        "value": "Invalid",
                        "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                      }
                    ]
                  }
                },
                "geoBackupEncryptionKeyStatus": {
                  "type": "string",
                  "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the geographically redundant storage associated to the server when it is configured to support geographically redundant backups.",
                  "x-ms-mutability": [
                    "read"
                  ],
                  "enum": [
                    "Valid",
                    "Invalid"
                  ],
                  "x-ms-enum": {
                    "name": "EncryptionKeyStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Valid",
                        "description": "Key is valid and can be used for encryption."
                      },
                      {
                        "value": "Invalid",
                        "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                      }
                    ]
                  }
                }
              }
            },
            "createMode": {
              "type": "string",
              "description": "Update mode of an existing server.",
              "enum": [
                "Default",
                "Update"
              ],
              "x-ms-enum": {
                "name": "CreateModeForPatch",
                "modelAsString": true,
                "values": [
                  {
                    "value": "Default",
                    "description": "It's equivalent to 'Update'."
                  },
                  {
                    "value": "Update",
                    "description": "Operation updates an existing server."
                  }
                ]
              },
              "x-ms-mutability": [
                "update"
              ]
            },
            "replicationRole": {
              "description": "Role of the server in a replication set.",
              "type": "string",
              "enum": [
                "None",
                "Primary",
                "AsyncReplica",
                "GeoAsyncReplica"
              ],
              "x-ms-enum": {
                "name": "ReplicationRole",
                "modelAsString": true,
                "values": [
                  {
                    "value": "None",
                    "description": "No replication role assigned; the server operates independently."
                  },
                  {
                    "value": "Primary",
                    "description": "Acts as the source server for replication to one or more replicas."
                  },
                  {
                    "value": "AsyncReplica",
                    "description": "Receives data asynchronously from a primary server within the same region."
                  },
                  {
                    "value": "GeoAsyncReplica",
                    "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                  }
                ]
              }
            },
            "replica": {
              "description": "Read replica properties of a server. Required only in case that you want to promote a server.",
              "x-ms-mutability": [
                "read",
                "update"
              ],
              "type": "object",
              "properties": {
                "role": {
                  "description": "Role of the server in a replication set.",
                  "type": "string",
                  "enum": [
                    "None",
                    "Primary",
                    "AsyncReplica",
                    "GeoAsyncReplica"
                  ],
                  "x-ms-enum": {
                    "name": "ReplicationRole",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "None",
                        "description": "No replication role assigned; the server operates independently."
                      },
                      {
                        "value": "Primary",
                        "description": "Acts as the source server for replication to one or more replicas."
                      },
                      {
                        "value": "AsyncReplica",
                        "description": "Receives data asynchronously from a primary server within the same region."
                      },
                      {
                        "value": "GeoAsyncReplica",
                        "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                      }
                    ]
                  }
                },
                "capacity": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Maximum number of read replicas allowed for a server.",
                  "readOnly": true
                },
                "replicationState": {
                  "type": "string",
                  "enum": [
                    "Active",
                    "Catchup",
                    "Provisioning",
                    "Updating",
                    "Broken",
                    "Reconfiguring"
                  ],
                  "x-ms-enum": {
                    "name": "ReplicationState",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Active",
                        "description": "Read replica is fully synchronized and actively replicating data from the primary server."
                      },
                      {
                        "value": "Catchup",
                        "description": "Read replica is behind the primary server and is currently catching up with pending changes."
                      },
                      {
                        "value": "Provisioning",
                        "description": "Read replica is being created and is in process of getting initialized."
                      },
                      {
                        "value": "Updating",
                        "description": "Read replica is undergoing some changes it can be changing compute size of promoting it to primary server."
                      },
                      {
                        "value": "Broken",
                        "description": "Replication has failed or been interrupted."
                      },
                      {
                        "value": "Reconfiguring",
                        "description": "Read replica is being reconfigured, possibly due to changes in source or settings."
                      }
                    ]
                  },
                  "description": "Indicates the replication state of a read replica. This property is returned only when the target server is a read replica. Possible  values are Active, Broken, Catchup, Provisioning, Reconfiguring, and Updating",
                  "readOnly": true
                },
                "promoteMode": {
                  "type": "string",
                  "description": "Type of operation to apply on the read replica. This property is write only. Standalone means that the read replica will be promoted to a standalone server, and will become a completely independent entity from the replication set. Switchover means that the read replica will roles with the primary server.",
                  "enum": [
                    "Standalone",
                    "Switchover"
                  ],
                  "x-ms-enum": {
                    "name": "ReadReplicaPromoteMode",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Standalone",
                        "description": "Read replica will become an independent server."
                      },
                      {
                        "value": "Switchover",
                        "description": "Read replica will swap roles with primary server."
                      }
                    ]
                  },
                  "x-ms-mutability": [
                    "update"
                  ]
                },
                "promoteOption": {
                  "type": "string",
                  "description": "Data synchronization option to use when processing the operation specified in the promoteMode property. This property is write only.",
                  "enum": [
                    "Planned",
                    "Forced"
                  ],
                  "x-ms-enum": {
                    "name": "ReadReplicaPromoteOption",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Planned",
                        "description": "The operation will wait for data in the read replica to be fully synchronized with its source server, before it initiates the operation."
                      },
                      {
                        "value": "Forced",
                        "description": "The operation will not wait for data in the read replica to be synchronized with its source server, before it initiates the operation."
                      }
                    ]
                  },
                  "x-ms-mutability": [
                    "update"
                  ]
                }
              }
            },
            "network": {
              "default": null,
              "description": "Network properties of a server. Only required if you want your server to be integrated into a virtual network provided by customer.",
              "type": "object",
              "properties": {
                "publicNetworkAccess": {
                  "type": "string",
                  "description": "Indicates if public network access is enabled or not. This is only supported for servers that are not integrated into a virtual network which is owned and provided by customer when server is deployed.",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "ServerPublicNetworkAccessState",
                    "modelAsString": true,
                    "values": [
                      {
                        "value": "Enabled",
                        "description": "Public network access is enabled. This allows the server to be accessed from the public internet, provided the necessary firewall rule that allows incoming traffic originating from the connecting client is in place. This is compatible with the use of private endpoints to connect to this server."
                      },
                      {
                        "value": "Disabled",
                        "description": "Public network access is disabled. This means the server cannot be accessed from the public internet, but only via private endpoints."
                      }
                    ]
                  }
                },
                "delegatedSubnetResourceId": {
                  "type": "string",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                      }
                    ]
                  },
                  "description": "Resource identifier of the delegated subnet. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                },
                "privateDnsZoneArmResourceId": {
                  "type": "string",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Network/privateDnsZones"
                      }
                    ]
                  },
                  "description": "Identifier of the private DNS zone. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                }
              }
            },
            "cluster": {
              "default": null,
              "description": "Cluster properties of a server.",
              "x-ms-mutability": [
                "read",
                "update"
              ],
              "type": "object",
              "properties": {
                "clusterSize": {
                  "type": "integer",
                  "format": "int32",
                  "default": 0,
                  "description": "Number of nodes assigned to the elastic cluster."
                },
                "defaultDatabaseName": {
                  "type": "string",
                  "description": "Default database name for the elastic cluster."
                }
              }
            }
          }
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Application-specific metadata in the form of key-value pairs."
        }
      },
      "description": "Represents a server to be updated."
    },
    "ServerList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "sku": {
                "description": "Compute tier and size of a server.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name by which is known a given compute size assigned to a server."
                  },
                  "tier": {
                    "type": "string",
                    "description": "Tier of the compute assigned to a server.",
                    "enum": [
                      "Burstable",
                      "GeneralPurpose",
                      "MemoryOptimized"
                    ],
                    "x-ms-enum": {
                      "name": "SkuTier",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Burstable",
                          "description": "Cost-effective tier for infrequent CPU usage, ideal for development and testing workloads with low performance requirements."
                        },
                        {
                          "value": "GeneralPurpose",
                          "description": "Balanced compute and memory for most workloads, offering scalable performance and I/O throughput."
                        },
                        {
                          "value": "MemoryOptimized",
                          "description": "High memory-to-core ratio for demanding workloads needing fast in-memory processing and high concurrency."
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "tier"
                ]
              },
              "identity": {
                "description": "User assigned managed identities assigned to the server.",
                "type": "object",
                "properties": {
                  "userAssignedIdentities": {
                    "description": "Map of user assigned managed identities.",
                    "type": "object",
                    "additionalProperties": {
                      "description": "User assigned managed identity associated with a server.",
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                        },
                        "clientId": {
                          "type": "string",
                          "description": "Identifier of the client of the service principal associated to the user assigned managed identity."
                        }
                      }
                    }
                  },
                  "principalId": {
                    "type": "string",
                    "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
                  },
                  "type": {
                    "type": "string",
                    "description": "Types of identities associated with a server.",
                    "enum": [
                      "None",
                      "UserAssigned",
                      "SystemAssigned",
                      "SystemAssigned,UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "IdentityType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "None",
                          "description": "No managed identity is assigned to the server."
                        },
                        {
                          "value": "UserAssigned",
                          "description": "One or more managed identities provided by the user are assigned to the server."
                        },
                        {
                          "value": "SystemAssigned",
                          "description": "Azure automatically creates and manages the identity associated to the lifecycle of the server."
                        },
                        {
                          "value": "SystemAssigned,UserAssigned",
                          "description": "Both system-assigned and user-assigned identities are assigned to the server."
                        }
                      ]
                    }
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "Identifier of the tenant of a server.",
                    "readOnly": true
                  }
                },
                "required": [
                  "type"
                ]
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of a server.",
                "type": "object",
                "properties": {
                  "administratorLogin": {
                    "type": "string",
                    "description": "Name of the login designated as the first password based administrator assigned to your instance of PostgreSQL. Must be specified the first time that you enable password based authentication on a server. Once set to a given value, it cannot be changed for the rest of the life of a server. If you disable password based authentication on a server which had it enabled, this password based role isn't deleted.",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "administratorLoginPassword": {
                    "type": "string",
                    "description": "Password assigned to the administrator login. As long as password authentication is enabled, this password can be changed at any time.",
                    "x-ms-secret": true,
                    "format": "password",
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  },
                  "version": {
                    "description": "Major version of PostgreSQL database engine.",
                    "type": "string",
                    "enum": [
                      "18",
                      "17",
                      "16",
                      "15",
                      "14",
                      "13",
                      "12",
                      "11"
                    ],
                    "x-ms-enum": {
                      "name": "PostgresMajorVersion",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "18",
                          "description": "PostgreSQL 18."
                        },
                        {
                          "value": "17",
                          "description": "PostgreSQL 17."
                        },
                        {
                          "value": "16",
                          "description": "PostgreSQL 16."
                        },
                        {
                          "value": "15",
                          "description": "PostgreSQL 15."
                        },
                        {
                          "value": "14",
                          "description": "PostgreSQL 14."
                        },
                        {
                          "value": "13",
                          "description": "PostgreSQL 13."
                        },
                        {
                          "value": "12",
                          "description": "PostgreSQL 12."
                        },
                        {
                          "value": "11",
                          "description": "PostgreSQL 11."
                        }
                      ]
                    }
                  },
                  "minorVersion": {
                    "type": "string",
                    "description": "Minor version of PostgreSQL database engine.",
                    "readOnly": true
                  },
                  "state": {
                    "type": "string",
                    "description": "Possible states of a server.",
                    "readOnly": true,
                    "enum": [
                      "Ready",
                      "Dropping",
                      "Disabled",
                      "Starting",
                      "Stopping",
                      "Stopped",
                      "Updating",
                      "Restarting",
                      "Inaccessible",
                      "Provisioning"
                    ],
                    "x-ms-enum": {
                      "name": "ServerState",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Ready",
                          "description": "Server is healthy and not undergoing any operations at the management or control plane level. This doesn't mean that the server is fully operational at the data plane level."
                        },
                        {
                          "value": "Dropping",
                          "description": "Server is being deleted."
                        },
                        {
                          "value": "Disabled",
                          "description": "Server is disabled. Typical reasons include: the subscription on which the server is deployed is explicitly disabled or canceled by the administrator, the spending limit has been reached, or the bill is past due. May also happen when the server is being moved to another resource group or subscription."
                        },
                        {
                          "value": "Starting",
                          "description": "PostgreSQL database engine is being restarted."
                        },
                        {
                          "value": "Stopping",
                          "description": "Compute resources associated with the server are being stopped and deallocated. If the server has high availability enabled, the compute resources of the standby server are also stopped and deallocated."
                        },
                        {
                          "value": "Stopped",
                          "description": "Compute resources associated with the server are being stopped and deallocated."
                        },
                        {
                          "value": "Updating",
                          "description": "Server is undergoing some changes which may or may not impact the availability of the PostgreSQL database engine. For example, the compute resources of the server are being scaled up or down, which may cause temporary unavailability of the database engine. Or, for example, a firewall rule is being added or removed, which doesn't cause any unavailability of the database engine."
                        },
                        {
                          "value": "Restarting",
                          "description": "PostgreSQL database engine is being restarted."
                        },
                        {
                          "value": "Inaccessible",
                          "description": "Server isn't accessible, because the key provided to encrypt and decrypt the data is in invalid state."
                        },
                        {
                          "value": "Provisioning",
                          "description": "Server is in the process of being created."
                        }
                      ]
                    }
                  },
                  "fullyQualifiedDomainName": {
                    "type": "string",
                    "description": "Fully qualified domain name of a server.",
                    "readOnly": true
                  },
                  "storage": {
                    "default": null,
                    "description": "Storage properties of a server.",
                    "type": "object",
                    "properties": {
                      "storageSizeGB": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Size of storage assigned to a server."
                      },
                      "autoGrow": {
                        "type": "string",
                        "description": "Flag to enable or disable the automatic growth of storage size of a server when available space is nearing zero and conditions allow for automatically growing storage size.",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "StorageAutoGrow",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Server should automatically grow storage size when available space is nearing zero and conditions allow for automatically growing storage size."
                            },
                            {
                              "value": "Disabled",
                              "description": "Server should not automatically grow storage size when available space is nearing zero."
                            }
                          ]
                        }
                      },
                      "tier": {
                        "type": "string",
                        "description": "Storage tier of a server.",
                        "enum": [
                          "P1",
                          "P2",
                          "P3",
                          "P4",
                          "P6",
                          "P10",
                          "P15",
                          "P20",
                          "P30",
                          "P40",
                          "P50",
                          "P60",
                          "P70",
                          "P80"
                        ],
                        "x-ms-enum": {
                          "name": "AzureManagedDiskPerformanceTier",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "P1",
                              "description": "Entry-level SSD for minimal IOPS, ideal for light development or testing workloads."
                            },
                            {
                              "value": "P2",
                              "description": "Slightly higher IOPS for small-scale applications needing consistent low latency."
                            },
                            {
                              "value": "P3",
                              "description": "Balanced performance for basic production workloads with moderate throughput."
                            },
                            {
                              "value": "P4",
                              "description": "Enhanced IOPS for growing apps with predictable performance needs."
                            },
                            {
                              "value": "P6",
                              "description": "Mid-tier SSD for steady workloads requiring reliable throughput and latency."
                            },
                            {
                              "value": "P10",
                              "description": "Popular choice for general-purpose production workloads with scalable performance."
                            },
                            {
                              "value": "P15",
                              "description": "High IOPS tier for demanding apps with frequent read/write operations."
                            },
                            {
                              "value": "P20",
                              "description": "Entry point for high-performance Solid State Disks (SSDs), suitable for small-scale I/O-intensive workloads."
                            },
                            {
                              "value": "P30",
                              "description": "Balanced tier for moderate throughput and latency-sensitive applications."
                            },
                            {
                              "value": "P40",
                              "description": "Enhanced performance for growing production workloads with consistent IOPS demands."
                            },
                            {
                              "value": "P50",
                              "description": "Optimized for enterprise-grade applications needing sustained high throughput."
                            },
                            {
                              "value": "P60",
                              "description": "High-capacity tier for large databases and analytics workloads with elevated IOPS."
                            },
                            {
                              "value": "P70",
                              "description": "Designed for mission-critical systems requiring ultra-low latency and high concurrency."
                            },
                            {
                              "value": "P80",
                              "description": "Top-tier SSD for maximum IOPS and throughput, ideal for the most demanding workloads."
                            }
                          ]
                        }
                      },
                      "iops": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                      },
                      "throughput": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
                      },
                      "type": {
                        "type": "string",
                        "enum": [
                          "Premium_LRS",
                          "PremiumV2_LRS",
                          "UltraSSD_LRS"
                        ],
                        "x-ms-enum": {
                          "name": "StorageType",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Premium_LRS",
                              "description": "Standard Solid State Disk (SSD) backed storage offering consistent performance for general purpose workloads."
                            },
                            {
                              "value": "PremiumV2_LRS",
                              "description": "Next generation Solid State Disk (SSD) storage with improved scalability and performance for demanding enterprise workloads."
                            },
                            {
                              "value": "UltraSSD_LRS",
                              "description": "High-end Solid State Disk (SSD) storage designed for extreme IOPS and latency-sensitive applications."
                            }
                          ]
                        },
                        "description": "Type of storage assigned to a server. Allowed values are Premium_LRS, PremiumV2_LRS, or UltraSSD_LRS. If not specified, it defaults to Premium_LRS."
                      }
                    }
                  },
                  "authConfig": {
                    "default": null,
                    "description": "Authentication configuration properties of a server.",
                    "type": "object",
                    "properties": {
                      "activeDirectoryAuth": {
                        "type": "string",
                        "description": "Indicates if the server supports Microsoft Entra authentication.",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "MicrosoftEntraAuth",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Server supports Microsoft Entra authentication."
                            },
                            {
                              "value": "Disabled",
                              "description": "Server doesn't support Microsoft Entra authentication."
                            }
                          ]
                        }
                      },
                      "passwordAuth": {
                        "type": "string",
                        "default": "Enabled",
                        "description": "Indicates if the server supports password based authentication.",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "PasswordBasedAuth",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Server supports password based authentication."
                            },
                            {
                              "value": "Disabled",
                              "description": "Server doesn't support password based authentication."
                            }
                          ]
                        }
                      },
                      "tenantId": {
                        "type": "string",
                        "default": "",
                        "description": "Identifier of the tenant of the delegated resource."
                      }
                    }
                  },
                  "dataEncryption": {
                    "default": null,
                    "description": "Data encryption properties of a server.",
                    "type": "object",
                    "properties": {
                      "primaryKeyURI": {
                        "type": "string",
                        "description": "URI of the key in Azure Key Vault used for data encryption of the primary storage associated to a server."
                      },
                      "primaryUserAssignedIdentityId": {
                        "type": "string",
                        "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the primary storage associated to a server."
                      },
                      "geoBackupKeyURI": {
                        "type": "string",
                        "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                      },
                      "geoBackupUserAssignedIdentityId": {
                        "type": "string",
                        "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
                      },
                      "type": {
                        "type": "string",
                        "description": "Data encryption type used by a server.",
                        "enum": [
                          "SystemManaged",
                          "AzureKeyVault"
                        ],
                        "x-ms-enum": {
                          "name": "DataEncryptionType",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "SystemManaged",
                              "description": "Encryption managed by Azure using platform managed keys for simplicity and compliance."
                            },
                            {
                              "value": "AzureKeyVault",
                              "description": "Encryption using customer managed keys stored in Azure Key Vault for enhanced control and security."
                            }
                          ]
                        }
                      },
                      "primaryEncryptionKeyStatus": {
                        "type": "string",
                        "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the primary storage associated to the server.",
                        "x-ms-mutability": [
                          "read"
                        ],
                        "enum": [
                          "Valid",
                          "Invalid"
                        ],
                        "x-ms-enum": {
                          "name": "EncryptionKeyStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Valid",
                              "description": "Key is valid and can be used for encryption."
                            },
                            {
                              "value": "Invalid",
                              "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                            }
                          ]
                        }
                      },
                      "geoBackupEncryptionKeyStatus": {
                        "type": "string",
                        "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the geographically redundant storage associated to the server when it is configured to support geographically redundant backups.",
                        "x-ms-mutability": [
                          "read"
                        ],
                        "enum": [
                          "Valid",
                          "Invalid"
                        ],
                        "x-ms-enum": {
                          "name": "EncryptionKeyStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Valid",
                              "description": "Key is valid and can be used for encryption."
                            },
                            {
                              "value": "Invalid",
                              "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "backup": {
                    "default": null,
                    "description": "Backup properties of a server.",
                    "type": "object",
                    "properties": {
                      "backupRetentionDays": {
                        "type": "integer",
                        "format": "int32",
                        "default": 7,
                        "description": "Backup retention days for the server."
                      },
                      "geoRedundantBackup": {
                        "type": "string",
                        "default": "Disabled",
                        "description": "Indicates if the server is configured to create geographically redundant backups.",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "GeographicallyRedundantBackup",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Server is configured to create geographically redundant backups."
                            },
                            {
                              "value": "Disabled",
                              "description": "Server is not configured to create geographically redundant backups."
                            }
                          ]
                        },
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ]
                      },
                      "earliestRestoreDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Earliest restore point time (ISO8601 format) for a server.",
                        "readOnly": true
                      }
                    }
                  },
                  "network": {
                    "default": null,
                    "description": "Network properties of a server. Only required if you want your server to be integrated into a virtual network provided by customer.",
                    "type": "object",
                    "properties": {
                      "publicNetworkAccess": {
                        "type": "string",
                        "description": "Indicates if public network access is enabled or not. This is only supported for servers that are not integrated into a virtual network which is owned and provided by customer when server is deployed.",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "ServerPublicNetworkAccessState",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Enabled",
                              "description": "Public network access is enabled. This allows the server to be accessed from the public internet, provided the necessary firewall rule that allows incoming traffic originating from the connecting client is in place. This is compatible with the use of private endpoints to connect to this server."
                            },
                            {
                              "value": "Disabled",
                              "description": "Public network access is disabled. This means the server cannot be accessed from the public internet, but only via private endpoints."
                            }
                          ]
                        }
                      },
                      "delegatedSubnetResourceId": {
                        "type": "string",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Network/virtualNetworks/subnets"
                            }
                          ]
                        },
                        "description": "Resource identifier of the delegated subnet. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                      },
                      "privateDnsZoneArmResourceId": {
                        "type": "string",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Network/privateDnsZones"
                            }
                          ]
                        },
                        "description": "Identifier of the private DNS zone. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
                      }
                    }
                  },
                  "highAvailability": {
                    "default": null,
                    "description": "High availability properties of a server.",
                    "type": "object",
                    "properties": {
                      "mode": {
                        "type": "string",
                        "default": "Disabled",
                        "description": "High availability mode for a server.",
                        "enum": [
                          "Disabled",
                          "ZoneRedundant",
                          "SameZone"
                        ],
                        "x-ms-enum": {
                          "name": "HighAvailabilityMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Disabled",
                              "description": "High availability is disabled for the server."
                            },
                            {
                              "value": "ZoneRedundant",
                              "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
                            },
                            {
                              "value": "SameZone",
                              "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
                            }
                          ]
                        }
                      },
                      "state": {
                        "type": "string",
                        "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
                        "enum": [
                          "NotEnabled",
                          "CreatingStandby",
                          "ReplicatingData",
                          "FailingOver",
                          "Healthy",
                          "RemovingStandby"
                        ],
                        "x-ms-enum": {
                          "name": "HighAvailabilityState",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "NotEnabled",
                              "description": "High availability is not enabled for the server."
                            },
                            {
                              "value": "CreatingStandby",
                              "description": "Standby server is being created."
                            },
                            {
                              "value": "ReplicatingData",
                              "description": "Data is being replicated to the standby server."
                            },
                            {
                              "value": "FailingOver",
                              "description": "Failover operation to the standby server is in progress."
                            },
                            {
                              "value": "Healthy",
                              "description": "Standby server is healthy and ready to take over in case of a failover."
                            },
                            {
                              "value": "RemovingStandby",
                              "description": "Standby server is being removed."
                            }
                          ]
                        },
                        "readOnly": true
                      },
                      "standbyAvailabilityZone": {
                        "type": "string",
                        "default": "",
                        "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
                      }
                    }
                  },
                  "maintenanceWindow": {
                    "default": null,
                    "description": "Maintenance window properties of a server.",
                    "x-ms-mutability": [
                      "update",
                      "read"
                    ],
                    "type": "object",
                    "properties": {
                      "customWindow": {
                        "type": "string",
                        "default": "Disabled",
                        "description": "Indicates whether custom window is enabled or disabled."
                      },
                      "startHour": {
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "description": "Start hour to be used for maintenance window."
                      },
                      "startMinute": {
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "description": "Start minute to be used for maintenance window."
                      },
                      "dayOfWeek": {
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "description": "Day of the week to be used for maintenance window."
                      }
                    }
                  },
                  "sourceServerResourceId": {
                    "type": "string",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.DBforPostgreSQL/flexibleServers"
                        }
                      ]
                    },
                    "description": "Identifier of the server to be used as the source of the new server. Required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', 'Replica', or 'ReviveDropped'. This property is returned only when the target server is a read replica.",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "pointInTimeUTC": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation time (in ISO8601 format) of the backup which you want to restore in the new server. It's required when 'createMode' is 'PointInTimeRestore', 'GeoRestore', or 'ReviveDropped'.",
                    "x-ms-mutability": [
                      "create"
                    ]
                  },
                  "availabilityZone": {
                    "type": "string",
                    "default": "",
                    "description": "Availability zone of a server.",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ]
                  },
                  "replicationRole": {
                    "description": "Role of the server in a replication set.",
                    "type": "string",
                    "enum": [
                      "None",
                      "Primary",
                      "AsyncReplica",
                      "GeoAsyncReplica"
                    ],
                    "x-ms-enum": {
                      "name": "ReplicationRole",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "None",
                          "description": "No replication role assigned; the server operates independently."
                        },
                        {
                          "value": "Primary",
                          "description": "Acts as the source server for replication to one or more replicas."
                        },
                        {
                          "value": "AsyncReplica",
                          "description": "Receives data asynchronously from a primary server within the same region."
                        },
                        {
                          "value": "GeoAsyncReplica",
                          "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                        }
                      ]
                    }
                  },
                  "replicaCapacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Maximum number of read replicas allowed for a server.",
                    "readOnly": true
                  },
                  "replica": {
                    "description": "Read replica properties of a server. Required only in case that you want to promote a server.",
                    "x-ms-mutability": [
                      "read",
                      "update"
                    ],
                    "type": "object",
                    "properties": {
                      "role": {
                        "description": "Role of the server in a replication set.",
                        "type": "string",
                        "enum": [
                          "None",
                          "Primary",
                          "AsyncReplica",
                          "GeoAsyncReplica"
                        ],
                        "x-ms-enum": {
                          "name": "ReplicationRole",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "None",
                              "description": "No replication role assigned; the server operates independently."
                            },
                            {
                              "value": "Primary",
                              "description": "Acts as the source server for replication to one or more replicas."
                            },
                            {
                              "value": "AsyncReplica",
                              "description": "Receives data asynchronously from a primary server within the same region."
                            },
                            {
                              "value": "GeoAsyncReplica",
                              "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
                            }
                          ]
                        }
                      },
                      "capacity": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Maximum number of read replicas allowed for a server.",
                        "readOnly": true
                      },
                      "replicationState": {
                        "type": "string",
                        "enum": [
                          "Active",
                          "Catchup",
                          "Provisioning",
                          "Updating",
                          "Broken",
                          "Reconfiguring"
                        ],
                        "x-ms-enum": {
                          "name": "ReplicationState",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Active",
                              "description": "Read replica is fully synchronized and actively replicating data from the primary server."
                            },
                            {
                              "value": "Catchup",
                              "description": "Read replica is behind the primary server and is currently catching up with pending changes."
                            },
                            {
                              "value": "Provisioning",
                              "description": "Read replica is being created and is in process of getting initialized."
                            },
                            {
                              "value": "Updating",
                              "description": "Read replica is undergoing some changes it can be changing compute size of promoting it to primary server."
                            },
                            {
                              "value": "Broken",
                              "description": "Replication has failed or been interrupted."
                            },
                            {
                              "value": "Reconfiguring",
                              "description": "Read replica is being reconfigured, possibly due to changes in source or settings."
                            }
                          ]
                        },
                        "description": "Indicates the replication state of a read replica. This property is returned only when the target server is a read replica. Possible  values are Active, Broken, Catchup, Provisioning, Reconfiguring, and Updating",
                        "readOnly": true
                      },
                      "promoteMode": {
                        "type": "string",
                        "description": "Type of operation to apply on the read replica. This property is write only. Standalone means that the read replica will be promoted to a standalone server, and will become a completely independent entity from the replication set. Switchover means that the read replica will roles with the primary server.",
                        "enum": [
                          "Standalone",
                          "Switchover"
                        ],
                        "x-ms-enum": {
                          "name": "ReadReplicaPromoteMode",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Standalone",
                              "description": "Read replica will become an independent server."
                            },
                            {
                              "value": "Switchover",
                              "description": "Read replica will swap roles with primary server."
                            }
                          ]
                        },
                        "x-ms-mutability": [
                          "update"
                        ]
                      },
                      "promoteOption": {
                        "type": "string",
                        "description": "Data synchronization option to use when processing the operation specified in the promoteMode property. This property is write only.",
                        "enum": [
                          "Planned",
                          "Forced"
                        ],
                        "x-ms-enum": {
                          "name": "ReadReplicaPromoteOption",
                          "modelAsString": true,
                          "values": [
                            {
                              "value": "Planned",
                              "description": "The operation will wait for data in the read replica to be fully synchronized with its source server, before it initiates the operation."
                            },
                            {
                              "value": "Forced",
                              "description": "The operation will not wait for data in the read replica to be synchronized with its source server, before it initiates the operation."
                            }
                          ]
                        },
                        "x-ms-mutability": [
                          "update"
                        ]
                      }
                    }
                  },
                  "createMode": {
                    "type": "string",
                    "description": "Creation mode of a new server.",
                    "enum": [
                      "Default",
                      "Create",
                      "Update",
                      "PointInTimeRestore",
                      "GeoRestore",
                      "Replica",
                      "ReviveDropped"
                    ],
                    "x-ms-enum": {
                      "name": "CreateMode",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "Default",
                          "description": "If the operation is triggered on a non-existing server, it's equivalent to 'Create'. If the operation is triggered on an existing server, it's equivalent to 'Update'."
                        },
                        {
                          "value": "Create",
                          "description": "Operation creates a new server."
                        },
                        {
                          "value": "Update",
                          "description": "Operation updates an existing server."
                        },
                        {
                          "value": "PointInTimeRestore",
                          "description": "Operation restores an existing backup of an existing server. This operation creates a new server, and then restores on it the backup of an existing server at a specific point in time."
                        },
                        {
                          "value": "GeoRestore",
                          "description": "Operation restores an existing backup of an existing server, on the paired region of the existing server. This operation creates a new server on the paired region of the existing server, and then restores on it the backup of an existing server at a specific point in time, in a different region. This operation is only supported on existing servers that were created with geographically redundant backups enabled."
                        },
                        {
                          "value": "Replica",
                          "description": "Operation creates a replica of an existing server. This operation creates a new server, restores a base backup of the existing server (referred to as primary), and configures physical replication to asynchronously stream all changes which are recorded in the transaction log of the primary."
                        },
                        {
                          "value": "ReviveDropped",
                          "description": "Operation creates a new server, initialized with the backup of a server that was recently deleted."
                        }
                      ]
                    },
                    "x-ms-mutability": [
                      "create",
                      "update"
                    ]
                  },
                  "privateEndpointConnections": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "The private endpoint connection resource.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "arm-id",
                          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                          "readOnly": true
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the resource",
                          "readOnly": true
                        },
                        "type": {
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                          "readOnly": true
                        },
                        "systemData": {
                          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "createdBy": {
                              "type": "string",
                              "description": "The identity that created the resource."
                            },
                            "createdByType": {
                              "type": "string",
                              "description": "The type of identity that created the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "createdAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource creation (UTC)."
                            },
                            "lastModifiedBy": {
                              "type": "string",
                              "description": "The identity that last modified the resource."
                            },
                            "lastModifiedByType": {
                              "type": "string",
                              "description": "The type of identity that last modified the resource.",
                              "enum": [
                                "User",
                                "Application",
                                "ManagedIdentity",
                                "Key"
                              ],
                              "x-ms-enum": {
                                "name": "createdByType",
                                "modelAsString": true
                              }
                            },
                            "lastModifiedAt": {
                              "type": "string",
                              "format": "date-time",
                              "description": "The timestamp of resource last modification (UTC)"
                            }
                          }
                        },
                        "properties": {
                          "description": "Resource properties.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "groupIds": {
                              "type": "array",
                              "description": "The group ids for the private endpoint resource.",
                              "items": {
                                "type": "string"
                              },
                              "readOnly": true
                            },
                            "privateEndpoint": {
                              "description": "The private endpoint resource.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ARM identifier for private endpoint.",
                                  "readOnly": true
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "A collection of information about the state of the connection between service consumer and provider.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "description": "Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                                  "type": "string",
                                  "enum": [
                                    "Pending",
                                    "Approved",
                                    "Rejected"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PrivateEndpointServiceConnectionStatus",
                                    "modelAsString": true
                                  }
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The reason for approval/rejection of the connection."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "A message indicating if changes on the service provider require any updates on the consumer."
                                }
                              }
                            },
                            "provisioningState": {
                              "description": "The provisioning state of the private endpoint connection resource.",
                              "type": "string",
                              "enum": [
                                "Succeeded",
                                "Creating",
                                "Deleting",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "name": "PrivateEndpointConnectionProvisioningState",
                                "modelAsString": true
                              },
                              "readOnly": true
                            }
                          },
                          "required": [
                            "privateLinkServiceConnectionState"
                          ]
                        }
                      }
                    },
                    "description": "List of private endpoint connections associated with the specified server.",
                    "readOnly": true
                  },
                  "cluster": {
                    "default": null,
                    "description": "Cluster properties of a server.",
                    "x-ms-mutability": [
                      "create",
                      "read",
                      "update"
                    ],
                    "type": "object",
                    "properties": {
                      "clusterSize": {
                        "type": "integer",
                        "format": "int32",
                        "default": 0,
                        "description": "Number of nodes assigned to the elastic cluster."
                      },
                      "defaultDatabaseName": {
                        "type": "string",
                        "description": "Default database name for the elastic cluster."
                      }
                    }
                  }
                }
              }
            },
            "description": "Properties of a server."
          },
          "description": "The list of servers"
        },
        "nextLink": {
          "description": "The link used to get the next page of operations.",
          "type": "string",
          "format": "uri"
        }
      },
      "description": "A list of servers."
    },
    "Sku": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name by which is known a given compute size assigned to a server."
        },
        "tier": {
          "type": "string",
          "description": "Tier of the compute assigned to a server.",
          "enum": [
            "Burstable",
            "GeneralPurpose",
            "MemoryOptimized"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true,
            "values": [
              {
                "value": "Burstable",
                "description": "Cost-effective tier for infrequent CPU usage, ideal for development and testing workloads with low performance requirements."
              },
              {
                "value": "GeneralPurpose",
                "description": "Balanced compute and memory for most workloads, offering scalable performance and I/O throughput."
              },
              {
                "value": "MemoryOptimized",
                "description": "High memory-to-core ratio for demanding workloads needing fast in-memory processing and high concurrency."
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "tier"
      ],
      "description": "Compute information of a server."
    },
    "SkuForPatch": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name by which is known a given compute size assigned to a server."
        },
        "tier": {
          "type": "string",
          "description": "Tier of the compute assigned to a server.",
          "enum": [
            "Burstable",
            "GeneralPurpose",
            "MemoryOptimized"
          ],
          "x-ms-enum": {
            "name": "SkuTier",
            "modelAsString": true,
            "values": [
              {
                "value": "Burstable",
                "description": "Cost-effective tier for infrequent CPU usage, ideal for development and testing workloads with low performance requirements."
              },
              {
                "value": "GeneralPurpose",
                "description": "Balanced compute and memory for most workloads, offering scalable performance and I/O throughput."
              },
              {
                "value": "MemoryOptimized",
                "description": "High memory-to-core ratio for demanding workloads needing fast in-memory processing and high concurrency."
              }
            ]
          }
        }
      },
      "description": "Compute information of a server."
    },
    "Storage": {
      "type": "object",
      "properties": {
        "storageSizeGB": {
          "type": "integer",
          "format": "int32",
          "description": "Size of storage assigned to a server."
        },
        "autoGrow": {
          "type": "string",
          "description": "Flag to enable or disable the automatic growth of storage size of a server when available space is nearing zero and conditions allow for automatically growing storage size.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "StorageAutoGrow",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Server should automatically grow storage size when available space is nearing zero and conditions allow for automatically growing storage size."
              },
              {
                "value": "Disabled",
                "description": "Server should not automatically grow storage size when available space is nearing zero."
              }
            ]
          }
        },
        "tier": {
          "type": "string",
          "description": "Storage tier of a server.",
          "enum": [
            "P1",
            "P2",
            "P3",
            "P4",
            "P6",
            "P10",
            "P15",
            "P20",
            "P30",
            "P40",
            "P50",
            "P60",
            "P70",
            "P80"
          ],
          "x-ms-enum": {
            "name": "AzureManagedDiskPerformanceTier",
            "modelAsString": true,
            "values": [
              {
                "value": "P1",
                "description": "Entry-level SSD for minimal IOPS, ideal for light development or testing workloads."
              },
              {
                "value": "P2",
                "description": "Slightly higher IOPS for small-scale applications needing consistent low latency."
              },
              {
                "value": "P3",
                "description": "Balanced performance for basic production workloads with moderate throughput."
              },
              {
                "value": "P4",
                "description": "Enhanced IOPS for growing apps with predictable performance needs."
              },
              {
                "value": "P6",
                "description": "Mid-tier SSD for steady workloads requiring reliable throughput and latency."
              },
              {
                "value": "P10",
                "description": "Popular choice for general-purpose production workloads with scalable performance."
              },
              {
                "value": "P15",
                "description": "High IOPS tier for demanding apps with frequent read/write operations."
              },
              {
                "value": "P20",
                "description": "Entry point for high-performance Solid State Disks (SSDs), suitable for small-scale I/O-intensive workloads."
              },
              {
                "value": "P30",
                "description": "Balanced tier for moderate throughput and latency-sensitive applications."
              },
              {
                "value": "P40",
                "description": "Enhanced performance for growing production workloads with consistent IOPS demands."
              },
              {
                "value": "P50",
                "description": "Optimized for enterprise-grade applications needing sustained high throughput."
              },
              {
                "value": "P60",
                "description": "High-capacity tier for large databases and analytics workloads with elevated IOPS."
              },
              {
                "value": "P70",
                "description": "Designed for mission-critical systems requiring ultra-low latency and high concurrency."
              },
              {
                "value": "P80",
                "description": "Top-tier SSD for maximum IOPS and throughput, ideal for the most demanding workloads."
              }
            ]
          }
        },
        "iops": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum IOPS supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
        },
        "throughput": {
          "type": "integer",
          "format": "int32",
          "description": "Maximum throughput supported for storage. Required when type of storage is PremiumV2_LRS or UltraSSD_LRS."
        },
        "type": {
          "type": "string",
          "enum": [
            "Premium_LRS",
            "PremiumV2_LRS",
            "UltraSSD_LRS"
          ],
          "x-ms-enum": {
            "name": "StorageType",
            "modelAsString": true,
            "values": [
              {
                "value": "Premium_LRS",
                "description": "Standard Solid State Disk (SSD) backed storage offering consistent performance for general purpose workloads."
              },
              {
                "value": "PremiumV2_LRS",
                "description": "Next generation Solid State Disk (SSD) storage with improved scalability and performance for demanding enterprise workloads."
              },
              {
                "value": "UltraSSD_LRS",
                "description": "High-end Solid State Disk (SSD) storage designed for extreme IOPS and latency-sensitive applications."
              }
            ]
          },
          "description": "Type of storage assigned to a server. Allowed values are Premium_LRS, PremiumV2_LRS, or UltraSSD_LRS. If not specified, it defaults to Premium_LRS."
        }
      },
      "description": "Storage properties of a server."
    },
    "AuthConfig": {
      "type": "object",
      "properties": {
        "activeDirectoryAuth": {
          "type": "string",
          "description": "Indicates if the server supports Microsoft Entra authentication.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "MicrosoftEntraAuth",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Server supports Microsoft Entra authentication."
              },
              {
                "value": "Disabled",
                "description": "Server doesn't support Microsoft Entra authentication."
              }
            ]
          }
        },
        "passwordAuth": {
          "type": "string",
          "default": "Enabled",
          "description": "Indicates if the server supports password based authentication.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PasswordBasedAuth",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Server supports password based authentication."
              },
              {
                "value": "Disabled",
                "description": "Server doesn't support password based authentication."
              }
            ]
          }
        },
        "tenantId": {
          "type": "string",
          "default": "",
          "description": "Identifier of the tenant of the delegated resource."
        }
      },
      "description": "Authentication configuration properties of a server."
    },
    "AuthConfigForPatch": {
      "type": "object",
      "properties": {
        "activeDirectoryAuth": {
          "type": "string",
          "description": "Indicates if the server supports Microsoft Entra authentication.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "MicrosoftEntraAuth",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Server supports Microsoft Entra authentication."
              },
              {
                "value": "Disabled",
                "description": "Server doesn't support Microsoft Entra authentication."
              }
            ]
          }
        },
        "passwordAuth": {
          "type": "string",
          "description": "Indicates if the server supports password based authentication.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "PasswordBasedAuth",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Server supports password based authentication."
              },
              {
                "value": "Disabled",
                "description": "Server doesn't support password based authentication."
              }
            ]
          }
        },
        "tenantId": {
          "type": "string",
          "description": "Identifier of the tenant of the delegated resource."
        }
      },
      "description": "Authentication configuration properties of a server."
    },
    "DataEncryption": {
      "type": "object",
      "properties": {
        "primaryKeyURI": {
          "type": "string",
          "description": "URI of the key in Azure Key Vault used for data encryption of the primary storage associated to a server."
        },
        "primaryUserAssignedIdentityId": {
          "type": "string",
          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the primary storage associated to a server."
        },
        "geoBackupKeyURI": {
          "type": "string",
          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
        },
        "geoBackupUserAssignedIdentityId": {
          "type": "string",
          "description": "Identifier of the user assigned managed identity used to access the key in Azure Key Vault for data encryption of the geographically redundant storage associated to a server that is configured to support geographically redundant backups."
        },
        "type": {
          "type": "string",
          "description": "Data encryption type used by a server.",
          "enum": [
            "SystemManaged",
            "AzureKeyVault"
          ],
          "x-ms-enum": {
            "name": "DataEncryptionType",
            "modelAsString": true,
            "values": [
              {
                "value": "SystemManaged",
                "description": "Encryption managed by Azure using platform managed keys for simplicity and compliance."
              },
              {
                "value": "AzureKeyVault",
                "description": "Encryption using customer managed keys stored in Azure Key Vault for enhanced control and security."
              }
            ]
          }
        },
        "primaryEncryptionKeyStatus": {
          "type": "string",
          "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the primary storage associated to the server.",
          "x-ms-mutability": [
            "read"
          ],
          "enum": [
            "Valid",
            "Invalid"
          ],
          "x-ms-enum": {
            "name": "EncryptionKeyStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Valid",
                "description": "Key is valid and can be used for encryption."
              },
              {
                "value": "Invalid",
                "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
              }
            ]
          }
        },
        "geoBackupEncryptionKeyStatus": {
          "type": "string",
          "description": "Status of key used by a server configured with data encryption based on customer managed key, to encrypt the geographically redundant storage associated to the server when it is configured to support geographically redundant backups.",
          "x-ms-mutability": [
            "read"
          ],
          "enum": [
            "Valid",
            "Invalid"
          ],
          "x-ms-enum": {
            "name": "EncryptionKeyStatus",
            "modelAsString": true,
            "values": [
              {
                "value": "Valid",
                "description": "Key is valid and can be used for encryption."
              },
              {
                "value": "Invalid",
                "description": "Key is invalid and cannot be used for encryption. Possible causes include key deletion, permission changes, key being disabled, key type not supported, or current date being outside of validity period associated to the key."
              }
            ]
          }
        }
      },
      "description": "Data encryption properties of a server."
    },
    "UserIdentity": {
      "description": "User assigned managed identity associated with a server.",
      "type": "object",
      "properties": {
        "principalId": {
          "type": "string",
          "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
        },
        "clientId": {
          "type": "string",
          "description": "Identifier of the client of the service principal associated to the user assigned managed identity."
        }
      }
    },
    "UserAssignedIdentityMap": {
      "type": "object",
      "description": "Map of user assigned managed identities.",
      "additionalProperties": {
        "description": "User assigned managed identity associated with a server.",
        "type": "object",
        "properties": {
          "principalId": {
            "type": "string",
            "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
          },
          "clientId": {
            "type": "string",
            "description": "Identifier of the client of the service principal associated to the user assigned managed identity."
          }
        }
      }
    },
    "UserAssignedIdentity": {
      "type": "object",
      "properties": {
        "userAssignedIdentities": {
          "description": "Map of user assigned managed identities.",
          "type": "object",
          "additionalProperties": {
            "description": "User assigned managed identity associated with a server.",
            "type": "object",
            "properties": {
              "principalId": {
                "type": "string",
                "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
              },
              "clientId": {
                "type": "string",
                "description": "Identifier of the client of the service principal associated to the user assigned managed identity."
              }
            }
          }
        },
        "principalId": {
          "type": "string",
          "description": "Identifier of the object of the service principal associated to the user assigned managed identity."
        },
        "type": {
          "type": "string",
          "description": "Types of identities associated with a server.",
          "enum": [
            "None",
            "UserAssigned",
            "SystemAssigned",
            "SystemAssigned,UserAssigned"
          ],
          "x-ms-enum": {
            "name": "IdentityType",
            "modelAsString": true,
            "values": [
              {
                "value": "None",
                "description": "No managed identity is assigned to the server."
              },
              {
                "value": "UserAssigned",
                "description": "One or more managed identities provided by the user are assigned to the server."
              },
              {
                "value": "SystemAssigned",
                "description": "Azure automatically creates and manages the identity associated to the lifecycle of the server."
              },
              {
                "value": "SystemAssigned,UserAssigned",
                "description": "Both system-assigned and user-assigned identities are assigned to the server."
              }
            ]
          }
        },
        "tenantId": {
          "type": "string",
          "description": "Identifier of the tenant of a server.",
          "readOnly": true
        }
      },
      "required": [
        "type"
      ],
      "description": "Identities associated with a server."
    },
    "ReplicationRole": {
      "type": "string",
      "description": "Role of the server in a replication set.",
      "enum": [
        "None",
        "Primary",
        "AsyncReplica",
        "GeoAsyncReplica"
      ],
      "x-ms-enum": {
        "name": "ReplicationRole",
        "modelAsString": true,
        "values": [
          {
            "value": "None",
            "description": "No replication role assigned; the server operates independently."
          },
          {
            "value": "Primary",
            "description": "Acts as the source server for replication to one or more replicas."
          },
          {
            "value": "AsyncReplica",
            "description": "Receives data asynchronously from a primary server within the same region."
          },
          {
            "value": "GeoAsyncReplica",
            "description": "Receives data asynchronously from a primary server in a different region for geographical redundancy."
          }
        ]
      }
    },
    "Backup": {
      "type": "object",
      "properties": {
        "backupRetentionDays": {
          "type": "integer",
          "format": "int32",
          "default": 7,
          "description": "Backup retention days for the server."
        },
        "geoRedundantBackup": {
          "type": "string",
          "default": "Disabled",
          "description": "Indicates if the server is configured to create geographically redundant backups.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "GeographicallyRedundantBackup",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Server is configured to create geographically redundant backups."
              },
              {
                "value": "Disabled",
                "description": "Server is not configured to create geographically redundant backups."
              }
            ]
          },
          "x-ms-mutability": [
            "create",
            "read"
          ]
        },
        "earliestRestoreDate": {
          "type": "string",
          "format": "date-time",
          "description": "Earliest restore point time (ISO8601 format) for a server.",
          "readOnly": true
        }
      },
      "description": "Backup properties of a server."
    },
    "BackupForPatch": {
      "type": "object",
      "properties": {
        "backupRetentionDays": {
          "type": "integer",
          "format": "int32",
          "description": "Backup retention days for the server."
        },
        "geoRedundantBackup": {
          "type": "string",
          "description": "Indicates if the server is configured to create geographically redundant backups.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "GeographicallyRedundantBackup",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Server is configured to create geographically redundant backups."
              },
              {
                "value": "Disabled",
                "description": "Server is not configured to create geographically redundant backups."
              }
            ]
          },
          "x-ms-mutability": [
            "read"
          ]
        },
        "earliestRestoreDate": {
          "type": "string",
          "format": "date-time",
          "description": "Earliest restore point time (ISO8601 format) for a server.",
          "readOnly": true
        }
      },
      "description": "Backup properties of a server."
    },
    "Network": {
      "type": "object",
      "properties": {
        "publicNetworkAccess": {
          "type": "string",
          "description": "Indicates if public network access is enabled or not. This is only supported for servers that are not integrated into a virtual network which is owned and provided by customer when server is deployed.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "ServerPublicNetworkAccessState",
            "modelAsString": true,
            "values": [
              {
                "value": "Enabled",
                "description": "Public network access is enabled. This allows the server to be accessed from the public internet, provided the necessary firewall rule that allows incoming traffic originating from the connecting client is in place. This is compatible with the use of private endpoints to connect to this server."
              },
              {
                "value": "Disabled",
                "description": "Public network access is disabled. This means the server cannot be accessed from the public internet, but only via private endpoints."
              }
            ]
          }
        },
        "delegatedSubnetResourceId": {
          "type": "string",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          },
          "description": "Resource identifier of the delegated subnet. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
        },
        "privateDnsZoneArmResourceId": {
          "type": "string",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/privateDnsZones"
              }
            ]
          },
          "description": "Identifier of the private DNS zone. Required during creation of a new server, in case you want the server to be integrated into your own virtual network. For an update operation, you only have to provide this property if you want to change the value assigned for the private DNS zone."
        }
      },
      "description": "Network properties of a server."
    },
    "HighAvailability": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "default": "Disabled",
          "description": "High availability mode for a server.",
          "enum": [
            "Disabled",
            "ZoneRedundant",
            "SameZone"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Disabled",
                "description": "High availability is disabled for the server."
              },
              {
                "value": "ZoneRedundant",
                "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
              },
              {
                "value": "SameZone",
                "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
              }
            ]
          }
        },
        "state": {
          "type": "string",
          "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
          "enum": [
            "NotEnabled",
            "CreatingStandby",
            "ReplicatingData",
            "FailingOver",
            "Healthy",
            "RemovingStandby"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityState",
            "modelAsString": true,
            "values": [
              {
                "value": "NotEnabled",
                "description": "High availability is not enabled for the server."
              },
              {
                "value": "CreatingStandby",
                "description": "Standby server is being created."
              },
              {
                "value": "ReplicatingData",
                "description": "Data is being replicated to the standby server."
              },
              {
                "value": "FailingOver",
                "description": "Failover operation to the standby server is in progress."
              },
              {
                "value": "Healthy",
                "description": "Standby server is healthy and ready to take over in case of a failover."
              },
              {
                "value": "RemovingStandby",
                "description": "Standby server is being removed."
              }
            ]
          },
          "readOnly": true
        },
        "standbyAvailabilityZone": {
          "type": "string",
          "default": "",
          "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
        }
      },
      "description": "High availability properties of a server."
    },
    "HighAvailabilityForPatch": {
      "type": "object",
      "properties": {
        "mode": {
          "type": "string",
          "description": "High availability mode for a server.",
          "enum": [
            "Disabled",
            "ZoneRedundant",
            "SameZone"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityMode",
            "modelAsString": true,
            "values": [
              {
                "value": "Disabled",
                "description": "High availability is disabled for the server."
              },
              {
                "value": "ZoneRedundant",
                "description": "High availability is enabled for the server, with standby server in a different availability zone than that of the primary."
              },
              {
                "value": "SameZone",
                "description": "High availability is enabled for the server, with standby server in the same availability zone as the primary."
              }
            ]
          }
        },
        "state": {
          "type": "string",
          "description": "Possible states of the standby server created when high availability is set to SameZone or ZoneRedundant.",
          "enum": [
            "NotEnabled",
            "CreatingStandby",
            "ReplicatingData",
            "FailingOver",
            "Healthy",
            "RemovingStandby"
          ],
          "x-ms-enum": {
            "name": "HighAvailabilityState",
            "modelAsString": true,
            "values": [
              {
                "value": "NotEnabled",
                "description": "High availability is not enabled for the server."
              },
              {
                "value": "CreatingStandby",
                "description": "Standby server is being created."
              },
              {
                "value": "ReplicatingData",
                "description": "Data is being replicated to the standby server."
              },
              {
                "value": "FailingOver",
                "description": "Failover operation to the standby server is in progress."
              },
              {
                "value": "Healthy",
                "description": "Standby server is healthy and ready to take over in case of a failover."
              },
              {
                "value": "RemovingStandby",
                "description": "Standby server is being removed."
              }
            ]
          },
          "readOnly": true
        },
        "standbyAvailabilityZone": {
          "type": "string",
          "default": "",
          "description": "Availability zone associated to the standby server created when high availability is set to SameZone or ZoneRedundant."
        }
      },
      "description": "High availability properties of a server."
    },
    "MaintenanceWindow": {
      "type": "object",
      "description": "Maintenance window properties of a server.",
      "properties": {
        "customWindow": {
          "type": "string",
          "default": "Disabled",
          "description": "Indicates whether custom window is enabled or disabled."
        },
        "startHour": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "description": "Start hour to be used for maintenance window."
        },
        "startMinute": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "description": "Start minute to be used for maintenance window."
        },
        "dayOfWeek": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "description": "Day of the week to be used for maintenance window."
        }
      }
    },
    "MaintenanceWindowForPatch": {
      "type": "object",
      "description": "Maintenance window properties of a server.",
      "properties": {
        "customWindow": {
          "type": "string",
          "description": "Indicates whether custom window is enabled or disabled."
        },
        "startHour": {
          "type": "integer",
          "format": "int32",
          "description": "Start hour to be used for maintenance window."
        },
        "startMinute": {
          "type": "integer",
          "format": "int32",
          "description": "Start minute to be used for maintenance window."
        },
        "dayOfWeek": {
          "type": "integer",
          "format": "int32",
          "description": "Day of the week to be used for maintenance window."
        }
      }
    },
    "Cluster": {
      "type": "object",
      "description": "Cluster properties of a server.",
      "properties": {
        "clusterSize": {
          "type": "integer",
          "format": "int32",
          "default": 0,
          "description": "Number of nodes assigned to the elastic cluster."
        },
        "defaultDatabaseName": {
          "type": "string",
          "description": "Default database name for the elastic cluster."
        }
      }
    },
    "RestartParameter": {
      "type": "object",
      "properties": {
        "restartWithFailover": {
          "type": "boolean",
          "description": "Indicates if restart the PostgreSQL database engine should failover or switch over from primary to standby. This only works if server has high availability enabled."
        },
        "failoverMode": {
          "type": "string",
          "description": "Failover mode.",
          "enum": [
            "PlannedFailover",
            "ForcedFailover",
            "PlannedSwitchover",
            "ForcedSwitchover"
          ],
          "x-ms-enum": {
            "name": "FailoverMode",
            "modelAsString": true,
            "values": [
              {
                "value": "PlannedFailover",
                "description": "Triggers a failover from primary to standby without killing the primary database process first. This is a graceful failover that attempts to preserve data consistency."
              },
              {
                "value": "ForcedFailover",
                "description": "Kills the primary database process first, then triggers the failover. This is more aggressive and used when the primary is unresponsive or in an unhealthy state."
              },
              {
                "value": "PlannedSwitchover",
                "description": "Similar to 'PlannedFailover' but prefers a switch over operation where roles are swapped between primary and standby."
              },
              {
                "value": "ForcedSwitchover",
                "description": "Kills the primary database process and then triggers a switch over with role swapping."
              }
            ]
          }
        }
      },
      "description": "PostgreSQL database engine restart parameters."
    },
    "ImpactRecord": {
      "type": "object",
      "properties": {
        "dimensionName": {
          "type": "string",
          "description": "Dimension name."
        },
        "unit": {
          "type": "string",
          "description": "Dimension unit."
        },
        "queryId": {
          "type": "integer",
          "format": "int64",
          "description": "Optional property that can be used to store the identifier of the query, if the metric is for a specific query."
        },
        "absoluteValue": {
          "type": "number",
          "format": "double",
          "description": "Absolute value."
        }
      },
      "description": "Impact on some metric if this recommended action is applied."
    },
    "ObjectRecommendationDetails": {
      "type": "object",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "Database name."
        },
        "schema": {
          "type": "string",
          "description": "Schema name."
        },
        "table": {
          "type": "string",
          "description": "Table name."
        },
        "indexType": {
          "type": "string",
          "description": "Index type."
        },
        "indexName": {
          "type": "string",
          "description": "Index name."
        },
        "indexColumns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Index columns."
        },
        "includedColumns": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Index included columns."
        }
      },
      "description": "Recommendation details for the recommended action.",
      "readOnly": true
    },
    "ObjectRecommendationProperties": {
      "type": "object",
      "properties": {
        "initialRecommendedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Creation time (UTC) of this recommendation."
        },
        "lastRecommendedTime": {
          "type": "string",
          "format": "date-time",
          "description": "Last time (UTC) that this recommendation was produced."
        },
        "timesRecommended": {
          "format": "int32",
          "type": "integer",
          "description": "Number of times this recommendation has been produced."
        },
        "improvedQueryIds": {
          "type": "array",
          "items": {
            "type": "integer",
            "format": "int64"
          },
          "description": "List of identifiers for all queries identified as targets for improvement if the recommendation is applied. The list is only populated for CREATE INDEX recommendations."
        },
        "recommendationReason": {
          "type": "string",
          "description": "Reason for this recommendation."
        },
        "currentState": {
          "type": "string",
          "description": "Current state."
        },
        "recommendationType": {
          "type": "string",
          "enum": [
            "CreateIndex",
            "DropIndex",
            "ReIndex",
            "AnalyzeTable"
          ],
          "x-ms-enum": {
            "name": "RecommendationType",
            "modelAsString": true
          },
          "description": "Type for this recommendation."
        },
        "implementationDetails": {
          "type": "object",
          "properties": {
            "method": {
              "type": "string",
              "description": "Method of implementation for recommended action."
            },
            "script": {
              "type": "string",
              "description": "Implementation script for the recommended action."
            }
          },
          "description": "Implementation details for the recommended action."
        },
        "analyzedWorkload": {
          "type": "object",
          "properties": {
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "Start time (UTC) of the workload analyzed."
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "End time (UTC) of the workload analyzed."
            },
            "queryCount": {
              "format": "int32",
              "type": "integer",
              "description": "Number of queries from the workload that were examined to produce this recommendation. For DROP INDEX recommendations it's 0 (zero)."
            }
          },
          "description": "Workload information for the recommended action."
        },
        "estimatedImpact": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "dimensionName": {
                "type": "string",
                "description": "Dimension name."
              },
              "unit": {
                "type": "string",
                "description": "Dimension unit."
              },
              "queryId": {
                "type": "integer",
                "format": "int64",
                "description": "Optional property that can be used to store the identifier of the query, if the metric is for a specific query."
              },
              "absoluteValue": {
                "type": "number",
                "format": "double",
                "description": "Absolute value."
              }
            },
            "description": "Impact on some metric if this recommended action is applied."
          },
          "x-ms-identifiers": [
            "dimensionName"
          ],
          "readOnly": true,
          "description": "Estimated impact of this recommended action."
        },
        "details": {
          "description": "Recommendation details for the recommended action.",
          "type": "object",
          "properties": {
            "databaseName": {
              "type": "string",
              "description": "Database name."
            },
            "schema": {
              "type": "string",
              "description": "Schema name."
            },
            "table": {
              "type": "string",
              "description": "Table name."
            },
            "indexType": {
              "type": "string",
              "description": "Index type."
            },
            "indexName": {
              "type": "string",
              "description": "Index name."
            },
            "indexColumns": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Index columns."
            },
            "includedColumns": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Index included columns."
            }
          },
          "readOnly": true
        }
      },
      "description": "Object recommendation properties.",
      "readOnly": true
    },
    "ObjectRecommendation": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "kind": {
          "type": "string",
          "description": "Always empty.",
          "x-ms-visibility": "internal"
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of an object recommendation.",
          "type": "object",
          "properties": {
            "initialRecommendedTime": {
              "type": "string",
              "format": "date-time",
              "description": "Creation time (UTC) of this recommendation."
            },
            "lastRecommendedTime": {
              "type": "string",
              "format": "date-time",
              "description": "Last time (UTC) that this recommendation was produced."
            },
            "timesRecommended": {
              "format": "int32",
              "type": "integer",
              "description": "Number of times this recommendation has been produced."
            },
            "improvedQueryIds": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              },
              "description": "List of identifiers for all queries identified as targets for improvement if the recommendation is applied. The list is only populated for CREATE INDEX recommendations."
            },
            "recommendationReason": {
              "type": "string",
              "description": "Reason for this recommendation."
            },
            "currentState": {
              "type": "string",
              "description": "Current state."
            },
            "recommendationType": {
              "type": "string",
              "enum": [
                "CreateIndex",
                "DropIndex",
                "ReIndex",
                "AnalyzeTable"
              ],
              "x-ms-enum": {
                "name": "RecommendationType",
                "modelAsString": true
              },
              "description": "Type for this recommendation."
            },
            "implementationDetails": {
              "type": "object",
              "properties": {
                "method": {
                  "type": "string",
                  "description": "Method of implementation for recommended action."
                },
                "script": {
                  "type": "string",
                  "description": "Implementation script for the recommended action."
                }
              },
              "description": "Implementation details for the recommended action."
            },
            "analyzedWorkload": {
              "type": "object",
              "properties": {
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Start time (UTC) of the workload analyzed."
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "End time (UTC) of the workload analyzed."
                },
                "queryCount": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Number of queries from the workload that were examined to produce this recommendation. For DROP INDEX recommendations it's 0 (zero)."
                }
              },
              "description": "Workload information for the recommended action."
            },
            "estimatedImpact": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dimensionName": {
                    "type": "string",
                    "description": "Dimension name."
                  },
                  "unit": {
                    "type": "string",
                    "description": "Dimension unit."
                  },
                  "queryId": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Optional property that can be used to store the identifier of the query, if the metric is for a specific query."
                  },
                  "absoluteValue": {
                    "type": "number",
                    "format": "double",
                    "description": "Absolute value."
                  }
                },
                "description": "Impact on some metric if this recommended action is applied."
              },
              "x-ms-identifiers": [
                "dimensionName"
              ],
              "readOnly": true,
              "description": "Estimated impact of this recommended action."
            },
            "details": {
              "description": "Recommendation details for the recommended action.",
              "type": "object",
              "properties": {
                "databaseName": {
                  "type": "string",
                  "description": "Database name."
                },
                "schema": {
                  "type": "string",
                  "description": "Schema name."
                },
                "table": {
                  "type": "string",
                  "description": "Table name."
                },
                "indexType": {
                  "type": "string",
                  "description": "Index type."
                },
                "indexName": {
                  "type": "string",
                  "description": "Index name."
                },
                "indexColumns": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Index columns."
                },
                "includedColumns": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "description": "Index included columns."
                }
              },
              "readOnly": true
            }
          },
          "readOnly": true
        }
      },
      "description": "Object recommendation properties."
    },
    "ObjectRecommendationList": {
      "description": "List of available object recommendations.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of available object recommendations.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "kind": {
                "type": "string",
                "description": "Always empty.",
                "x-ms-visibility": "internal"
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of an object recommendation.",
                "type": "object",
                "properties": {
                  "initialRecommendedTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Creation time (UTC) of this recommendation."
                  },
                  "lastRecommendedTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Last time (UTC) that this recommendation was produced."
                  },
                  "timesRecommended": {
                    "format": "int32",
                    "type": "integer",
                    "description": "Number of times this recommendation has been produced."
                  },
                  "improvedQueryIds": {
                    "type": "array",
                    "items": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "description": "List of identifiers for all queries identified as targets for improvement if the recommendation is applied. The list is only populated for CREATE INDEX recommendations."
                  },
                  "recommendationReason": {
                    "type": "string",
                    "description": "Reason for this recommendation."
                  },
                  "currentState": {
                    "type": "string",
                    "description": "Current state."
                  },
                  "recommendationType": {
                    "type": "string",
                    "enum": [
                      "CreateIndex",
                      "DropIndex",
                      "ReIndex",
                      "AnalyzeTable"
                    ],
                    "x-ms-enum": {
                      "name": "RecommendationType",
                      "modelAsString": true
                    },
                    "description": "Type for this recommendation."
                  },
                  "implementationDetails": {
                    "type": "object",
                    "properties": {
                      "method": {
                        "type": "string",
                        "description": "Method of implementation for recommended action."
                      },
                      "script": {
                        "type": "string",
                        "description": "Implementation script for the recommended action."
                      }
                    },
                    "description": "Implementation details for the recommended action."
                  },
                  "analyzedWorkload": {
                    "type": "object",
                    "properties": {
                      "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Start time (UTC) of the workload analyzed."
                      },
                      "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "End time (UTC) of the workload analyzed."
                      },
                      "queryCount": {
                        "format": "int32",
                        "type": "integer",
                        "description": "Number of queries from the workload that were examined to produce this recommendation. For DROP INDEX recommendations it's 0 (zero)."
                      }
                    },
                    "description": "Workload information for the recommended action."
                  },
                  "estimatedImpact": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dimensionName": {
                          "type": "string",
                          "description": "Dimension name."
                        },
                        "unit": {
                          "type": "string",
                          "description": "Dimension unit."
                        },
                        "queryId": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Optional property that can be used to store the identifier of the query, if the metric is for a specific query."
                        },
                        "absoluteValue": {
                          "type": "number",
                          "format": "double",
                          "description": "Absolute value."
                        }
                      },
                      "description": "Impact on some metric if this recommended action is applied."
                    },
                    "x-ms-identifiers": [
                      "dimensionName"
                    ],
                    "readOnly": true,
                    "description": "Estimated impact of this recommended action."
                  },
                  "details": {
                    "description": "Recommendation details for the recommended action.",
                    "type": "object",
                    "properties": {
                      "databaseName": {
                        "type": "string",
                        "description": "Database name."
                      },
                      "schema": {
                        "type": "string",
                        "description": "Schema name."
                      },
                      "table": {
                        "type": "string",
                        "description": "Table name."
                      },
                      "indexType": {
                        "type": "string",
                        "description": "Index type."
                      },
                      "indexName": {
                        "type": "string",
                        "description": "Index name."
                      },
                      "indexColumns": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Index columns."
                      },
                      "includedColumns": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        },
                        "description": "Index included columns."
                      }
                    },
                    "readOnly": true
                  }
                },
                "readOnly": true
              }
            },
            "description": "Object recommendation properties."
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "TuningOptions": {
      "type": "object",
      "description": "Impact on some metric if this recommended action is applied.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "TuningOptionsList": {
      "description": "List of server tuning options.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of available tuning options.",
          "uniqueItems": false,
          "type": "array",
          "items": {
            "type": "object",
            "description": "Impact on some metric if this recommended action is applied.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "format": "uri"
        }
      }
    },
    "VirtualEndpointResourceProperties": {
      "type": "object",
      "properties": {
        "endpointType": {
          "type": "string",
          "description": "Type of endpoint for the virtual endpoints.",
          "enum": [
            "ReadWrite"
          ],
          "x-ms-enum": {
            "name": "VirtualEndpointType",
            "modelAsString": true,
            "values": [
              {
                "value": "ReadWrite",
                "description": "Read-write endpoint."
              }
            ]
          }
        },
        "members": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Server that one of the virtual endpoints can refer to."
          },
          "description": "List of servers that one of the virtual endpoints can refer to."
        },
        "virtualEndpoints": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Virtual endpoints for a server."
          },
          "description": "List of virtual endpoints for a server.",
          "readOnly": true
        }
      },
      "description": "Properties of a pair of virtual endpoints."
    },
    "VirtualEndpoint": {
      "type": "object",
      "description": "Pair of virtual endpoints for a server.",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the pair of virtual endpoints.",
          "type": "object",
          "properties": {
            "endpointType": {
              "type": "string",
              "description": "Type of endpoint for the virtual endpoints.",
              "enum": [
                "ReadWrite"
              ],
              "x-ms-enum": {
                "name": "VirtualEndpointType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "ReadWrite",
                    "description": "Read-write endpoint."
                  }
                ]
              }
            },
            "members": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Server that one of the virtual endpoints can refer to."
              },
              "description": "List of servers that one of the virtual endpoints can refer to."
            },
            "virtualEndpoints": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Virtual endpoints for a server."
              },
              "description": "List of virtual endpoints for a server.",
              "readOnly": true
            }
          }
        },
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "VirtualEndpointResourceForPatch": {
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties of the pair of virtual endpoints.",
          "type": "object",
          "properties": {
            "endpointType": {
              "type": "string",
              "description": "Type of endpoint for the virtual endpoints.",
              "enum": [
                "ReadWrite"
              ],
              "x-ms-enum": {
                "name": "VirtualEndpointType",
                "modelAsString": true,
                "values": [
                  {
                    "value": "ReadWrite",
                    "description": "Read-write endpoint."
                  }
                ]
              }
            },
            "members": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Server that one of the virtual endpoints can refer to."
              },
              "description": "List of servers that one of the virtual endpoints can refer to."
            },
            "virtualEndpoints": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Virtual endpoints for a server."
              },
              "description": "List of virtual endpoints for a server.",
              "readOnly": true
            }
          }
        }
      },
      "description": "Pair of virtual endpoints for a server."
    },
    "VirtualEndpointsList": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Pair of virtual endpoints for a server.",
            "properties": {
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties of the pair of virtual endpoints.",
                "type": "object",
                "properties": {
                  "endpointType": {
                    "type": "string",
                    "description": "Type of endpoint for the virtual endpoints.",
                    "enum": [
                      "ReadWrite"
                    ],
                    "x-ms-enum": {
                      "name": "VirtualEndpointType",
                      "modelAsString": true,
                      "values": [
                        {
                          "value": "ReadWrite",
                          "description": "Read-write endpoint."
                        }
                      ]
                    }
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Server that one of the virtual endpoints can refer to."
                    },
                    "description": "List of servers that one of the virtual endpoints can refer to."
                  },
                  "virtualEndpoints": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Virtual endpoints for a server."
                    },
                    "description": "List of virtual endpoints for a server.",
                    "readOnly": true
                  }
                }
              },
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          },
          "description": "List of virtual endpoints."
        },
        "nextLink": {
          "description": "Link used to get the next page of results.",
          "type": "string",
          "format": "uri"
        }
      },
      "description": "List of virtual endpoints."
    },
    "VirtualNetworkSubnetUsageParameter": {
      "type": "object",
      "properties": {
        "virtualNetworkArmResourceId": {
          "type": "string",
          "description": "Virtual network resource id."
        }
      },
      "description": "Virtual network subnet usage parameter"
    },
    "VirtualNetworkSubnetUsageModel": {
      "type": "object",
      "properties": {
        "delegatedSubnetsUsage": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "subnetName": {
                "type": "string",
                "readOnly": true,
                "description": "Name of the delegated subnet for which IP addresses are in use"
              },
              "usage": {
                "type": "integer",
                "format": "int64",
                "readOnly": true,
                "description": "Number of IP addresses used by the delegated subnet"
              }
            },
            "description": "Delegated subnet usage data."
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "subnetName"
          ]
        },
        "location": {
          "type": "string",
          "readOnly": true,
          "description": "location of the delegated subnet usage"
        },
        "subscriptionId": {
          "type": "string",
          "readOnly": true,
          "description": "subscriptionId of the delegated subnet usage"
        }
      },
      "description": "Virtual network subnet usage data."
    },
    "DelegatedSubnetUsage": {
      "type": "object",
      "properties": {
        "subnetName": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the delegated subnet for which IP addresses are in use"
        },
        "usage": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Number of IP addresses used by the delegated subnet"
        }
      },
      "description": "Delegated subnet usage data."
    }
  },
  "parameters": {
    "ObjectIdParameter": {
      "name": "objectId",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Object identifier of the Microsoft Entra principal.",
      "x-ms-parameter-location": "method"
    },
    "ThreatProtectionNameParameter": {
      "name": "threatProtectionName",
      "in": "path",
      "description": "Name of the advanced threat protection settings.",
      "required": true,
      "type": "string",
      "enum": [
        "Default"
      ],
      "x-ms-enum": {
        "name": "ThreatProtectionName",
        "modelAsString": true,
        "values": [
          {
            "value": "Default",
            "description": "Default advanced threat protection settings."
          }
        ]
      },
      "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*",
      "x-ms-parameter-location": "method"
    },
    "BackupNameParameter": {
      "name": "backupName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the backup.",
      "x-ms-parameter-location": "method",
      "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*"
    },
    "ConfigurationNameParameter": {
      "name": "configurationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the configuration (also known as server parameter).",
      "minLength": 1,
      "pattern": "^[-\\w\\._]+$",
      "maxLength": 256,
      "x-ms-parameter-location": "method"
    },
    "DatabaseNameParameter": {
      "name": "databaseName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the database (case-sensitive). Exact database names can be retrieved by getting the list of all existing databases in a server.",
      "minLength": 1,
      "pattern": "^[a-zA-Z_][\\w\\-]{0,62}$",
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    },
    "FirewallRuleNameParameter": {
      "name": "firewallRuleName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of the firewall rule.",
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9][-_a-zA-Z0-9]{0,79}(?<!-)$",
      "maxLength": 80,
      "x-ms-parameter-location": "method"
    },
    "MigrationNameParameter": {
      "name": "migrationName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Name of migration.",
      "pattern": "^[a-z][a-z0-9]*$",
      "x-ms-parameter-location": "method"
    },
    "MigrationListFilterParameter": {
      "name": "migrationListFilter",
      "in": "query",
      "required": false,
      "enum": [
        "Active",
        "All"
      ],
      "type": "string",
      "description": "Migration list filter. Indicates if the request should retrieve only active migrations or all migrations. Defaults to Active.",
      "x-ms-enum": {
        "name": "MigrationListFilter",
        "modelAsString": true,
        "values": [
          {
            "value": "Active",
            "description": "Only active (in-progress) migrations."
          },
          {
            "value": "All",
            "description": "All migrations."
          }
        ]
      },
      "x-ms-parameter-location": "method"
    },
    "TuningOptionParameter": {
      "name": "tuningOption",
      "in": "path",
      "required": true,
      "type": "string",
      "enum": [
        "index",
        "table"
      ],
      "description": "The name of the tuning option.",
      "x-ms-enum": {
        "name": "TuningOption",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "RecommendationTypeParameter": {
      "name": "recommendationType",
      "in": "query",
      "required": false,
      "type": "string",
      "enum": [
        "CreateIndex",
        "DropIndex",
        "AnalyzeTable"
      ],
      "description": "Recommendations list filter. Retrieves recommendations based on type.",
      "x-ms-enum": {
        "name": "RecommendationType",
        "modelAsString": true
      },
      "x-ms-parameter-location": "method"
    },
    "VirtualEndpointNameParameter": {
      "name": "virtualEndpointName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "Base name of the virtual endpoints.",
      "pattern": "^[A-Za-z0-9][A-Za-z0-9-]{0,62}(?<!-)$",
      "minLength": 3,
      "maxLength": 63,
      "x-ms-parameter-location": "method"
    }
  }
}