{
  "swagger": "2.0",
  "info": {
    "title": "Azure impact",
    "version": "2024-05-01-preview-preview",
    "description": "Azure impact service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/providers/Microsoft.Impact/operations": {
      "get": {
        "operationId": "Operations_List",
        "tags": [
          "Operations"
        ],
        "description": "List the operations for the provider",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A list of REST API operations supported by an Azure Resource Provider. It contains an URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "List of operations supported by the resource provider",
                  "items": {
                    "type": "object",
                    "title": "REST API Operation",
                    "description": "Details of a REST API operation, returned from the Resource Provider Operations API",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of the operation, as per Resource-Based Access Control (RBAC). Examples: \"Microsoft.Compute/virtualMachines/write\", \"Microsoft.Compute/virtualMachines/capture/action\"",
                        "readOnly": true
                      },
                      "isDataAction": {
                        "type": "boolean",
                        "description": "Whether the operation applies to data-plane. This is \"true\" for data-plane operations and \"false\" for ARM/control-plane operations.",
                        "readOnly": true
                      },
                      "display": {
                        "type": "object",
                        "description": "Localized display information for this particular operation.",
                        "properties": {
                          "provider": {
                            "type": "string",
                            "description": "The localized friendly form of the resource provider name, e.g. \"Microsoft Monitoring Insights\" or \"Microsoft Compute\".",
                            "readOnly": true
                          },
                          "resource": {
                            "type": "string",
                            "description": "The localized friendly name of the resource type related to this operation. E.g. \"Virtual Machines\" or \"Job Schedule Collections\".",
                            "readOnly": true
                          },
                          "operation": {
                            "type": "string",
                            "description": "The concise, localized friendly name for the operation; suitable for dropdowns. E.g. \"Create or Update Virtual Machine\", \"Restart Virtual Machine\".",
                            "readOnly": true
                          },
                          "description": {
                            "type": "string",
                            "description": "The short, localized friendly description of the operation; suitable for tool tips and detailed views.",
                            "readOnly": true
                          }
                        }
                      },
                      "origin": {
                        "type": "string",
                        "description": "The intended executor of the operation; as in Resource Based Access Control (RBAC) and audit logs UX. Default value is \"user,system\"",
                        "enum": [
                          "user",
                          "system",
                          "user,system"
                        ],
                        "x-ms-enum": {
                          "name": "Origin",
                          "modelAsString": true
                        },
                        "readOnly": true
                      },
                      "actionType": {
                        "type": "string",
                        "description": "Enum. Indicates the action type. \"Internal\" refers to actions that are for internal only APIs.",
                        "enum": [
                          "Internal"
                        ],
                        "x-ms-enum": {
                          "name": "ActionType",
                          "modelAsString": true
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of operation list results (if there are any).",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Impact/connectors": {
      "get": {
        "operationId": "Connectors_ListBySubscription",
        "tags": [
          "Connectors"
        ],
        "description": "List Connector resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Connector list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Connector items on this page",
                  "items": {
                    "type": "object",
                    "description": "A connector is a resource that can be used to proactively report impacts against workloads in Azure to Microsoft.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Resource provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Provisioning Succeeded"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Provisioning Failed"
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Provisioning Canceled"
                                }
                              ]
                            }
                          },
                          "connectorId": {
                            "type": "string",
                            "description": "unique id of the connector.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "description": "tenant id of this connector",
                            "readOnly": true
                          },
                          "connectorType": {
                            "description": "connector type",
                            "type": "string",
                            "enum": [
                              "AzureMonitor"
                            ],
                            "x-ms-enum": {
                              "name": "Platform",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "AzureMonitor",
                                  "value": "AzureMonitor",
                                  "description": "Type of Azure Monitor"
                                }
                              ]
                            }
                          },
                          "lastRunTimeStamp": {
                            "type": "string",
                            "format": "date-time",
                            "description": "last run time stamp of this connector in UTC time zone",
                            "readOnly": true
                          }
                        },
                        "required": [
                          "connectorId",
                          "tenantId",
                          "connectorType",
                          "lastRunTimeStamp"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Impact/connectors/{connectorName}": {
      "get": {
        "operationId": "Connectors_Get",
        "tags": [
          "Connectors"
        ],
        "description": "Get a Connector",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "The name of the connector",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A connector is a resource that can be used to proactively report impacts against workloads in Azure to Microsoft.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "connectorId": {
                      "type": "string",
                      "description": "unique id of the connector.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "tenant id of this connector",
                      "readOnly": true
                    },
                    "connectorType": {
                      "description": "connector type",
                      "type": "string",
                      "enum": [
                        "AzureMonitor"
                      ],
                      "x-ms-enum": {
                        "name": "Platform",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AzureMonitor",
                            "value": "AzureMonitor",
                            "description": "Type of Azure Monitor"
                          }
                        ]
                      }
                    },
                    "lastRunTimeStamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "last run time stamp of this connector in UTC time zone",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "connectorId",
                    "tenantId",
                    "connectorType",
                    "lastRunTimeStamp"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Connectors_CreateOrUpdate",
        "tags": [
          "Connectors"
        ],
        "description": "Create a Connector",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "The name of the connector",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "A connector is a resource that can be used to proactively report impacts against workloads in Azure to Microsoft.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "connectorId": {
                      "type": "string",
                      "description": "unique id of the connector.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "tenant id of this connector",
                      "readOnly": true
                    },
                    "connectorType": {
                      "description": "connector type",
                      "type": "string",
                      "enum": [
                        "AzureMonitor"
                      ],
                      "x-ms-enum": {
                        "name": "Platform",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AzureMonitor",
                            "value": "AzureMonitor",
                            "description": "Type of Azure Monitor"
                          }
                        ]
                      }
                    },
                    "lastRunTimeStamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "last run time stamp of this connector in UTC time zone",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "connectorId",
                    "tenantId",
                    "connectorType",
                    "lastRunTimeStamp"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Connector' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "A connector is a resource that can be used to proactively report impacts against workloads in Azure to Microsoft.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "connectorId": {
                      "type": "string",
                      "description": "unique id of the connector.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "tenant id of this connector",
                      "readOnly": true
                    },
                    "connectorType": {
                      "description": "connector type",
                      "type": "string",
                      "enum": [
                        "AzureMonitor"
                      ],
                      "x-ms-enum": {
                        "name": "Platform",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AzureMonitor",
                            "value": "AzureMonitor",
                            "description": "Type of Azure Monitor"
                          }
                        ]
                      }
                    },
                    "lastRunTimeStamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "last run time stamp of this connector in UTC time zone",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "connectorId",
                    "tenantId",
                    "connectorType",
                    "lastRunTimeStamp"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Connector' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "A connector is a resource that can be used to proactively report impacts against workloads in Azure to Microsoft.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "connectorId": {
                      "type": "string",
                      "description": "unique id of the connector.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "tenant id of this connector",
                      "readOnly": true
                    },
                    "connectorType": {
                      "description": "connector type",
                      "type": "string",
                      "enum": [
                        "AzureMonitor"
                      ],
                      "x-ms-enum": {
                        "name": "Platform",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AzureMonitor",
                            "value": "AzureMonitor",
                            "description": "Type of Azure Monitor"
                          }
                        ]
                      }
                    },
                    "lastRunTimeStamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "last run time stamp of this connector in UTC time zone",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "connectorId",
                    "tenantId",
                    "connectorType",
                    "lastRunTimeStamp"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Connectors_Update",
        "tags": [
          "Connectors"
        ],
        "description": "Update a Connector",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "The name of the connector",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "properties",
            "in": "body",
            "description": "The resource properties to be updated.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The type used for update operations of the Connector.",
              "properties": {
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "connectorType": {
                      "description": "connector type",
                      "type": "string",
                      "enum": [
                        "AzureMonitor"
                      ],
                      "x-ms-enum": {
                        "name": "Platform",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AzureMonitor",
                            "value": "AzureMonitor",
                            "description": "Type of Azure Monitor"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "A connector is a resource that can be used to proactively report impacts against workloads in Azure to Microsoft.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "connectorId": {
                      "type": "string",
                      "description": "unique id of the connector.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "description": "tenant id of this connector",
                      "readOnly": true
                    },
                    "connectorType": {
                      "description": "connector type",
                      "type": "string",
                      "enum": [
                        "AzureMonitor"
                      ],
                      "x-ms-enum": {
                        "name": "Platform",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "AzureMonitor",
                            "value": "AzureMonitor",
                            "description": "Type of Azure Monitor"
                          }
                        ]
                      }
                    },
                    "lastRunTimeStamp": {
                      "type": "string",
                      "format": "date-time",
                      "description": "last run time stamp of this connector in UTC time zone",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "connectorId",
                    "tenantId",
                    "connectorType",
                    "lastRunTimeStamp"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Connectors_Delete",
        "tags": [
          "Connectors"
        ],
        "description": "Delete a Connector",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "connectorName",
            "in": "path",
            "description": "The name of the connector",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Impact/impactCategories": {
      "get": {
        "operationId": "ImpactCategories_ListBySubscription",
        "tags": [
          "ImpactCategories"
        ],
        "description": "List ImpactCategory resources by subscription",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "categoryName",
            "in": "query",
            "description": "Filter by category name ",
            "required": false,
            "type": "string",
            "minLength": 1,
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.]*[a-zA-Z0-9]{3,180}$",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "resourceType",
            "in": "query",
            "description": "Filter by resource type",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ImpactCategory list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ImpactCategory items on this page",
                  "items": {
                    "type": "object",
                    "description": "ImpactCategory resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Resource provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Provisioning Succeeded"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Provisioning Failed"
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Provisioning Canceled"
                                }
                              ]
                            }
                          },
                          "categoryId": {
                            "type": "string",
                            "description": "Unique ID of the category",
                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
                          },
                          "parentCategoryId": {
                            "type": "string",
                            "description": "Unique ID of the parent category",
                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
                          },
                          "description": {
                            "type": "string",
                            "description": "Description of the category"
                          },
                          "requiredImpactProperties": {
                            "type": "array",
                            "description": "The workloadImpact properties which are required when reporting with the impact category",
                            "items": {
                              "type": "object",
                              "description": "Required impact properties",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the property"
                                },
                                "allowedValues": {
                                  "type": "array",
                                  "description": "Allowed values values for the property",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              },
                              "required": [
                                "name"
                              ]
                            },
                            "x-ms-identifiers": []
                          }
                        },
                        "required": [
                          "categoryId"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Impact/impactCategories/{impactCategoryName}": {
      "get": {
        "operationId": "ImpactCategories_Get",
        "tags": [
          "ImpactCategories"
        ],
        "description": "Get a ImpactCategory",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "impactCategoryName",
            "in": "path",
            "description": "Name of the impact category",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.]*[a-zA-Z0-9]{3,180}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "ImpactCategory resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "categoryId": {
                      "type": "string",
                      "description": "Unique ID of the category",
                      "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
                    },
                    "parentCategoryId": {
                      "type": "string",
                      "description": "Unique ID of the parent category",
                      "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the category"
                    },
                    "requiredImpactProperties": {
                      "type": "array",
                      "description": "The workloadImpact properties which are required when reporting with the impact category",
                      "items": {
                        "type": "object",
                        "description": "Required impact properties",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the property"
                          },
                          "allowedValues": {
                            "type": "array",
                            "description": "Allowed values values for the property",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "name"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "required": [
                    "categoryId"
                  ]
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Impact/workloadImpacts": {
      "get": {
        "operationId": "WorkloadImpacts_ListBySubscription",
        "tags": [
          "WorkloadImpacts"
        ],
        "description": "List WorkloadImpact resources by subscription ID",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a WorkloadImpact list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The WorkloadImpact items on this page",
                  "items": {
                    "type": "object",
                    "description": "Workload Impact properties",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Resource provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Provisioning Succeeded"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Provisioning Failed"
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Provisioning Canceled"
                                }
                              ]
                            }
                          },
                          "startDateTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time at which impact was observed "
                          },
                          "endDateTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time at which impact has ended "
                          },
                          "impactedResourceId": {
                            "type": "string",
                            "description": "Azure resource id of the impacted resource"
                          },
                          "impactUniqueId": {
                            "type": "string",
                            "description": "Unique ID of the impact (UUID)",
                            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                            "readOnly": true
                          },
                          "reportedTimeUtc": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time at which impact is reported",
                            "readOnly": true
                          },
                          "impactCategory": {
                            "type": "string",
                            "description": "Category of the impact,  details can found from /impactCategories API"
                          },
                          "impactDescription": {
                            "type": "string",
                            "description": "A detailed description of the impact"
                          },
                          "armCorrelationIds": {
                            "type": "array",
                            "description": "The ARM correlation ids, this is important field for control plane related impacts",
                            "items": {
                              "type": "string"
                            }
                          },
                          "performance": {
                            "type": "array",
                            "description": "Details about performance issue. Applicable for performance impacts.",
                            "items": {
                              "type": "object",
                              "description": "Details about impacted performance metrics. Applicable for performance related impact",
                              "properties": {
                                "metricName": {
                                  "type": "string",
                                  "description": "Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API"
                                },
                                "expected": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "Threshold value for the metric"
                                },
                                "actual": {
                                  "type": "number",
                                  "format": "double",
                                  "description": "Observed value for the metric"
                                },
                                "expectedValueRange": {
                                  "description": "Max and Min Threshold values for the metric",
                                  "type": "object",
                                  "properties": {
                                    "min": {
                                      "type": "number",
                                      "format": "double",
                                      "description": "Min threshold value for the metric"
                                    },
                                    "max": {
                                      "type": "number",
                                      "format": "double",
                                      "description": "Max threshold value for the metric"
                                    }
                                  },
                                  "required": [
                                    "min",
                                    "max"
                                  ]
                                },
                                "unit": {
                                  "description": "Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other",
                                  "type": "string",
                                  "enum": [
                                    "ByteSeconds",
                                    "Bytes",
                                    "BytesPerSecond",
                                    "Cores",
                                    "Count",
                                    "CountPerSecond",
                                    "MilliCores",
                                    "MilliSeconds",
                                    "NanoCores",
                                    "Percent",
                                    "Seconds",
                                    "Other"
                                  ],
                                  "x-ms-enum": {
                                    "name": "MetricUnit",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "ByteSeconds",
                                        "value": "ByteSeconds",
                                        "description": "When measurement is in ByteSeconds"
                                      },
                                      {
                                        "name": "Bytes",
                                        "value": "Bytes",
                                        "description": "When measurement is in Bytes"
                                      },
                                      {
                                        "name": "BytesPerSecond",
                                        "value": "BytesPerSecond",
                                        "description": "When measurement is in BytesPerSecond"
                                      },
                                      {
                                        "name": "Cores",
                                        "value": "Cores",
                                        "description": "When measurement is in Cores"
                                      },
                                      {
                                        "name": "Count",
                                        "value": "Count",
                                        "description": "When measurement is in Count"
                                      },
                                      {
                                        "name": "CountPerSecond",
                                        "value": "CountPerSecond",
                                        "description": "When measurement is in CountPerSecond"
                                      },
                                      {
                                        "name": "MilliCores",
                                        "value": "MilliCores",
                                        "description": "When measurement is in MilliCores"
                                      },
                                      {
                                        "name": "MilliSeconds",
                                        "value": "MilliSeconds",
                                        "description": "When measurement is in MilliSeconds"
                                      },
                                      {
                                        "name": "NanoCores",
                                        "value": "NanoCores",
                                        "description": "When measurement is in NanoCores"
                                      },
                                      {
                                        "name": "Percent",
                                        "value": "Percent",
                                        "description": "When measurement is in Percent"
                                      },
                                      {
                                        "name": "Seconds",
                                        "value": "Seconds",
                                        "description": "When measurement is in Seconds"
                                      },
                                      {
                                        "name": "Other",
                                        "value": "Other",
                                        "description": "When measurement is in Other than listed"
                                      }
                                    ]
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          },
                          "connectivity": {
                            "description": "Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue",
                            "type": "object",
                            "properties": {
                              "protocol": {
                                "description": "Protocol used for the connection",
                                "type": "string",
                                "enum": [
                                  "TCP",
                                  "UDP",
                                  "HTTP",
                                  "HTTPS",
                                  "RDP",
                                  "FTP",
                                  "SSH",
                                  "Other"
                                ],
                                "x-ms-enum": {
                                  "name": "Protocol",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "TCP",
                                      "value": "TCP",
                                      "description": "When communication protocol is TCP"
                                    },
                                    {
                                      "name": "UDP",
                                      "value": "UDP",
                                      "description": "When communication protocol is UDP"
                                    },
                                    {
                                      "name": "HTTP",
                                      "value": "HTTP",
                                      "description": "When communication protocol is HTTP"
                                    },
                                    {
                                      "name": "HTTPS",
                                      "value": "HTTPS",
                                      "description": "When communication protocol is HTTPS"
                                    },
                                    {
                                      "name": "RDP",
                                      "value": "RDP",
                                      "description": "When communication protocol is RDP"
                                    },
                                    {
                                      "name": "FTP",
                                      "value": "FTP",
                                      "description": "When communication protocol is FTP"
                                    },
                                    {
                                      "name": "SSH",
                                      "value": "SSH",
                                      "description": "When communication protocol is SSH"
                                    },
                                    {
                                      "name": "Other",
                                      "value": "Other",
                                      "description": "When communication protocol is Other"
                                    }
                                  ]
                                }
                              },
                              "port": {
                                "type": "integer",
                                "format": "int32",
                                "description": "Port number for the connection"
                              },
                              "source": {
                                "description": "Source from which the connection was attempted",
                                "type": "object",
                                "properties": {
                                  "azureResourceId": {
                                    "type": "string",
                                    "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                                    "pattern": "(\\/[0-9a-zA-Z]+)*"
                                  }
                                }
                              },
                              "target": {
                                "description": "target which connection was attempted",
                                "type": "object",
                                "properties": {
                                  "azureResourceId": {
                                    "type": "string",
                                    "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                                    "pattern": "(\\/[0-9a-zA-Z]+)*"
                                  }
                                }
                              }
                            }
                          },
                          "additionalProperties": {
                            "type": "object",
                            "description": "Additional fields related to impact, applicable fields per resource type are list under /impactCategories API",
                            "additionalProperties": {}
                          },
                          "errorDetails": {
                            "description": "ARM error code and error message associated with the impact",
                            "type": "object",
                            "properties": {
                              "errorCode": {
                                "type": "string",
                                "description": "ARM Error code associated with the impact."
                              },
                              "errorMessage": {
                                "type": "string",
                                "description": "ARM Error Message associated with the impact"
                              }
                            }
                          },
                          "workload": {
                            "description": "Information about the impacted workload",
                            "type": "object",
                            "properties": {
                              "context": {
                                "type": "string",
                                "description": "the scenario for the workload"
                              },
                              "toolset": {
                                "description": "Tool used to interact with Azure. SDK, AzPortal, etc.., Other",
                                "type": "string",
                                "enum": [
                                  "Terraform",
                                  "Puppet",
                                  "Chef",
                                  "SDK",
                                  "Ansible",
                                  "ARM",
                                  "Portal",
                                  "Shell",
                                  "Other"
                                ],
                                "x-ms-enum": {
                                  "name": "Toolset",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Terraform",
                                      "value": "Terraform",
                                      "description": "If communication toolset is Terraform"
                                    },
                                    {
                                      "name": "Puppet",
                                      "value": "Puppet",
                                      "description": "If communication toolset is Puppet"
                                    },
                                    {
                                      "name": "Chef",
                                      "value": "Chef",
                                      "description": "If communication toolset is Chef"
                                    },
                                    {
                                      "name": "SDK",
                                      "value": "SDK",
                                      "description": "If communication toolset is SDK"
                                    },
                                    {
                                      "name": "Ansible",
                                      "value": "Ansible",
                                      "description": "If communication toolset is Ansible"
                                    },
                                    {
                                      "name": "ARM",
                                      "value": "ARM",
                                      "description": "If communication toolset is ARM"
                                    },
                                    {
                                      "name": "Portal",
                                      "value": "Portal",
                                      "description": "If communication toolset is Portal"
                                    },
                                    {
                                      "name": "Shell",
                                      "value": "Shell",
                                      "description": "If communication toolset is Shell"
                                    },
                                    {
                                      "name": "Other",
                                      "value": "Other",
                                      "description": "If communication toolset is Other"
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "impactGroupId": {
                            "type": "string",
                            "description": "Use this field to group impacts"
                          },
                          "confidenceLevel": {
                            "description": "Degree of confidence on the impact being a platform issue",
                            "type": "string",
                            "enum": [
                              "Low",
                              "Medium",
                              "High"
                            ],
                            "x-ms-enum": {
                              "name": "ConfidenceLevel",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Low",
                                  "value": "Low",
                                  "description": "Low confidence on azure being the source of impact"
                                },
                                {
                                  "name": "Medium",
                                  "value": "Medium",
                                  "description": "Medium confidence on azure being the source of impact"
                                },
                                {
                                  "name": "High",
                                  "value": "High",
                                  "description": "High confidence on azure being the source of impact"
                                }
                              ]
                            }
                          },
                          "clientIncidentDetails": {
                            "description": "Client incident details ex: incidentId , incident source",
                            "type": "object",
                            "properties": {
                              "clientIncidentId": {
                                "type": "string",
                                "description": "Client incident id. ex : id of the incident created to investigate and address the impact if any."
                              },
                              "clientIncidentSource": {
                                "description": "Client incident source. ex : source system name where the incident is created",
                                "type": "string",
                                "enum": [
                                  "AzureDevops",
                                  "ICM",
                                  "Jira",
                                  "ServiceNow",
                                  "Other"
                                ],
                                "x-ms-enum": {
                                  "name": "IncidentSource",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "AzureDevops",
                                      "value": "AzureDevops",
                                      "description": "When source of Incident is AzureDevops"
                                    },
                                    {
                                      "name": "ICM",
                                      "value": "ICM",
                                      "description": "When source of Incident is Microsoft ICM"
                                    },
                                    {
                                      "name": "Jira",
                                      "value": "Jira",
                                      "description": "When source of Incident is Jira"
                                    },
                                    {
                                      "name": "ServiceNow",
                                      "value": "ServiceNow",
                                      "description": "When source of Incident is ServiceNow"
                                    },
                                    {
                                      "name": "Other",
                                      "value": "Other",
                                      "description": "When source of Incident is Other"
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "startDateTime",
                          "impactedResourceId",
                          "impactCategory"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Impact/workloadImpacts/{workloadImpactName}": {
      "get": {
        "operationId": "WorkloadImpacts_Get",
        "tags": [
          "WorkloadImpacts"
        ],
        "description": "Get a WorkloadImpact",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workloadImpactName",
            "in": "path",
            "description": "workloadImpact resource ",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-:]*[a-zA-Z0-9]{3,120}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Workload Impact properties",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "startDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which impact was observed "
                    },
                    "endDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which impact has ended "
                    },
                    "impactedResourceId": {
                      "type": "string",
                      "description": "Azure resource id of the impacted resource"
                    },
                    "impactUniqueId": {
                      "type": "string",
                      "description": "Unique ID of the impact (UUID)",
                      "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                      "readOnly": true
                    },
                    "reportedTimeUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which impact is reported",
                      "readOnly": true
                    },
                    "impactCategory": {
                      "type": "string",
                      "description": "Category of the impact,  details can found from /impactCategories API"
                    },
                    "impactDescription": {
                      "type": "string",
                      "description": "A detailed description of the impact"
                    },
                    "armCorrelationIds": {
                      "type": "array",
                      "description": "The ARM correlation ids, this is important field for control plane related impacts",
                      "items": {
                        "type": "string"
                      }
                    },
                    "performance": {
                      "type": "array",
                      "description": "Details about performance issue. Applicable for performance impacts.",
                      "items": {
                        "type": "object",
                        "description": "Details about impacted performance metrics. Applicable for performance related impact",
                        "properties": {
                          "metricName": {
                            "type": "string",
                            "description": "Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API"
                          },
                          "expected": {
                            "type": "number",
                            "format": "double",
                            "description": "Threshold value for the metric"
                          },
                          "actual": {
                            "type": "number",
                            "format": "double",
                            "description": "Observed value for the metric"
                          },
                          "expectedValueRange": {
                            "description": "Max and Min Threshold values for the metric",
                            "type": "object",
                            "properties": {
                              "min": {
                                "type": "number",
                                "format": "double",
                                "description": "Min threshold value for the metric"
                              },
                              "max": {
                                "type": "number",
                                "format": "double",
                                "description": "Max threshold value for the metric"
                              }
                            },
                            "required": [
                              "min",
                              "max"
                            ]
                          },
                          "unit": {
                            "description": "Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other",
                            "type": "string",
                            "enum": [
                              "ByteSeconds",
                              "Bytes",
                              "BytesPerSecond",
                              "Cores",
                              "Count",
                              "CountPerSecond",
                              "MilliCores",
                              "MilliSeconds",
                              "NanoCores",
                              "Percent",
                              "Seconds",
                              "Other"
                            ],
                            "x-ms-enum": {
                              "name": "MetricUnit",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ByteSeconds",
                                  "value": "ByteSeconds",
                                  "description": "When measurement is in ByteSeconds"
                                },
                                {
                                  "name": "Bytes",
                                  "value": "Bytes",
                                  "description": "When measurement is in Bytes"
                                },
                                {
                                  "name": "BytesPerSecond",
                                  "value": "BytesPerSecond",
                                  "description": "When measurement is in BytesPerSecond"
                                },
                                {
                                  "name": "Cores",
                                  "value": "Cores",
                                  "description": "When measurement is in Cores"
                                },
                                {
                                  "name": "Count",
                                  "value": "Count",
                                  "description": "When measurement is in Count"
                                },
                                {
                                  "name": "CountPerSecond",
                                  "value": "CountPerSecond",
                                  "description": "When measurement is in CountPerSecond"
                                },
                                {
                                  "name": "MilliCores",
                                  "value": "MilliCores",
                                  "description": "When measurement is in MilliCores"
                                },
                                {
                                  "name": "MilliSeconds",
                                  "value": "MilliSeconds",
                                  "description": "When measurement is in MilliSeconds"
                                },
                                {
                                  "name": "NanoCores",
                                  "value": "NanoCores",
                                  "description": "When measurement is in NanoCores"
                                },
                                {
                                  "name": "Percent",
                                  "value": "Percent",
                                  "description": "When measurement is in Percent"
                                },
                                {
                                  "name": "Seconds",
                                  "value": "Seconds",
                                  "description": "When measurement is in Seconds"
                                },
                                {
                                  "name": "Other",
                                  "value": "Other",
                                  "description": "When measurement is in Other than listed"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "connectivity": {
                      "description": "Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue",
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "description": "Protocol used for the connection",
                          "type": "string",
                          "enum": [
                            "TCP",
                            "UDP",
                            "HTTP",
                            "HTTPS",
                            "RDP",
                            "FTP",
                            "SSH",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "Protocol",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "TCP",
                                "value": "TCP",
                                "description": "When communication protocol is TCP"
                              },
                              {
                                "name": "UDP",
                                "value": "UDP",
                                "description": "When communication protocol is UDP"
                              },
                              {
                                "name": "HTTP",
                                "value": "HTTP",
                                "description": "When communication protocol is HTTP"
                              },
                              {
                                "name": "HTTPS",
                                "value": "HTTPS",
                                "description": "When communication protocol is HTTPS"
                              },
                              {
                                "name": "RDP",
                                "value": "RDP",
                                "description": "When communication protocol is RDP"
                              },
                              {
                                "name": "FTP",
                                "value": "FTP",
                                "description": "When communication protocol is FTP"
                              },
                              {
                                "name": "SSH",
                                "value": "SSH",
                                "description": "When communication protocol is SSH"
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "When communication protocol is Other"
                              }
                            ]
                          }
                        },
                        "port": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Port number for the connection"
                        },
                        "source": {
                          "description": "Source from which the connection was attempted",
                          "type": "object",
                          "properties": {
                            "azureResourceId": {
                              "type": "string",
                              "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                              "pattern": "(\\/[0-9a-zA-Z]+)*"
                            }
                          }
                        },
                        "target": {
                          "description": "target which connection was attempted",
                          "type": "object",
                          "properties": {
                            "azureResourceId": {
                              "type": "string",
                              "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                              "pattern": "(\\/[0-9a-zA-Z]+)*"
                            }
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "type": "object",
                      "description": "Additional fields related to impact, applicable fields per resource type are list under /impactCategories API",
                      "additionalProperties": {}
                    },
                    "errorDetails": {
                      "description": "ARM error code and error message associated with the impact",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "type": "string",
                          "description": "ARM Error code associated with the impact."
                        },
                        "errorMessage": {
                          "type": "string",
                          "description": "ARM Error Message associated with the impact"
                        }
                      }
                    },
                    "workload": {
                      "description": "Information about the impacted workload",
                      "type": "object",
                      "properties": {
                        "context": {
                          "type": "string",
                          "description": "the scenario for the workload"
                        },
                        "toolset": {
                          "description": "Tool used to interact with Azure. SDK, AzPortal, etc.., Other",
                          "type": "string",
                          "enum": [
                            "Terraform",
                            "Puppet",
                            "Chef",
                            "SDK",
                            "Ansible",
                            "ARM",
                            "Portal",
                            "Shell",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "Toolset",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Terraform",
                                "value": "Terraform",
                                "description": "If communication toolset is Terraform"
                              },
                              {
                                "name": "Puppet",
                                "value": "Puppet",
                                "description": "If communication toolset is Puppet"
                              },
                              {
                                "name": "Chef",
                                "value": "Chef",
                                "description": "If communication toolset is Chef"
                              },
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "If communication toolset is SDK"
                              },
                              {
                                "name": "Ansible",
                                "value": "Ansible",
                                "description": "If communication toolset is Ansible"
                              },
                              {
                                "name": "ARM",
                                "value": "ARM",
                                "description": "If communication toolset is ARM"
                              },
                              {
                                "name": "Portal",
                                "value": "Portal",
                                "description": "If communication toolset is Portal"
                              },
                              {
                                "name": "Shell",
                                "value": "Shell",
                                "description": "If communication toolset is Shell"
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "If communication toolset is Other"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "impactGroupId": {
                      "type": "string",
                      "description": "Use this field to group impacts"
                    },
                    "confidenceLevel": {
                      "description": "Degree of confidence on the impact being a platform issue",
                      "type": "string",
                      "enum": [
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "ConfidenceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Low",
                            "value": "Low",
                            "description": "Low confidence on azure being the source of impact"
                          },
                          {
                            "name": "Medium",
                            "value": "Medium",
                            "description": "Medium confidence on azure being the source of impact"
                          },
                          {
                            "name": "High",
                            "value": "High",
                            "description": "High confidence on azure being the source of impact"
                          }
                        ]
                      }
                    },
                    "clientIncidentDetails": {
                      "description": "Client incident details ex: incidentId , incident source",
                      "type": "object",
                      "properties": {
                        "clientIncidentId": {
                          "type": "string",
                          "description": "Client incident id. ex : id of the incident created to investigate and address the impact if any."
                        },
                        "clientIncidentSource": {
                          "description": "Client incident source. ex : source system name where the incident is created",
                          "type": "string",
                          "enum": [
                            "AzureDevops",
                            "ICM",
                            "Jira",
                            "ServiceNow",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "IncidentSource",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureDevops",
                                "value": "AzureDevops",
                                "description": "When source of Incident is AzureDevops"
                              },
                              {
                                "name": "ICM",
                                "value": "ICM",
                                "description": "When source of Incident is Microsoft ICM"
                              },
                              {
                                "name": "Jira",
                                "value": "Jira",
                                "description": "When source of Incident is Jira"
                              },
                              {
                                "name": "ServiceNow",
                                "value": "ServiceNow",
                                "description": "When source of Incident is ServiceNow"
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "When source of Incident is Other"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "startDateTime",
                    "impactedResourceId",
                    "impactCategory"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "WorkloadImpacts_Create",
        "tags": [
          "WorkloadImpacts"
        ],
        "description": "Create a WorkloadImpact",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workloadImpactName",
            "in": "path",
            "description": "workloadImpact resource ",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-:]*[a-zA-Z0-9]{3,120}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Workload Impact properties",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "startDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which impact was observed "
                    },
                    "endDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which impact has ended "
                    },
                    "impactedResourceId": {
                      "type": "string",
                      "description": "Azure resource id of the impacted resource"
                    },
                    "impactUniqueId": {
                      "type": "string",
                      "description": "Unique ID of the impact (UUID)",
                      "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                      "readOnly": true
                    },
                    "reportedTimeUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which impact is reported",
                      "readOnly": true
                    },
                    "impactCategory": {
                      "type": "string",
                      "description": "Category of the impact,  details can found from /impactCategories API"
                    },
                    "impactDescription": {
                      "type": "string",
                      "description": "A detailed description of the impact"
                    },
                    "armCorrelationIds": {
                      "type": "array",
                      "description": "The ARM correlation ids, this is important field for control plane related impacts",
                      "items": {
                        "type": "string"
                      }
                    },
                    "performance": {
                      "type": "array",
                      "description": "Details about performance issue. Applicable for performance impacts.",
                      "items": {
                        "type": "object",
                        "description": "Details about impacted performance metrics. Applicable for performance related impact",
                        "properties": {
                          "metricName": {
                            "type": "string",
                            "description": "Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API"
                          },
                          "expected": {
                            "type": "number",
                            "format": "double",
                            "description": "Threshold value for the metric"
                          },
                          "actual": {
                            "type": "number",
                            "format": "double",
                            "description": "Observed value for the metric"
                          },
                          "expectedValueRange": {
                            "description": "Max and Min Threshold values for the metric",
                            "type": "object",
                            "properties": {
                              "min": {
                                "type": "number",
                                "format": "double",
                                "description": "Min threshold value for the metric"
                              },
                              "max": {
                                "type": "number",
                                "format": "double",
                                "description": "Max threshold value for the metric"
                              }
                            },
                            "required": [
                              "min",
                              "max"
                            ]
                          },
                          "unit": {
                            "description": "Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other",
                            "type": "string",
                            "enum": [
                              "ByteSeconds",
                              "Bytes",
                              "BytesPerSecond",
                              "Cores",
                              "Count",
                              "CountPerSecond",
                              "MilliCores",
                              "MilliSeconds",
                              "NanoCores",
                              "Percent",
                              "Seconds",
                              "Other"
                            ],
                            "x-ms-enum": {
                              "name": "MetricUnit",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ByteSeconds",
                                  "value": "ByteSeconds",
                                  "description": "When measurement is in ByteSeconds"
                                },
                                {
                                  "name": "Bytes",
                                  "value": "Bytes",
                                  "description": "When measurement is in Bytes"
                                },
                                {
                                  "name": "BytesPerSecond",
                                  "value": "BytesPerSecond",
                                  "description": "When measurement is in BytesPerSecond"
                                },
                                {
                                  "name": "Cores",
                                  "value": "Cores",
                                  "description": "When measurement is in Cores"
                                },
                                {
                                  "name": "Count",
                                  "value": "Count",
                                  "description": "When measurement is in Count"
                                },
                                {
                                  "name": "CountPerSecond",
                                  "value": "CountPerSecond",
                                  "description": "When measurement is in CountPerSecond"
                                },
                                {
                                  "name": "MilliCores",
                                  "value": "MilliCores",
                                  "description": "When measurement is in MilliCores"
                                },
                                {
                                  "name": "MilliSeconds",
                                  "value": "MilliSeconds",
                                  "description": "When measurement is in MilliSeconds"
                                },
                                {
                                  "name": "NanoCores",
                                  "value": "NanoCores",
                                  "description": "When measurement is in NanoCores"
                                },
                                {
                                  "name": "Percent",
                                  "value": "Percent",
                                  "description": "When measurement is in Percent"
                                },
                                {
                                  "name": "Seconds",
                                  "value": "Seconds",
                                  "description": "When measurement is in Seconds"
                                },
                                {
                                  "name": "Other",
                                  "value": "Other",
                                  "description": "When measurement is in Other than listed"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "connectivity": {
                      "description": "Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue",
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "description": "Protocol used for the connection",
                          "type": "string",
                          "enum": [
                            "TCP",
                            "UDP",
                            "HTTP",
                            "HTTPS",
                            "RDP",
                            "FTP",
                            "SSH",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "Protocol",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "TCP",
                                "value": "TCP",
                                "description": "When communication protocol is TCP"
                              },
                              {
                                "name": "UDP",
                                "value": "UDP",
                                "description": "When communication protocol is UDP"
                              },
                              {
                                "name": "HTTP",
                                "value": "HTTP",
                                "description": "When communication protocol is HTTP"
                              },
                              {
                                "name": "HTTPS",
                                "value": "HTTPS",
                                "description": "When communication protocol is HTTPS"
                              },
                              {
                                "name": "RDP",
                                "value": "RDP",
                                "description": "When communication protocol is RDP"
                              },
                              {
                                "name": "FTP",
                                "value": "FTP",
                                "description": "When communication protocol is FTP"
                              },
                              {
                                "name": "SSH",
                                "value": "SSH",
                                "description": "When communication protocol is SSH"
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "When communication protocol is Other"
                              }
                            ]
                          }
                        },
                        "port": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Port number for the connection"
                        },
                        "source": {
                          "description": "Source from which the connection was attempted",
                          "type": "object",
                          "properties": {
                            "azureResourceId": {
                              "type": "string",
                              "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                              "pattern": "(\\/[0-9a-zA-Z]+)*"
                            }
                          }
                        },
                        "target": {
                          "description": "target which connection was attempted",
                          "type": "object",
                          "properties": {
                            "azureResourceId": {
                              "type": "string",
                              "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                              "pattern": "(\\/[0-9a-zA-Z]+)*"
                            }
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "type": "object",
                      "description": "Additional fields related to impact, applicable fields per resource type are list under /impactCategories API",
                      "additionalProperties": {}
                    },
                    "errorDetails": {
                      "description": "ARM error code and error message associated with the impact",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "type": "string",
                          "description": "ARM Error code associated with the impact."
                        },
                        "errorMessage": {
                          "type": "string",
                          "description": "ARM Error Message associated with the impact"
                        }
                      }
                    },
                    "workload": {
                      "description": "Information about the impacted workload",
                      "type": "object",
                      "properties": {
                        "context": {
                          "type": "string",
                          "description": "the scenario for the workload"
                        },
                        "toolset": {
                          "description": "Tool used to interact with Azure. SDK, AzPortal, etc.., Other",
                          "type": "string",
                          "enum": [
                            "Terraform",
                            "Puppet",
                            "Chef",
                            "SDK",
                            "Ansible",
                            "ARM",
                            "Portal",
                            "Shell",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "Toolset",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Terraform",
                                "value": "Terraform",
                                "description": "If communication toolset is Terraform"
                              },
                              {
                                "name": "Puppet",
                                "value": "Puppet",
                                "description": "If communication toolset is Puppet"
                              },
                              {
                                "name": "Chef",
                                "value": "Chef",
                                "description": "If communication toolset is Chef"
                              },
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "If communication toolset is SDK"
                              },
                              {
                                "name": "Ansible",
                                "value": "Ansible",
                                "description": "If communication toolset is Ansible"
                              },
                              {
                                "name": "ARM",
                                "value": "ARM",
                                "description": "If communication toolset is ARM"
                              },
                              {
                                "name": "Portal",
                                "value": "Portal",
                                "description": "If communication toolset is Portal"
                              },
                              {
                                "name": "Shell",
                                "value": "Shell",
                                "description": "If communication toolset is Shell"
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "If communication toolset is Other"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "impactGroupId": {
                      "type": "string",
                      "description": "Use this field to group impacts"
                    },
                    "confidenceLevel": {
                      "description": "Degree of confidence on the impact being a platform issue",
                      "type": "string",
                      "enum": [
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "ConfidenceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Low",
                            "value": "Low",
                            "description": "Low confidence on azure being the source of impact"
                          },
                          {
                            "name": "Medium",
                            "value": "Medium",
                            "description": "Medium confidence on azure being the source of impact"
                          },
                          {
                            "name": "High",
                            "value": "High",
                            "description": "High confidence on azure being the source of impact"
                          }
                        ]
                      }
                    },
                    "clientIncidentDetails": {
                      "description": "Client incident details ex: incidentId , incident source",
                      "type": "object",
                      "properties": {
                        "clientIncidentId": {
                          "type": "string",
                          "description": "Client incident id. ex : id of the incident created to investigate and address the impact if any."
                        },
                        "clientIncidentSource": {
                          "description": "Client incident source. ex : source system name where the incident is created",
                          "type": "string",
                          "enum": [
                            "AzureDevops",
                            "ICM",
                            "Jira",
                            "ServiceNow",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "IncidentSource",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureDevops",
                                "value": "AzureDevops",
                                "description": "When source of Incident is AzureDevops"
                              },
                              {
                                "name": "ICM",
                                "value": "ICM",
                                "description": "When source of Incident is Microsoft ICM"
                              },
                              {
                                "name": "Jira",
                                "value": "Jira",
                                "description": "When source of Incident is Jira"
                              },
                              {
                                "name": "ServiceNow",
                                "value": "ServiceNow",
                                "description": "When source of Incident is ServiceNow"
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "When source of Incident is Other"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "startDateTime",
                    "impactedResourceId",
                    "impactCategory"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'WorkloadImpact' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Workload Impact properties",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "startDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which impact was observed "
                    },
                    "endDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which impact has ended "
                    },
                    "impactedResourceId": {
                      "type": "string",
                      "description": "Azure resource id of the impacted resource"
                    },
                    "impactUniqueId": {
                      "type": "string",
                      "description": "Unique ID of the impact (UUID)",
                      "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                      "readOnly": true
                    },
                    "reportedTimeUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which impact is reported",
                      "readOnly": true
                    },
                    "impactCategory": {
                      "type": "string",
                      "description": "Category of the impact,  details can found from /impactCategories API"
                    },
                    "impactDescription": {
                      "type": "string",
                      "description": "A detailed description of the impact"
                    },
                    "armCorrelationIds": {
                      "type": "array",
                      "description": "The ARM correlation ids, this is important field for control plane related impacts",
                      "items": {
                        "type": "string"
                      }
                    },
                    "performance": {
                      "type": "array",
                      "description": "Details about performance issue. Applicable for performance impacts.",
                      "items": {
                        "type": "object",
                        "description": "Details about impacted performance metrics. Applicable for performance related impact",
                        "properties": {
                          "metricName": {
                            "type": "string",
                            "description": "Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API"
                          },
                          "expected": {
                            "type": "number",
                            "format": "double",
                            "description": "Threshold value for the metric"
                          },
                          "actual": {
                            "type": "number",
                            "format": "double",
                            "description": "Observed value for the metric"
                          },
                          "expectedValueRange": {
                            "description": "Max and Min Threshold values for the metric",
                            "type": "object",
                            "properties": {
                              "min": {
                                "type": "number",
                                "format": "double",
                                "description": "Min threshold value for the metric"
                              },
                              "max": {
                                "type": "number",
                                "format": "double",
                                "description": "Max threshold value for the metric"
                              }
                            },
                            "required": [
                              "min",
                              "max"
                            ]
                          },
                          "unit": {
                            "description": "Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other",
                            "type": "string",
                            "enum": [
                              "ByteSeconds",
                              "Bytes",
                              "BytesPerSecond",
                              "Cores",
                              "Count",
                              "CountPerSecond",
                              "MilliCores",
                              "MilliSeconds",
                              "NanoCores",
                              "Percent",
                              "Seconds",
                              "Other"
                            ],
                            "x-ms-enum": {
                              "name": "MetricUnit",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ByteSeconds",
                                  "value": "ByteSeconds",
                                  "description": "When measurement is in ByteSeconds"
                                },
                                {
                                  "name": "Bytes",
                                  "value": "Bytes",
                                  "description": "When measurement is in Bytes"
                                },
                                {
                                  "name": "BytesPerSecond",
                                  "value": "BytesPerSecond",
                                  "description": "When measurement is in BytesPerSecond"
                                },
                                {
                                  "name": "Cores",
                                  "value": "Cores",
                                  "description": "When measurement is in Cores"
                                },
                                {
                                  "name": "Count",
                                  "value": "Count",
                                  "description": "When measurement is in Count"
                                },
                                {
                                  "name": "CountPerSecond",
                                  "value": "CountPerSecond",
                                  "description": "When measurement is in CountPerSecond"
                                },
                                {
                                  "name": "MilliCores",
                                  "value": "MilliCores",
                                  "description": "When measurement is in MilliCores"
                                },
                                {
                                  "name": "MilliSeconds",
                                  "value": "MilliSeconds",
                                  "description": "When measurement is in MilliSeconds"
                                },
                                {
                                  "name": "NanoCores",
                                  "value": "NanoCores",
                                  "description": "When measurement is in NanoCores"
                                },
                                {
                                  "name": "Percent",
                                  "value": "Percent",
                                  "description": "When measurement is in Percent"
                                },
                                {
                                  "name": "Seconds",
                                  "value": "Seconds",
                                  "description": "When measurement is in Seconds"
                                },
                                {
                                  "name": "Other",
                                  "value": "Other",
                                  "description": "When measurement is in Other than listed"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "connectivity": {
                      "description": "Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue",
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "description": "Protocol used for the connection",
                          "type": "string",
                          "enum": [
                            "TCP",
                            "UDP",
                            "HTTP",
                            "HTTPS",
                            "RDP",
                            "FTP",
                            "SSH",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "Protocol",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "TCP",
                                "value": "TCP",
                                "description": "When communication protocol is TCP"
                              },
                              {
                                "name": "UDP",
                                "value": "UDP",
                                "description": "When communication protocol is UDP"
                              },
                              {
                                "name": "HTTP",
                                "value": "HTTP",
                                "description": "When communication protocol is HTTP"
                              },
                              {
                                "name": "HTTPS",
                                "value": "HTTPS",
                                "description": "When communication protocol is HTTPS"
                              },
                              {
                                "name": "RDP",
                                "value": "RDP",
                                "description": "When communication protocol is RDP"
                              },
                              {
                                "name": "FTP",
                                "value": "FTP",
                                "description": "When communication protocol is FTP"
                              },
                              {
                                "name": "SSH",
                                "value": "SSH",
                                "description": "When communication protocol is SSH"
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "When communication protocol is Other"
                              }
                            ]
                          }
                        },
                        "port": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Port number for the connection"
                        },
                        "source": {
                          "description": "Source from which the connection was attempted",
                          "type": "object",
                          "properties": {
                            "azureResourceId": {
                              "type": "string",
                              "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                              "pattern": "(\\/[0-9a-zA-Z]+)*"
                            }
                          }
                        },
                        "target": {
                          "description": "target which connection was attempted",
                          "type": "object",
                          "properties": {
                            "azureResourceId": {
                              "type": "string",
                              "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                              "pattern": "(\\/[0-9a-zA-Z]+)*"
                            }
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "type": "object",
                      "description": "Additional fields related to impact, applicable fields per resource type are list under /impactCategories API",
                      "additionalProperties": {}
                    },
                    "errorDetails": {
                      "description": "ARM error code and error message associated with the impact",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "type": "string",
                          "description": "ARM Error code associated with the impact."
                        },
                        "errorMessage": {
                          "type": "string",
                          "description": "ARM Error Message associated with the impact"
                        }
                      }
                    },
                    "workload": {
                      "description": "Information about the impacted workload",
                      "type": "object",
                      "properties": {
                        "context": {
                          "type": "string",
                          "description": "the scenario for the workload"
                        },
                        "toolset": {
                          "description": "Tool used to interact with Azure. SDK, AzPortal, etc.., Other",
                          "type": "string",
                          "enum": [
                            "Terraform",
                            "Puppet",
                            "Chef",
                            "SDK",
                            "Ansible",
                            "ARM",
                            "Portal",
                            "Shell",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "Toolset",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Terraform",
                                "value": "Terraform",
                                "description": "If communication toolset is Terraform"
                              },
                              {
                                "name": "Puppet",
                                "value": "Puppet",
                                "description": "If communication toolset is Puppet"
                              },
                              {
                                "name": "Chef",
                                "value": "Chef",
                                "description": "If communication toolset is Chef"
                              },
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "If communication toolset is SDK"
                              },
                              {
                                "name": "Ansible",
                                "value": "Ansible",
                                "description": "If communication toolset is Ansible"
                              },
                              {
                                "name": "ARM",
                                "value": "ARM",
                                "description": "If communication toolset is ARM"
                              },
                              {
                                "name": "Portal",
                                "value": "Portal",
                                "description": "If communication toolset is Portal"
                              },
                              {
                                "name": "Shell",
                                "value": "Shell",
                                "description": "If communication toolset is Shell"
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "If communication toolset is Other"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "impactGroupId": {
                      "type": "string",
                      "description": "Use this field to group impacts"
                    },
                    "confidenceLevel": {
                      "description": "Degree of confidence on the impact being a platform issue",
                      "type": "string",
                      "enum": [
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "ConfidenceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Low",
                            "value": "Low",
                            "description": "Low confidence on azure being the source of impact"
                          },
                          {
                            "name": "Medium",
                            "value": "Medium",
                            "description": "Medium confidence on azure being the source of impact"
                          },
                          {
                            "name": "High",
                            "value": "High",
                            "description": "High confidence on azure being the source of impact"
                          }
                        ]
                      }
                    },
                    "clientIncidentDetails": {
                      "description": "Client incident details ex: incidentId , incident source",
                      "type": "object",
                      "properties": {
                        "clientIncidentId": {
                          "type": "string",
                          "description": "Client incident id. ex : id of the incident created to investigate and address the impact if any."
                        },
                        "clientIncidentSource": {
                          "description": "Client incident source. ex : source system name where the incident is created",
                          "type": "string",
                          "enum": [
                            "AzureDevops",
                            "ICM",
                            "Jira",
                            "ServiceNow",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "IncidentSource",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureDevops",
                                "value": "AzureDevops",
                                "description": "When source of Incident is AzureDevops"
                              },
                              {
                                "name": "ICM",
                                "value": "ICM",
                                "description": "When source of Incident is Microsoft ICM"
                              },
                              {
                                "name": "Jira",
                                "value": "Jira",
                                "description": "When source of Incident is Jira"
                              },
                              {
                                "name": "ServiceNow",
                                "value": "ServiceNow",
                                "description": "When source of Incident is ServiceNow"
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "When source of Incident is Other"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "startDateTime",
                    "impactedResourceId",
                    "impactCategory"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'WorkloadImpact' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Workload Impact properties",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "startDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which impact was observed "
                    },
                    "endDateTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which impact has ended "
                    },
                    "impactedResourceId": {
                      "type": "string",
                      "description": "Azure resource id of the impacted resource"
                    },
                    "impactUniqueId": {
                      "type": "string",
                      "description": "Unique ID of the impact (UUID)",
                      "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                      "readOnly": true
                    },
                    "reportedTimeUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which impact is reported",
                      "readOnly": true
                    },
                    "impactCategory": {
                      "type": "string",
                      "description": "Category of the impact,  details can found from /impactCategories API"
                    },
                    "impactDescription": {
                      "type": "string",
                      "description": "A detailed description of the impact"
                    },
                    "armCorrelationIds": {
                      "type": "array",
                      "description": "The ARM correlation ids, this is important field for control plane related impacts",
                      "items": {
                        "type": "string"
                      }
                    },
                    "performance": {
                      "type": "array",
                      "description": "Details about performance issue. Applicable for performance impacts.",
                      "items": {
                        "type": "object",
                        "description": "Details about impacted performance metrics. Applicable for performance related impact",
                        "properties": {
                          "metricName": {
                            "type": "string",
                            "description": "Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API"
                          },
                          "expected": {
                            "type": "number",
                            "format": "double",
                            "description": "Threshold value for the metric"
                          },
                          "actual": {
                            "type": "number",
                            "format": "double",
                            "description": "Observed value for the metric"
                          },
                          "expectedValueRange": {
                            "description": "Max and Min Threshold values for the metric",
                            "type": "object",
                            "properties": {
                              "min": {
                                "type": "number",
                                "format": "double",
                                "description": "Min threshold value for the metric"
                              },
                              "max": {
                                "type": "number",
                                "format": "double",
                                "description": "Max threshold value for the metric"
                              }
                            },
                            "required": [
                              "min",
                              "max"
                            ]
                          },
                          "unit": {
                            "description": "Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other",
                            "type": "string",
                            "enum": [
                              "ByteSeconds",
                              "Bytes",
                              "BytesPerSecond",
                              "Cores",
                              "Count",
                              "CountPerSecond",
                              "MilliCores",
                              "MilliSeconds",
                              "NanoCores",
                              "Percent",
                              "Seconds",
                              "Other"
                            ],
                            "x-ms-enum": {
                              "name": "MetricUnit",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "ByteSeconds",
                                  "value": "ByteSeconds",
                                  "description": "When measurement is in ByteSeconds"
                                },
                                {
                                  "name": "Bytes",
                                  "value": "Bytes",
                                  "description": "When measurement is in Bytes"
                                },
                                {
                                  "name": "BytesPerSecond",
                                  "value": "BytesPerSecond",
                                  "description": "When measurement is in BytesPerSecond"
                                },
                                {
                                  "name": "Cores",
                                  "value": "Cores",
                                  "description": "When measurement is in Cores"
                                },
                                {
                                  "name": "Count",
                                  "value": "Count",
                                  "description": "When measurement is in Count"
                                },
                                {
                                  "name": "CountPerSecond",
                                  "value": "CountPerSecond",
                                  "description": "When measurement is in CountPerSecond"
                                },
                                {
                                  "name": "MilliCores",
                                  "value": "MilliCores",
                                  "description": "When measurement is in MilliCores"
                                },
                                {
                                  "name": "MilliSeconds",
                                  "value": "MilliSeconds",
                                  "description": "When measurement is in MilliSeconds"
                                },
                                {
                                  "name": "NanoCores",
                                  "value": "NanoCores",
                                  "description": "When measurement is in NanoCores"
                                },
                                {
                                  "name": "Percent",
                                  "value": "Percent",
                                  "description": "When measurement is in Percent"
                                },
                                {
                                  "name": "Seconds",
                                  "value": "Seconds",
                                  "description": "When measurement is in Seconds"
                                },
                                {
                                  "name": "Other",
                                  "value": "Other",
                                  "description": "When measurement is in Other than listed"
                                }
                              ]
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    },
                    "connectivity": {
                      "description": "Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue",
                      "type": "object",
                      "properties": {
                        "protocol": {
                          "description": "Protocol used for the connection",
                          "type": "string",
                          "enum": [
                            "TCP",
                            "UDP",
                            "HTTP",
                            "HTTPS",
                            "RDP",
                            "FTP",
                            "SSH",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "Protocol",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "TCP",
                                "value": "TCP",
                                "description": "When communication protocol is TCP"
                              },
                              {
                                "name": "UDP",
                                "value": "UDP",
                                "description": "When communication protocol is UDP"
                              },
                              {
                                "name": "HTTP",
                                "value": "HTTP",
                                "description": "When communication protocol is HTTP"
                              },
                              {
                                "name": "HTTPS",
                                "value": "HTTPS",
                                "description": "When communication protocol is HTTPS"
                              },
                              {
                                "name": "RDP",
                                "value": "RDP",
                                "description": "When communication protocol is RDP"
                              },
                              {
                                "name": "FTP",
                                "value": "FTP",
                                "description": "When communication protocol is FTP"
                              },
                              {
                                "name": "SSH",
                                "value": "SSH",
                                "description": "When communication protocol is SSH"
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "When communication protocol is Other"
                              }
                            ]
                          }
                        },
                        "port": {
                          "type": "integer",
                          "format": "int32",
                          "description": "Port number for the connection"
                        },
                        "source": {
                          "description": "Source from which the connection was attempted",
                          "type": "object",
                          "properties": {
                            "azureResourceId": {
                              "type": "string",
                              "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                              "pattern": "(\\/[0-9a-zA-Z]+)*"
                            }
                          }
                        },
                        "target": {
                          "description": "target which connection was attempted",
                          "type": "object",
                          "properties": {
                            "azureResourceId": {
                              "type": "string",
                              "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                              "pattern": "(\\/[0-9a-zA-Z]+)*"
                            }
                          }
                        }
                      }
                    },
                    "additionalProperties": {
                      "type": "object",
                      "description": "Additional fields related to impact, applicable fields per resource type are list under /impactCategories API",
                      "additionalProperties": {}
                    },
                    "errorDetails": {
                      "description": "ARM error code and error message associated with the impact",
                      "type": "object",
                      "properties": {
                        "errorCode": {
                          "type": "string",
                          "description": "ARM Error code associated with the impact."
                        },
                        "errorMessage": {
                          "type": "string",
                          "description": "ARM Error Message associated with the impact"
                        }
                      }
                    },
                    "workload": {
                      "description": "Information about the impacted workload",
                      "type": "object",
                      "properties": {
                        "context": {
                          "type": "string",
                          "description": "the scenario for the workload"
                        },
                        "toolset": {
                          "description": "Tool used to interact with Azure. SDK, AzPortal, etc.., Other",
                          "type": "string",
                          "enum": [
                            "Terraform",
                            "Puppet",
                            "Chef",
                            "SDK",
                            "Ansible",
                            "ARM",
                            "Portal",
                            "Shell",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "Toolset",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Terraform",
                                "value": "Terraform",
                                "description": "If communication toolset is Terraform"
                              },
                              {
                                "name": "Puppet",
                                "value": "Puppet",
                                "description": "If communication toolset is Puppet"
                              },
                              {
                                "name": "Chef",
                                "value": "Chef",
                                "description": "If communication toolset is Chef"
                              },
                              {
                                "name": "SDK",
                                "value": "SDK",
                                "description": "If communication toolset is SDK"
                              },
                              {
                                "name": "Ansible",
                                "value": "Ansible",
                                "description": "If communication toolset is Ansible"
                              },
                              {
                                "name": "ARM",
                                "value": "ARM",
                                "description": "If communication toolset is ARM"
                              },
                              {
                                "name": "Portal",
                                "value": "Portal",
                                "description": "If communication toolset is Portal"
                              },
                              {
                                "name": "Shell",
                                "value": "Shell",
                                "description": "If communication toolset is Shell"
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "If communication toolset is Other"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "impactGroupId": {
                      "type": "string",
                      "description": "Use this field to group impacts"
                    },
                    "confidenceLevel": {
                      "description": "Degree of confidence on the impact being a platform issue",
                      "type": "string",
                      "enum": [
                        "Low",
                        "Medium",
                        "High"
                      ],
                      "x-ms-enum": {
                        "name": "ConfidenceLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Low",
                            "value": "Low",
                            "description": "Low confidence on azure being the source of impact"
                          },
                          {
                            "name": "Medium",
                            "value": "Medium",
                            "description": "Medium confidence on azure being the source of impact"
                          },
                          {
                            "name": "High",
                            "value": "High",
                            "description": "High confidence on azure being the source of impact"
                          }
                        ]
                      }
                    },
                    "clientIncidentDetails": {
                      "description": "Client incident details ex: incidentId , incident source",
                      "type": "object",
                      "properties": {
                        "clientIncidentId": {
                          "type": "string",
                          "description": "Client incident id. ex : id of the incident created to investigate and address the impact if any."
                        },
                        "clientIncidentSource": {
                          "description": "Client incident source. ex : source system name where the incident is created",
                          "type": "string",
                          "enum": [
                            "AzureDevops",
                            "ICM",
                            "Jira",
                            "ServiceNow",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "IncidentSource",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureDevops",
                                "value": "AzureDevops",
                                "description": "When source of Incident is AzureDevops"
                              },
                              {
                                "name": "ICM",
                                "value": "ICM",
                                "description": "When source of Incident is Microsoft ICM"
                              },
                              {
                                "name": "Jira",
                                "value": "Jira",
                                "description": "When source of Incident is Jira"
                              },
                              {
                                "name": "ServiceNow",
                                "value": "ServiceNow",
                                "description": "When source of Incident is ServiceNow"
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "When source of Incident is Other"
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "startDateTime",
                    "impactedResourceId",
                    "impactCategory"
                  ]
                }
              }
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "WorkloadImpacts_Delete",
        "tags": [
          "WorkloadImpacts"
        ],
        "description": "Delete a WorkloadImpact",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workloadImpactName",
            "in": "path",
            "description": "workloadImpact resource ",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-:]*[a-zA-Z0-9]{3,120}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Impact/workloadImpacts/{workloadImpactName}/insights": {
      "get": {
        "operationId": "Insights_ListBySubscription",
        "tags": [
          "Insights"
        ],
        "description": "List Insight resources by workloadImpactName",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workloadImpactName",
            "in": "path",
            "description": "workloadImpact resource ",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-:]*[a-zA-Z0-9]{3,120}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a Insight list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The Insight items on this page",
                  "items": {
                    "type": "object",
                    "description": "Insight resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Resource provisioning state.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Provisioning Succeeded"
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Provisioning Failed"
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Provisioning Canceled"
                                }
                              ]
                            }
                          },
                          "category": {
                            "type": "string",
                            "description": "category of the insight."
                          },
                          "status": {
                            "type": "string",
                            "description": "status of the insight. example resolved, repaired, other."
                          },
                          "eventId": {
                            "type": "string",
                            "description": "Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event."
                          },
                          "groupId": {
                            "type": "string",
                            "description": "Identifier that can be used to group similar insights."
                          },
                          "content": {
                            "description": "Contains title & description for the insight",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string",
                                "description": "Title of the insight"
                              },
                              "description": {
                                "type": "string",
                                "description": "Description of the insight"
                              }
                            },
                            "required": [
                              "title",
                              "description"
                            ]
                          },
                          "eventTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time of the event, which has been correlated the impact."
                          },
                          "insightUniqueId": {
                            "type": "string",
                            "description": "unique id of the insight."
                          },
                          "impact": {
                            "description": "details of of the impact for which insight has been generated.",
                            "type": "object",
                            "properties": {
                              "impactedResourceId": {
                                "type": "string",
                                "description": "List of impacted Azure resources."
                              },
                              "startTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time at which impact was started according to reported impact."
                              },
                              "endTime": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time at which impact was ended according to reported impact."
                              },
                              "impactId": {
                                "type": "string",
                                "description": "Azure Id of the impact."
                              }
                            },
                            "required": [
                              "impactedResourceId",
                              "startTime",
                              "impactId"
                            ]
                          },
                          "additionalDetails": {
                            "type": "object",
                            "description": "additional details of the insight."
                          }
                        },
                        "required": [
                          "category",
                          "content",
                          "insightUniqueId",
                          "impact"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.Impact/workloadImpacts/{workloadImpactName}/insights/{insightName}": {
      "get": {
        "operationId": "Insights_Get",
        "tags": [
          "Insights"
        ],
        "description": "Get Insight resources by workloadImpactName and insightName",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workloadImpactName",
            "in": "path",
            "description": "workloadImpact resource ",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-:]*[a-zA-Z0-9]{3,120}$"
          },
          {
            "name": "insightName",
            "in": "path",
            "description": "Name of the insight",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.]*[a-zA-Z0-9]{3,180}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Insight resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "category": {
                      "type": "string",
                      "description": "category of the insight."
                    },
                    "status": {
                      "type": "string",
                      "description": "status of the insight. example resolved, repaired, other."
                    },
                    "eventId": {
                      "type": "string",
                      "description": "Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event."
                    },
                    "groupId": {
                      "type": "string",
                      "description": "Identifier that can be used to group similar insights."
                    },
                    "content": {
                      "description": "Contains title & description for the insight",
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Title of the insight"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the insight"
                        }
                      },
                      "required": [
                        "title",
                        "description"
                      ]
                    },
                    "eventTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time of the event, which has been correlated the impact."
                    },
                    "insightUniqueId": {
                      "type": "string",
                      "description": "unique id of the insight."
                    },
                    "impact": {
                      "description": "details of of the impact for which insight has been generated.",
                      "type": "object",
                      "properties": {
                        "impactedResourceId": {
                          "type": "string",
                          "description": "List of impacted Azure resources."
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time at which impact was started according to reported impact."
                        },
                        "endTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time at which impact was ended according to reported impact."
                        },
                        "impactId": {
                          "type": "string",
                          "description": "Azure Id of the impact."
                        }
                      },
                      "required": [
                        "impactedResourceId",
                        "startTime",
                        "impactId"
                      ]
                    },
                    "additionalDetails": {
                      "type": "object",
                      "description": "additional details of the insight."
                    }
                  },
                  "required": [
                    "category",
                    "content",
                    "insightUniqueId",
                    "impact"
                  ]
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Insights_Create",
        "tags": [
          "Insights"
        ],
        "description": "Create Insight resource, This is Admin only operation",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workloadImpactName",
            "in": "path",
            "description": "workloadImpact resource ",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-:]*[a-zA-Z0-9]{3,120}$"
          },
          {
            "name": "insightName",
            "in": "path",
            "description": "Name of the insight",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.]*[a-zA-Z0-9]{3,180}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Insight resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "category": {
                      "type": "string",
                      "description": "category of the insight."
                    },
                    "status": {
                      "type": "string",
                      "description": "status of the insight. example resolved, repaired, other."
                    },
                    "eventId": {
                      "type": "string",
                      "description": "Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event."
                    },
                    "groupId": {
                      "type": "string",
                      "description": "Identifier that can be used to group similar insights."
                    },
                    "content": {
                      "description": "Contains title & description for the insight",
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Title of the insight"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the insight"
                        }
                      },
                      "required": [
                        "title",
                        "description"
                      ]
                    },
                    "eventTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time of the event, which has been correlated the impact."
                    },
                    "insightUniqueId": {
                      "type": "string",
                      "description": "unique id of the insight."
                    },
                    "impact": {
                      "description": "details of of the impact for which insight has been generated.",
                      "type": "object",
                      "properties": {
                        "impactedResourceId": {
                          "type": "string",
                          "description": "List of impacted Azure resources."
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time at which impact was started according to reported impact."
                        },
                        "endTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time at which impact was ended according to reported impact."
                        },
                        "impactId": {
                          "type": "string",
                          "description": "Azure Id of the impact."
                        }
                      },
                      "required": [
                        "impactedResourceId",
                        "startTime",
                        "impactId"
                      ]
                    },
                    "additionalDetails": {
                      "type": "object",
                      "description": "additional details of the insight."
                    }
                  },
                  "required": [
                    "category",
                    "content",
                    "insightUniqueId",
                    "impact"
                  ]
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'Insight' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Insight resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "category": {
                      "type": "string",
                      "description": "category of the insight."
                    },
                    "status": {
                      "type": "string",
                      "description": "status of the insight. example resolved, repaired, other."
                    },
                    "eventId": {
                      "type": "string",
                      "description": "Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event."
                    },
                    "groupId": {
                      "type": "string",
                      "description": "Identifier that can be used to group similar insights."
                    },
                    "content": {
                      "description": "Contains title & description for the insight",
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Title of the insight"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the insight"
                        }
                      },
                      "required": [
                        "title",
                        "description"
                      ]
                    },
                    "eventTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time of the event, which has been correlated the impact."
                    },
                    "insightUniqueId": {
                      "type": "string",
                      "description": "unique id of the insight."
                    },
                    "impact": {
                      "description": "details of of the impact for which insight has been generated.",
                      "type": "object",
                      "properties": {
                        "impactedResourceId": {
                          "type": "string",
                          "description": "List of impacted Azure resources."
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time at which impact was started according to reported impact."
                        },
                        "endTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time at which impact was ended according to reported impact."
                        },
                        "impactId": {
                          "type": "string",
                          "description": "Azure Id of the impact."
                        }
                      },
                      "required": [
                        "impactedResourceId",
                        "startTime",
                        "impactId"
                      ]
                    },
                    "additionalDetails": {
                      "type": "object",
                      "description": "additional details of the insight."
                    }
                  },
                  "required": [
                    "category",
                    "content",
                    "insightUniqueId",
                    "impact"
                  ]
                }
              }
            }
          },
          "201": {
            "description": "Resource 'Insight' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Insight resource",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Resource provisioning state.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning Succeeded"
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning Failed"
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning Canceled"
                          }
                        ]
                      }
                    },
                    "category": {
                      "type": "string",
                      "description": "category of the insight."
                    },
                    "status": {
                      "type": "string",
                      "description": "status of the insight. example resolved, repaired, other."
                    },
                    "eventId": {
                      "type": "string",
                      "description": "Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event."
                    },
                    "groupId": {
                      "type": "string",
                      "description": "Identifier that can be used to group similar insights."
                    },
                    "content": {
                      "description": "Contains title & description for the insight",
                      "type": "object",
                      "properties": {
                        "title": {
                          "type": "string",
                          "description": "Title of the insight"
                        },
                        "description": {
                          "type": "string",
                          "description": "Description of the insight"
                        }
                      },
                      "required": [
                        "title",
                        "description"
                      ]
                    },
                    "eventTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time of the event, which has been correlated the impact."
                    },
                    "insightUniqueId": {
                      "type": "string",
                      "description": "unique id of the insight."
                    },
                    "impact": {
                      "description": "details of of the impact for which insight has been generated.",
                      "type": "object",
                      "properties": {
                        "impactedResourceId": {
                          "type": "string",
                          "description": "List of impacted Azure resources."
                        },
                        "startTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time at which impact was started according to reported impact."
                        },
                        "endTime": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time at which impact was ended according to reported impact."
                        },
                        "impactId": {
                          "type": "string",
                          "description": "Azure Id of the impact."
                        }
                      },
                      "required": [
                        "impactedResourceId",
                        "startTime",
                        "impactId"
                      ]
                    },
                    "additionalDetails": {
                      "type": "object",
                      "description": "additional details of the insight."
                    }
                  },
                  "required": [
                    "category",
                    "content",
                    "insightUniqueId",
                    "impact"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "Insights_Delete",
        "tags": [
          "Insights"
        ],
        "description": "Delete Insight resource, This is Admin only operation",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "workloadImpactName",
            "in": "path",
            "description": "workloadImpact resource ",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-:]*[a-zA-Z0-9]{3,120}$"
          },
          {
            "name": "insightName",
            "in": "path",
            "description": "Name of the insight",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.]*[a-zA-Z0-9]{3,180}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Resource deleted successfully."
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    }
  },
  "definitions": {
    "AdditionalField": {
      "type": "object",
      "description": "additional user defined field.",
      "properties": {
        "name": {
          "type": "string",
          "description": "name of the field."
        },
        "value": {
          "type": "string",
          "description": "value of the field."
        }
      },
      "required": [
        "name",
        "value"
      ]
    },
    "ClientIncidentDetails": {
      "type": "object",
      "description": "Client incident details ex: incidentId , incident source",
      "properties": {
        "clientIncidentId": {
          "type": "string",
          "description": "Client incident id. ex : id of the incident created to investigate and address the impact if any."
        },
        "clientIncidentSource": {
          "description": "Client incident source. ex : source system name where the incident is created",
          "type": "string",
          "enum": [
            "AzureDevops",
            "ICM",
            "Jira",
            "ServiceNow",
            "Other"
          ],
          "x-ms-enum": {
            "name": "IncidentSource",
            "modelAsString": true,
            "values": [
              {
                "name": "AzureDevops",
                "value": "AzureDevops",
                "description": "When source of Incident is AzureDevops"
              },
              {
                "name": "ICM",
                "value": "ICM",
                "description": "When source of Incident is Microsoft ICM"
              },
              {
                "name": "Jira",
                "value": "Jira",
                "description": "When source of Incident is Jira"
              },
              {
                "name": "ServiceNow",
                "value": "ServiceNow",
                "description": "When source of Incident is ServiceNow"
              },
              {
                "name": "Other",
                "value": "Other",
                "description": "When source of Incident is Other"
              }
            ]
          }
        }
      }
    },
    "ConfidenceLevel": {
      "type": "string",
      "description": "Degree of confidence on the impact being a platform issue.",
      "enum": [
        "Low",
        "Medium",
        "High"
      ],
      "x-ms-enum": {
        "name": "ConfidenceLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "Low",
            "value": "Low",
            "description": "Low confidence on azure being the source of impact"
          },
          {
            "name": "Medium",
            "value": "Medium",
            "description": "Medium confidence on azure being the source of impact"
          },
          {
            "name": "High",
            "value": "High",
            "description": "High confidence on azure being the source of impact"
          }
        ]
      }
    },
    "Connectivity": {
      "type": "object",
      "description": "Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource could be VM or the network. In such cases, the connectivity field will have the details about both VM and network.",
      "properties": {
        "protocol": {
          "description": "Protocol used for the connection",
          "type": "string",
          "enum": [
            "TCP",
            "UDP",
            "HTTP",
            "HTTPS",
            "RDP",
            "FTP",
            "SSH",
            "Other"
          ],
          "x-ms-enum": {
            "name": "Protocol",
            "modelAsString": true,
            "values": [
              {
                "name": "TCP",
                "value": "TCP",
                "description": "When communication protocol is TCP"
              },
              {
                "name": "UDP",
                "value": "UDP",
                "description": "When communication protocol is UDP"
              },
              {
                "name": "HTTP",
                "value": "HTTP",
                "description": "When communication protocol is HTTP"
              },
              {
                "name": "HTTPS",
                "value": "HTTPS",
                "description": "When communication protocol is HTTPS"
              },
              {
                "name": "RDP",
                "value": "RDP",
                "description": "When communication protocol is RDP"
              },
              {
                "name": "FTP",
                "value": "FTP",
                "description": "When communication protocol is FTP"
              },
              {
                "name": "SSH",
                "value": "SSH",
                "description": "When communication protocol is SSH"
              },
              {
                "name": "Other",
                "value": "Other",
                "description": "When communication protocol is Other"
              }
            ]
          }
        },
        "port": {
          "type": "integer",
          "format": "int32",
          "description": "Port number for the connection"
        },
        "source": {
          "description": "Source from which the connection was attempted",
          "type": "object",
          "properties": {
            "azureResourceId": {
              "type": "string",
              "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
              "pattern": "(\\/[0-9a-zA-Z]+)*"
            }
          }
        },
        "target": {
          "description": "target which connection was attempted",
          "type": "object",
          "properties": {
            "azureResourceId": {
              "type": "string",
              "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
              "pattern": "(\\/[0-9a-zA-Z]+)*"
            }
          }
        }
      }
    },
    "Connector": {
      "type": "object",
      "description": "A connector is a resource that can be used to proactively report impacts against workloads in Azure to Microsoft.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Resource provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Provisioning Succeeded"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Provisioning Failed"
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Provisioning Canceled"
                  }
                ]
              }
            },
            "connectorId": {
              "type": "string",
              "description": "unique id of the connector.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "description": "tenant id of this connector",
              "readOnly": true
            },
            "connectorType": {
              "description": "connector type",
              "type": "string",
              "enum": [
                "AzureMonitor"
              ],
              "x-ms-enum": {
                "name": "Platform",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AzureMonitor",
                    "value": "AzureMonitor",
                    "description": "Type of Azure Monitor"
                  }
                ]
              }
            },
            "lastRunTimeStamp": {
              "type": "string",
              "format": "date-time",
              "description": "last run time stamp of this connector in UTC time zone",
              "readOnly": true
            }
          },
          "required": [
            "connectorId",
            "tenantId",
            "connectorType",
            "lastRunTimeStamp"
          ]
        }
      }
    },
    "ConnectorListResult": {
      "type": "object",
      "description": "The response of a Connector list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Connector items on this page",
          "items": {
            "type": "object",
            "description": "A connector is a resource that can be used to proactively report impacts against workloads in Azure to Microsoft.",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Resource provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Provisioning Succeeded"
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Provisioning Failed"
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Provisioning Canceled"
                        }
                      ]
                    }
                  },
                  "connectorId": {
                    "type": "string",
                    "description": "unique id of the connector.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "description": "tenant id of this connector",
                    "readOnly": true
                  },
                  "connectorType": {
                    "description": "connector type",
                    "type": "string",
                    "enum": [
                      "AzureMonitor"
                    ],
                    "x-ms-enum": {
                      "name": "Platform",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "AzureMonitor",
                          "value": "AzureMonitor",
                          "description": "Type of Azure Monitor"
                        }
                      ]
                    }
                  },
                  "lastRunTimeStamp": {
                    "type": "string",
                    "format": "date-time",
                    "description": "last run time stamp of this connector in UTC time zone",
                    "readOnly": true
                  }
                },
                "required": [
                  "connectorId",
                  "tenantId",
                  "connectorType",
                  "lastRunTimeStamp"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ConnectorProperties": {
      "type": "object",
      "description": "Details of the Connector.",
      "properties": {
        "provisioningState": {
          "description": "Resource provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Provisioning Succeeded"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Provisioning Failed"
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Provisioning Canceled"
              }
            ]
          }
        },
        "connectorId": {
          "type": "string",
          "description": "unique id of the connector.",
          "readOnly": true
        },
        "tenantId": {
          "type": "string",
          "description": "tenant id of this connector",
          "readOnly": true
        },
        "connectorType": {
          "description": "connector type",
          "type": "string",
          "enum": [
            "AzureMonitor"
          ],
          "x-ms-enum": {
            "name": "Platform",
            "modelAsString": true,
            "values": [
              {
                "name": "AzureMonitor",
                "value": "AzureMonitor",
                "description": "Type of Azure Monitor"
              }
            ]
          }
        },
        "lastRunTimeStamp": {
          "type": "string",
          "format": "date-time",
          "description": "last run time stamp of this connector in UTC time zone",
          "readOnly": true
        }
      },
      "required": [
        "connectorId",
        "tenantId",
        "connectorType",
        "lastRunTimeStamp"
      ]
    },
    "ConnectorUpdate": {
      "type": "object",
      "description": "The type used for update operations of the Connector.",
      "properties": {
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "connectorType": {
              "description": "connector type",
              "type": "string",
              "enum": [
                "AzureMonitor"
              ],
              "x-ms-enum": {
                "name": "Platform",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AzureMonitor",
                    "value": "AzureMonitor",
                    "description": "Type of Azure Monitor"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "ConnectorUpdateProperties": {
      "type": "object",
      "description": "The updatable properties of the Connector.",
      "properties": {
        "connectorType": {
          "description": "connector type",
          "type": "string",
          "enum": [
            "AzureMonitor"
          ],
          "x-ms-enum": {
            "name": "Platform",
            "modelAsString": true,
            "values": [
              {
                "name": "AzureMonitor",
                "value": "AzureMonitor",
                "description": "Type of Azure Monitor"
              }
            ]
          }
        }
      }
    },
    "Content": {
      "type": "object",
      "description": "Article details of the insight like title, description etc",
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the insight"
        },
        "description": {
          "type": "string",
          "description": "Description of the insight"
        }
      },
      "required": [
        "title",
        "description"
      ]
    },
    "ErrorDetailProperties": {
      "type": "object",
      "description": "ARM error code and error message associated with the impact",
      "properties": {
        "errorCode": {
          "type": "string",
          "description": "ARM Error code associated with the impact."
        },
        "errorMessage": {
          "type": "string",
          "description": "ARM Error Message associated with the impact"
        }
      }
    },
    "ExpectedValueRange": {
      "type": "object",
      "description": "Max and Min Threshold values for the metric",
      "properties": {
        "min": {
          "type": "number",
          "format": "double",
          "description": "Min threshold value for the metric"
        },
        "max": {
          "type": "number",
          "format": "double",
          "description": "Max threshold value for the metric"
        }
      },
      "required": [
        "min",
        "max"
      ]
    },
    "ImpactCategory": {
      "type": "object",
      "description": "ImpactCategory resource",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Resource provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Provisioning Succeeded"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Provisioning Failed"
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Provisioning Canceled"
                  }
                ]
              }
            },
            "categoryId": {
              "type": "string",
              "description": "Unique ID of the category",
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
            },
            "parentCategoryId": {
              "type": "string",
              "description": "Unique ID of the parent category",
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
            },
            "description": {
              "type": "string",
              "description": "Description of the category"
            },
            "requiredImpactProperties": {
              "type": "array",
              "description": "The workloadImpact properties which are required when reporting with the impact category",
              "items": {
                "type": "object",
                "description": "Required impact properties",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the property"
                  },
                  "allowedValues": {
                    "type": "array",
                    "description": "Allowed values values for the property",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "name"
                ]
              },
              "x-ms-identifiers": []
            }
          },
          "required": [
            "categoryId"
          ]
        }
      }
    },
    "ImpactCategoryEnum": {
      "type": "string",
      "description": "List of impact categories.",
      "enum": [
        "Availability",
        "Performance",
        "Other"
      ],
      "x-ms-enum": {
        "name": "ImpactCategoryEnum",
        "modelAsString": true,
        "values": [
          {
            "name": "Availability",
            "value": "Availability",
            "description": "Availability category"
          },
          {
            "name": "Performance",
            "value": "Performance",
            "description": "Performance category"
          },
          {
            "name": "Other",
            "value": "Other",
            "description": "Other category"
          }
        ]
      }
    },
    "ImpactCategoryListResult": {
      "type": "object",
      "description": "The response of a ImpactCategory list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ImpactCategory items on this page",
          "items": {
            "type": "object",
            "description": "ImpactCategory resource",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Resource provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Provisioning Succeeded"
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Provisioning Failed"
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Provisioning Canceled"
                        }
                      ]
                    }
                  },
                  "categoryId": {
                    "type": "string",
                    "description": "Unique ID of the category",
                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
                  },
                  "parentCategoryId": {
                    "type": "string",
                    "description": "Unique ID of the parent category",
                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
                  },
                  "description": {
                    "type": "string",
                    "description": "Description of the category"
                  },
                  "requiredImpactProperties": {
                    "type": "array",
                    "description": "The workloadImpact properties which are required when reporting with the impact category",
                    "items": {
                      "type": "object",
                      "description": "Required impact properties",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the property"
                        },
                        "allowedValues": {
                          "type": "array",
                          "description": "Allowed values values for the property",
                          "items": {
                            "type": "string"
                          }
                        }
                      },
                      "required": [
                        "name"
                      ]
                    },
                    "x-ms-identifiers": []
                  }
                },
                "required": [
                  "categoryId"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ImpactCategoryProperties": {
      "type": "object",
      "description": "Impact category properties.",
      "properties": {
        "provisioningState": {
          "description": "Resource provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Provisioning Succeeded"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Provisioning Failed"
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Provisioning Canceled"
              }
            ]
          }
        },
        "categoryId": {
          "type": "string",
          "description": "Unique ID of the category",
          "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
        },
        "parentCategoryId": {
          "type": "string",
          "description": "Unique ID of the parent category",
          "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}"
        },
        "description": {
          "type": "string",
          "description": "Description of the category"
        },
        "requiredImpactProperties": {
          "type": "array",
          "description": "The workloadImpact properties which are required when reporting with the impact category",
          "items": {
            "type": "object",
            "description": "Required impact properties",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the property"
              },
              "allowedValues": {
                "type": "array",
                "description": "Allowed values values for the property",
                "items": {
                  "type": "string"
                }
              }
            },
            "required": [
              "name"
            ]
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "categoryId"
      ]
    },
    "ImpactDetails": {
      "type": "object",
      "description": "details of of the impact for which insight has been generated.",
      "properties": {
        "impactedResourceId": {
          "type": "string",
          "description": "List of impacted Azure resources."
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which impact was started according to reported impact."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which impact was ended according to reported impact."
        },
        "impactId": {
          "type": "string",
          "description": "Azure Id of the impact."
        }
      },
      "required": [
        "impactedResourceId",
        "startTime",
        "impactId"
      ]
    },
    "ImpactedResource": {
      "type": "object",
      "description": "impacted azure resource id.",
      "properties": {
        "impactedResourceId": {
          "type": "string",
          "description": "impacted azure resource id"
        }
      },
      "required": [
        "impactedResourceId"
      ]
    },
    "IncidentSource": {
      "type": "string",
      "description": "List of incident interfaces.",
      "enum": [
        "AzureDevops",
        "ICM",
        "Jira",
        "ServiceNow",
        "Other"
      ],
      "x-ms-enum": {
        "name": "IncidentSource",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureDevops",
            "value": "AzureDevops",
            "description": "When source of Incident is AzureDevops"
          },
          {
            "name": "ICM",
            "value": "ICM",
            "description": "When source of Incident is Microsoft ICM"
          },
          {
            "name": "Jira",
            "value": "Jira",
            "description": "When source of Incident is Jira"
          },
          {
            "name": "ServiceNow",
            "value": "ServiceNow",
            "description": "When source of Incident is ServiceNow"
          },
          {
            "name": "Other",
            "value": "Other",
            "description": "When source of Incident is Other"
          }
        ]
      }
    },
    "Insight": {
      "type": "object",
      "description": "Insight resource",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Resource provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Provisioning Succeeded"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Provisioning Failed"
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Provisioning Canceled"
                  }
                ]
              }
            },
            "category": {
              "type": "string",
              "description": "category of the insight."
            },
            "status": {
              "type": "string",
              "description": "status of the insight. example resolved, repaired, other."
            },
            "eventId": {
              "type": "string",
              "description": "Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event."
            },
            "groupId": {
              "type": "string",
              "description": "Identifier that can be used to group similar insights."
            },
            "content": {
              "description": "Contains title & description for the insight",
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Title of the insight"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the insight"
                }
              },
              "required": [
                "title",
                "description"
              ]
            },
            "eventTime": {
              "type": "string",
              "format": "date-time",
              "description": "Time of the event, which has been correlated the impact."
            },
            "insightUniqueId": {
              "type": "string",
              "description": "unique id of the insight."
            },
            "impact": {
              "description": "details of of the impact for which insight has been generated.",
              "type": "object",
              "properties": {
                "impactedResourceId": {
                  "type": "string",
                  "description": "List of impacted Azure resources."
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time at which impact was started according to reported impact."
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time at which impact was ended according to reported impact."
                },
                "impactId": {
                  "type": "string",
                  "description": "Azure Id of the impact."
                }
              },
              "required": [
                "impactedResourceId",
                "startTime",
                "impactId"
              ]
            },
            "additionalDetails": {
              "type": "object",
              "description": "additional details of the insight."
            }
          },
          "required": [
            "category",
            "content",
            "insightUniqueId",
            "impact"
          ]
        }
      }
    },
    "InsightCustomResourceCommonParameters": {
      "type": "object",
      "description": "context of post call for insight",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "The API version to use for this operation.",
          "minLength": 1
        },
        "subscriptionId": {
          "type": "string",
          "description": "The ID of the target subscription. The value must be an UUID.",
          "minLength": 1
        },
        "provider": {
          "type": "string",
          "description": "The provider namespace for the resource.",
          "enum": [
            "Microsoft.Impact"
          ],
          "x-ms-enum": {
            "modelAsString": false
          }
        },
        "azureResourceId": {
          "type": "string",
          "description": "Filter by resource type",
          "minLength": 1
        }
      },
      "required": [
        "apiVersion",
        "subscriptionId",
        "provider"
      ]
    },
    "InsightDetails": {
      "type": "object",
      "description": "Body of the get all insights",
      "properties": {
        "azureResourceId": {
          "type": "string",
          "description": "The ID of the azure resource."
        }
      }
    },
    "InsightListResult": {
      "type": "object",
      "description": "The response of a Insight list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The Insight items on this page",
          "items": {
            "type": "object",
            "description": "Insight resource",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Resource provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Provisioning Succeeded"
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Provisioning Failed"
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Provisioning Canceled"
                        }
                      ]
                    }
                  },
                  "category": {
                    "type": "string",
                    "description": "category of the insight."
                  },
                  "status": {
                    "type": "string",
                    "description": "status of the insight. example resolved, repaired, other."
                  },
                  "eventId": {
                    "type": "string",
                    "description": "Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event."
                  },
                  "groupId": {
                    "type": "string",
                    "description": "Identifier that can be used to group similar insights."
                  },
                  "content": {
                    "description": "Contains title & description for the insight",
                    "type": "object",
                    "properties": {
                      "title": {
                        "type": "string",
                        "description": "Title of the insight"
                      },
                      "description": {
                        "type": "string",
                        "description": "Description of the insight"
                      }
                    },
                    "required": [
                      "title",
                      "description"
                    ]
                  },
                  "eventTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the event, which has been correlated the impact."
                  },
                  "insightUniqueId": {
                    "type": "string",
                    "description": "unique id of the insight."
                  },
                  "impact": {
                    "description": "details of of the impact for which insight has been generated.",
                    "type": "object",
                    "properties": {
                      "impactedResourceId": {
                        "type": "string",
                        "description": "List of impacted Azure resources."
                      },
                      "startTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time at which impact was started according to reported impact."
                      },
                      "endTime": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time at which impact was ended according to reported impact."
                      },
                      "impactId": {
                        "type": "string",
                        "description": "Azure Id of the impact."
                      }
                    },
                    "required": [
                      "impactedResourceId",
                      "startTime",
                      "impactId"
                    ]
                  },
                  "additionalDetails": {
                    "type": "object",
                    "description": "additional details of the insight."
                  }
                },
                "required": [
                  "category",
                  "content",
                  "insightUniqueId",
                  "impact"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "InsightProperties": {
      "type": "object",
      "description": "Impact category properties.",
      "properties": {
        "provisioningState": {
          "description": "Resource provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Provisioning Succeeded"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Provisioning Failed"
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Provisioning Canceled"
              }
            ]
          }
        },
        "category": {
          "type": "string",
          "description": "category of the insight."
        },
        "status": {
          "type": "string",
          "description": "status of the insight. example resolved, repaired, other."
        },
        "eventId": {
          "type": "string",
          "description": "Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event."
        },
        "groupId": {
          "type": "string",
          "description": "Identifier that can be used to group similar insights."
        },
        "content": {
          "description": "Contains title & description for the insight",
          "type": "object",
          "properties": {
            "title": {
              "type": "string",
              "description": "Title of the insight"
            },
            "description": {
              "type": "string",
              "description": "Description of the insight"
            }
          },
          "required": [
            "title",
            "description"
          ]
        },
        "eventTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time of the event, which has been correlated the impact."
        },
        "insightUniqueId": {
          "type": "string",
          "description": "unique id of the insight."
        },
        "impact": {
          "description": "details of of the impact for which insight has been generated.",
          "type": "object",
          "properties": {
            "impactedResourceId": {
              "type": "string",
              "description": "List of impacted Azure resources."
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "Time at which impact was started according to reported impact."
            },
            "endTime": {
              "type": "string",
              "format": "date-time",
              "description": "Time at which impact was ended according to reported impact."
            },
            "impactId": {
              "type": "string",
              "description": "Azure Id of the impact."
            }
          },
          "required": [
            "impactedResourceId",
            "startTime",
            "impactId"
          ]
        },
        "additionalDetails": {
          "type": "object",
          "description": "additional details of the insight."
        }
      },
      "required": [
        "category",
        "content",
        "insightUniqueId",
        "impact"
      ]
    },
    "InsightUnderSubscription": {
      "type": "object",
      "description": "Insight resource",
      "properties": {
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Resource provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Provisioning Succeeded"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Provisioning Failed"
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Provisioning Canceled"
                  }
                ]
              }
            },
            "category": {
              "type": "string",
              "description": "category of the insight."
            },
            "status": {
              "type": "string",
              "description": "status of the insight. example resolved, repaired, other."
            },
            "eventId": {
              "type": "string",
              "description": "Identifier of the event that has been correlated with this insight. This can be used to aggregate insights for the same event."
            },
            "groupId": {
              "type": "string",
              "description": "Identifier that can be used to group similar insights."
            },
            "content": {
              "description": "Contains title & description for the insight",
              "type": "object",
              "properties": {
                "title": {
                  "type": "string",
                  "description": "Title of the insight"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the insight"
                }
              },
              "required": [
                "title",
                "description"
              ]
            },
            "eventTime": {
              "type": "string",
              "format": "date-time",
              "description": "Time of the event, which has been correlated the impact."
            },
            "insightUniqueId": {
              "type": "string",
              "description": "unique id of the insight."
            },
            "impact": {
              "description": "details of of the impact for which insight has been generated.",
              "type": "object",
              "properties": {
                "impactedResourceId": {
                  "type": "string",
                  "description": "List of impacted Azure resources."
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time at which impact was started according to reported impact."
                },
                "endTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time at which impact was ended according to reported impact."
                },
                "impactId": {
                  "type": "string",
                  "description": "Azure Id of the impact."
                }
              },
              "required": [
                "impactedResourceId",
                "startTime",
                "impactId"
              ]
            },
            "additionalDetails": {
              "type": "object",
              "description": "additional details of the insight."
            }
          },
          "required": [
            "category",
            "content",
            "insightUniqueId",
            "impact"
          ]
        }
      },
      "allOf": [
        {
          "type": "object",
          "title": "Proxy Resource",
          "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
          "properties": {
            "id": {
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "type": "object",
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            }
          }
        }
      ]
    },
    "MetricUnit": {
      "type": "string",
      "description": "List of unit of the metric.",
      "enum": [
        "ByteSeconds",
        "Bytes",
        "BytesPerSecond",
        "Cores",
        "Count",
        "CountPerSecond",
        "MilliCores",
        "MilliSeconds",
        "NanoCores",
        "Percent",
        "Seconds",
        "Other"
      ],
      "x-ms-enum": {
        "name": "MetricUnit",
        "modelAsString": true,
        "values": [
          {
            "name": "ByteSeconds",
            "value": "ByteSeconds",
            "description": "When measurement is in ByteSeconds"
          },
          {
            "name": "Bytes",
            "value": "Bytes",
            "description": "When measurement is in Bytes"
          },
          {
            "name": "BytesPerSecond",
            "value": "BytesPerSecond",
            "description": "When measurement is in BytesPerSecond"
          },
          {
            "name": "Cores",
            "value": "Cores",
            "description": "When measurement is in Cores"
          },
          {
            "name": "Count",
            "value": "Count",
            "description": "When measurement is in Count"
          },
          {
            "name": "CountPerSecond",
            "value": "CountPerSecond",
            "description": "When measurement is in CountPerSecond"
          },
          {
            "name": "MilliCores",
            "value": "MilliCores",
            "description": "When measurement is in MilliCores"
          },
          {
            "name": "MilliSeconds",
            "value": "MilliSeconds",
            "description": "When measurement is in MilliSeconds"
          },
          {
            "name": "NanoCores",
            "value": "NanoCores",
            "description": "When measurement is in NanoCores"
          },
          {
            "name": "Percent",
            "value": "Percent",
            "description": "When measurement is in Percent"
          },
          {
            "name": "Seconds",
            "value": "Seconds",
            "description": "When measurement is in Seconds"
          },
          {
            "name": "Other",
            "value": "Other",
            "description": "When measurement is in Other than listed"
          }
        ]
      }
    },
    "Performance": {
      "type": "object",
      "description": "Details about impacted performance metrics. Applicable for performance related impact",
      "properties": {
        "metricName": {
          "type": "string",
          "description": "Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API"
        },
        "expected": {
          "type": "number",
          "format": "double",
          "description": "Threshold value for the metric"
        },
        "actual": {
          "type": "number",
          "format": "double",
          "description": "Observed value for the metric"
        },
        "expectedValueRange": {
          "description": "Max and Min Threshold values for the metric",
          "type": "object",
          "properties": {
            "min": {
              "type": "number",
              "format": "double",
              "description": "Min threshold value for the metric"
            },
            "max": {
              "type": "number",
              "format": "double",
              "description": "Max threshold value for the metric"
            }
          },
          "required": [
            "min",
            "max"
          ]
        },
        "unit": {
          "description": "Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other",
          "type": "string",
          "enum": [
            "ByteSeconds",
            "Bytes",
            "BytesPerSecond",
            "Cores",
            "Count",
            "CountPerSecond",
            "MilliCores",
            "MilliSeconds",
            "NanoCores",
            "Percent",
            "Seconds",
            "Other"
          ],
          "x-ms-enum": {
            "name": "MetricUnit",
            "modelAsString": true,
            "values": [
              {
                "name": "ByteSeconds",
                "value": "ByteSeconds",
                "description": "When measurement is in ByteSeconds"
              },
              {
                "name": "Bytes",
                "value": "Bytes",
                "description": "When measurement is in Bytes"
              },
              {
                "name": "BytesPerSecond",
                "value": "BytesPerSecond",
                "description": "When measurement is in BytesPerSecond"
              },
              {
                "name": "Cores",
                "value": "Cores",
                "description": "When measurement is in Cores"
              },
              {
                "name": "Count",
                "value": "Count",
                "description": "When measurement is in Count"
              },
              {
                "name": "CountPerSecond",
                "value": "CountPerSecond",
                "description": "When measurement is in CountPerSecond"
              },
              {
                "name": "MilliCores",
                "value": "MilliCores",
                "description": "When measurement is in MilliCores"
              },
              {
                "name": "MilliSeconds",
                "value": "MilliSeconds",
                "description": "When measurement is in MilliSeconds"
              },
              {
                "name": "NanoCores",
                "value": "NanoCores",
                "description": "When measurement is in NanoCores"
              },
              {
                "name": "Percent",
                "value": "Percent",
                "description": "When measurement is in Percent"
              },
              {
                "name": "Seconds",
                "value": "Seconds",
                "description": "When measurement is in Seconds"
              },
              {
                "name": "Other",
                "value": "Other",
                "description": "When measurement is in Other than listed"
              }
            ]
          }
        }
      }
    },
    "Platform": {
      "type": "string",
      "description": "Enum for connector types",
      "enum": [
        "AzureMonitor"
      ],
      "x-ms-enum": {
        "name": "Platform",
        "modelAsString": true,
        "values": [
          {
            "name": "AzureMonitor",
            "value": "AzureMonitor",
            "description": "Type of Azure Monitor"
          }
        ]
      }
    },
    "Protocol": {
      "type": "string",
      "description": "List of protocols",
      "enum": [
        "TCP",
        "UDP",
        "HTTP",
        "HTTPS",
        "RDP",
        "FTP",
        "SSH",
        "Other"
      ],
      "x-ms-enum": {
        "name": "Protocol",
        "modelAsString": true,
        "values": [
          {
            "name": "TCP",
            "value": "TCP",
            "description": "When communication protocol is TCP"
          },
          {
            "name": "UDP",
            "value": "UDP",
            "description": "When communication protocol is UDP"
          },
          {
            "name": "HTTP",
            "value": "HTTP",
            "description": "When communication protocol is HTTP"
          },
          {
            "name": "HTTPS",
            "value": "HTTPS",
            "description": "When communication protocol is HTTPS"
          },
          {
            "name": "RDP",
            "value": "RDP",
            "description": "When communication protocol is RDP"
          },
          {
            "name": "FTP",
            "value": "FTP",
            "description": "When communication protocol is FTP"
          },
          {
            "name": "SSH",
            "value": "SSH",
            "description": "When communication protocol is SSH"
          },
          {
            "name": "Other",
            "value": "Other",
            "description": "When communication protocol is Other"
          }
        ]
      }
    },
    "ProvisioningState": {
      "type": "string",
      "description": "Provisioning state of the resource.",
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Provisioning Succeeded"
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Provisioning Failed"
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Provisioning Canceled"
          }
        ]
      },
      "readOnly": true
    },
    "RequiredImpactProperties": {
      "type": "object",
      "description": "Required impact properties",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the property"
        },
        "allowedValues": {
          "type": "array",
          "description": "Allowed values values for the property",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "name"
      ]
    },
    "SourceOrTarget": {
      "type": "object",
      "description": "Resource details",
      "properties": {
        "azureResourceId": {
          "type": "string",
          "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
          "pattern": "(\\/[0-9a-zA-Z]+)*"
        }
      }
    },
    "Toolset": {
      "type": "string",
      "description": "List of azure interfaces.",
      "enum": [
        "Terraform",
        "Puppet",
        "Chef",
        "SDK",
        "Ansible",
        "ARM",
        "Portal",
        "Shell",
        "Other"
      ],
      "x-ms-enum": {
        "name": "Toolset",
        "modelAsString": true,
        "values": [
          {
            "name": "Terraform",
            "value": "Terraform",
            "description": "If communication toolset is Terraform"
          },
          {
            "name": "Puppet",
            "value": "Puppet",
            "description": "If communication toolset is Puppet"
          },
          {
            "name": "Chef",
            "value": "Chef",
            "description": "If communication toolset is Chef"
          },
          {
            "name": "SDK",
            "value": "SDK",
            "description": "If communication toolset is SDK"
          },
          {
            "name": "Ansible",
            "value": "Ansible",
            "description": "If communication toolset is Ansible"
          },
          {
            "name": "ARM",
            "value": "ARM",
            "description": "If communication toolset is ARM"
          },
          {
            "name": "Portal",
            "value": "Portal",
            "description": "If communication toolset is Portal"
          },
          {
            "name": "Shell",
            "value": "Shell",
            "description": "If communication toolset is Shell"
          },
          {
            "name": "Other",
            "value": "Other",
            "description": "If communication toolset is Other"
          }
        ]
      }
    },
    "Workload": {
      "type": "object",
      "description": "Information about the impacted workload",
      "properties": {
        "context": {
          "type": "string",
          "description": "the scenario for the workload"
        },
        "toolset": {
          "description": "Tool used to interact with Azure. SDK, AzPortal, etc.., Other",
          "type": "string",
          "enum": [
            "Terraform",
            "Puppet",
            "Chef",
            "SDK",
            "Ansible",
            "ARM",
            "Portal",
            "Shell",
            "Other"
          ],
          "x-ms-enum": {
            "name": "Toolset",
            "modelAsString": true,
            "values": [
              {
                "name": "Terraform",
                "value": "Terraform",
                "description": "If communication toolset is Terraform"
              },
              {
                "name": "Puppet",
                "value": "Puppet",
                "description": "If communication toolset is Puppet"
              },
              {
                "name": "Chef",
                "value": "Chef",
                "description": "If communication toolset is Chef"
              },
              {
                "name": "SDK",
                "value": "SDK",
                "description": "If communication toolset is SDK"
              },
              {
                "name": "Ansible",
                "value": "Ansible",
                "description": "If communication toolset is Ansible"
              },
              {
                "name": "ARM",
                "value": "ARM",
                "description": "If communication toolset is ARM"
              },
              {
                "name": "Portal",
                "value": "Portal",
                "description": "If communication toolset is Portal"
              },
              {
                "name": "Shell",
                "value": "Shell",
                "description": "If communication toolset is Shell"
              },
              {
                "name": "Other",
                "value": "Other",
                "description": "If communication toolset is Other"
              }
            ]
          }
        }
      }
    },
    "WorkloadImpact": {
      "type": "object",
      "description": "Workload Impact properties",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Resource provisioning state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Provisioning Succeeded"
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Provisioning Failed"
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Provisioning Canceled"
                  }
                ]
              }
            },
            "startDateTime": {
              "type": "string",
              "format": "date-time",
              "description": "Time at which impact was observed "
            },
            "endDateTime": {
              "type": "string",
              "format": "date-time",
              "description": "Time at which impact has ended "
            },
            "impactedResourceId": {
              "type": "string",
              "description": "Azure resource id of the impacted resource"
            },
            "impactUniqueId": {
              "type": "string",
              "description": "Unique ID of the impact (UUID)",
              "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
              "readOnly": true
            },
            "reportedTimeUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Time at which impact is reported",
              "readOnly": true
            },
            "impactCategory": {
              "type": "string",
              "description": "Category of the impact,  details can found from /impactCategories API"
            },
            "impactDescription": {
              "type": "string",
              "description": "A detailed description of the impact"
            },
            "armCorrelationIds": {
              "type": "array",
              "description": "The ARM correlation ids, this is important field for control plane related impacts",
              "items": {
                "type": "string"
              }
            },
            "performance": {
              "type": "array",
              "description": "Details about performance issue. Applicable for performance impacts.",
              "items": {
                "type": "object",
                "description": "Details about impacted performance metrics. Applicable for performance related impact",
                "properties": {
                  "metricName": {
                    "type": "string",
                    "description": "Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API"
                  },
                  "expected": {
                    "type": "number",
                    "format": "double",
                    "description": "Threshold value for the metric"
                  },
                  "actual": {
                    "type": "number",
                    "format": "double",
                    "description": "Observed value for the metric"
                  },
                  "expectedValueRange": {
                    "description": "Max and Min Threshold values for the metric",
                    "type": "object",
                    "properties": {
                      "min": {
                        "type": "number",
                        "format": "double",
                        "description": "Min threshold value for the metric"
                      },
                      "max": {
                        "type": "number",
                        "format": "double",
                        "description": "Max threshold value for the metric"
                      }
                    },
                    "required": [
                      "min",
                      "max"
                    ]
                  },
                  "unit": {
                    "description": "Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other",
                    "type": "string",
                    "enum": [
                      "ByteSeconds",
                      "Bytes",
                      "BytesPerSecond",
                      "Cores",
                      "Count",
                      "CountPerSecond",
                      "MilliCores",
                      "MilliSeconds",
                      "NanoCores",
                      "Percent",
                      "Seconds",
                      "Other"
                    ],
                    "x-ms-enum": {
                      "name": "MetricUnit",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "ByteSeconds",
                          "value": "ByteSeconds",
                          "description": "When measurement is in ByteSeconds"
                        },
                        {
                          "name": "Bytes",
                          "value": "Bytes",
                          "description": "When measurement is in Bytes"
                        },
                        {
                          "name": "BytesPerSecond",
                          "value": "BytesPerSecond",
                          "description": "When measurement is in BytesPerSecond"
                        },
                        {
                          "name": "Cores",
                          "value": "Cores",
                          "description": "When measurement is in Cores"
                        },
                        {
                          "name": "Count",
                          "value": "Count",
                          "description": "When measurement is in Count"
                        },
                        {
                          "name": "CountPerSecond",
                          "value": "CountPerSecond",
                          "description": "When measurement is in CountPerSecond"
                        },
                        {
                          "name": "MilliCores",
                          "value": "MilliCores",
                          "description": "When measurement is in MilliCores"
                        },
                        {
                          "name": "MilliSeconds",
                          "value": "MilliSeconds",
                          "description": "When measurement is in MilliSeconds"
                        },
                        {
                          "name": "NanoCores",
                          "value": "NanoCores",
                          "description": "When measurement is in NanoCores"
                        },
                        {
                          "name": "Percent",
                          "value": "Percent",
                          "description": "When measurement is in Percent"
                        },
                        {
                          "name": "Seconds",
                          "value": "Seconds",
                          "description": "When measurement is in Seconds"
                        },
                        {
                          "name": "Other",
                          "value": "Other",
                          "description": "When measurement is in Other than listed"
                        }
                      ]
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "connectivity": {
              "description": "Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue",
              "type": "object",
              "properties": {
                "protocol": {
                  "description": "Protocol used for the connection",
                  "type": "string",
                  "enum": [
                    "TCP",
                    "UDP",
                    "HTTP",
                    "HTTPS",
                    "RDP",
                    "FTP",
                    "SSH",
                    "Other"
                  ],
                  "x-ms-enum": {
                    "name": "Protocol",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "TCP",
                        "value": "TCP",
                        "description": "When communication protocol is TCP"
                      },
                      {
                        "name": "UDP",
                        "value": "UDP",
                        "description": "When communication protocol is UDP"
                      },
                      {
                        "name": "HTTP",
                        "value": "HTTP",
                        "description": "When communication protocol is HTTP"
                      },
                      {
                        "name": "HTTPS",
                        "value": "HTTPS",
                        "description": "When communication protocol is HTTPS"
                      },
                      {
                        "name": "RDP",
                        "value": "RDP",
                        "description": "When communication protocol is RDP"
                      },
                      {
                        "name": "FTP",
                        "value": "FTP",
                        "description": "When communication protocol is FTP"
                      },
                      {
                        "name": "SSH",
                        "value": "SSH",
                        "description": "When communication protocol is SSH"
                      },
                      {
                        "name": "Other",
                        "value": "Other",
                        "description": "When communication protocol is Other"
                      }
                    ]
                  }
                },
                "port": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Port number for the connection"
                },
                "source": {
                  "description": "Source from which the connection was attempted",
                  "type": "object",
                  "properties": {
                    "azureResourceId": {
                      "type": "string",
                      "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                      "pattern": "(\\/[0-9a-zA-Z]+)*"
                    }
                  }
                },
                "target": {
                  "description": "target which connection was attempted",
                  "type": "object",
                  "properties": {
                    "azureResourceId": {
                      "type": "string",
                      "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                      "pattern": "(\\/[0-9a-zA-Z]+)*"
                    }
                  }
                }
              }
            },
            "additionalProperties": {
              "type": "object",
              "description": "Additional fields related to impact, applicable fields per resource type are list under /impactCategories API",
              "additionalProperties": {}
            },
            "errorDetails": {
              "description": "ARM error code and error message associated with the impact",
              "type": "object",
              "properties": {
                "errorCode": {
                  "type": "string",
                  "description": "ARM Error code associated with the impact."
                },
                "errorMessage": {
                  "type": "string",
                  "description": "ARM Error Message associated with the impact"
                }
              }
            },
            "workload": {
              "description": "Information about the impacted workload",
              "type": "object",
              "properties": {
                "context": {
                  "type": "string",
                  "description": "the scenario for the workload"
                },
                "toolset": {
                  "description": "Tool used to interact with Azure. SDK, AzPortal, etc.., Other",
                  "type": "string",
                  "enum": [
                    "Terraform",
                    "Puppet",
                    "Chef",
                    "SDK",
                    "Ansible",
                    "ARM",
                    "Portal",
                    "Shell",
                    "Other"
                  ],
                  "x-ms-enum": {
                    "name": "Toolset",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Terraform",
                        "value": "Terraform",
                        "description": "If communication toolset is Terraform"
                      },
                      {
                        "name": "Puppet",
                        "value": "Puppet",
                        "description": "If communication toolset is Puppet"
                      },
                      {
                        "name": "Chef",
                        "value": "Chef",
                        "description": "If communication toolset is Chef"
                      },
                      {
                        "name": "SDK",
                        "value": "SDK",
                        "description": "If communication toolset is SDK"
                      },
                      {
                        "name": "Ansible",
                        "value": "Ansible",
                        "description": "If communication toolset is Ansible"
                      },
                      {
                        "name": "ARM",
                        "value": "ARM",
                        "description": "If communication toolset is ARM"
                      },
                      {
                        "name": "Portal",
                        "value": "Portal",
                        "description": "If communication toolset is Portal"
                      },
                      {
                        "name": "Shell",
                        "value": "Shell",
                        "description": "If communication toolset is Shell"
                      },
                      {
                        "name": "Other",
                        "value": "Other",
                        "description": "If communication toolset is Other"
                      }
                    ]
                  }
                }
              }
            },
            "impactGroupId": {
              "type": "string",
              "description": "Use this field to group impacts"
            },
            "confidenceLevel": {
              "description": "Degree of confidence on the impact being a platform issue",
              "type": "string",
              "enum": [
                "Low",
                "Medium",
                "High"
              ],
              "x-ms-enum": {
                "name": "ConfidenceLevel",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Low",
                    "value": "Low",
                    "description": "Low confidence on azure being the source of impact"
                  },
                  {
                    "name": "Medium",
                    "value": "Medium",
                    "description": "Medium confidence on azure being the source of impact"
                  },
                  {
                    "name": "High",
                    "value": "High",
                    "description": "High confidence on azure being the source of impact"
                  }
                ]
              }
            },
            "clientIncidentDetails": {
              "description": "Client incident details ex: incidentId , incident source",
              "type": "object",
              "properties": {
                "clientIncidentId": {
                  "type": "string",
                  "description": "Client incident id. ex : id of the incident created to investigate and address the impact if any."
                },
                "clientIncidentSource": {
                  "description": "Client incident source. ex : source system name where the incident is created",
                  "type": "string",
                  "enum": [
                    "AzureDevops",
                    "ICM",
                    "Jira",
                    "ServiceNow",
                    "Other"
                  ],
                  "x-ms-enum": {
                    "name": "IncidentSource",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "AzureDevops",
                        "value": "AzureDevops",
                        "description": "When source of Incident is AzureDevops"
                      },
                      {
                        "name": "ICM",
                        "value": "ICM",
                        "description": "When source of Incident is Microsoft ICM"
                      },
                      {
                        "name": "Jira",
                        "value": "Jira",
                        "description": "When source of Incident is Jira"
                      },
                      {
                        "name": "ServiceNow",
                        "value": "ServiceNow",
                        "description": "When source of Incident is ServiceNow"
                      },
                      {
                        "name": "Other",
                        "value": "Other",
                        "description": "When source of Incident is Other"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": [
            "startDateTime",
            "impactedResourceId",
            "impactCategory"
          ]
        }
      }
    },
    "WorkloadImpactListResult": {
      "type": "object",
      "description": "The response of a WorkloadImpact list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The WorkloadImpact items on this page",
          "items": {
            "type": "object",
            "description": "Workload Impact properties",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Resource provisioning state.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Provisioning Succeeded"
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Provisioning Failed"
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Provisioning Canceled"
                        }
                      ]
                    }
                  },
                  "startDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time at which impact was observed "
                  },
                  "endDateTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time at which impact has ended "
                  },
                  "impactedResourceId": {
                    "type": "string",
                    "description": "Azure resource id of the impacted resource"
                  },
                  "impactUniqueId": {
                    "type": "string",
                    "description": "Unique ID of the impact (UUID)",
                    "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
                    "readOnly": true
                  },
                  "reportedTimeUtc": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Time at which impact is reported",
                    "readOnly": true
                  },
                  "impactCategory": {
                    "type": "string",
                    "description": "Category of the impact,  details can found from /impactCategories API"
                  },
                  "impactDescription": {
                    "type": "string",
                    "description": "A detailed description of the impact"
                  },
                  "armCorrelationIds": {
                    "type": "array",
                    "description": "The ARM correlation ids, this is important field for control plane related impacts",
                    "items": {
                      "type": "string"
                    }
                  },
                  "performance": {
                    "type": "array",
                    "description": "Details about performance issue. Applicable for performance impacts.",
                    "items": {
                      "type": "object",
                      "description": "Details about impacted performance metrics. Applicable for performance related impact",
                      "properties": {
                        "metricName": {
                          "type": "string",
                          "description": "Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API"
                        },
                        "expected": {
                          "type": "number",
                          "format": "double",
                          "description": "Threshold value for the metric"
                        },
                        "actual": {
                          "type": "number",
                          "format": "double",
                          "description": "Observed value for the metric"
                        },
                        "expectedValueRange": {
                          "description": "Max and Min Threshold values for the metric",
                          "type": "object",
                          "properties": {
                            "min": {
                              "type": "number",
                              "format": "double",
                              "description": "Min threshold value for the metric"
                            },
                            "max": {
                              "type": "number",
                              "format": "double",
                              "description": "Max threshold value for the metric"
                            }
                          },
                          "required": [
                            "min",
                            "max"
                          ]
                        },
                        "unit": {
                          "description": "Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other",
                          "type": "string",
                          "enum": [
                            "ByteSeconds",
                            "Bytes",
                            "BytesPerSecond",
                            "Cores",
                            "Count",
                            "CountPerSecond",
                            "MilliCores",
                            "MilliSeconds",
                            "NanoCores",
                            "Percent",
                            "Seconds",
                            "Other"
                          ],
                          "x-ms-enum": {
                            "name": "MetricUnit",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "ByteSeconds",
                                "value": "ByteSeconds",
                                "description": "When measurement is in ByteSeconds"
                              },
                              {
                                "name": "Bytes",
                                "value": "Bytes",
                                "description": "When measurement is in Bytes"
                              },
                              {
                                "name": "BytesPerSecond",
                                "value": "BytesPerSecond",
                                "description": "When measurement is in BytesPerSecond"
                              },
                              {
                                "name": "Cores",
                                "value": "Cores",
                                "description": "When measurement is in Cores"
                              },
                              {
                                "name": "Count",
                                "value": "Count",
                                "description": "When measurement is in Count"
                              },
                              {
                                "name": "CountPerSecond",
                                "value": "CountPerSecond",
                                "description": "When measurement is in CountPerSecond"
                              },
                              {
                                "name": "MilliCores",
                                "value": "MilliCores",
                                "description": "When measurement is in MilliCores"
                              },
                              {
                                "name": "MilliSeconds",
                                "value": "MilliSeconds",
                                "description": "When measurement is in MilliSeconds"
                              },
                              {
                                "name": "NanoCores",
                                "value": "NanoCores",
                                "description": "When measurement is in NanoCores"
                              },
                              {
                                "name": "Percent",
                                "value": "Percent",
                                "description": "When measurement is in Percent"
                              },
                              {
                                "name": "Seconds",
                                "value": "Seconds",
                                "description": "When measurement is in Seconds"
                              },
                              {
                                "name": "Other",
                                "value": "Other",
                                "description": "When measurement is in Other than listed"
                              }
                            ]
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "connectivity": {
                    "description": "Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue",
                    "type": "object",
                    "properties": {
                      "protocol": {
                        "description": "Protocol used for the connection",
                        "type": "string",
                        "enum": [
                          "TCP",
                          "UDP",
                          "HTTP",
                          "HTTPS",
                          "RDP",
                          "FTP",
                          "SSH",
                          "Other"
                        ],
                        "x-ms-enum": {
                          "name": "Protocol",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "TCP",
                              "value": "TCP",
                              "description": "When communication protocol is TCP"
                            },
                            {
                              "name": "UDP",
                              "value": "UDP",
                              "description": "When communication protocol is UDP"
                            },
                            {
                              "name": "HTTP",
                              "value": "HTTP",
                              "description": "When communication protocol is HTTP"
                            },
                            {
                              "name": "HTTPS",
                              "value": "HTTPS",
                              "description": "When communication protocol is HTTPS"
                            },
                            {
                              "name": "RDP",
                              "value": "RDP",
                              "description": "When communication protocol is RDP"
                            },
                            {
                              "name": "FTP",
                              "value": "FTP",
                              "description": "When communication protocol is FTP"
                            },
                            {
                              "name": "SSH",
                              "value": "SSH",
                              "description": "When communication protocol is SSH"
                            },
                            {
                              "name": "Other",
                              "value": "Other",
                              "description": "When communication protocol is Other"
                            }
                          ]
                        }
                      },
                      "port": {
                        "type": "integer",
                        "format": "int32",
                        "description": "Port number for the connection"
                      },
                      "source": {
                        "description": "Source from which the connection was attempted",
                        "type": "object",
                        "properties": {
                          "azureResourceId": {
                            "type": "string",
                            "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                            "pattern": "(\\/[0-9a-zA-Z]+)*"
                          }
                        }
                      },
                      "target": {
                        "description": "target which connection was attempted",
                        "type": "object",
                        "properties": {
                          "azureResourceId": {
                            "type": "string",
                            "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                            "pattern": "(\\/[0-9a-zA-Z]+)*"
                          }
                        }
                      }
                    }
                  },
                  "additionalProperties": {
                    "type": "object",
                    "description": "Additional fields related to impact, applicable fields per resource type are list under /impactCategories API",
                    "additionalProperties": {}
                  },
                  "errorDetails": {
                    "description": "ARM error code and error message associated with the impact",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "type": "string",
                        "description": "ARM Error code associated with the impact."
                      },
                      "errorMessage": {
                        "type": "string",
                        "description": "ARM Error Message associated with the impact"
                      }
                    }
                  },
                  "workload": {
                    "description": "Information about the impacted workload",
                    "type": "object",
                    "properties": {
                      "context": {
                        "type": "string",
                        "description": "the scenario for the workload"
                      },
                      "toolset": {
                        "description": "Tool used to interact with Azure. SDK, AzPortal, etc.., Other",
                        "type": "string",
                        "enum": [
                          "Terraform",
                          "Puppet",
                          "Chef",
                          "SDK",
                          "Ansible",
                          "ARM",
                          "Portal",
                          "Shell",
                          "Other"
                        ],
                        "x-ms-enum": {
                          "name": "Toolset",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Terraform",
                              "value": "Terraform",
                              "description": "If communication toolset is Terraform"
                            },
                            {
                              "name": "Puppet",
                              "value": "Puppet",
                              "description": "If communication toolset is Puppet"
                            },
                            {
                              "name": "Chef",
                              "value": "Chef",
                              "description": "If communication toolset is Chef"
                            },
                            {
                              "name": "SDK",
                              "value": "SDK",
                              "description": "If communication toolset is SDK"
                            },
                            {
                              "name": "Ansible",
                              "value": "Ansible",
                              "description": "If communication toolset is Ansible"
                            },
                            {
                              "name": "ARM",
                              "value": "ARM",
                              "description": "If communication toolset is ARM"
                            },
                            {
                              "name": "Portal",
                              "value": "Portal",
                              "description": "If communication toolset is Portal"
                            },
                            {
                              "name": "Shell",
                              "value": "Shell",
                              "description": "If communication toolset is Shell"
                            },
                            {
                              "name": "Other",
                              "value": "Other",
                              "description": "If communication toolset is Other"
                            }
                          ]
                        }
                      }
                    }
                  },
                  "impactGroupId": {
                    "type": "string",
                    "description": "Use this field to group impacts"
                  },
                  "confidenceLevel": {
                    "description": "Degree of confidence on the impact being a platform issue",
                    "type": "string",
                    "enum": [
                      "Low",
                      "Medium",
                      "High"
                    ],
                    "x-ms-enum": {
                      "name": "ConfidenceLevel",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Low",
                          "value": "Low",
                          "description": "Low confidence on azure being the source of impact"
                        },
                        {
                          "name": "Medium",
                          "value": "Medium",
                          "description": "Medium confidence on azure being the source of impact"
                        },
                        {
                          "name": "High",
                          "value": "High",
                          "description": "High confidence on azure being the source of impact"
                        }
                      ]
                    }
                  },
                  "clientIncidentDetails": {
                    "description": "Client incident details ex: incidentId , incident source",
                    "type": "object",
                    "properties": {
                      "clientIncidentId": {
                        "type": "string",
                        "description": "Client incident id. ex : id of the incident created to investigate and address the impact if any."
                      },
                      "clientIncidentSource": {
                        "description": "Client incident source. ex : source system name where the incident is created",
                        "type": "string",
                        "enum": [
                          "AzureDevops",
                          "ICM",
                          "Jira",
                          "ServiceNow",
                          "Other"
                        ],
                        "x-ms-enum": {
                          "name": "IncidentSource",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "AzureDevops",
                              "value": "AzureDevops",
                              "description": "When source of Incident is AzureDevops"
                            },
                            {
                              "name": "ICM",
                              "value": "ICM",
                              "description": "When source of Incident is Microsoft ICM"
                            },
                            {
                              "name": "Jira",
                              "value": "Jira",
                              "description": "When source of Incident is Jira"
                            },
                            {
                              "name": "ServiceNow",
                              "value": "ServiceNow",
                              "description": "When source of Incident is ServiceNow"
                            },
                            {
                              "name": "Other",
                              "value": "Other",
                              "description": "When source of Incident is Other"
                            }
                          ]
                        }
                      }
                    }
                  }
                },
                "required": [
                  "startDateTime",
                  "impactedResourceId",
                  "impactCategory"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "WorkloadImpactProperties": {
      "type": "object",
      "description": "Workload impact properties",
      "properties": {
        "provisioningState": {
          "description": "Resource provisioning state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Provisioning Succeeded"
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Provisioning Failed"
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Provisioning Canceled"
              }
            ]
          }
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which impact was observed "
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which impact has ended "
        },
        "impactedResourceId": {
          "type": "string",
          "description": "Azure resource id of the impacted resource"
        },
        "impactUniqueId": {
          "type": "string",
          "description": "Unique ID of the impact (UUID)",
          "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
          "readOnly": true
        },
        "reportedTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which impact is reported",
          "readOnly": true
        },
        "impactCategory": {
          "type": "string",
          "description": "Category of the impact,  details can found from /impactCategories API"
        },
        "impactDescription": {
          "type": "string",
          "description": "A detailed description of the impact"
        },
        "armCorrelationIds": {
          "type": "array",
          "description": "The ARM correlation ids, this is important field for control plane related impacts",
          "items": {
            "type": "string"
          }
        },
        "performance": {
          "type": "array",
          "description": "Details about performance issue. Applicable for performance impacts.",
          "items": {
            "type": "object",
            "description": "Details about impacted performance metrics. Applicable for performance related impact",
            "properties": {
              "metricName": {
                "type": "string",
                "description": "Name of the Metric examples:  Disk, IOPs, CPU, GPU, Memory, details can be found from /impactCategories API"
              },
              "expected": {
                "type": "number",
                "format": "double",
                "description": "Threshold value for the metric"
              },
              "actual": {
                "type": "number",
                "format": "double",
                "description": "Observed value for the metric"
              },
              "expectedValueRange": {
                "description": "Max and Min Threshold values for the metric",
                "type": "object",
                "properties": {
                  "min": {
                    "type": "number",
                    "format": "double",
                    "description": "Min threshold value for the metric"
                  },
                  "max": {
                    "type": "number",
                    "format": "double",
                    "description": "Max threshold value for the metric"
                  }
                },
                "required": [
                  "min",
                  "max"
                ]
              },
              "unit": {
                "description": "Unit of the metric ex: Bytes, Percentage, Count, Seconds, Milliseconds, Bytes/Second, Count/Second, etc.., Other",
                "type": "string",
                "enum": [
                  "ByteSeconds",
                  "Bytes",
                  "BytesPerSecond",
                  "Cores",
                  "Count",
                  "CountPerSecond",
                  "MilliCores",
                  "MilliSeconds",
                  "NanoCores",
                  "Percent",
                  "Seconds",
                  "Other"
                ],
                "x-ms-enum": {
                  "name": "MetricUnit",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "ByteSeconds",
                      "value": "ByteSeconds",
                      "description": "When measurement is in ByteSeconds"
                    },
                    {
                      "name": "Bytes",
                      "value": "Bytes",
                      "description": "When measurement is in Bytes"
                    },
                    {
                      "name": "BytesPerSecond",
                      "value": "BytesPerSecond",
                      "description": "When measurement is in BytesPerSecond"
                    },
                    {
                      "name": "Cores",
                      "value": "Cores",
                      "description": "When measurement is in Cores"
                    },
                    {
                      "name": "Count",
                      "value": "Count",
                      "description": "When measurement is in Count"
                    },
                    {
                      "name": "CountPerSecond",
                      "value": "CountPerSecond",
                      "description": "When measurement is in CountPerSecond"
                    },
                    {
                      "name": "MilliCores",
                      "value": "MilliCores",
                      "description": "When measurement is in MilliCores"
                    },
                    {
                      "name": "MilliSeconds",
                      "value": "MilliSeconds",
                      "description": "When measurement is in MilliSeconds"
                    },
                    {
                      "name": "NanoCores",
                      "value": "NanoCores",
                      "description": "When measurement is in NanoCores"
                    },
                    {
                      "name": "Percent",
                      "value": "Percent",
                      "description": "When measurement is in Percent"
                    },
                    {
                      "name": "Seconds",
                      "value": "Seconds",
                      "description": "When measurement is in Seconds"
                    },
                    {
                      "name": "Other",
                      "value": "Other",
                      "description": "When measurement is in Other than listed"
                    }
                  ]
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "connectivity": {
          "description": "Details about connectivity issue. Applicable when root resource causing the issue is not identified. For example, when a VM is impacted due to a network issue, the impacted resource is identified as the VM, but the root cause is the network. In such cases, the connectivity field will have the details about the network issue",
          "type": "object",
          "properties": {
            "protocol": {
              "description": "Protocol used for the connection",
              "type": "string",
              "enum": [
                "TCP",
                "UDP",
                "HTTP",
                "HTTPS",
                "RDP",
                "FTP",
                "SSH",
                "Other"
              ],
              "x-ms-enum": {
                "name": "Protocol",
                "modelAsString": true,
                "values": [
                  {
                    "name": "TCP",
                    "value": "TCP",
                    "description": "When communication protocol is TCP"
                  },
                  {
                    "name": "UDP",
                    "value": "UDP",
                    "description": "When communication protocol is UDP"
                  },
                  {
                    "name": "HTTP",
                    "value": "HTTP",
                    "description": "When communication protocol is HTTP"
                  },
                  {
                    "name": "HTTPS",
                    "value": "HTTPS",
                    "description": "When communication protocol is HTTPS"
                  },
                  {
                    "name": "RDP",
                    "value": "RDP",
                    "description": "When communication protocol is RDP"
                  },
                  {
                    "name": "FTP",
                    "value": "FTP",
                    "description": "When communication protocol is FTP"
                  },
                  {
                    "name": "SSH",
                    "value": "SSH",
                    "description": "When communication protocol is SSH"
                  },
                  {
                    "name": "Other",
                    "value": "Other",
                    "description": "When communication protocol is Other"
                  }
                ]
              }
            },
            "port": {
              "type": "integer",
              "format": "int32",
              "description": "Port number for the connection"
            },
            "source": {
              "description": "Source from which the connection was attempted",
              "type": "object",
              "properties": {
                "azureResourceId": {
                  "type": "string",
                  "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                  "pattern": "(\\/[0-9a-zA-Z]+)*"
                }
              }
            },
            "target": {
              "description": "target which connection was attempted",
              "type": "object",
              "properties": {
                "azureResourceId": {
                  "type": "string",
                  "description": "Azure resource id, example /subscription/{subscription}/resourceGroup/{rg}/Microsoft.compute/virtualMachine/{vmName}",
                  "pattern": "(\\/[0-9a-zA-Z]+)*"
                }
              }
            }
          }
        },
        "additionalProperties": {
          "type": "object",
          "description": "Additional fields related to impact, applicable fields per resource type are list under /impactCategories API",
          "additionalProperties": {}
        },
        "errorDetails": {
          "description": "ARM error code and error message associated with the impact",
          "type": "object",
          "properties": {
            "errorCode": {
              "type": "string",
              "description": "ARM Error code associated with the impact."
            },
            "errorMessage": {
              "type": "string",
              "description": "ARM Error Message associated with the impact"
            }
          }
        },
        "workload": {
          "description": "Information about the impacted workload",
          "type": "object",
          "properties": {
            "context": {
              "type": "string",
              "description": "the scenario for the workload"
            },
            "toolset": {
              "description": "Tool used to interact with Azure. SDK, AzPortal, etc.., Other",
              "type": "string",
              "enum": [
                "Terraform",
                "Puppet",
                "Chef",
                "SDK",
                "Ansible",
                "ARM",
                "Portal",
                "Shell",
                "Other"
              ],
              "x-ms-enum": {
                "name": "Toolset",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Terraform",
                    "value": "Terraform",
                    "description": "If communication toolset is Terraform"
                  },
                  {
                    "name": "Puppet",
                    "value": "Puppet",
                    "description": "If communication toolset is Puppet"
                  },
                  {
                    "name": "Chef",
                    "value": "Chef",
                    "description": "If communication toolset is Chef"
                  },
                  {
                    "name": "SDK",
                    "value": "SDK",
                    "description": "If communication toolset is SDK"
                  },
                  {
                    "name": "Ansible",
                    "value": "Ansible",
                    "description": "If communication toolset is Ansible"
                  },
                  {
                    "name": "ARM",
                    "value": "ARM",
                    "description": "If communication toolset is ARM"
                  },
                  {
                    "name": "Portal",
                    "value": "Portal",
                    "description": "If communication toolset is Portal"
                  },
                  {
                    "name": "Shell",
                    "value": "Shell",
                    "description": "If communication toolset is Shell"
                  },
                  {
                    "name": "Other",
                    "value": "Other",
                    "description": "If communication toolset is Other"
                  }
                ]
              }
            }
          }
        },
        "impactGroupId": {
          "type": "string",
          "description": "Use this field to group impacts"
        },
        "confidenceLevel": {
          "description": "Degree of confidence on the impact being a platform issue",
          "type": "string",
          "enum": [
            "Low",
            "Medium",
            "High"
          ],
          "x-ms-enum": {
            "name": "ConfidenceLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "Low",
                "value": "Low",
                "description": "Low confidence on azure being the source of impact"
              },
              {
                "name": "Medium",
                "value": "Medium",
                "description": "Medium confidence on azure being the source of impact"
              },
              {
                "name": "High",
                "value": "High",
                "description": "High confidence on azure being the source of impact"
              }
            ]
          }
        },
        "clientIncidentDetails": {
          "description": "Client incident details ex: incidentId , incident source",
          "type": "object",
          "properties": {
            "clientIncidentId": {
              "type": "string",
              "description": "Client incident id. ex : id of the incident created to investigate and address the impact if any."
            },
            "clientIncidentSource": {
              "description": "Client incident source. ex : source system name where the incident is created",
              "type": "string",
              "enum": [
                "AzureDevops",
                "ICM",
                "Jira",
                "ServiceNow",
                "Other"
              ],
              "x-ms-enum": {
                "name": "IncidentSource",
                "modelAsString": true,
                "values": [
                  {
                    "name": "AzureDevops",
                    "value": "AzureDevops",
                    "description": "When source of Incident is AzureDevops"
                  },
                  {
                    "name": "ICM",
                    "value": "ICM",
                    "description": "When source of Incident is Microsoft ICM"
                  },
                  {
                    "name": "Jira",
                    "value": "Jira",
                    "description": "When source of Incident is Jira"
                  },
                  {
                    "name": "ServiceNow",
                    "value": "ServiceNow",
                    "description": "When source of Incident is ServiceNow"
                  },
                  {
                    "name": "Other",
                    "value": "Other",
                    "description": "When source of Incident is Other"
                  }
                ]
              }
            }
          }
        }
      },
      "required": [
        "startDateTime",
        "impactedResourceId",
        "impactCategory"
      ]
    }
  },
  "parameters": {
    "CustomParameters.categoryName": {
      "name": "categoryName",
      "in": "query",
      "description": "Filter by category name ",
      "required": false,
      "type": "string",
      "minLength": 1,
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9.]*[a-zA-Z0-9]{3,180}$",
      "x-ms-parameter-location": "method"
    },
    "CustomParameters.resourceType": {
      "name": "resourceType",
      "in": "query",
      "description": "Filter by resource type",
      "required": true,
      "type": "string",
      "minLength": 1,
      "x-ms-parameter-location": "method"
    }
  }
}