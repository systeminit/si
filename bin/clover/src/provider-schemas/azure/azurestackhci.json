{
  "swagger": "2.0",
  "info": {
    "title": "Azure azurestackhci",
    "version": "2025-10-01",
    "description": "Azure azurestackhci service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings": {
      "get": {
        "operationId": "ArcSettings_ListByCluster",
        "description": "Get ArcSetting resources of HCI Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of ArcSetting proxy resources for the HCI cluster.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of ArcSetting proxy resources.",
                  "type": "array",
                  "items": {
                    "description": "ArcSetting details.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "ArcSetting properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the ArcSetting proxy resource.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning",
                              "DisableInProgress"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The provisioning state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred during provisioning."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Provisioning completed successfully."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Provisioning failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Provisioning was canceled."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The resource is connected."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The resource is disconnected."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The resource has been deleted."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The resource is being created."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is being updated."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The resource is being moved."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "Provisioning partially succeeded."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The resource is partially connected."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "Provisioning is in progress."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning request has been accepted."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is currently provisioning."
                                },
                                {
                                  "name": "DisableInProgress",
                                  "value": "DisableInProgress",
                                  "description": "The resource is being disabled."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "arcInstanceResourceGroup": {
                            "description": "The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.",
                            "type": "string"
                          },
                          "arcApplicationClientId": {
                            "description": "App id of arc AAD identity.",
                            "type": "string"
                          },
                          "arcApplicationTenantId": {
                            "description": "Tenant id of arc AAD identity.",
                            "type": "string"
                          },
                          "arcServicePrincipalObjectId": {
                            "description": "Object id of arc AAD service principal.",
                            "type": "string"
                          },
                          "arcApplicationObjectId": {
                            "description": "Object id of arc AAD identity.",
                            "type": "string"
                          },
                          "aggregateState": {
                            "description": "Aggregate state of Arc agent across the nodes in this HCI cluster.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning",
                              "DisableInProgress"
                            ],
                            "x-ms-enum": {
                              "name": "ArcSettingAggregateState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The aggregate state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred in the aggregate state."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The operation successfully completed across all nodes."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The operation was canceled across the nodes."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The operation failed on all or most nodes."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "All nodes are connected."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "All nodes are disconnected."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The Arc agent has been deleted from all nodes."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The Arc agent is being created across the nodes."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The Arc agent is being updated across the nodes."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The Arc agent is being deleted across the nodes."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The Arc agent is being moved across the nodes."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The operation succeeded on some nodes."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "Some nodes are connected, others are not."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The operation is currently in progress across the nodes."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The Arc agent is being provisioned across the nodes."
                                },
                                {
                                  "name": "DisableInProgress",
                                  "value": "DisableInProgress",
                                  "description": "The Arc agent is being disabled across the nodes."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "perNodeDetails": {
                            "description": "State of Arc agent in each of the nodes.",
                            "type": "array",
                            "items": {
                              "description": "Status of Arc agent for a particular node in HCI Cluster.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "Name of the Node in HCI Cluster"
                                },
                                "arcInstance": {
                                  "description": "Fully qualified resource ID for the Arc agent of this node.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "arcNodeServicePrincipalObjectId": {
                                  "description": "The service principal id of the arc for server node",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "state": {
                                  "description": "State of the Arc agent in this node. Indicates the current lifecycle status of the agent, such as whether it's being provisioned, connected, updated, or has encountered an error.",
                                  "type": "string",
                                  "enum": [
                                    "NotSpecified",
                                    "Error",
                                    "Succeeded",
                                    "Canceled",
                                    "Failed",
                                    "Connected",
                                    "Disconnected",
                                    "Deleted",
                                    "Creating",
                                    "Updating",
                                    "Deleting",
                                    "Moving",
                                    "PartiallySucceeded",
                                    "PartiallyConnected",
                                    "InProgress",
                                    "Accepted",
                                    "Provisioning",
                                    "DisableInProgress"
                                  ],
                                  "x-ms-enum": {
                                    "name": "NodeArcState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "NotSpecified",
                                        "value": "NotSpecified",
                                        "description": "The state is not specified."
                                      },
                                      {
                                        "name": "Error",
                                        "value": "Error",
                                        "description": "An error occurred during the agent's lifecycle."
                                      },
                                      {
                                        "name": "Succeeded",
                                        "value": "Succeeded",
                                        "description": "The operation completed successfully."
                                      },
                                      {
                                        "name": "Canceled",
                                        "value": "Canceled",
                                        "description": "The operation was canceled before completion."
                                      },
                                      {
                                        "name": "Failed",
                                        "value": "Failed",
                                        "description": "The operation failed."
                                      },
                                      {
                                        "name": "Connected",
                                        "value": "Connected",
                                        "description": "The Arc agent is connected on this node."
                                      },
                                      {
                                        "name": "Disconnected",
                                        "value": "Disconnected",
                                        "description": "The Arc agent is disconnected on this node."
                                      },
                                      {
                                        "name": "Deleted",
                                        "value": "Deleted",
                                        "description": "The Arc agent has been deleted from this node."
                                      },
                                      {
                                        "name": "Creating",
                                        "value": "Creating",
                                        "description": "The Arc agent is being created on this node."
                                      },
                                      {
                                        "name": "Updating",
                                        "value": "Updating",
                                        "description": "The Arc agent is being updated on this node."
                                      },
                                      {
                                        "name": "Deleting",
                                        "value": "Deleting",
                                        "description": "The Arc agent is being deleted from this node."
                                      },
                                      {
                                        "name": "Moving",
                                        "value": "Moving",
                                        "description": "The Arc agent is being moved on this node."
                                      },
                                      {
                                        "name": "PartiallySucceeded",
                                        "value": "PartiallySucceeded",
                                        "description": "The operation partially succeeded."
                                      },
                                      {
                                        "name": "PartiallyConnected",
                                        "value": "PartiallyConnected",
                                        "description": "The Arc agent is partially connected on this node."
                                      },
                                      {
                                        "name": "InProgress",
                                        "value": "InProgress",
                                        "description": "The operation is currently in progress."
                                      },
                                      {
                                        "name": "Accepted",
                                        "value": "Accepted",
                                        "description": "The operation has been accepted and is pending execution."
                                      },
                                      {
                                        "name": "Provisioning",
                                        "value": "Provisioning",
                                        "description": "The Arc agent is currently being provisioned on this node."
                                      },
                                      {
                                        "name": "DisableInProgress",
                                        "value": "DisableInProgress",
                                        "description": "The Arc agent is in the process of being disabled on this node."
                                      }
                                    ]
                                  },
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "connectivityProperties": {
                            "description": "contains connectivity related configuration for ARC resources",
                            "type": "object",
                            "items": {
                              "description": "Connectivity related configuration required by arc server.",
                              "type": "object",
                              "properties": {
                                "enabled": {
                                  "type": "boolean",
                                  "description": "True indicates ARC connectivity is enabled"
                                },
                                "serviceConfigurations": {
                                  "type": "array",
                                  "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
                                  "items": {
                                    "type": "object",
                                    "description": "Service configuration details",
                                    "required": [
                                      "serviceName",
                                      "port"
                                    ],
                                    "properties": {
                                      "serviceName": {
                                        "type": "string",
                                        "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
                                        "enum": [
                                          "WAC"
                                        ],
                                        "x-ms-enum": {
                                          "name": "serviceName",
                                          "modelAsString": true,
                                          "values": [
                                            {
                                              "name": "WAC",
                                              "value": "WAC",
                                              "description": "Windows Admin Center (WAC) is the service associated with this operation."
                                            }
                                          ]
                                        }
                                      },
                                      "port": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "The port on which service is enabled."
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "serviceName"
                                  ]
                                }
                              },
                              "additionalProperties": false
                            }
                          },
                          "defaultExtensions": {
                            "description": "Properties for each of the default extensions category",
                            "type": "array",
                            "items": {
                              "description": "Properties for a particular default extension category.",
                              "type": "object",
                              "properties": {
                                "category": {
                                  "description": "Default extension category",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "consentTime": {
                                  "description": "Consent time for extension category",
                                  "type": "string",
                                  "format": "date-time",
                                  "readOnly": true
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "category"
                            ],
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to the next set of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}": {
      "get": {
        "operationId": "ArcSettings_Get",
        "description": "Get ArcSetting resource details of HCI Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "ArcSetting details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ArcSetting properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the ArcSetting proxy resource.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "DisableInProgress"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred during provisioning."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning was canceled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "Provisioning partially succeeded."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "Provisioning is in progress."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning request has been accepted."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently provisioning."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The resource is being disabled."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "arcInstanceResourceGroup": {
                      "description": "The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.",
                      "type": "string"
                    },
                    "arcApplicationClientId": {
                      "description": "App id of arc AAD identity.",
                      "type": "string"
                    },
                    "arcApplicationTenantId": {
                      "description": "Tenant id of arc AAD identity.",
                      "type": "string"
                    },
                    "arcServicePrincipalObjectId": {
                      "description": "Object id of arc AAD service principal.",
                      "type": "string"
                    },
                    "arcApplicationObjectId": {
                      "description": "Object id of arc AAD identity.",
                      "type": "string"
                    },
                    "aggregateState": {
                      "description": "Aggregate state of Arc agent across the nodes in this HCI cluster.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "DisableInProgress"
                      ],
                      "x-ms-enum": {
                        "name": "ArcSettingAggregateState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The aggregate state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the aggregate state."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation successfully completed across all nodes."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled across the nodes."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed on all or most nodes."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "All nodes are connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "All nodes are disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The Arc agent has been deleted from all nodes."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The Arc agent is being created across the nodes."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The Arc agent is being updated across the nodes."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The Arc agent is being deleted across the nodes."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The Arc agent is being moved across the nodes."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation succeeded on some nodes."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some nodes are connected, others are not."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress across the nodes."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The Arc agent is being provisioned across the nodes."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The Arc agent is being disabled across the nodes."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "perNodeDetails": {
                      "description": "State of Arc agent in each of the nodes.",
                      "type": "array",
                      "items": {
                        "description": "Status of Arc agent for a particular node in HCI Cluster.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Name of the Node in HCI Cluster"
                          },
                          "arcInstance": {
                            "description": "Fully qualified resource ID for the Arc agent of this node.",
                            "type": "string",
                            "readOnly": true
                          },
                          "arcNodeServicePrincipalObjectId": {
                            "description": "The service principal id of the arc for server node",
                            "type": "string",
                            "readOnly": true
                          },
                          "state": {
                            "description": "State of the Arc agent in this node. Indicates the current lifecycle status of the agent, such as whether it's being provisioned, connected, updated, or has encountered an error.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning",
                              "DisableInProgress"
                            ],
                            "x-ms-enum": {
                              "name": "NodeArcState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred during the agent's lifecycle."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The operation completed successfully."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The operation was canceled before completion."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The operation failed."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The Arc agent is connected on this node."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The Arc agent is disconnected on this node."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The Arc agent has been deleted from this node."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The Arc agent is being created on this node."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The Arc agent is being updated on this node."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The Arc agent is being deleted from this node."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The Arc agent is being moved on this node."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The operation partially succeeded."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The Arc agent is partially connected on this node."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The operation is currently in progress."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The Arc agent is currently being provisioned on this node."
                                },
                                {
                                  "name": "DisableInProgress",
                                  "value": "DisableInProgress",
                                  "description": "The Arc agent is in the process of being disabled on this node."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "connectivityProperties": {
                      "description": "contains connectivity related configuration for ARC resources",
                      "type": "object",
                      "items": {
                        "description": "Connectivity related configuration required by arc server.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "True indicates ARC connectivity is enabled"
                          },
                          "serviceConfigurations": {
                            "type": "array",
                            "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
                            "items": {
                              "type": "object",
                              "description": "Service configuration details",
                              "required": [
                                "serviceName",
                                "port"
                              ],
                              "properties": {
                                "serviceName": {
                                  "type": "string",
                                  "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
                                  "enum": [
                                    "WAC"
                                  ],
                                  "x-ms-enum": {
                                    "name": "serviceName",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "WAC",
                                        "value": "WAC",
                                        "description": "Windows Admin Center (WAC) is the service associated with this operation."
                                      }
                                    ]
                                  }
                                },
                                "port": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The port on which service is enabled."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "serviceName"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "defaultExtensions": {
                      "description": "Properties for each of the default extensions category",
                      "type": "array",
                      "items": {
                        "description": "Properties for a particular default extension category.",
                        "type": "object",
                        "properties": {
                          "category": {
                            "description": "Default extension category",
                            "type": "string",
                            "readOnly": true
                          },
                          "consentTime": {
                            "description": "Consent time for extension category",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "category"
                      ],
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "ArcSettings_Create",
        "description": "Create ArcSetting for HCI cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSetting",
            "in": "body",
            "required": true,
            "schema": {
              "description": "ArcSetting details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ArcSetting properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the ArcSetting proxy resource.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "DisableInProgress"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred during provisioning."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning was canceled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "Provisioning partially succeeded."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "Provisioning is in progress."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning request has been accepted."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently provisioning."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The resource is being disabled."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "arcInstanceResourceGroup": {
                      "description": "The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.",
                      "type": "string"
                    },
                    "arcApplicationClientId": {
                      "description": "App id of arc AAD identity.",
                      "type": "string"
                    },
                    "arcApplicationTenantId": {
                      "description": "Tenant id of arc AAD identity.",
                      "type": "string"
                    },
                    "arcServicePrincipalObjectId": {
                      "description": "Object id of arc AAD service principal.",
                      "type": "string"
                    },
                    "arcApplicationObjectId": {
                      "description": "Object id of arc AAD identity.",
                      "type": "string"
                    },
                    "aggregateState": {
                      "description": "Aggregate state of Arc agent across the nodes in this HCI cluster.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "DisableInProgress"
                      ],
                      "x-ms-enum": {
                        "name": "ArcSettingAggregateState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The aggregate state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the aggregate state."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation successfully completed across all nodes."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled across the nodes."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed on all or most nodes."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "All nodes are connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "All nodes are disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The Arc agent has been deleted from all nodes."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The Arc agent is being created across the nodes."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The Arc agent is being updated across the nodes."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The Arc agent is being deleted across the nodes."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The Arc agent is being moved across the nodes."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation succeeded on some nodes."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some nodes are connected, others are not."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress across the nodes."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The Arc agent is being provisioned across the nodes."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The Arc agent is being disabled across the nodes."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "perNodeDetails": {
                      "description": "State of Arc agent in each of the nodes.",
                      "type": "array",
                      "items": {
                        "description": "Status of Arc agent for a particular node in HCI Cluster.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Name of the Node in HCI Cluster"
                          },
                          "arcInstance": {
                            "description": "Fully qualified resource ID for the Arc agent of this node.",
                            "type": "string",
                            "readOnly": true
                          },
                          "arcNodeServicePrincipalObjectId": {
                            "description": "The service principal id of the arc for server node",
                            "type": "string",
                            "readOnly": true
                          },
                          "state": {
                            "description": "State of the Arc agent in this node. Indicates the current lifecycle status of the agent, such as whether it's being provisioned, connected, updated, or has encountered an error.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning",
                              "DisableInProgress"
                            ],
                            "x-ms-enum": {
                              "name": "NodeArcState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred during the agent's lifecycle."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The operation completed successfully."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The operation was canceled before completion."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The operation failed."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The Arc agent is connected on this node."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The Arc agent is disconnected on this node."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The Arc agent has been deleted from this node."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The Arc agent is being created on this node."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The Arc agent is being updated on this node."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The Arc agent is being deleted from this node."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The Arc agent is being moved on this node."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The operation partially succeeded."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The Arc agent is partially connected on this node."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The operation is currently in progress."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The Arc agent is currently being provisioned on this node."
                                },
                                {
                                  "name": "DisableInProgress",
                                  "value": "DisableInProgress",
                                  "description": "The Arc agent is in the process of being disabled on this node."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "connectivityProperties": {
                      "description": "contains connectivity related configuration for ARC resources",
                      "type": "object",
                      "items": {
                        "description": "Connectivity related configuration required by arc server.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "True indicates ARC connectivity is enabled"
                          },
                          "serviceConfigurations": {
                            "type": "array",
                            "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
                            "items": {
                              "type": "object",
                              "description": "Service configuration details",
                              "required": [
                                "serviceName",
                                "port"
                              ],
                              "properties": {
                                "serviceName": {
                                  "type": "string",
                                  "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
                                  "enum": [
                                    "WAC"
                                  ],
                                  "x-ms-enum": {
                                    "name": "serviceName",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "WAC",
                                        "value": "WAC",
                                        "description": "Windows Admin Center (WAC) is the service associated with this operation."
                                      }
                                    ]
                                  }
                                },
                                "port": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The port on which service is enabled."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "serviceName"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "defaultExtensions": {
                      "description": "Properties for each of the default extensions category",
                      "type": "array",
                      "items": {
                        "description": "Properties for a particular default extension category.",
                        "type": "object",
                        "properties": {
                          "category": {
                            "description": "Default extension category",
                            "type": "string",
                            "readOnly": true
                          },
                          "consentTime": {
                            "description": "Consent time for extension category",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "category"
                      ],
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": "Parameters supplied to the Create ArcSetting resource for this HCI cluster."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "ArcSetting details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ArcSetting properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the ArcSetting proxy resource.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "DisableInProgress"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred during provisioning."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning was canceled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "Provisioning partially succeeded."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "Provisioning is in progress."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning request has been accepted."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently provisioning."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The resource is being disabled."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "arcInstanceResourceGroup": {
                      "description": "The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.",
                      "type": "string"
                    },
                    "arcApplicationClientId": {
                      "description": "App id of arc AAD identity.",
                      "type": "string"
                    },
                    "arcApplicationTenantId": {
                      "description": "Tenant id of arc AAD identity.",
                      "type": "string"
                    },
                    "arcServicePrincipalObjectId": {
                      "description": "Object id of arc AAD service principal.",
                      "type": "string"
                    },
                    "arcApplicationObjectId": {
                      "description": "Object id of arc AAD identity.",
                      "type": "string"
                    },
                    "aggregateState": {
                      "description": "Aggregate state of Arc agent across the nodes in this HCI cluster.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "DisableInProgress"
                      ],
                      "x-ms-enum": {
                        "name": "ArcSettingAggregateState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The aggregate state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the aggregate state."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation successfully completed across all nodes."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled across the nodes."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed on all or most nodes."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "All nodes are connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "All nodes are disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The Arc agent has been deleted from all nodes."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The Arc agent is being created across the nodes."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The Arc agent is being updated across the nodes."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The Arc agent is being deleted across the nodes."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The Arc agent is being moved across the nodes."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation succeeded on some nodes."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some nodes are connected, others are not."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress across the nodes."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The Arc agent is being provisioned across the nodes."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The Arc agent is being disabled across the nodes."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "perNodeDetails": {
                      "description": "State of Arc agent in each of the nodes.",
                      "type": "array",
                      "items": {
                        "description": "Status of Arc agent for a particular node in HCI Cluster.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Name of the Node in HCI Cluster"
                          },
                          "arcInstance": {
                            "description": "Fully qualified resource ID for the Arc agent of this node.",
                            "type": "string",
                            "readOnly": true
                          },
                          "arcNodeServicePrincipalObjectId": {
                            "description": "The service principal id of the arc for server node",
                            "type": "string",
                            "readOnly": true
                          },
                          "state": {
                            "description": "State of the Arc agent in this node. Indicates the current lifecycle status of the agent, such as whether it's being provisioned, connected, updated, or has encountered an error.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning",
                              "DisableInProgress"
                            ],
                            "x-ms-enum": {
                              "name": "NodeArcState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred during the agent's lifecycle."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The operation completed successfully."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The operation was canceled before completion."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The operation failed."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The Arc agent is connected on this node."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The Arc agent is disconnected on this node."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The Arc agent has been deleted from this node."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The Arc agent is being created on this node."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The Arc agent is being updated on this node."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The Arc agent is being deleted from this node."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The Arc agent is being moved on this node."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The operation partially succeeded."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The Arc agent is partially connected on this node."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The operation is currently in progress."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The Arc agent is currently being provisioned on this node."
                                },
                                {
                                  "name": "DisableInProgress",
                                  "value": "DisableInProgress",
                                  "description": "The Arc agent is in the process of being disabled on this node."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "connectivityProperties": {
                      "description": "contains connectivity related configuration for ARC resources",
                      "type": "object",
                      "items": {
                        "description": "Connectivity related configuration required by arc server.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "True indicates ARC connectivity is enabled"
                          },
                          "serviceConfigurations": {
                            "type": "array",
                            "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
                            "items": {
                              "type": "object",
                              "description": "Service configuration details",
                              "required": [
                                "serviceName",
                                "port"
                              ],
                              "properties": {
                                "serviceName": {
                                  "type": "string",
                                  "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
                                  "enum": [
                                    "WAC"
                                  ],
                                  "x-ms-enum": {
                                    "name": "serviceName",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "WAC",
                                        "value": "WAC",
                                        "description": "Windows Admin Center (WAC) is the service associated with this operation."
                                      }
                                    ]
                                  }
                                },
                                "port": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The port on which service is enabled."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "serviceName"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "defaultExtensions": {
                      "description": "Properties for each of the default extensions category",
                      "type": "array",
                      "items": {
                        "description": "Properties for a particular default extension category.",
                        "type": "object",
                        "properties": {
                          "category": {
                            "description": "Default extension category",
                            "type": "string",
                            "readOnly": true
                          },
                          "consentTime": {
                            "description": "Consent time for extension category",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "category"
                      ],
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "ArcSettings_Update",
        "description": "Update ArcSettings for HCI cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSetting",
            "in": "body",
            "required": true,
            "schema": {
              "description": "ArcSetting details to update.",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "properties": {
                  "description": "ArcSettings properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "connectivityProperties": {
                      "description": "contains connectivity related configuration for ARC resources",
                      "type": "object",
                      "items": {
                        "description": "Connectivity related configuration required by arc server.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "True indicates ARC connectivity is enabled"
                          },
                          "serviceConfigurations": {
                            "type": "array",
                            "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
                            "items": {
                              "type": "object",
                              "description": "Service configuration details",
                              "required": [
                                "serviceName",
                                "port"
                              ],
                              "properties": {
                                "serviceName": {
                                  "type": "string",
                                  "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
                                  "enum": [
                                    "WAC"
                                  ],
                                  "x-ms-enum": {
                                    "name": "serviceName",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "WAC",
                                        "value": "WAC",
                                        "description": "Windows Admin Center (WAC) is the service associated with this operation."
                                      }
                                    ]
                                  }
                                },
                                "port": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The port on which service is enabled."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "serviceName"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    }
                  }
                }
              }
            },
            "description": "ArcSettings parameters that needs to be updated"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "ArcSetting details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ArcSetting properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the ArcSetting proxy resource.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "DisableInProgress"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred during provisioning."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning was canceled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "Provisioning partially succeeded."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "Provisioning is in progress."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning request has been accepted."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently provisioning."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The resource is being disabled."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "arcInstanceResourceGroup": {
                      "description": "The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.",
                      "type": "string"
                    },
                    "arcApplicationClientId": {
                      "description": "App id of arc AAD identity.",
                      "type": "string"
                    },
                    "arcApplicationTenantId": {
                      "description": "Tenant id of arc AAD identity.",
                      "type": "string"
                    },
                    "arcServicePrincipalObjectId": {
                      "description": "Object id of arc AAD service principal.",
                      "type": "string"
                    },
                    "arcApplicationObjectId": {
                      "description": "Object id of arc AAD identity.",
                      "type": "string"
                    },
                    "aggregateState": {
                      "description": "Aggregate state of Arc agent across the nodes in this HCI cluster.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "DisableInProgress"
                      ],
                      "x-ms-enum": {
                        "name": "ArcSettingAggregateState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The aggregate state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the aggregate state."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation successfully completed across all nodes."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled across the nodes."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed on all or most nodes."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "All nodes are connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "All nodes are disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The Arc agent has been deleted from all nodes."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The Arc agent is being created across the nodes."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The Arc agent is being updated across the nodes."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The Arc agent is being deleted across the nodes."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The Arc agent is being moved across the nodes."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation succeeded on some nodes."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some nodes are connected, others are not."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress across the nodes."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The Arc agent is being provisioned across the nodes."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The Arc agent is being disabled across the nodes."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "perNodeDetails": {
                      "description": "State of Arc agent in each of the nodes.",
                      "type": "array",
                      "items": {
                        "description": "Status of Arc agent for a particular node in HCI Cluster.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Name of the Node in HCI Cluster"
                          },
                          "arcInstance": {
                            "description": "Fully qualified resource ID for the Arc agent of this node.",
                            "type": "string",
                            "readOnly": true
                          },
                          "arcNodeServicePrincipalObjectId": {
                            "description": "The service principal id of the arc for server node",
                            "type": "string",
                            "readOnly": true
                          },
                          "state": {
                            "description": "State of the Arc agent in this node. Indicates the current lifecycle status of the agent, such as whether it's being provisioned, connected, updated, or has encountered an error.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning",
                              "DisableInProgress"
                            ],
                            "x-ms-enum": {
                              "name": "NodeArcState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred during the agent's lifecycle."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The operation completed successfully."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The operation was canceled before completion."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The operation failed."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The Arc agent is connected on this node."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The Arc agent is disconnected on this node."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The Arc agent has been deleted from this node."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The Arc agent is being created on this node."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The Arc agent is being updated on this node."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The Arc agent is being deleted from this node."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The Arc agent is being moved on this node."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The operation partially succeeded."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The Arc agent is partially connected on this node."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The operation is currently in progress."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The Arc agent is currently being provisioned on this node."
                                },
                                {
                                  "name": "DisableInProgress",
                                  "value": "DisableInProgress",
                                  "description": "The Arc agent is in the process of being disabled on this node."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "connectivityProperties": {
                      "description": "contains connectivity related configuration for ARC resources",
                      "type": "object",
                      "items": {
                        "description": "Connectivity related configuration required by arc server.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "True indicates ARC connectivity is enabled"
                          },
                          "serviceConfigurations": {
                            "type": "array",
                            "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
                            "items": {
                              "type": "object",
                              "description": "Service configuration details",
                              "required": [
                                "serviceName",
                                "port"
                              ],
                              "properties": {
                                "serviceName": {
                                  "type": "string",
                                  "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
                                  "enum": [
                                    "WAC"
                                  ],
                                  "x-ms-enum": {
                                    "name": "serviceName",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "WAC",
                                        "value": "WAC",
                                        "description": "Windows Admin Center (WAC) is the service associated with this operation."
                                      }
                                    ]
                                  }
                                },
                                "port": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The port on which service is enabled."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "serviceName"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "defaultExtensions": {
                      "description": "Properties for each of the default extensions category",
                      "type": "array",
                      "items": {
                        "description": "Properties for a particular default extension category.",
                        "type": "object",
                        "properties": {
                          "category": {
                            "description": "Default extension category",
                            "type": "string",
                            "readOnly": true
                          },
                          "consentTime": {
                            "description": "Consent time for extension category",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "category"
                      ],
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "ArcSettings_Delete",
        "description": "Delete ArcSetting resource details of HCI Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/generatePassword": {
      "post": {
        "tags": [
          "ArcSettings"
        ],
        "operationId": "ArcSettings_GeneratePassword",
        "description": "Generate password for arc settings.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "object",
              "properties": {
                "secretText": {
                  "type": "string"
                },
                "keyId": {
                  "type": "string"
                },
                "startDateTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "endDateTime": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "additionalProperties": false,
              "readOnly": true
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/createArcIdentity": {
      "post": {
        "tags": [
          "ArcSettings"
        ],
        "operationId": "ArcSettings_CreateIdentity",
        "description": "Create Aad identity for arc settings.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "ArcIdentity details.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "ArcIdentity properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "arcApplicationClientId": {
                      "type": "string"
                    },
                    "arcApplicationTenantId": {
                      "type": "string"
                    },
                    "arcServicePrincipalObjectId": {
                      "type": "string"
                    },
                    "arcApplicationObjectId": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/consentAndInstallDefaultExtensions": {
      "post": {
        "tags": [
          "ArcSettings"
        ],
        "operationId": "ArcSettings_ConsentAndInstallDefaultExtensions",
        "description": "Add consent time for default extensions and initiate extensions installation",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "ArcSetting details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "ArcSetting properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the ArcSetting proxy resource.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "DisableInProgress"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred during provisioning."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning was canceled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "Provisioning partially succeeded."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "Provisioning is in progress."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning request has been accepted."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently provisioning."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The resource is being disabled."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "arcInstanceResourceGroup": {
                      "description": "The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.",
                      "type": "string"
                    },
                    "arcApplicationClientId": {
                      "description": "App id of arc AAD identity.",
                      "type": "string"
                    },
                    "arcApplicationTenantId": {
                      "description": "Tenant id of arc AAD identity.",
                      "type": "string"
                    },
                    "arcServicePrincipalObjectId": {
                      "description": "Object id of arc AAD service principal.",
                      "type": "string"
                    },
                    "arcApplicationObjectId": {
                      "description": "Object id of arc AAD identity.",
                      "type": "string"
                    },
                    "aggregateState": {
                      "description": "Aggregate state of Arc agent across the nodes in this HCI cluster.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "DisableInProgress"
                      ],
                      "x-ms-enum": {
                        "name": "ArcSettingAggregateState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The aggregate state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the aggregate state."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation successfully completed across all nodes."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled across the nodes."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed on all or most nodes."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "All nodes are connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "All nodes are disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The Arc agent has been deleted from all nodes."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The Arc agent is being created across the nodes."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The Arc agent is being updated across the nodes."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The Arc agent is being deleted across the nodes."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The Arc agent is being moved across the nodes."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation succeeded on some nodes."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some nodes are connected, others are not."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress across the nodes."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The Arc agent is being provisioned across the nodes."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The Arc agent is being disabled across the nodes."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "perNodeDetails": {
                      "description": "State of Arc agent in each of the nodes.",
                      "type": "array",
                      "items": {
                        "description": "Status of Arc agent for a particular node in HCI Cluster.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "readOnly": true,
                            "description": "Name of the Node in HCI Cluster"
                          },
                          "arcInstance": {
                            "description": "Fully qualified resource ID for the Arc agent of this node.",
                            "type": "string",
                            "readOnly": true
                          },
                          "arcNodeServicePrincipalObjectId": {
                            "description": "The service principal id of the arc for server node",
                            "type": "string",
                            "readOnly": true
                          },
                          "state": {
                            "description": "State of the Arc agent in this node. Indicates the current lifecycle status of the agent, such as whether it's being provisioned, connected, updated, or has encountered an error.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning",
                              "DisableInProgress"
                            ],
                            "x-ms-enum": {
                              "name": "NodeArcState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred during the agent's lifecycle."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The operation completed successfully."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The operation was canceled before completion."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The operation failed."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The Arc agent is connected on this node."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The Arc agent is disconnected on this node."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The Arc agent has been deleted from this node."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The Arc agent is being created on this node."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The Arc agent is being updated on this node."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The Arc agent is being deleted from this node."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The Arc agent is being moved on this node."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The operation partially succeeded."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The Arc agent is partially connected on this node."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The operation is currently in progress."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The Arc agent is currently being provisioned on this node."
                                },
                                {
                                  "name": "DisableInProgress",
                                  "value": "DisableInProgress",
                                  "description": "The Arc agent is in the process of being disabled on this node."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "connectivityProperties": {
                      "description": "contains connectivity related configuration for ARC resources",
                      "type": "object",
                      "items": {
                        "description": "Connectivity related configuration required by arc server.",
                        "type": "object",
                        "properties": {
                          "enabled": {
                            "type": "boolean",
                            "description": "True indicates ARC connectivity is enabled"
                          },
                          "serviceConfigurations": {
                            "type": "array",
                            "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
                            "items": {
                              "type": "object",
                              "description": "Service configuration details",
                              "required": [
                                "serviceName",
                                "port"
                              ],
                              "properties": {
                                "serviceName": {
                                  "type": "string",
                                  "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
                                  "enum": [
                                    "WAC"
                                  ],
                                  "x-ms-enum": {
                                    "name": "serviceName",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "WAC",
                                        "value": "WAC",
                                        "description": "Windows Admin Center (WAC) is the service associated with this operation."
                                      }
                                    ]
                                  }
                                },
                                "port": {
                                  "type": "integer",
                                  "format": "int64",
                                  "description": "The port on which service is enabled."
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "serviceName"
                            ]
                          }
                        },
                        "additionalProperties": false
                      }
                    },
                    "defaultExtensions": {
                      "description": "Properties for each of the default extensions category",
                      "type": "array",
                      "items": {
                        "description": "Properties for a particular default extension category.",
                        "type": "object",
                        "properties": {
                          "category": {
                            "description": "Default extension category",
                            "type": "string",
                            "readOnly": true
                          },
                          "consentTime": {
                            "description": "Consent time for extension category",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "category"
                      ],
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/initializeDisableProcess": {
      "post": {
        "tags": [
          "ArcSettings"
        ],
        "operationId": "ArcSettings_InitializeDisableProcess",
        "description": "Initializes ARC Disable process on the cluster",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/clusters": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_ListBySubscription",
        "description": "List all HCI clusters in a subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of clusters.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of clusters.",
                  "type": "array",
                  "items": {
                    "description": "Cluster details.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "identity": {
                        "description": "Identity of Cluster resource",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "description": "Cluster properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state. Indicates the current lifecycle status of the resource, including creation, update, deletion, connectivity, and error states.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Provisioning",
                              "NotSpecified",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "Deleted",
                              "PartiallySucceeded",
                              "InProgress",
                              "DisableInProgress",
                              "Connected",
                              "PartiallyConnected",
                              "Disconnected"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The operation completed successfully."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The operation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The operation was canceled before completion."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is currently being provisioned."
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The provisioning state is not specified."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The resource is being created."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is being updated."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The resource is being moved."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The resource has been deleted."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The operation partially succeeded."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The operation is currently in progress."
                                },
                                {
                                  "name": "DisableInProgress",
                                  "value": "DisableInProgress",
                                  "description": "The resource is in the process of being disabled."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The resource is connected."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The resource is partially connected."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The resource is disconnected."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the cluster agent. Indicates the current connectivity, validation, and deployment state of the agent within the cluster.",
                            "type": "string",
                            "enum": [
                              "NotYetRegistered",
                              "ConnectedRecently",
                              "NotConnectedRecently",
                              "Disconnected",
                              "Error",
                              "NotSpecified",
                              "ValidationInProgress",
                              "ValidationSuccess",
                              "ValidationFailed",
                              "DeploymentInProgress",
                              "DeploymentFailed",
                              "DeploymentSuccess"
                            ],
                            "x-ms-enum": {
                              "name": "Status",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotYetRegistered",
                                  "value": "NotYetRegistered",
                                  "description": "The cluster agent has not yet registered with Azure."
                                },
                                {
                                  "name": "ConnectedRecently",
                                  "value": "ConnectedRecently",
                                  "description": "The cluster agent has connected to Azure recently."
                                },
                                {
                                  "name": "NotConnectedRecently",
                                  "value": "NotConnectedRecently",
                                  "description": "The cluster agent has not connected to Azure recently."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The cluster agent is currently disconnected from Azure."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred in the cluster agent's operation."
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The status of the cluster agent is not specified."
                                },
                                {
                                  "name": "ValidationInProgress",
                                  "value": "ValidationInProgress",
                                  "description": "Validation of the cluster agent is currently in progress."
                                },
                                {
                                  "name": "ValidationSuccess",
                                  "value": "ValidationSuccess",
                                  "description": "Validation of the cluster agent completed successfully."
                                },
                                {
                                  "name": "ValidationFailed",
                                  "value": "ValidationFailed",
                                  "description": "Validation of the cluster agent failed."
                                },
                                {
                                  "name": "DeploymentInProgress",
                                  "value": "DeploymentInProgress",
                                  "description": "Deployment of the cluster agent is currently in progress."
                                },
                                {
                                  "name": "DeploymentFailed",
                                  "value": "DeploymentFailed",
                                  "description": "Deployment of the cluster agent failed."
                                },
                                {
                                  "name": "DeploymentSuccess",
                                  "value": "DeploymentSuccess",
                                  "description": "Deployment of the cluster agent completed successfully."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "connectivityStatus": {
                            "description": "Overall connectivity status for the cluster resource. Indicates whether the cluster is connected to Azure, partially connected, or has not recently communicated.",
                            "type": "string",
                            "enum": [
                              "NotYetRegistered",
                              "Connected",
                              "NotConnectedRecently",
                              "PartiallyConnected",
                              "Disconnected",
                              "NotSpecified"
                            ],
                            "x-ms-enum": {
                              "name": "ConnectivityStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotYetRegistered",
                                  "value": "NotYetRegistered",
                                  "description": "The cluster has not yet registered with Azure."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The cluster is fully connected to Azure."
                                },
                                {
                                  "name": "NotConnectedRecently",
                                  "value": "NotConnectedRecently",
                                  "description": "The cluster has not connected to Azure recently."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "Some components of the cluster are connected, while others are not."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The cluster is not connected to Azure."
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The connectivity status is not specified."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "cloudId": {
                            "description": "Unique, immutable resource id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "cloudManagementEndpoint": {
                            "description": "Endpoint configured for management from the Azure portal.",
                            "type": "string"
                          },
                          "aadClientId": {
                            "description": "App id of cluster AAD identity.",
                            "type": "string"
                          },
                          "aadTenantId": {
                            "description": "Tenant id of cluster AAD identity.",
                            "type": "string"
                          },
                          "aadApplicationObjectId": {
                            "description": "Object id of cluster AAD identity.",
                            "type": "string"
                          },
                          "aadServicePrincipalObjectId": {
                            "description": "Id of cluster identity service principal.",
                            "type": "string"
                          },
                          "softwareAssuranceProperties": {
                            "description": "Software Assurance properties of the cluster.",
                            "type": "object",
                            "properties": {
                              "softwareAssuranceStatus": {
                                "description": "Status of the Software Assurance for the cluster.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "SoftwareAssuranceStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Software Assurance is enabled for the cluster."
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Software Assurance is disabled for the cluster."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "softwareAssuranceIntent": {
                                "description": "Customer Intent for Software Assurance Benefit.",
                                "type": "string",
                                "enum": [
                                  "Enable",
                                  "Disable"
                                ],
                                "x-ms-enum": {
                                  "name": "SoftwareAssuranceIntent",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enable",
                                      "value": "Enable",
                                      "description": "Customer intends to enable the Software Assurance benefit."
                                    },
                                    {
                                      "name": "Disable",
                                      "value": "Disable",
                                      "description": "Customer intends to disable the Software Assurance benefit."
                                    }
                                  ]
                                }
                              },
                              "lastUpdated": {
                                "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              }
                            }
                          },
                          "logCollectionProperties": {
                            "description": "Log Collection properties of the cluster.",
                            "type": "object",
                            "properties": {
                              "fromDate": {
                                "description": "From DateTimeStamp from when logs need to be connected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "toDate": {
                                "description": "To DateTimeStamp till when logs need to be connected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "lastLogGenerated": {
                                "description": "Recent DateTimeStamp where logs are successfully generated",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logCollectionSessionDetails": {
                                "type": "array",
                                "items": {
                                  "description": "Log Collection Session details of the cluster.",
                                  "type": "object",
                                  "properties": {
                                    "logStartTime": {
                                      "description": "Start Time of the logs when it was collected",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "logEndTime": {
                                      "description": "End Time of the logs when it was collected",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "timeCollected": {
                                      "description": "Duration of logs collected",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "logSize": {
                                      "description": "Size of the logs collected",
                                      "type": "integer",
                                      "format": "int64",
                                      "readOnly": true
                                    },
                                    "logCollectionStatus": {
                                      "description": "LogCollection status",
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "InProgress",
                                        "Failed",
                                        "Succeeded"
                                      ],
                                      "x-ms-enum": {
                                        "name": "LogCollectionStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "None",
                                            "value": "None",
                                            "description": "No log collection has been initiated."
                                          },
                                          {
                                            "name": "InProgress",
                                            "value": "InProgress",
                                            "description": "Log collection is currently in progress."
                                          },
                                          {
                                            "name": "Failed",
                                            "value": "Failed",
                                            "description": "Log collection has failed."
                                          },
                                          {
                                            "name": "Succeeded",
                                            "value": "Succeeded",
                                            "description": "Log collection completed successfully."
                                          }
                                        ]
                                      },
                                      "readOnly": true
                                    },
                                    "correlationId": {
                                      "description": "CorrelationId of the log collection",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "logCollectionJobType": {
                                      "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                                      "type": "string",
                                      "enum": [
                                        "OnDemand",
                                        "Scheduled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "LogCollectionJobType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "OnDemand",
                                            "value": "OnDemand",
                                            "description": "Log collection is triggered manually and executed immediately."
                                          },
                                          {
                                            "name": "Scheduled",
                                            "value": "Scheduled",
                                            "description": "Log collection is scheduled to run at a predefined time or interval."
                                          }
                                        ]
                                      },
                                      "readOnly": true
                                    },
                                    "endTimeCollected": {
                                      "description": "End Time of the logs when it was collected",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "logCollectionError": {
                                      "readOnly": true,
                                      "description": "Log Collection Error details of the cluster.",
                                      "type": "object",
                                      "properties": {
                                        "errorCode": {
                                          "description": "Error Code of the log collection",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "errorMessage": {
                                          "description": "Error Message of the log collection",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "remoteSupportProperties": {
                            "description": "RemoteSupport properties of the cluster.",
                            "type": "object",
                            "properties": {
                              "accessLevel": {
                                "readOnly": true,
                                "description": "Remote Support Access Level",
                                "type": "string",
                                "enum": [
                                  "Diagnostics",
                                  "DiagnosticsAndRepair"
                                ],
                                "x-ms-enum": {
                                  "name": "AccessLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Diagnostics",
                                      "value": "Diagnostics",
                                      "description": "Allows remote diagnostics operations only."
                                    },
                                    {
                                      "name": "DiagnosticsAndRepair",
                                      "value": "DiagnosticsAndRepair",
                                      "description": "Allows both remote diagnostics and repair operations."
                                    }
                                  ]
                                }
                              },
                              "expirationTimeStamp": {
                                "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "remoteSupportType": {
                                "description": "Remote Support Type for cluster",
                                "type": "string",
                                "enum": [
                                  "Enable",
                                  "Revoke"
                                ],
                                "x-ms-enum": {
                                  "name": "RemoteSupportType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enable",
                                      "value": "Enable",
                                      "description": "Enable remote support for the cluster."
                                    },
                                    {
                                      "name": "Revoke",
                                      "value": "Revoke",
                                      "description": "Revoke previously enabled remote support for the cluster."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "remoteSupportNodeSettings": {
                                "type": "array",
                                "items": {
                                  "description": "Remote Support Node Settings of the cluster.",
                                  "type": "object",
                                  "properties": {
                                    "arcResourceId": {
                                      "description": "Arc ResourceId of the Node",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "state": {
                                      "description": "Remote Support Access Connection State on the Node",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "createdAt": {
                                      "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "updatedAt": {
                                      "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "connectionStatus": {
                                      "description": "Remote Support Access Connection Status on the Node",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "connectionErrorMessage": {
                                      "description": "Remote Support Access Connection Error Message on the Node",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "transcriptLocation": {
                                      "description": "Remote Support Transcript location on the node",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              },
                              "remoteSupportSessionDetails": {
                                "type": "array",
                                "items": {
                                  "description": "Remote Support Node Session Details on the Node.",
                                  "type": "object",
                                  "properties": {
                                    "sessionStartTime": {
                                      "description": "Remote Support Session StartTime on the Node",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "sessionEndTime": {
                                      "description": "Remote Support Session EndTime on the Node",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "nodeName": {
                                      "description": "Name of the node",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "duration": {
                                      "description": "Duration of Remote Support Enablement",
                                      "type": "integer",
                                      "format": "int64",
                                      "readOnly": true
                                    },
                                    "accessLevel": {
                                      "readOnly": true,
                                      "description": "Remote Support Access Level",
                                      "type": "string",
                                      "enum": [
                                        "Diagnostics",
                                        "DiagnosticsAndRepair"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AccessLevel",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Diagnostics",
                                            "value": "Diagnostics",
                                            "description": "Allows remote diagnostics operations only."
                                          },
                                          {
                                            "name": "DiagnosticsAndRepair",
                                            "value": "DiagnosticsAndRepair",
                                            "description": "Allows both remote diagnostics and repair operations."
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "desiredProperties": {
                            "description": "Desired properties of the cluster.",
                            "type": "object",
                            "properties": {
                              "windowsServerSubscription": {
                                "description": "Desired state of Windows Server Subscription.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "WindowsServerSubscription",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Windows Server Subscription is disabled."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Windows Server Subscription is enabled."
                                    }
                                  ]
                                }
                              },
                              "diagnosticLevel": {
                                "description": "Desired level of diagnostic data emitted by the cluster.",
                                "type": "string",
                                "enum": [
                                  "Off",
                                  "Basic",
                                  "Enhanced"
                                ],
                                "x-ms-enum": {
                                  "name": "DiagnosticLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Off",
                                      "value": "Off",
                                      "description": "No diagnostic data will be emitted."
                                    },
                                    {
                                      "name": "Basic",
                                      "value": "Basic",
                                      "description": "Basic diagnostic data will be emitted, including essential health metrics."
                                    },
                                    {
                                      "name": "Enhanced",
                                      "value": "Enhanced",
                                      "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "reportedProperties": {
                            "description": "Properties reported by cluster agent.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "clusterName": {
                                "description": "Name of the on-prem cluster connected to this resource.",
                                "type": "string",
                                "readOnly": true
                              },
                              "clusterId": {
                                "description": "Unique id generated by the on-prem cluster.",
                                "type": "string",
                                "readOnly": true
                              },
                              "clusterVersion": {
                                "description": "Version of the cluster software.",
                                "type": "string",
                                "readOnly": true
                              },
                              "nodes": {
                                "description": "List of nodes reported by the cluster.",
                                "type": "array",
                                "items": {
                                  "description": "Cluster node details.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the cluster node.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "id": {
                                      "description": "Id of the node in the cluster.",
                                      "type": "number",
                                      "readOnly": true
                                    },
                                    "windowsServerSubscription": {
                                      "description": "State of Windows Server Subscription.",
                                      "type": "string",
                                      "enum": [
                                        "Disabled",
                                        "Enabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "WindowsServerSubscription",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled",
                                            "description": "Windows Server Subscription is disabled."
                                          },
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled",
                                            "description": "Windows Server Subscription is enabled."
                                          }
                                        ]
                                      },
                                      "readOnly": true
                                    },
                                    "nodeType": {
                                      "description": "Type of the cluster node hardware.",
                                      "type": "string",
                                      "enum": [
                                        "FirstParty",
                                        "ThirdParty"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ClusterNodeType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "FirstParty",
                                            "value": "FirstParty",
                                            "description": "Cluster nodes are provided and managed by Microsoft."
                                          },
                                          {
                                            "name": "ThirdParty",
                                            "value": "ThirdParty",
                                            "description": "Cluster nodes are provided and managed by a third-party vendor."
                                          }
                                        ]
                                      },
                                      "readOnly": true
                                    },
                                    "ehcResourceId": {
                                      "description": "Edge Hardware Center Resource Id",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "manufacturer": {
                                      "description": "Manufacturer of the cluster node hardware.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "model": {
                                      "description": "Model name of the cluster node hardware.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "osName": {
                                      "description": "Operating system running on the cluster node.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "osVersion": {
                                      "description": "Version of the operating system running on the cluster node.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "osDisplayVersion": {
                                      "description": "Display version of the operating system running on the cluster node.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "serialNumber": {
                                      "description": "Immutable id of the cluster node.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "coreCount": {
                                      "description": "Number of physical cores on the cluster node.",
                                      "type": "number",
                                      "readOnly": true
                                    },
                                    "memoryInGiB": {
                                      "description": "Total available memory on the cluster node (in GiB).",
                                      "type": "number",
                                      "readOnly": true
                                    },
                                    "lastLicensingTimestamp": {
                                      "description": "Most recent licensing timestamp.",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "oemActivation": {
                                      "description": "OEM activation status of the node.",
                                      "type": "string",
                                      "enum": [
                                        "Disabled",
                                        "Enabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "OemActivation",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled",
                                            "description": "OEM activation is disabled for the node."
                                          },
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled",
                                            "description": "OEM activation is enabled for the node."
                                          }
                                        ]
                                      },
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              },
                              "lastUpdated": {
                                "description": "Last time the cluster reported the data.",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "imdsAttestation": {
                                "description": "IMDS attestation status of the cluster.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "ImdsAttestation",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "IMDS attestation is disabled for the cluster."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "IMDS attestation is enabled for the cluster."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "diagnosticLevel": {
                                "description": "Level of diagnostic data emitted by the cluster.",
                                "type": "string",
                                "enum": [
                                  "Off",
                                  "Basic",
                                  "Enhanced"
                                ],
                                "x-ms-enum": {
                                  "name": "DiagnosticLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Off",
                                      "value": "Off",
                                      "description": "No diagnostic data will be emitted."
                                    },
                                    {
                                      "name": "Basic",
                                      "value": "Basic",
                                      "description": "Basic diagnostic data will be emitted, including essential health metrics."
                                    },
                                    {
                                      "name": "Enhanced",
                                      "value": "Enhanced",
                                      "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                                    }
                                  ]
                                }
                              },
                              "supportedCapabilities": {
                                "description": "Capabilities supported by the cluster.",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "clusterType": {
                                "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
                                "type": "string",
                                "enum": [
                                  "FirstParty",
                                  "ThirdParty"
                                ],
                                "x-ms-enum": {
                                  "name": "ClusterNodeType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "FirstParty",
                                      "value": "FirstParty",
                                      "description": "All nodes in the cluster are provided and managed by Microsoft."
                                    },
                                    {
                                      "name": "ThirdParty",
                                      "value": "ThirdParty",
                                      "description": "All nodes in the cluster are provided and managed by a third-party vendor."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "manufacturer": {
                                "description": "The manufacturer of all the nodes of the cluster.",
                                "type": "string",
                                "readOnly": true
                              },
                              "oemActivation": {
                                "description": "OEM activation status of the cluster.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OemActivation",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "OEM activation is disabled for the cluster."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "OEM activation is enabled for the cluster."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "hardwareClass": {
                                "description": "Hardware class of the cluster.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Small",
                                  "Medium",
                                  "Large"
                                ],
                                "default": "Medium",
                                "x-ms-enum": {
                                  "name": "HardwareClass",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Small",
                                      "value": "Small",
                                      "description": "The hardware class is small."
                                    },
                                    {
                                      "name": "Medium",
                                      "value": "Medium",
                                      "description": "The hardware class is medium. This corresponds to the default"
                                    },
                                    {
                                      "name": "Large",
                                      "value": "Large",
                                      "description": "The hardware class is large."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "isolatedVmAttestationConfiguration": {
                            "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "attestationResourceId": {
                                "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Attestation/attestationProviders",
                                      "scopes": [
                                        "Tenant"
                                      ]
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "relyingPartyServiceEndpoint": {
                                "description": "Region specific endpoint for relying party service.",
                                "type": "string",
                                "readOnly": true
                              },
                              "attestationServiceEndpoint": {
                                "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "trialDaysRemaining": {
                            "description": "Number of days remaining in the trial period.",
                            "type": "number",
                            "readOnly": true
                          },
                          "billingModel": {
                            "description": "Type of billing applied to the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "registrationTimestamp": {
                            "description": "First cluster sync timestamp.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "lastSyncTimestamp": {
                            "description": "Most recent cluster sync timestamp.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "lastBillingTimestamp": {
                            "description": "Most recent billing meter timestamp.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "serviceEndpoint": {
                            "description": "Region specific DataPath Endpoint of the cluster.",
                            "type": "string",
                            "readOnly": true
                          },
                          "resourceProviderObjectId": {
                            "description": "Object id of RP Service Principal",
                            "type": "string",
                            "readOnly": true
                          },
                          "secretsLocations": {
                            "type": "array",
                            "description": "List of secret locations.",
                            "items": {
                              "type": "object",
                              "description": "Secrets location details",
                              "properties": {
                                "secretsType": {
                                  "description": "Type of secrets to store",
                                  "type": "string",
                                  "enum": [
                                    "BackupSecrets"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SecretsType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "BackupSecrets",
                                        "value": "BackupSecrets",
                                        "description": "Backup secrets type"
                                      }
                                    ]
                                  }
                                },
                                "secretsLocation": {
                                  "type": "string",
                                  "description": "secrets location"
                                }
                              },
                              "required": [
                                "secretsType",
                                "secretsLocation"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "clusterPattern": {
                            "description": "Supported Storage Type for HCI Cluster",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Standard",
                              "RackAware"
                            ],
                            "x-ms-enum": {
                              "name": "ClusterPattern",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard",
                                  "description": "Standard cluster."
                                },
                                {
                                  "name": "RackAware",
                                  "value": "RackAware",
                                  "description": "RackAware cluster."
                                }
                              ]
                            }
                          },
                          "localAvailabilityZones": {
                            "type": "array",
                            "description": "Local Availability Zone information for HCI cluster",
                            "items": {
                              "type": "object",
                              "description": "Local Availability Zone information for HCI cluster",
                              "properties": {
                                "localAvailabilityZoneName": {
                                  "type": "string",
                                  "description": "Local Availability Zone name for HCI cluster"
                                },
                                "nodes": {
                                  "type": "array",
                                  "description": "Nodes belonging to a particular zone",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "localAvailabilityZoneName"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to the next set of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_ListByResourceGroup",
        "description": "List all HCI clusters in a resource group.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of clusters.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of clusters.",
                  "type": "array",
                  "items": {
                    "description": "Cluster details.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "tags": {
                        "type": "object",
                        "description": "Resource tags.",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "x-ms-mutability": [
                          "read",
                          "create",
                          "update"
                        ]
                      },
                      "location": {
                        "type": "string",
                        "description": "The geo-location where the resource lives",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ]
                      },
                      "identity": {
                        "description": "Identity of Cluster resource",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "tenantId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                            "readOnly": true
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                            "enum": [
                              "None",
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned, UserAssigned"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedServiceIdentityType",
                              "modelAsString": true
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "title": "User-Assigned Identities",
                            "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                            "additionalProperties": {
                              "type": "object",
                              "description": "User assigned identity properties",
                              "properties": {
                                "principalId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The principal ID of the assigned identity.",
                                  "readOnly": true
                                },
                                "clientId": {
                                  "type": "string",
                                  "format": "uuid",
                                  "description": "The client ID of the assigned identity.",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "type"
                        ]
                      },
                      "properties": {
                        "description": "Cluster properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state. Indicates the current lifecycle status of the resource, including creation, update, deletion, connectivity, and error states.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Provisioning",
                              "NotSpecified",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "Deleted",
                              "PartiallySucceeded",
                              "InProgress",
                              "DisableInProgress",
                              "Connected",
                              "PartiallyConnected",
                              "Disconnected"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The operation completed successfully."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The operation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The operation was canceled before completion."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is currently being provisioned."
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The provisioning state is not specified."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The resource is being created."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is being updated."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The resource is being moved."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The resource has been deleted."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The operation partially succeeded."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The operation is currently in progress."
                                },
                                {
                                  "name": "DisableInProgress",
                                  "value": "DisableInProgress",
                                  "description": "The resource is in the process of being disabled."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The resource is connected."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The resource is partially connected."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The resource is disconnected."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the cluster agent. Indicates the current connectivity, validation, and deployment state of the agent within the cluster.",
                            "type": "string",
                            "enum": [
                              "NotYetRegistered",
                              "ConnectedRecently",
                              "NotConnectedRecently",
                              "Disconnected",
                              "Error",
                              "NotSpecified",
                              "ValidationInProgress",
                              "ValidationSuccess",
                              "ValidationFailed",
                              "DeploymentInProgress",
                              "DeploymentFailed",
                              "DeploymentSuccess"
                            ],
                            "x-ms-enum": {
                              "name": "Status",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotYetRegistered",
                                  "value": "NotYetRegistered",
                                  "description": "The cluster agent has not yet registered with Azure."
                                },
                                {
                                  "name": "ConnectedRecently",
                                  "value": "ConnectedRecently",
                                  "description": "The cluster agent has connected to Azure recently."
                                },
                                {
                                  "name": "NotConnectedRecently",
                                  "value": "NotConnectedRecently",
                                  "description": "The cluster agent has not connected to Azure recently."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The cluster agent is currently disconnected from Azure."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred in the cluster agent's operation."
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The status of the cluster agent is not specified."
                                },
                                {
                                  "name": "ValidationInProgress",
                                  "value": "ValidationInProgress",
                                  "description": "Validation of the cluster agent is currently in progress."
                                },
                                {
                                  "name": "ValidationSuccess",
                                  "value": "ValidationSuccess",
                                  "description": "Validation of the cluster agent completed successfully."
                                },
                                {
                                  "name": "ValidationFailed",
                                  "value": "ValidationFailed",
                                  "description": "Validation of the cluster agent failed."
                                },
                                {
                                  "name": "DeploymentInProgress",
                                  "value": "DeploymentInProgress",
                                  "description": "Deployment of the cluster agent is currently in progress."
                                },
                                {
                                  "name": "DeploymentFailed",
                                  "value": "DeploymentFailed",
                                  "description": "Deployment of the cluster agent failed."
                                },
                                {
                                  "name": "DeploymentSuccess",
                                  "value": "DeploymentSuccess",
                                  "description": "Deployment of the cluster agent completed successfully."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "connectivityStatus": {
                            "description": "Overall connectivity status for the cluster resource. Indicates whether the cluster is connected to Azure, partially connected, or has not recently communicated.",
                            "type": "string",
                            "enum": [
                              "NotYetRegistered",
                              "Connected",
                              "NotConnectedRecently",
                              "PartiallyConnected",
                              "Disconnected",
                              "NotSpecified"
                            ],
                            "x-ms-enum": {
                              "name": "ConnectivityStatus",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotYetRegistered",
                                  "value": "NotYetRegistered",
                                  "description": "The cluster has not yet registered with Azure."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The cluster is fully connected to Azure."
                                },
                                {
                                  "name": "NotConnectedRecently",
                                  "value": "NotConnectedRecently",
                                  "description": "The cluster has not connected to Azure recently."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "Some components of the cluster are connected, while others are not."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The cluster is not connected to Azure."
                                },
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The connectivity status is not specified."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "cloudId": {
                            "description": "Unique, immutable resource id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "cloudManagementEndpoint": {
                            "description": "Endpoint configured for management from the Azure portal.",
                            "type": "string"
                          },
                          "aadClientId": {
                            "description": "App id of cluster AAD identity.",
                            "type": "string"
                          },
                          "aadTenantId": {
                            "description": "Tenant id of cluster AAD identity.",
                            "type": "string"
                          },
                          "aadApplicationObjectId": {
                            "description": "Object id of cluster AAD identity.",
                            "type": "string"
                          },
                          "aadServicePrincipalObjectId": {
                            "description": "Id of cluster identity service principal.",
                            "type": "string"
                          },
                          "softwareAssuranceProperties": {
                            "description": "Software Assurance properties of the cluster.",
                            "type": "object",
                            "properties": {
                              "softwareAssuranceStatus": {
                                "description": "Status of the Software Assurance for the cluster.",
                                "type": "string",
                                "enum": [
                                  "Enabled",
                                  "Disabled"
                                ],
                                "x-ms-enum": {
                                  "name": "SoftwareAssuranceStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Software Assurance is enabled for the cluster."
                                    },
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Software Assurance is disabled for the cluster."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "softwareAssuranceIntent": {
                                "description": "Customer Intent for Software Assurance Benefit.",
                                "type": "string",
                                "enum": [
                                  "Enable",
                                  "Disable"
                                ],
                                "x-ms-enum": {
                                  "name": "SoftwareAssuranceIntent",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enable",
                                      "value": "Enable",
                                      "description": "Customer intends to enable the Software Assurance benefit."
                                    },
                                    {
                                      "name": "Disable",
                                      "value": "Disable",
                                      "description": "Customer intends to disable the Software Assurance benefit."
                                    }
                                  ]
                                }
                              },
                              "lastUpdated": {
                                "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              }
                            }
                          },
                          "logCollectionProperties": {
                            "description": "Log Collection properties of the cluster.",
                            "type": "object",
                            "properties": {
                              "fromDate": {
                                "description": "From DateTimeStamp from when logs need to be connected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "toDate": {
                                "description": "To DateTimeStamp till when logs need to be connected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "lastLogGenerated": {
                                "description": "Recent DateTimeStamp where logs are successfully generated",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logCollectionSessionDetails": {
                                "type": "array",
                                "items": {
                                  "description": "Log Collection Session details of the cluster.",
                                  "type": "object",
                                  "properties": {
                                    "logStartTime": {
                                      "description": "Start Time of the logs when it was collected",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "logEndTime": {
                                      "description": "End Time of the logs when it was collected",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "timeCollected": {
                                      "description": "Duration of logs collected",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "logSize": {
                                      "description": "Size of the logs collected",
                                      "type": "integer",
                                      "format": "int64",
                                      "readOnly": true
                                    },
                                    "logCollectionStatus": {
                                      "description": "LogCollection status",
                                      "type": "string",
                                      "enum": [
                                        "None",
                                        "InProgress",
                                        "Failed",
                                        "Succeeded"
                                      ],
                                      "x-ms-enum": {
                                        "name": "LogCollectionStatus",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "None",
                                            "value": "None",
                                            "description": "No log collection has been initiated."
                                          },
                                          {
                                            "name": "InProgress",
                                            "value": "InProgress",
                                            "description": "Log collection is currently in progress."
                                          },
                                          {
                                            "name": "Failed",
                                            "value": "Failed",
                                            "description": "Log collection has failed."
                                          },
                                          {
                                            "name": "Succeeded",
                                            "value": "Succeeded",
                                            "description": "Log collection completed successfully."
                                          }
                                        ]
                                      },
                                      "readOnly": true
                                    },
                                    "correlationId": {
                                      "description": "CorrelationId of the log collection",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "logCollectionJobType": {
                                      "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                                      "type": "string",
                                      "enum": [
                                        "OnDemand",
                                        "Scheduled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "LogCollectionJobType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "OnDemand",
                                            "value": "OnDemand",
                                            "description": "Log collection is triggered manually and executed immediately."
                                          },
                                          {
                                            "name": "Scheduled",
                                            "value": "Scheduled",
                                            "description": "Log collection is scheduled to run at a predefined time or interval."
                                          }
                                        ]
                                      },
                                      "readOnly": true
                                    },
                                    "endTimeCollected": {
                                      "description": "End Time of the logs when it was collected",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "logCollectionError": {
                                      "readOnly": true,
                                      "description": "Log Collection Error details of the cluster.",
                                      "type": "object",
                                      "properties": {
                                        "errorCode": {
                                          "description": "Error Code of the log collection",
                                          "type": "string",
                                          "readOnly": true
                                        },
                                        "errorMessage": {
                                          "description": "Error Message of the log collection",
                                          "type": "string",
                                          "readOnly": true
                                        }
                                      }
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "remoteSupportProperties": {
                            "description": "RemoteSupport properties of the cluster.",
                            "type": "object",
                            "properties": {
                              "accessLevel": {
                                "readOnly": true,
                                "description": "Remote Support Access Level",
                                "type": "string",
                                "enum": [
                                  "Diagnostics",
                                  "DiagnosticsAndRepair"
                                ],
                                "x-ms-enum": {
                                  "name": "AccessLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Diagnostics",
                                      "value": "Diagnostics",
                                      "description": "Allows remote diagnostics operations only."
                                    },
                                    {
                                      "name": "DiagnosticsAndRepair",
                                      "value": "DiagnosticsAndRepair",
                                      "description": "Allows both remote diagnostics and repair operations."
                                    }
                                  ]
                                }
                              },
                              "expirationTimeStamp": {
                                "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "remoteSupportType": {
                                "description": "Remote Support Type for cluster",
                                "type": "string",
                                "enum": [
                                  "Enable",
                                  "Revoke"
                                ],
                                "x-ms-enum": {
                                  "name": "RemoteSupportType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Enable",
                                      "value": "Enable",
                                      "description": "Enable remote support for the cluster."
                                    },
                                    {
                                      "name": "Revoke",
                                      "value": "Revoke",
                                      "description": "Revoke previously enabled remote support for the cluster."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "remoteSupportNodeSettings": {
                                "type": "array",
                                "items": {
                                  "description": "Remote Support Node Settings of the cluster.",
                                  "type": "object",
                                  "properties": {
                                    "arcResourceId": {
                                      "description": "Arc ResourceId of the Node",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "state": {
                                      "description": "Remote Support Access Connection State on the Node",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "createdAt": {
                                      "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "updatedAt": {
                                      "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "connectionStatus": {
                                      "description": "Remote Support Access Connection Status on the Node",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "connectionErrorMessage": {
                                      "description": "Remote Support Access Connection Error Message on the Node",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "transcriptLocation": {
                                      "description": "Remote Support Transcript location on the node",
                                      "type": "string",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              },
                              "remoteSupportSessionDetails": {
                                "type": "array",
                                "items": {
                                  "description": "Remote Support Node Session Details on the Node.",
                                  "type": "object",
                                  "properties": {
                                    "sessionStartTime": {
                                      "description": "Remote Support Session StartTime on the Node",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "sessionEndTime": {
                                      "description": "Remote Support Session EndTime on the Node",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "nodeName": {
                                      "description": "Name of the node",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "duration": {
                                      "description": "Duration of Remote Support Enablement",
                                      "type": "integer",
                                      "format": "int64",
                                      "readOnly": true
                                    },
                                    "accessLevel": {
                                      "readOnly": true,
                                      "description": "Remote Support Access Level",
                                      "type": "string",
                                      "enum": [
                                        "Diagnostics",
                                        "DiagnosticsAndRepair"
                                      ],
                                      "x-ms-enum": {
                                        "name": "AccessLevel",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Diagnostics",
                                            "value": "Diagnostics",
                                            "description": "Allows remote diagnostics operations only."
                                          },
                                          {
                                            "name": "DiagnosticsAndRepair",
                                            "value": "DiagnosticsAndRepair",
                                            "description": "Allows both remote diagnostics and repair operations."
                                          }
                                        ]
                                      }
                                    }
                                  }
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "desiredProperties": {
                            "description": "Desired properties of the cluster.",
                            "type": "object",
                            "properties": {
                              "windowsServerSubscription": {
                                "description": "Desired state of Windows Server Subscription.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "WindowsServerSubscription",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Windows Server Subscription is disabled."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Windows Server Subscription is enabled."
                                    }
                                  ]
                                }
                              },
                              "diagnosticLevel": {
                                "description": "Desired level of diagnostic data emitted by the cluster.",
                                "type": "string",
                                "enum": [
                                  "Off",
                                  "Basic",
                                  "Enhanced"
                                ],
                                "x-ms-enum": {
                                  "name": "DiagnosticLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Off",
                                      "value": "Off",
                                      "description": "No diagnostic data will be emitted."
                                    },
                                    {
                                      "name": "Basic",
                                      "value": "Basic",
                                      "description": "Basic diagnostic data will be emitted, including essential health metrics."
                                    },
                                    {
                                      "name": "Enhanced",
                                      "value": "Enhanced",
                                      "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "reportedProperties": {
                            "description": "Properties reported by cluster agent.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "clusterName": {
                                "description": "Name of the on-prem cluster connected to this resource.",
                                "type": "string",
                                "readOnly": true
                              },
                              "clusterId": {
                                "description": "Unique id generated by the on-prem cluster.",
                                "type": "string",
                                "readOnly": true
                              },
                              "clusterVersion": {
                                "description": "Version of the cluster software.",
                                "type": "string",
                                "readOnly": true
                              },
                              "nodes": {
                                "description": "List of nodes reported by the cluster.",
                                "type": "array",
                                "items": {
                                  "description": "Cluster node details.",
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "Name of the cluster node.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "id": {
                                      "description": "Id of the node in the cluster.",
                                      "type": "number",
                                      "readOnly": true
                                    },
                                    "windowsServerSubscription": {
                                      "description": "State of Windows Server Subscription.",
                                      "type": "string",
                                      "enum": [
                                        "Disabled",
                                        "Enabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "WindowsServerSubscription",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled",
                                            "description": "Windows Server Subscription is disabled."
                                          },
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled",
                                            "description": "Windows Server Subscription is enabled."
                                          }
                                        ]
                                      },
                                      "readOnly": true
                                    },
                                    "nodeType": {
                                      "description": "Type of the cluster node hardware.",
                                      "type": "string",
                                      "enum": [
                                        "FirstParty",
                                        "ThirdParty"
                                      ],
                                      "x-ms-enum": {
                                        "name": "ClusterNodeType",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "FirstParty",
                                            "value": "FirstParty",
                                            "description": "Cluster nodes are provided and managed by Microsoft."
                                          },
                                          {
                                            "name": "ThirdParty",
                                            "value": "ThirdParty",
                                            "description": "Cluster nodes are provided and managed by a third-party vendor."
                                          }
                                        ]
                                      },
                                      "readOnly": true
                                    },
                                    "ehcResourceId": {
                                      "description": "Edge Hardware Center Resource Id",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "manufacturer": {
                                      "description": "Manufacturer of the cluster node hardware.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "model": {
                                      "description": "Model name of the cluster node hardware.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "osName": {
                                      "description": "Operating system running on the cluster node.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "osVersion": {
                                      "description": "Version of the operating system running on the cluster node.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "osDisplayVersion": {
                                      "description": "Display version of the operating system running on the cluster node.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "serialNumber": {
                                      "description": "Immutable id of the cluster node.",
                                      "type": "string",
                                      "readOnly": true
                                    },
                                    "coreCount": {
                                      "description": "Number of physical cores on the cluster node.",
                                      "type": "number",
                                      "readOnly": true
                                    },
                                    "memoryInGiB": {
                                      "description": "Total available memory on the cluster node (in GiB).",
                                      "type": "number",
                                      "readOnly": true
                                    },
                                    "lastLicensingTimestamp": {
                                      "description": "Most recent licensing timestamp.",
                                      "type": "string",
                                      "format": "date-time",
                                      "readOnly": true
                                    },
                                    "oemActivation": {
                                      "description": "OEM activation status of the node.",
                                      "type": "string",
                                      "enum": [
                                        "Disabled",
                                        "Enabled"
                                      ],
                                      "x-ms-enum": {
                                        "name": "OemActivation",
                                        "modelAsString": true,
                                        "values": [
                                          {
                                            "name": "Disabled",
                                            "value": "Disabled",
                                            "description": "OEM activation is disabled for the node."
                                          },
                                          {
                                            "name": "Enabled",
                                            "value": "Enabled",
                                            "description": "OEM activation is enabled for the node."
                                          }
                                        ]
                                      },
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true
                              },
                              "lastUpdated": {
                                "description": "Last time the cluster reported the data.",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "imdsAttestation": {
                                "description": "IMDS attestation status of the cluster.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "ImdsAttestation",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "IMDS attestation is disabled for the cluster."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "IMDS attestation is enabled for the cluster."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "diagnosticLevel": {
                                "description": "Level of diagnostic data emitted by the cluster.",
                                "type": "string",
                                "enum": [
                                  "Off",
                                  "Basic",
                                  "Enhanced"
                                ],
                                "x-ms-enum": {
                                  "name": "DiagnosticLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Off",
                                      "value": "Off",
                                      "description": "No diagnostic data will be emitted."
                                    },
                                    {
                                      "name": "Basic",
                                      "value": "Basic",
                                      "description": "Basic diagnostic data will be emitted, including essential health metrics."
                                    },
                                    {
                                      "name": "Enhanced",
                                      "value": "Enhanced",
                                      "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                                    }
                                  ]
                                }
                              },
                              "supportedCapabilities": {
                                "description": "Capabilities supported by the cluster.",
                                "type": "array",
                                "readOnly": true,
                                "items": {
                                  "type": "string"
                                }
                              },
                              "clusterType": {
                                "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
                                "type": "string",
                                "enum": [
                                  "FirstParty",
                                  "ThirdParty"
                                ],
                                "x-ms-enum": {
                                  "name": "ClusterNodeType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "FirstParty",
                                      "value": "FirstParty",
                                      "description": "All nodes in the cluster are provided and managed by Microsoft."
                                    },
                                    {
                                      "name": "ThirdParty",
                                      "value": "ThirdParty",
                                      "description": "All nodes in the cluster are provided and managed by a third-party vendor."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "manufacturer": {
                                "description": "The manufacturer of all the nodes of the cluster.",
                                "type": "string",
                                "readOnly": true
                              },
                              "oemActivation": {
                                "description": "OEM activation status of the cluster.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OemActivation",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "OEM activation is disabled for the cluster."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "OEM activation is enabled for the cluster."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "hardwareClass": {
                                "description": "Hardware class of the cluster.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Small",
                                  "Medium",
                                  "Large"
                                ],
                                "default": "Medium",
                                "x-ms-enum": {
                                  "name": "HardwareClass",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Small",
                                      "value": "Small",
                                      "description": "The hardware class is small."
                                    },
                                    {
                                      "name": "Medium",
                                      "value": "Medium",
                                      "description": "The hardware class is medium. This corresponds to the default"
                                    },
                                    {
                                      "name": "Large",
                                      "value": "Large",
                                      "description": "The hardware class is large."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "isolatedVmAttestationConfiguration": {
                            "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "attestationResourceId": {
                                "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
                                "type": "string",
                                "format": "arm-id",
                                "x-ms-arm-id-details": {
                                  "allowedResources": [
                                    {
                                      "type": "Microsoft.Attestation/attestationProviders",
                                      "scopes": [
                                        "Tenant"
                                      ]
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "relyingPartyServiceEndpoint": {
                                "description": "Region specific endpoint for relying party service.",
                                "type": "string",
                                "readOnly": true
                              },
                              "attestationServiceEndpoint": {
                                "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "trialDaysRemaining": {
                            "description": "Number of days remaining in the trial period.",
                            "type": "number",
                            "readOnly": true
                          },
                          "billingModel": {
                            "description": "Type of billing applied to the resource.",
                            "type": "string",
                            "readOnly": true
                          },
                          "registrationTimestamp": {
                            "description": "First cluster sync timestamp.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "lastSyncTimestamp": {
                            "description": "Most recent cluster sync timestamp.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "lastBillingTimestamp": {
                            "description": "Most recent billing meter timestamp.",
                            "type": "string",
                            "format": "date-time",
                            "readOnly": true
                          },
                          "serviceEndpoint": {
                            "description": "Region specific DataPath Endpoint of the cluster.",
                            "type": "string",
                            "readOnly": true
                          },
                          "resourceProviderObjectId": {
                            "description": "Object id of RP Service Principal",
                            "type": "string",
                            "readOnly": true
                          },
                          "secretsLocations": {
                            "type": "array",
                            "description": "List of secret locations.",
                            "items": {
                              "type": "object",
                              "description": "Secrets location details",
                              "properties": {
                                "secretsType": {
                                  "description": "Type of secrets to store",
                                  "type": "string",
                                  "enum": [
                                    "BackupSecrets"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SecretsType",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "BackupSecrets",
                                        "value": "BackupSecrets",
                                        "description": "Backup secrets type"
                                      }
                                    ]
                                  }
                                },
                                "secretsLocation": {
                                  "type": "string",
                                  "description": "secrets location"
                                }
                              },
                              "required": [
                                "secretsType",
                                "secretsLocation"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "clusterPattern": {
                            "description": "Supported Storage Type for HCI Cluster",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Standard",
                              "RackAware"
                            ],
                            "x-ms-enum": {
                              "name": "ClusterPattern",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard",
                                  "description": "Standard cluster."
                                },
                                {
                                  "name": "RackAware",
                                  "value": "RackAware",
                                  "description": "RackAware cluster."
                                }
                              ]
                            }
                          },
                          "localAvailabilityZones": {
                            "type": "array",
                            "description": "Local Availability Zone information for HCI cluster",
                            "items": {
                              "type": "object",
                              "description": "Local Availability Zone information for HCI cluster",
                              "properties": {
                                "localAvailabilityZoneName": {
                                  "type": "string",
                                  "description": "Local Availability Zone name for HCI cluster"
                                },
                                "nodes": {
                                  "type": "array",
                                  "description": "Nodes belonging to a particular zone",
                                  "items": {
                                    "type": "string"
                                  },
                                  "x-ms-identifiers": []
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "localAvailabilityZoneName"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to the next set of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}": {
      "get": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Get",
        "description": "Get HCI cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Cluster details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Identity of Cluster resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Cluster properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state. Indicates the current lifecycle status of the resource, including creation, update, deletion, connectivity, and error states.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning",
                        "NotSpecified",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "Deleted",
                        "PartiallySucceeded",
                        "InProgress",
                        "DisableInProgress",
                        "Connected",
                        "PartiallyConnected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently being provisioned."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation partially succeeded."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The resource is in the process of being disabled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the cluster agent. Indicates the current connectivity, validation, and deployment state of the agent within the cluster.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "ConnectedRecently",
                        "NotConnectedRecently",
                        "Disconnected",
                        "Error",
                        "NotSpecified",
                        "ValidationInProgress",
                        "ValidationSuccess",
                        "ValidationFailed",
                        "DeploymentInProgress",
                        "DeploymentFailed",
                        "DeploymentSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster agent has not yet registered with Azure."
                          },
                          {
                            "name": "ConnectedRecently",
                            "value": "ConnectedRecently",
                            "description": "The cluster agent has connected to Azure recently."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster agent has not connected to Azure recently."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster agent is currently disconnected from Azure."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the cluster agent's operation."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The status of the cluster agent is not specified."
                          },
                          {
                            "name": "ValidationInProgress",
                            "value": "ValidationInProgress",
                            "description": "Validation of the cluster agent is currently in progress."
                          },
                          {
                            "name": "ValidationSuccess",
                            "value": "ValidationSuccess",
                            "description": "Validation of the cluster agent completed successfully."
                          },
                          {
                            "name": "ValidationFailed",
                            "value": "ValidationFailed",
                            "description": "Validation of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentInProgress",
                            "value": "DeploymentInProgress",
                            "description": "Deployment of the cluster agent is currently in progress."
                          },
                          {
                            "name": "DeploymentFailed",
                            "value": "DeploymentFailed",
                            "description": "Deployment of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentSuccess",
                            "value": "DeploymentSuccess",
                            "description": "Deployment of the cluster agent completed successfully."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "connectivityStatus": {
                      "description": "Overall connectivity status for the cluster resource. Indicates whether the cluster is connected to Azure, partially connected, or has not recently communicated.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "Connected",
                        "NotConnectedRecently",
                        "PartiallyConnected",
                        "Disconnected",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectivityStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster has not yet registered with Azure."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The cluster is fully connected to Azure."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster has not connected to Azure recently."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some components of the cluster are connected, while others are not."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster is not connected to Azure."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The connectivity status is not specified."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "cloudId": {
                      "description": "Unique, immutable resource id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cloudManagementEndpoint": {
                      "description": "Endpoint configured for management from the Azure portal.",
                      "type": "string"
                    },
                    "aadClientId": {
                      "description": "App id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadTenantId": {
                      "description": "Tenant id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadApplicationObjectId": {
                      "description": "Object id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadServicePrincipalObjectId": {
                      "description": "Id of cluster identity service principal.",
                      "type": "string"
                    },
                    "softwareAssuranceProperties": {
                      "description": "Software Assurance properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "softwareAssuranceStatus": {
                          "description": "Status of the Software Assurance for the cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Software Assurance is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Software Assurance is disabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "softwareAssuranceIntent": {
                          "description": "Customer Intent for Software Assurance Benefit.",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Disable"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceIntent",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Customer intends to enable the Software Assurance benefit."
                              },
                              {
                                "name": "Disable",
                                "value": "Disable",
                                "description": "Customer intends to disable the Software Assurance benefit."
                              }
                            ]
                          }
                        },
                        "lastUpdated": {
                          "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "logCollectionProperties": {
                      "description": "Log Collection properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "fromDate": {
                          "description": "From DateTimeStamp from when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "toDate": {
                          "description": "To DateTimeStamp till when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "lastLogGenerated": {
                          "description": "Recent DateTimeStamp where logs are successfully generated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "logCollectionSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Log Collection Session details of the cluster.",
                            "type": "object",
                            "properties": {
                              "logStartTime": {
                                "description": "Start Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logEndTime": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "timeCollected": {
                                "description": "Duration of logs collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logSize": {
                                "description": "Size of the logs collected",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "logCollectionStatus": {
                                "description": "LogCollection status",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "InProgress",
                                  "Failed",
                                  "Succeeded"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "No log collection has been initiated."
                                    },
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress",
                                      "description": "Log collection is currently in progress."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "Log collection has failed."
                                    },
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded",
                                      "description": "Log collection completed successfully."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "correlationId": {
                                "description": "CorrelationId of the log collection",
                                "type": "string",
                                "readOnly": true
                              },
                              "logCollectionJobType": {
                                "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                                "type": "string",
                                "enum": [
                                  "OnDemand",
                                  "Scheduled"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionJobType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OnDemand",
                                      "value": "OnDemand",
                                      "description": "Log collection is triggered manually and executed immediately."
                                    },
                                    {
                                      "name": "Scheduled",
                                      "value": "Scheduled",
                                      "description": "Log collection is scheduled to run at a predefined time or interval."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "endTimeCollected": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logCollectionError": {
                                "readOnly": true,
                                "description": "Log Collection Error details of the cluster.",
                                "type": "object",
                                "properties": {
                                  "errorCode": {
                                    "description": "Error Code of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "errorMessage": {
                                    "description": "Error Message of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "remoteSupportProperties": {
                      "description": "RemoteSupport properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "accessLevel": {
                          "readOnly": true,
                          "description": "Remote Support Access Level",
                          "type": "string",
                          "enum": [
                            "Diagnostics",
                            "DiagnosticsAndRepair"
                          ],
                          "x-ms-enum": {
                            "name": "AccessLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Diagnostics",
                                "value": "Diagnostics",
                                "description": "Allows remote diagnostics operations only."
                              },
                              {
                                "name": "DiagnosticsAndRepair",
                                "value": "DiagnosticsAndRepair",
                                "description": "Allows both remote diagnostics and repair operations."
                              }
                            ]
                          }
                        },
                        "expirationTimeStamp": {
                          "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "remoteSupportType": {
                          "description": "Remote Support Type for cluster",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Revoke"
                          ],
                          "x-ms-enum": {
                            "name": "RemoteSupportType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Enable remote support for the cluster."
                              },
                              {
                                "name": "Revoke",
                                "value": "Revoke",
                                "description": "Revoke previously enabled remote support for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "remoteSupportNodeSettings": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Settings of the cluster.",
                            "type": "object",
                            "properties": {
                              "arcResourceId": {
                                "description": "Arc ResourceId of the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "state": {
                                "description": "Remote Support Access Connection State on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "createdAt": {
                                "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "updatedAt": {
                                "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "connectionStatus": {
                                "description": "Remote Support Access Connection Status on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "connectionErrorMessage": {
                                "description": "Remote Support Access Connection Error Message on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "transcriptLocation": {
                                "description": "Remote Support Transcript location on the node",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "remoteSupportSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Session Details on the Node.",
                            "type": "object",
                            "properties": {
                              "sessionStartTime": {
                                "description": "Remote Support Session StartTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "sessionEndTime": {
                                "description": "Remote Support Session EndTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "nodeName": {
                                "description": "Name of the node",
                                "type": "string",
                                "readOnly": true
                              },
                              "duration": {
                                "description": "Duration of Remote Support Enablement",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "accessLevel": {
                                "readOnly": true,
                                "description": "Remote Support Access Level",
                                "type": "string",
                                "enum": [
                                  "Diagnostics",
                                  "DiagnosticsAndRepair"
                                ],
                                "x-ms-enum": {
                                  "name": "AccessLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Diagnostics",
                                      "value": "Diagnostics",
                                      "description": "Allows remote diagnostics operations only."
                                    },
                                    {
                                      "name": "DiagnosticsAndRepair",
                                      "value": "DiagnosticsAndRepair",
                                      "description": "Allows both remote diagnostics and repair operations."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "desiredProperties": {
                      "description": "Desired properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "windowsServerSubscription": {
                          "description": "Desired state of Windows Server Subscription.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "WindowsServerSubscription",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Windows Server Subscription is disabled."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Windows Server Subscription is enabled."
                              }
                            ]
                          }
                        },
                        "diagnosticLevel": {
                          "description": "Desired level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "reportedProperties": {
                      "description": "Properties reported by cluster agent.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clusterName": {
                          "description": "Name of the on-prem cluster connected to this resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterId": {
                          "description": "Unique id generated by the on-prem cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterVersion": {
                          "description": "Version of the cluster software.",
                          "type": "string",
                          "readOnly": true
                        },
                        "nodes": {
                          "description": "List of nodes reported by the cluster.",
                          "type": "array",
                          "items": {
                            "description": "Cluster node details.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "id": {
                                "description": "Id of the node in the cluster.",
                                "type": "number",
                                "readOnly": true
                              },
                              "windowsServerSubscription": {
                                "description": "State of Windows Server Subscription.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "WindowsServerSubscription",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Windows Server Subscription is disabled."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Windows Server Subscription is enabled."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "nodeType": {
                                "description": "Type of the cluster node hardware.",
                                "type": "string",
                                "enum": [
                                  "FirstParty",
                                  "ThirdParty"
                                ],
                                "x-ms-enum": {
                                  "name": "ClusterNodeType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "FirstParty",
                                      "value": "FirstParty",
                                      "description": "Cluster nodes are provided and managed by Microsoft."
                                    },
                                    {
                                      "name": "ThirdParty",
                                      "value": "ThirdParty",
                                      "description": "Cluster nodes are provided and managed by a third-party vendor."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "ehcResourceId": {
                                "description": "Edge Hardware Center Resource Id",
                                "type": "string",
                                "readOnly": true
                              },
                              "manufacturer": {
                                "description": "Manufacturer of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "model": {
                                "description": "Model name of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osName": {
                                "description": "Operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osVersion": {
                                "description": "Version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osDisplayVersion": {
                                "description": "Display version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Immutable id of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "coreCount": {
                                "description": "Number of physical cores on the cluster node.",
                                "type": "number",
                                "readOnly": true
                              },
                              "memoryInGiB": {
                                "description": "Total available memory on the cluster node (in GiB).",
                                "type": "number",
                                "readOnly": true
                              },
                              "lastLicensingTimestamp": {
                                "description": "Most recent licensing timestamp.",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "oemActivation": {
                                "description": "OEM activation status of the node.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OemActivation",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "OEM activation is disabled for the node."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "OEM activation is enabled for the node."
                                    }
                                  ]
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "lastUpdated": {
                          "description": "Last time the cluster reported the data.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "imdsAttestation": {
                          "description": "IMDS attestation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "ImdsAttestation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "IMDS attestation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "IMDS attestation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "diagnosticLevel": {
                          "description": "Level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        },
                        "supportedCapabilities": {
                          "description": "Capabilities supported by the cluster.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "clusterType": {
                          "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
                          "type": "string",
                          "enum": [
                            "FirstParty",
                            "ThirdParty"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterNodeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "FirstParty",
                                "value": "FirstParty",
                                "description": "All nodes in the cluster are provided and managed by Microsoft."
                              },
                              {
                                "name": "ThirdParty",
                                "value": "ThirdParty",
                                "description": "All nodes in the cluster are provided and managed by a third-party vendor."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "manufacturer": {
                          "description": "The manufacturer of all the nodes of the cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "oemActivation": {
                          "description": "OEM activation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "OemActivation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "OEM activation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "OEM activation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "hardwareClass": {
                          "description": "Hardware class of the cluster.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Small",
                            "Medium",
                            "Large"
                          ],
                          "default": "Medium",
                          "x-ms-enum": {
                            "name": "HardwareClass",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Small",
                                "value": "Small",
                                "description": "The hardware class is small."
                              },
                              {
                                "name": "Medium",
                                "value": "Medium",
                                "description": "The hardware class is medium. This corresponds to the default"
                              },
                              {
                                "name": "Large",
                                "value": "Large",
                                "description": "The hardware class is large."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "isolatedVmAttestationConfiguration": {
                      "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "attestationResourceId": {
                          "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Attestation/attestationProviders",
                                "scopes": [
                                  "Tenant"
                                ]
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "relyingPartyServiceEndpoint": {
                          "description": "Region specific endpoint for relying party service.",
                          "type": "string",
                          "readOnly": true
                        },
                        "attestationServiceEndpoint": {
                          "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "trialDaysRemaining": {
                      "description": "Number of days remaining in the trial period.",
                      "type": "number",
                      "readOnly": true
                    },
                    "billingModel": {
                      "description": "Type of billing applied to the resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "registrationTimestamp": {
                      "description": "First cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastSyncTimestamp": {
                      "description": "Most recent cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastBillingTimestamp": {
                      "description": "Most recent billing meter timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "serviceEndpoint": {
                      "description": "Region specific DataPath Endpoint of the cluster.",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceProviderObjectId": {
                      "description": "Object id of RP Service Principal",
                      "type": "string",
                      "readOnly": true
                    },
                    "secretsLocations": {
                      "type": "array",
                      "description": "List of secret locations.",
                      "items": {
                        "type": "object",
                        "description": "Secrets location details",
                        "properties": {
                          "secretsType": {
                            "description": "Type of secrets to store",
                            "type": "string",
                            "enum": [
                              "BackupSecrets"
                            ],
                            "x-ms-enum": {
                              "name": "SecretsType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "BackupSecrets",
                                  "value": "BackupSecrets",
                                  "description": "Backup secrets type"
                                }
                              ]
                            }
                          },
                          "secretsLocation": {
                            "type": "string",
                            "description": "secrets location"
                          }
                        },
                        "required": [
                          "secretsType",
                          "secretsLocation"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "clusterPattern": {
                      "description": "Supported Storage Type for HCI Cluster",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RackAware"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterPattern",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard cluster."
                          },
                          {
                            "name": "RackAware",
                            "value": "RackAware",
                            "description": "RackAware cluster."
                          }
                        ]
                      }
                    },
                    "localAvailabilityZones": {
                      "type": "array",
                      "description": "Local Availability Zone information for HCI cluster",
                      "items": {
                        "type": "object",
                        "description": "Local Availability Zone information for HCI cluster",
                        "properties": {
                          "localAvailabilityZoneName": {
                            "type": "string",
                            "description": "Local Availability Zone name for HCI cluster"
                          },
                          "nodes": {
                            "type": "array",
                            "description": "Nodes belonging to a particular zone",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "localAvailabilityZoneName"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Create",
        "description": "Create an HCI cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "cluster",
            "in": "body",
            "description": "Details of the HCI cluster.",
            "required": true,
            "schema": {
              "description": "Cluster details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Identity of Cluster resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Cluster properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state. Indicates the current lifecycle status of the resource, including creation, update, deletion, connectivity, and error states.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning",
                        "NotSpecified",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "Deleted",
                        "PartiallySucceeded",
                        "InProgress",
                        "DisableInProgress",
                        "Connected",
                        "PartiallyConnected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently being provisioned."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation partially succeeded."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The resource is in the process of being disabled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the cluster agent. Indicates the current connectivity, validation, and deployment state of the agent within the cluster.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "ConnectedRecently",
                        "NotConnectedRecently",
                        "Disconnected",
                        "Error",
                        "NotSpecified",
                        "ValidationInProgress",
                        "ValidationSuccess",
                        "ValidationFailed",
                        "DeploymentInProgress",
                        "DeploymentFailed",
                        "DeploymentSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster agent has not yet registered with Azure."
                          },
                          {
                            "name": "ConnectedRecently",
                            "value": "ConnectedRecently",
                            "description": "The cluster agent has connected to Azure recently."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster agent has not connected to Azure recently."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster agent is currently disconnected from Azure."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the cluster agent's operation."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The status of the cluster agent is not specified."
                          },
                          {
                            "name": "ValidationInProgress",
                            "value": "ValidationInProgress",
                            "description": "Validation of the cluster agent is currently in progress."
                          },
                          {
                            "name": "ValidationSuccess",
                            "value": "ValidationSuccess",
                            "description": "Validation of the cluster agent completed successfully."
                          },
                          {
                            "name": "ValidationFailed",
                            "value": "ValidationFailed",
                            "description": "Validation of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentInProgress",
                            "value": "DeploymentInProgress",
                            "description": "Deployment of the cluster agent is currently in progress."
                          },
                          {
                            "name": "DeploymentFailed",
                            "value": "DeploymentFailed",
                            "description": "Deployment of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentSuccess",
                            "value": "DeploymentSuccess",
                            "description": "Deployment of the cluster agent completed successfully."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "connectivityStatus": {
                      "description": "Overall connectivity status for the cluster resource. Indicates whether the cluster is connected to Azure, partially connected, or has not recently communicated.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "Connected",
                        "NotConnectedRecently",
                        "PartiallyConnected",
                        "Disconnected",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectivityStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster has not yet registered with Azure."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The cluster is fully connected to Azure."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster has not connected to Azure recently."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some components of the cluster are connected, while others are not."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster is not connected to Azure."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The connectivity status is not specified."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "cloudId": {
                      "description": "Unique, immutable resource id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cloudManagementEndpoint": {
                      "description": "Endpoint configured for management from the Azure portal.",
                      "type": "string"
                    },
                    "aadClientId": {
                      "description": "App id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadTenantId": {
                      "description": "Tenant id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadApplicationObjectId": {
                      "description": "Object id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadServicePrincipalObjectId": {
                      "description": "Id of cluster identity service principal.",
                      "type": "string"
                    },
                    "softwareAssuranceProperties": {
                      "description": "Software Assurance properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "softwareAssuranceStatus": {
                          "description": "Status of the Software Assurance for the cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Software Assurance is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Software Assurance is disabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "softwareAssuranceIntent": {
                          "description": "Customer Intent for Software Assurance Benefit.",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Disable"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceIntent",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Customer intends to enable the Software Assurance benefit."
                              },
                              {
                                "name": "Disable",
                                "value": "Disable",
                                "description": "Customer intends to disable the Software Assurance benefit."
                              }
                            ]
                          }
                        },
                        "lastUpdated": {
                          "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "logCollectionProperties": {
                      "description": "Log Collection properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "fromDate": {
                          "description": "From DateTimeStamp from when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "toDate": {
                          "description": "To DateTimeStamp till when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "lastLogGenerated": {
                          "description": "Recent DateTimeStamp where logs are successfully generated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "logCollectionSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Log Collection Session details of the cluster.",
                            "type": "object",
                            "properties": {
                              "logStartTime": {
                                "description": "Start Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logEndTime": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "timeCollected": {
                                "description": "Duration of logs collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logSize": {
                                "description": "Size of the logs collected",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "logCollectionStatus": {
                                "description": "LogCollection status",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "InProgress",
                                  "Failed",
                                  "Succeeded"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "No log collection has been initiated."
                                    },
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress",
                                      "description": "Log collection is currently in progress."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "Log collection has failed."
                                    },
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded",
                                      "description": "Log collection completed successfully."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "correlationId": {
                                "description": "CorrelationId of the log collection",
                                "type": "string",
                                "readOnly": true
                              },
                              "logCollectionJobType": {
                                "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                                "type": "string",
                                "enum": [
                                  "OnDemand",
                                  "Scheduled"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionJobType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OnDemand",
                                      "value": "OnDemand",
                                      "description": "Log collection is triggered manually and executed immediately."
                                    },
                                    {
                                      "name": "Scheduled",
                                      "value": "Scheduled",
                                      "description": "Log collection is scheduled to run at a predefined time or interval."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "endTimeCollected": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logCollectionError": {
                                "readOnly": true,
                                "description": "Log Collection Error details of the cluster.",
                                "type": "object",
                                "properties": {
                                  "errorCode": {
                                    "description": "Error Code of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "errorMessage": {
                                    "description": "Error Message of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "remoteSupportProperties": {
                      "description": "RemoteSupport properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "accessLevel": {
                          "readOnly": true,
                          "description": "Remote Support Access Level",
                          "type": "string",
                          "enum": [
                            "Diagnostics",
                            "DiagnosticsAndRepair"
                          ],
                          "x-ms-enum": {
                            "name": "AccessLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Diagnostics",
                                "value": "Diagnostics",
                                "description": "Allows remote diagnostics operations only."
                              },
                              {
                                "name": "DiagnosticsAndRepair",
                                "value": "DiagnosticsAndRepair",
                                "description": "Allows both remote diagnostics and repair operations."
                              }
                            ]
                          }
                        },
                        "expirationTimeStamp": {
                          "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "remoteSupportType": {
                          "description": "Remote Support Type for cluster",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Revoke"
                          ],
                          "x-ms-enum": {
                            "name": "RemoteSupportType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Enable remote support for the cluster."
                              },
                              {
                                "name": "Revoke",
                                "value": "Revoke",
                                "description": "Revoke previously enabled remote support for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "remoteSupportNodeSettings": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Settings of the cluster.",
                            "type": "object",
                            "properties": {
                              "arcResourceId": {
                                "description": "Arc ResourceId of the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "state": {
                                "description": "Remote Support Access Connection State on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "createdAt": {
                                "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "updatedAt": {
                                "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "connectionStatus": {
                                "description": "Remote Support Access Connection Status on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "connectionErrorMessage": {
                                "description": "Remote Support Access Connection Error Message on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "transcriptLocation": {
                                "description": "Remote Support Transcript location on the node",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "remoteSupportSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Session Details on the Node.",
                            "type": "object",
                            "properties": {
                              "sessionStartTime": {
                                "description": "Remote Support Session StartTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "sessionEndTime": {
                                "description": "Remote Support Session EndTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "nodeName": {
                                "description": "Name of the node",
                                "type": "string",
                                "readOnly": true
                              },
                              "duration": {
                                "description": "Duration of Remote Support Enablement",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "accessLevel": {
                                "readOnly": true,
                                "description": "Remote Support Access Level",
                                "type": "string",
                                "enum": [
                                  "Diagnostics",
                                  "DiagnosticsAndRepair"
                                ],
                                "x-ms-enum": {
                                  "name": "AccessLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Diagnostics",
                                      "value": "Diagnostics",
                                      "description": "Allows remote diagnostics operations only."
                                    },
                                    {
                                      "name": "DiagnosticsAndRepair",
                                      "value": "DiagnosticsAndRepair",
                                      "description": "Allows both remote diagnostics and repair operations."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "desiredProperties": {
                      "description": "Desired properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "windowsServerSubscription": {
                          "description": "Desired state of Windows Server Subscription.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "WindowsServerSubscription",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Windows Server Subscription is disabled."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Windows Server Subscription is enabled."
                              }
                            ]
                          }
                        },
                        "diagnosticLevel": {
                          "description": "Desired level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "reportedProperties": {
                      "description": "Properties reported by cluster agent.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clusterName": {
                          "description": "Name of the on-prem cluster connected to this resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterId": {
                          "description": "Unique id generated by the on-prem cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterVersion": {
                          "description": "Version of the cluster software.",
                          "type": "string",
                          "readOnly": true
                        },
                        "nodes": {
                          "description": "List of nodes reported by the cluster.",
                          "type": "array",
                          "items": {
                            "description": "Cluster node details.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "id": {
                                "description": "Id of the node in the cluster.",
                                "type": "number",
                                "readOnly": true
                              },
                              "windowsServerSubscription": {
                                "description": "State of Windows Server Subscription.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "WindowsServerSubscription",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Windows Server Subscription is disabled."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Windows Server Subscription is enabled."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "nodeType": {
                                "description": "Type of the cluster node hardware.",
                                "type": "string",
                                "enum": [
                                  "FirstParty",
                                  "ThirdParty"
                                ],
                                "x-ms-enum": {
                                  "name": "ClusterNodeType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "FirstParty",
                                      "value": "FirstParty",
                                      "description": "Cluster nodes are provided and managed by Microsoft."
                                    },
                                    {
                                      "name": "ThirdParty",
                                      "value": "ThirdParty",
                                      "description": "Cluster nodes are provided and managed by a third-party vendor."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "ehcResourceId": {
                                "description": "Edge Hardware Center Resource Id",
                                "type": "string",
                                "readOnly": true
                              },
                              "manufacturer": {
                                "description": "Manufacturer of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "model": {
                                "description": "Model name of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osName": {
                                "description": "Operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osVersion": {
                                "description": "Version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osDisplayVersion": {
                                "description": "Display version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Immutable id of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "coreCount": {
                                "description": "Number of physical cores on the cluster node.",
                                "type": "number",
                                "readOnly": true
                              },
                              "memoryInGiB": {
                                "description": "Total available memory on the cluster node (in GiB).",
                                "type": "number",
                                "readOnly": true
                              },
                              "lastLicensingTimestamp": {
                                "description": "Most recent licensing timestamp.",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "oemActivation": {
                                "description": "OEM activation status of the node.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OemActivation",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "OEM activation is disabled for the node."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "OEM activation is enabled for the node."
                                    }
                                  ]
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "lastUpdated": {
                          "description": "Last time the cluster reported the data.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "imdsAttestation": {
                          "description": "IMDS attestation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "ImdsAttestation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "IMDS attestation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "IMDS attestation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "diagnosticLevel": {
                          "description": "Level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        },
                        "supportedCapabilities": {
                          "description": "Capabilities supported by the cluster.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "clusterType": {
                          "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
                          "type": "string",
                          "enum": [
                            "FirstParty",
                            "ThirdParty"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterNodeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "FirstParty",
                                "value": "FirstParty",
                                "description": "All nodes in the cluster are provided and managed by Microsoft."
                              },
                              {
                                "name": "ThirdParty",
                                "value": "ThirdParty",
                                "description": "All nodes in the cluster are provided and managed by a third-party vendor."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "manufacturer": {
                          "description": "The manufacturer of all the nodes of the cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "oemActivation": {
                          "description": "OEM activation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "OemActivation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "OEM activation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "OEM activation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "hardwareClass": {
                          "description": "Hardware class of the cluster.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Small",
                            "Medium",
                            "Large"
                          ],
                          "default": "Medium",
                          "x-ms-enum": {
                            "name": "HardwareClass",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Small",
                                "value": "Small",
                                "description": "The hardware class is small."
                              },
                              {
                                "name": "Medium",
                                "value": "Medium",
                                "description": "The hardware class is medium. This corresponds to the default"
                              },
                              {
                                "name": "Large",
                                "value": "Large",
                                "description": "The hardware class is large."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "isolatedVmAttestationConfiguration": {
                      "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "attestationResourceId": {
                          "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Attestation/attestationProviders",
                                "scopes": [
                                  "Tenant"
                                ]
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "relyingPartyServiceEndpoint": {
                          "description": "Region specific endpoint for relying party service.",
                          "type": "string",
                          "readOnly": true
                        },
                        "attestationServiceEndpoint": {
                          "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "trialDaysRemaining": {
                      "description": "Number of days remaining in the trial period.",
                      "type": "number",
                      "readOnly": true
                    },
                    "billingModel": {
                      "description": "Type of billing applied to the resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "registrationTimestamp": {
                      "description": "First cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastSyncTimestamp": {
                      "description": "Most recent cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastBillingTimestamp": {
                      "description": "Most recent billing meter timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "serviceEndpoint": {
                      "description": "Region specific DataPath Endpoint of the cluster.",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceProviderObjectId": {
                      "description": "Object id of RP Service Principal",
                      "type": "string",
                      "readOnly": true
                    },
                    "secretsLocations": {
                      "type": "array",
                      "description": "List of secret locations.",
                      "items": {
                        "type": "object",
                        "description": "Secrets location details",
                        "properties": {
                          "secretsType": {
                            "description": "Type of secrets to store",
                            "type": "string",
                            "enum": [
                              "BackupSecrets"
                            ],
                            "x-ms-enum": {
                              "name": "SecretsType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "BackupSecrets",
                                  "value": "BackupSecrets",
                                  "description": "Backup secrets type"
                                }
                              ]
                            }
                          },
                          "secretsLocation": {
                            "type": "string",
                            "description": "secrets location"
                          }
                        },
                        "required": [
                          "secretsType",
                          "secretsLocation"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "clusterPattern": {
                      "description": "Supported Storage Type for HCI Cluster",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RackAware"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterPattern",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard cluster."
                          },
                          {
                            "name": "RackAware",
                            "value": "RackAware",
                            "description": "RackAware cluster."
                          }
                        ]
                      }
                    },
                    "localAvailabilityZones": {
                      "type": "array",
                      "description": "Local Availability Zone information for HCI cluster",
                      "items": {
                        "type": "object",
                        "description": "Local Availability Zone information for HCI cluster",
                        "properties": {
                          "localAvailabilityZoneName": {
                            "type": "string",
                            "description": "Local Availability Zone name for HCI cluster"
                          },
                          "nodes": {
                            "type": "array",
                            "description": "Nodes belonging to a particular zone",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "localAvailabilityZoneName"
                      ]
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Cluster details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Identity of Cluster resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Cluster properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state. Indicates the current lifecycle status of the resource, including creation, update, deletion, connectivity, and error states.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning",
                        "NotSpecified",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "Deleted",
                        "PartiallySucceeded",
                        "InProgress",
                        "DisableInProgress",
                        "Connected",
                        "PartiallyConnected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently being provisioned."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation partially succeeded."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The resource is in the process of being disabled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the cluster agent. Indicates the current connectivity, validation, and deployment state of the agent within the cluster.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "ConnectedRecently",
                        "NotConnectedRecently",
                        "Disconnected",
                        "Error",
                        "NotSpecified",
                        "ValidationInProgress",
                        "ValidationSuccess",
                        "ValidationFailed",
                        "DeploymentInProgress",
                        "DeploymentFailed",
                        "DeploymentSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster agent has not yet registered with Azure."
                          },
                          {
                            "name": "ConnectedRecently",
                            "value": "ConnectedRecently",
                            "description": "The cluster agent has connected to Azure recently."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster agent has not connected to Azure recently."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster agent is currently disconnected from Azure."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the cluster agent's operation."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The status of the cluster agent is not specified."
                          },
                          {
                            "name": "ValidationInProgress",
                            "value": "ValidationInProgress",
                            "description": "Validation of the cluster agent is currently in progress."
                          },
                          {
                            "name": "ValidationSuccess",
                            "value": "ValidationSuccess",
                            "description": "Validation of the cluster agent completed successfully."
                          },
                          {
                            "name": "ValidationFailed",
                            "value": "ValidationFailed",
                            "description": "Validation of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentInProgress",
                            "value": "DeploymentInProgress",
                            "description": "Deployment of the cluster agent is currently in progress."
                          },
                          {
                            "name": "DeploymentFailed",
                            "value": "DeploymentFailed",
                            "description": "Deployment of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentSuccess",
                            "value": "DeploymentSuccess",
                            "description": "Deployment of the cluster agent completed successfully."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "connectivityStatus": {
                      "description": "Overall connectivity status for the cluster resource. Indicates whether the cluster is connected to Azure, partially connected, or has not recently communicated.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "Connected",
                        "NotConnectedRecently",
                        "PartiallyConnected",
                        "Disconnected",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectivityStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster has not yet registered with Azure."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The cluster is fully connected to Azure."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster has not connected to Azure recently."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some components of the cluster are connected, while others are not."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster is not connected to Azure."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The connectivity status is not specified."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "cloudId": {
                      "description": "Unique, immutable resource id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cloudManagementEndpoint": {
                      "description": "Endpoint configured for management from the Azure portal.",
                      "type": "string"
                    },
                    "aadClientId": {
                      "description": "App id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadTenantId": {
                      "description": "Tenant id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadApplicationObjectId": {
                      "description": "Object id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadServicePrincipalObjectId": {
                      "description": "Id of cluster identity service principal.",
                      "type": "string"
                    },
                    "softwareAssuranceProperties": {
                      "description": "Software Assurance properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "softwareAssuranceStatus": {
                          "description": "Status of the Software Assurance for the cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Software Assurance is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Software Assurance is disabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "softwareAssuranceIntent": {
                          "description": "Customer Intent for Software Assurance Benefit.",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Disable"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceIntent",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Customer intends to enable the Software Assurance benefit."
                              },
                              {
                                "name": "Disable",
                                "value": "Disable",
                                "description": "Customer intends to disable the Software Assurance benefit."
                              }
                            ]
                          }
                        },
                        "lastUpdated": {
                          "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "logCollectionProperties": {
                      "description": "Log Collection properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "fromDate": {
                          "description": "From DateTimeStamp from when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "toDate": {
                          "description": "To DateTimeStamp till when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "lastLogGenerated": {
                          "description": "Recent DateTimeStamp where logs are successfully generated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "logCollectionSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Log Collection Session details of the cluster.",
                            "type": "object",
                            "properties": {
                              "logStartTime": {
                                "description": "Start Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logEndTime": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "timeCollected": {
                                "description": "Duration of logs collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logSize": {
                                "description": "Size of the logs collected",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "logCollectionStatus": {
                                "description": "LogCollection status",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "InProgress",
                                  "Failed",
                                  "Succeeded"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "No log collection has been initiated."
                                    },
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress",
                                      "description": "Log collection is currently in progress."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "Log collection has failed."
                                    },
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded",
                                      "description": "Log collection completed successfully."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "correlationId": {
                                "description": "CorrelationId of the log collection",
                                "type": "string",
                                "readOnly": true
                              },
                              "logCollectionJobType": {
                                "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                                "type": "string",
                                "enum": [
                                  "OnDemand",
                                  "Scheduled"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionJobType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OnDemand",
                                      "value": "OnDemand",
                                      "description": "Log collection is triggered manually and executed immediately."
                                    },
                                    {
                                      "name": "Scheduled",
                                      "value": "Scheduled",
                                      "description": "Log collection is scheduled to run at a predefined time or interval."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "endTimeCollected": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logCollectionError": {
                                "readOnly": true,
                                "description": "Log Collection Error details of the cluster.",
                                "type": "object",
                                "properties": {
                                  "errorCode": {
                                    "description": "Error Code of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "errorMessage": {
                                    "description": "Error Message of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "remoteSupportProperties": {
                      "description": "RemoteSupport properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "accessLevel": {
                          "readOnly": true,
                          "description": "Remote Support Access Level",
                          "type": "string",
                          "enum": [
                            "Diagnostics",
                            "DiagnosticsAndRepair"
                          ],
                          "x-ms-enum": {
                            "name": "AccessLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Diagnostics",
                                "value": "Diagnostics",
                                "description": "Allows remote diagnostics operations only."
                              },
                              {
                                "name": "DiagnosticsAndRepair",
                                "value": "DiagnosticsAndRepair",
                                "description": "Allows both remote diagnostics and repair operations."
                              }
                            ]
                          }
                        },
                        "expirationTimeStamp": {
                          "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "remoteSupportType": {
                          "description": "Remote Support Type for cluster",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Revoke"
                          ],
                          "x-ms-enum": {
                            "name": "RemoteSupportType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Enable remote support for the cluster."
                              },
                              {
                                "name": "Revoke",
                                "value": "Revoke",
                                "description": "Revoke previously enabled remote support for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "remoteSupportNodeSettings": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Settings of the cluster.",
                            "type": "object",
                            "properties": {
                              "arcResourceId": {
                                "description": "Arc ResourceId of the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "state": {
                                "description": "Remote Support Access Connection State on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "createdAt": {
                                "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "updatedAt": {
                                "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "connectionStatus": {
                                "description": "Remote Support Access Connection Status on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "connectionErrorMessage": {
                                "description": "Remote Support Access Connection Error Message on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "transcriptLocation": {
                                "description": "Remote Support Transcript location on the node",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "remoteSupportSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Session Details on the Node.",
                            "type": "object",
                            "properties": {
                              "sessionStartTime": {
                                "description": "Remote Support Session StartTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "sessionEndTime": {
                                "description": "Remote Support Session EndTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "nodeName": {
                                "description": "Name of the node",
                                "type": "string",
                                "readOnly": true
                              },
                              "duration": {
                                "description": "Duration of Remote Support Enablement",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "accessLevel": {
                                "readOnly": true,
                                "description": "Remote Support Access Level",
                                "type": "string",
                                "enum": [
                                  "Diagnostics",
                                  "DiagnosticsAndRepair"
                                ],
                                "x-ms-enum": {
                                  "name": "AccessLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Diagnostics",
                                      "value": "Diagnostics",
                                      "description": "Allows remote diagnostics operations only."
                                    },
                                    {
                                      "name": "DiagnosticsAndRepair",
                                      "value": "DiagnosticsAndRepair",
                                      "description": "Allows both remote diagnostics and repair operations."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "desiredProperties": {
                      "description": "Desired properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "windowsServerSubscription": {
                          "description": "Desired state of Windows Server Subscription.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "WindowsServerSubscription",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Windows Server Subscription is disabled."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Windows Server Subscription is enabled."
                              }
                            ]
                          }
                        },
                        "diagnosticLevel": {
                          "description": "Desired level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "reportedProperties": {
                      "description": "Properties reported by cluster agent.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clusterName": {
                          "description": "Name of the on-prem cluster connected to this resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterId": {
                          "description": "Unique id generated by the on-prem cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterVersion": {
                          "description": "Version of the cluster software.",
                          "type": "string",
                          "readOnly": true
                        },
                        "nodes": {
                          "description": "List of nodes reported by the cluster.",
                          "type": "array",
                          "items": {
                            "description": "Cluster node details.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "id": {
                                "description": "Id of the node in the cluster.",
                                "type": "number",
                                "readOnly": true
                              },
                              "windowsServerSubscription": {
                                "description": "State of Windows Server Subscription.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "WindowsServerSubscription",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Windows Server Subscription is disabled."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Windows Server Subscription is enabled."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "nodeType": {
                                "description": "Type of the cluster node hardware.",
                                "type": "string",
                                "enum": [
                                  "FirstParty",
                                  "ThirdParty"
                                ],
                                "x-ms-enum": {
                                  "name": "ClusterNodeType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "FirstParty",
                                      "value": "FirstParty",
                                      "description": "Cluster nodes are provided and managed by Microsoft."
                                    },
                                    {
                                      "name": "ThirdParty",
                                      "value": "ThirdParty",
                                      "description": "Cluster nodes are provided and managed by a third-party vendor."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "ehcResourceId": {
                                "description": "Edge Hardware Center Resource Id",
                                "type": "string",
                                "readOnly": true
                              },
                              "manufacturer": {
                                "description": "Manufacturer of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "model": {
                                "description": "Model name of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osName": {
                                "description": "Operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osVersion": {
                                "description": "Version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osDisplayVersion": {
                                "description": "Display version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Immutable id of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "coreCount": {
                                "description": "Number of physical cores on the cluster node.",
                                "type": "number",
                                "readOnly": true
                              },
                              "memoryInGiB": {
                                "description": "Total available memory on the cluster node (in GiB).",
                                "type": "number",
                                "readOnly": true
                              },
                              "lastLicensingTimestamp": {
                                "description": "Most recent licensing timestamp.",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "oemActivation": {
                                "description": "OEM activation status of the node.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OemActivation",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "OEM activation is disabled for the node."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "OEM activation is enabled for the node."
                                    }
                                  ]
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "lastUpdated": {
                          "description": "Last time the cluster reported the data.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "imdsAttestation": {
                          "description": "IMDS attestation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "ImdsAttestation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "IMDS attestation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "IMDS attestation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "diagnosticLevel": {
                          "description": "Level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        },
                        "supportedCapabilities": {
                          "description": "Capabilities supported by the cluster.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "clusterType": {
                          "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
                          "type": "string",
                          "enum": [
                            "FirstParty",
                            "ThirdParty"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterNodeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "FirstParty",
                                "value": "FirstParty",
                                "description": "All nodes in the cluster are provided and managed by Microsoft."
                              },
                              {
                                "name": "ThirdParty",
                                "value": "ThirdParty",
                                "description": "All nodes in the cluster are provided and managed by a third-party vendor."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "manufacturer": {
                          "description": "The manufacturer of all the nodes of the cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "oemActivation": {
                          "description": "OEM activation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "OemActivation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "OEM activation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "OEM activation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "hardwareClass": {
                          "description": "Hardware class of the cluster.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Small",
                            "Medium",
                            "Large"
                          ],
                          "default": "Medium",
                          "x-ms-enum": {
                            "name": "HardwareClass",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Small",
                                "value": "Small",
                                "description": "The hardware class is small."
                              },
                              {
                                "name": "Medium",
                                "value": "Medium",
                                "description": "The hardware class is medium. This corresponds to the default"
                              },
                              {
                                "name": "Large",
                                "value": "Large",
                                "description": "The hardware class is large."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "isolatedVmAttestationConfiguration": {
                      "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "attestationResourceId": {
                          "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Attestation/attestationProviders",
                                "scopes": [
                                  "Tenant"
                                ]
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "relyingPartyServiceEndpoint": {
                          "description": "Region specific endpoint for relying party service.",
                          "type": "string",
                          "readOnly": true
                        },
                        "attestationServiceEndpoint": {
                          "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "trialDaysRemaining": {
                      "description": "Number of days remaining in the trial period.",
                      "type": "number",
                      "readOnly": true
                    },
                    "billingModel": {
                      "description": "Type of billing applied to the resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "registrationTimestamp": {
                      "description": "First cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastSyncTimestamp": {
                      "description": "Most recent cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastBillingTimestamp": {
                      "description": "Most recent billing meter timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "serviceEndpoint": {
                      "description": "Region specific DataPath Endpoint of the cluster.",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceProviderObjectId": {
                      "description": "Object id of RP Service Principal",
                      "type": "string",
                      "readOnly": true
                    },
                    "secretsLocations": {
                      "type": "array",
                      "description": "List of secret locations.",
                      "items": {
                        "type": "object",
                        "description": "Secrets location details",
                        "properties": {
                          "secretsType": {
                            "description": "Type of secrets to store",
                            "type": "string",
                            "enum": [
                              "BackupSecrets"
                            ],
                            "x-ms-enum": {
                              "name": "SecretsType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "BackupSecrets",
                                  "value": "BackupSecrets",
                                  "description": "Backup secrets type"
                                }
                              ]
                            }
                          },
                          "secretsLocation": {
                            "type": "string",
                            "description": "secrets location"
                          }
                        },
                        "required": [
                          "secretsType",
                          "secretsLocation"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "clusterPattern": {
                      "description": "Supported Storage Type for HCI Cluster",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RackAware"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterPattern",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard cluster."
                          },
                          {
                            "name": "RackAware",
                            "value": "RackAware",
                            "description": "RackAware cluster."
                          }
                        ]
                      }
                    },
                    "localAvailabilityZones": {
                      "type": "array",
                      "description": "Local Availability Zone information for HCI cluster",
                      "items": {
                        "type": "object",
                        "description": "Local Availability Zone information for HCI cluster",
                        "properties": {
                          "localAvailabilityZoneName": {
                            "type": "string",
                            "description": "Local Availability Zone name for HCI cluster"
                          },
                          "nodes": {
                            "type": "array",
                            "description": "Nodes belonging to a particular zone",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "localAvailabilityZoneName"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Update",
        "description": "Update an HCI cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "cluster",
            "in": "body",
            "description": "Details of the HCI cluster.",
            "required": true,
            "schema": {
              "description": "Cluster details to update.",
              "type": "object",
              "properties": {
                "tags": {
                  "description": "Resource tags.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "identity": {
                  "description": "Identity of Cluster resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Cluster properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "cloudManagementEndpoint": {
                      "description": "Endpoint configured for management from the Azure portal",
                      "type": "string"
                    },
                    "aadClientId": {
                      "description": "App id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadTenantId": {
                      "description": "Tenant id of cluster AAD identity.",
                      "type": "string"
                    },
                    "desiredProperties": {
                      "description": "Desired properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "windowsServerSubscription": {
                          "description": "Desired state of Windows Server Subscription.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "WindowsServerSubscription",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Windows Server Subscription is disabled."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Windows Server Subscription is enabled."
                              }
                            ]
                          }
                        },
                        "diagnosticLevel": {
                          "description": "Desired level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Cluster details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Identity of Cluster resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Cluster properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state. Indicates the current lifecycle status of the resource, including creation, update, deletion, connectivity, and error states.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning",
                        "NotSpecified",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "Deleted",
                        "PartiallySucceeded",
                        "InProgress",
                        "DisableInProgress",
                        "Connected",
                        "PartiallyConnected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently being provisioned."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation partially succeeded."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The resource is in the process of being disabled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the cluster agent. Indicates the current connectivity, validation, and deployment state of the agent within the cluster.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "ConnectedRecently",
                        "NotConnectedRecently",
                        "Disconnected",
                        "Error",
                        "NotSpecified",
                        "ValidationInProgress",
                        "ValidationSuccess",
                        "ValidationFailed",
                        "DeploymentInProgress",
                        "DeploymentFailed",
                        "DeploymentSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster agent has not yet registered with Azure."
                          },
                          {
                            "name": "ConnectedRecently",
                            "value": "ConnectedRecently",
                            "description": "The cluster agent has connected to Azure recently."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster agent has not connected to Azure recently."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster agent is currently disconnected from Azure."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the cluster agent's operation."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The status of the cluster agent is not specified."
                          },
                          {
                            "name": "ValidationInProgress",
                            "value": "ValidationInProgress",
                            "description": "Validation of the cluster agent is currently in progress."
                          },
                          {
                            "name": "ValidationSuccess",
                            "value": "ValidationSuccess",
                            "description": "Validation of the cluster agent completed successfully."
                          },
                          {
                            "name": "ValidationFailed",
                            "value": "ValidationFailed",
                            "description": "Validation of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentInProgress",
                            "value": "DeploymentInProgress",
                            "description": "Deployment of the cluster agent is currently in progress."
                          },
                          {
                            "name": "DeploymentFailed",
                            "value": "DeploymentFailed",
                            "description": "Deployment of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentSuccess",
                            "value": "DeploymentSuccess",
                            "description": "Deployment of the cluster agent completed successfully."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "connectivityStatus": {
                      "description": "Overall connectivity status for the cluster resource. Indicates whether the cluster is connected to Azure, partially connected, or has not recently communicated.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "Connected",
                        "NotConnectedRecently",
                        "PartiallyConnected",
                        "Disconnected",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectivityStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster has not yet registered with Azure."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The cluster is fully connected to Azure."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster has not connected to Azure recently."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some components of the cluster are connected, while others are not."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster is not connected to Azure."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The connectivity status is not specified."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "cloudId": {
                      "description": "Unique, immutable resource id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cloudManagementEndpoint": {
                      "description": "Endpoint configured for management from the Azure portal.",
                      "type": "string"
                    },
                    "aadClientId": {
                      "description": "App id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadTenantId": {
                      "description": "Tenant id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadApplicationObjectId": {
                      "description": "Object id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadServicePrincipalObjectId": {
                      "description": "Id of cluster identity service principal.",
                      "type": "string"
                    },
                    "softwareAssuranceProperties": {
                      "description": "Software Assurance properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "softwareAssuranceStatus": {
                          "description": "Status of the Software Assurance for the cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Software Assurance is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Software Assurance is disabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "softwareAssuranceIntent": {
                          "description": "Customer Intent for Software Assurance Benefit.",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Disable"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceIntent",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Customer intends to enable the Software Assurance benefit."
                              },
                              {
                                "name": "Disable",
                                "value": "Disable",
                                "description": "Customer intends to disable the Software Assurance benefit."
                              }
                            ]
                          }
                        },
                        "lastUpdated": {
                          "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "logCollectionProperties": {
                      "description": "Log Collection properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "fromDate": {
                          "description": "From DateTimeStamp from when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "toDate": {
                          "description": "To DateTimeStamp till when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "lastLogGenerated": {
                          "description": "Recent DateTimeStamp where logs are successfully generated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "logCollectionSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Log Collection Session details of the cluster.",
                            "type": "object",
                            "properties": {
                              "logStartTime": {
                                "description": "Start Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logEndTime": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "timeCollected": {
                                "description": "Duration of logs collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logSize": {
                                "description": "Size of the logs collected",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "logCollectionStatus": {
                                "description": "LogCollection status",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "InProgress",
                                  "Failed",
                                  "Succeeded"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "No log collection has been initiated."
                                    },
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress",
                                      "description": "Log collection is currently in progress."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "Log collection has failed."
                                    },
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded",
                                      "description": "Log collection completed successfully."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "correlationId": {
                                "description": "CorrelationId of the log collection",
                                "type": "string",
                                "readOnly": true
                              },
                              "logCollectionJobType": {
                                "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                                "type": "string",
                                "enum": [
                                  "OnDemand",
                                  "Scheduled"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionJobType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OnDemand",
                                      "value": "OnDemand",
                                      "description": "Log collection is triggered manually and executed immediately."
                                    },
                                    {
                                      "name": "Scheduled",
                                      "value": "Scheduled",
                                      "description": "Log collection is scheduled to run at a predefined time or interval."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "endTimeCollected": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logCollectionError": {
                                "readOnly": true,
                                "description": "Log Collection Error details of the cluster.",
                                "type": "object",
                                "properties": {
                                  "errorCode": {
                                    "description": "Error Code of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "errorMessage": {
                                    "description": "Error Message of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "remoteSupportProperties": {
                      "description": "RemoteSupport properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "accessLevel": {
                          "readOnly": true,
                          "description": "Remote Support Access Level",
                          "type": "string",
                          "enum": [
                            "Diagnostics",
                            "DiagnosticsAndRepair"
                          ],
                          "x-ms-enum": {
                            "name": "AccessLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Diagnostics",
                                "value": "Diagnostics",
                                "description": "Allows remote diagnostics operations only."
                              },
                              {
                                "name": "DiagnosticsAndRepair",
                                "value": "DiagnosticsAndRepair",
                                "description": "Allows both remote diagnostics and repair operations."
                              }
                            ]
                          }
                        },
                        "expirationTimeStamp": {
                          "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "remoteSupportType": {
                          "description": "Remote Support Type for cluster",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Revoke"
                          ],
                          "x-ms-enum": {
                            "name": "RemoteSupportType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Enable remote support for the cluster."
                              },
                              {
                                "name": "Revoke",
                                "value": "Revoke",
                                "description": "Revoke previously enabled remote support for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "remoteSupportNodeSettings": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Settings of the cluster.",
                            "type": "object",
                            "properties": {
                              "arcResourceId": {
                                "description": "Arc ResourceId of the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "state": {
                                "description": "Remote Support Access Connection State on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "createdAt": {
                                "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "updatedAt": {
                                "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "connectionStatus": {
                                "description": "Remote Support Access Connection Status on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "connectionErrorMessage": {
                                "description": "Remote Support Access Connection Error Message on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "transcriptLocation": {
                                "description": "Remote Support Transcript location on the node",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "remoteSupportSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Session Details on the Node.",
                            "type": "object",
                            "properties": {
                              "sessionStartTime": {
                                "description": "Remote Support Session StartTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "sessionEndTime": {
                                "description": "Remote Support Session EndTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "nodeName": {
                                "description": "Name of the node",
                                "type": "string",
                                "readOnly": true
                              },
                              "duration": {
                                "description": "Duration of Remote Support Enablement",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "accessLevel": {
                                "readOnly": true,
                                "description": "Remote Support Access Level",
                                "type": "string",
                                "enum": [
                                  "Diagnostics",
                                  "DiagnosticsAndRepair"
                                ],
                                "x-ms-enum": {
                                  "name": "AccessLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Diagnostics",
                                      "value": "Diagnostics",
                                      "description": "Allows remote diagnostics operations only."
                                    },
                                    {
                                      "name": "DiagnosticsAndRepair",
                                      "value": "DiagnosticsAndRepair",
                                      "description": "Allows both remote diagnostics and repair operations."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "desiredProperties": {
                      "description": "Desired properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "windowsServerSubscription": {
                          "description": "Desired state of Windows Server Subscription.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "WindowsServerSubscription",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Windows Server Subscription is disabled."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Windows Server Subscription is enabled."
                              }
                            ]
                          }
                        },
                        "diagnosticLevel": {
                          "description": "Desired level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "reportedProperties": {
                      "description": "Properties reported by cluster agent.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clusterName": {
                          "description": "Name of the on-prem cluster connected to this resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterId": {
                          "description": "Unique id generated by the on-prem cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterVersion": {
                          "description": "Version of the cluster software.",
                          "type": "string",
                          "readOnly": true
                        },
                        "nodes": {
                          "description": "List of nodes reported by the cluster.",
                          "type": "array",
                          "items": {
                            "description": "Cluster node details.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "id": {
                                "description": "Id of the node in the cluster.",
                                "type": "number",
                                "readOnly": true
                              },
                              "windowsServerSubscription": {
                                "description": "State of Windows Server Subscription.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "WindowsServerSubscription",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Windows Server Subscription is disabled."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Windows Server Subscription is enabled."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "nodeType": {
                                "description": "Type of the cluster node hardware.",
                                "type": "string",
                                "enum": [
                                  "FirstParty",
                                  "ThirdParty"
                                ],
                                "x-ms-enum": {
                                  "name": "ClusterNodeType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "FirstParty",
                                      "value": "FirstParty",
                                      "description": "Cluster nodes are provided and managed by Microsoft."
                                    },
                                    {
                                      "name": "ThirdParty",
                                      "value": "ThirdParty",
                                      "description": "Cluster nodes are provided and managed by a third-party vendor."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "ehcResourceId": {
                                "description": "Edge Hardware Center Resource Id",
                                "type": "string",
                                "readOnly": true
                              },
                              "manufacturer": {
                                "description": "Manufacturer of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "model": {
                                "description": "Model name of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osName": {
                                "description": "Operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osVersion": {
                                "description": "Version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osDisplayVersion": {
                                "description": "Display version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Immutable id of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "coreCount": {
                                "description": "Number of physical cores on the cluster node.",
                                "type": "number",
                                "readOnly": true
                              },
                              "memoryInGiB": {
                                "description": "Total available memory on the cluster node (in GiB).",
                                "type": "number",
                                "readOnly": true
                              },
                              "lastLicensingTimestamp": {
                                "description": "Most recent licensing timestamp.",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "oemActivation": {
                                "description": "OEM activation status of the node.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OemActivation",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "OEM activation is disabled for the node."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "OEM activation is enabled for the node."
                                    }
                                  ]
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "lastUpdated": {
                          "description": "Last time the cluster reported the data.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "imdsAttestation": {
                          "description": "IMDS attestation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "ImdsAttestation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "IMDS attestation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "IMDS attestation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "diagnosticLevel": {
                          "description": "Level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        },
                        "supportedCapabilities": {
                          "description": "Capabilities supported by the cluster.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "clusterType": {
                          "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
                          "type": "string",
                          "enum": [
                            "FirstParty",
                            "ThirdParty"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterNodeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "FirstParty",
                                "value": "FirstParty",
                                "description": "All nodes in the cluster are provided and managed by Microsoft."
                              },
                              {
                                "name": "ThirdParty",
                                "value": "ThirdParty",
                                "description": "All nodes in the cluster are provided and managed by a third-party vendor."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "manufacturer": {
                          "description": "The manufacturer of all the nodes of the cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "oemActivation": {
                          "description": "OEM activation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "OemActivation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "OEM activation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "OEM activation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "hardwareClass": {
                          "description": "Hardware class of the cluster.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Small",
                            "Medium",
                            "Large"
                          ],
                          "default": "Medium",
                          "x-ms-enum": {
                            "name": "HardwareClass",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Small",
                                "value": "Small",
                                "description": "The hardware class is small."
                              },
                              {
                                "name": "Medium",
                                "value": "Medium",
                                "description": "The hardware class is medium. This corresponds to the default"
                              },
                              {
                                "name": "Large",
                                "value": "Large",
                                "description": "The hardware class is large."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "isolatedVmAttestationConfiguration": {
                      "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "attestationResourceId": {
                          "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Attestation/attestationProviders",
                                "scopes": [
                                  "Tenant"
                                ]
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "relyingPartyServiceEndpoint": {
                          "description": "Region specific endpoint for relying party service.",
                          "type": "string",
                          "readOnly": true
                        },
                        "attestationServiceEndpoint": {
                          "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "trialDaysRemaining": {
                      "description": "Number of days remaining in the trial period.",
                      "type": "number",
                      "readOnly": true
                    },
                    "billingModel": {
                      "description": "Type of billing applied to the resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "registrationTimestamp": {
                      "description": "First cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastSyncTimestamp": {
                      "description": "Most recent cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastBillingTimestamp": {
                      "description": "Most recent billing meter timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "serviceEndpoint": {
                      "description": "Region specific DataPath Endpoint of the cluster.",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceProviderObjectId": {
                      "description": "Object id of RP Service Principal",
                      "type": "string",
                      "readOnly": true
                    },
                    "secretsLocations": {
                      "type": "array",
                      "description": "List of secret locations.",
                      "items": {
                        "type": "object",
                        "description": "Secrets location details",
                        "properties": {
                          "secretsType": {
                            "description": "Type of secrets to store",
                            "type": "string",
                            "enum": [
                              "BackupSecrets"
                            ],
                            "x-ms-enum": {
                              "name": "SecretsType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "BackupSecrets",
                                  "value": "BackupSecrets",
                                  "description": "Backup secrets type"
                                }
                              ]
                            }
                          },
                          "secretsLocation": {
                            "type": "string",
                            "description": "secrets location"
                          }
                        },
                        "required": [
                          "secretsType",
                          "secretsLocation"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "clusterPattern": {
                      "description": "Supported Storage Type for HCI Cluster",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RackAware"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterPattern",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard cluster."
                          },
                          {
                            "name": "RackAware",
                            "value": "RackAware",
                            "description": "RackAware cluster."
                          }
                        ]
                      }
                    },
                    "localAvailabilityZones": {
                      "type": "array",
                      "description": "Local Availability Zone information for HCI cluster",
                      "items": {
                        "type": "object",
                        "description": "Local Availability Zone information for HCI cluster",
                        "properties": {
                          "localAvailabilityZoneName": {
                            "type": "string",
                            "description": "Local Availability Zone name for HCI cluster"
                          },
                          "nodes": {
                            "type": "array",
                            "description": "Nodes belonging to a particular zone",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "localAvailabilityZoneName"
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Clusters"
        ],
        "operationId": "Clusters_Delete",
        "description": "Delete an HCI cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted"
          },
          "204": {
            "description": "No content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updateSecretsLocations": {
      "post": {
        "operationId": "Clusters_UpdateSecretsLocations",
        "tags": [
          "Clusters"
        ],
        "description": "Update cluster secrets locations.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "description": "The name of the cluster.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Update secrets locations change  Request.",
              "properties": {
                "properties": {
                  "type": "array",
                  "description": "List of secret locations",
                  "items": {
                    "type": "object",
                    "description": "Secrets location details",
                    "properties": {
                      "secretsType": {
                        "description": "Type of secrets to store",
                        "type": "string",
                        "enum": [
                          "BackupSecrets"
                        ],
                        "x-ms-enum": {
                          "name": "SecretsType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "BackupSecrets",
                              "value": "BackupSecrets",
                              "description": "Backup secrets type"
                            }
                          ]
                        }
                      },
                      "secretsLocation": {
                        "type": "string",
                        "description": "secrets location"
                      }
                    },
                    "required": [
                      "secretsType",
                      "secretsLocation"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "description": "Cluster details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Identity of Cluster resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Cluster properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state. Indicates the current lifecycle status of the resource, including creation, update, deletion, connectivity, and error states.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning",
                        "NotSpecified",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "Deleted",
                        "PartiallySucceeded",
                        "InProgress",
                        "DisableInProgress",
                        "Connected",
                        "PartiallyConnected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently being provisioned."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation partially succeeded."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The resource is in the process of being disabled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the cluster agent. Indicates the current connectivity, validation, and deployment state of the agent within the cluster.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "ConnectedRecently",
                        "NotConnectedRecently",
                        "Disconnected",
                        "Error",
                        "NotSpecified",
                        "ValidationInProgress",
                        "ValidationSuccess",
                        "ValidationFailed",
                        "DeploymentInProgress",
                        "DeploymentFailed",
                        "DeploymentSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster agent has not yet registered with Azure."
                          },
                          {
                            "name": "ConnectedRecently",
                            "value": "ConnectedRecently",
                            "description": "The cluster agent has connected to Azure recently."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster agent has not connected to Azure recently."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster agent is currently disconnected from Azure."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the cluster agent's operation."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The status of the cluster agent is not specified."
                          },
                          {
                            "name": "ValidationInProgress",
                            "value": "ValidationInProgress",
                            "description": "Validation of the cluster agent is currently in progress."
                          },
                          {
                            "name": "ValidationSuccess",
                            "value": "ValidationSuccess",
                            "description": "Validation of the cluster agent completed successfully."
                          },
                          {
                            "name": "ValidationFailed",
                            "value": "ValidationFailed",
                            "description": "Validation of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentInProgress",
                            "value": "DeploymentInProgress",
                            "description": "Deployment of the cluster agent is currently in progress."
                          },
                          {
                            "name": "DeploymentFailed",
                            "value": "DeploymentFailed",
                            "description": "Deployment of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentSuccess",
                            "value": "DeploymentSuccess",
                            "description": "Deployment of the cluster agent completed successfully."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "connectivityStatus": {
                      "description": "Overall connectivity status for the cluster resource. Indicates whether the cluster is connected to Azure, partially connected, or has not recently communicated.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "Connected",
                        "NotConnectedRecently",
                        "PartiallyConnected",
                        "Disconnected",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectivityStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster has not yet registered with Azure."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The cluster is fully connected to Azure."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster has not connected to Azure recently."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some components of the cluster are connected, while others are not."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster is not connected to Azure."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The connectivity status is not specified."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "cloudId": {
                      "description": "Unique, immutable resource id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cloudManagementEndpoint": {
                      "description": "Endpoint configured for management from the Azure portal.",
                      "type": "string"
                    },
                    "aadClientId": {
                      "description": "App id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadTenantId": {
                      "description": "Tenant id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadApplicationObjectId": {
                      "description": "Object id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadServicePrincipalObjectId": {
                      "description": "Id of cluster identity service principal.",
                      "type": "string"
                    },
                    "softwareAssuranceProperties": {
                      "description": "Software Assurance properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "softwareAssuranceStatus": {
                          "description": "Status of the Software Assurance for the cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Software Assurance is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Software Assurance is disabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "softwareAssuranceIntent": {
                          "description": "Customer Intent for Software Assurance Benefit.",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Disable"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceIntent",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Customer intends to enable the Software Assurance benefit."
                              },
                              {
                                "name": "Disable",
                                "value": "Disable",
                                "description": "Customer intends to disable the Software Assurance benefit."
                              }
                            ]
                          }
                        },
                        "lastUpdated": {
                          "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "logCollectionProperties": {
                      "description": "Log Collection properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "fromDate": {
                          "description": "From DateTimeStamp from when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "toDate": {
                          "description": "To DateTimeStamp till when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "lastLogGenerated": {
                          "description": "Recent DateTimeStamp where logs are successfully generated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "logCollectionSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Log Collection Session details of the cluster.",
                            "type": "object",
                            "properties": {
                              "logStartTime": {
                                "description": "Start Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logEndTime": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "timeCollected": {
                                "description": "Duration of logs collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logSize": {
                                "description": "Size of the logs collected",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "logCollectionStatus": {
                                "description": "LogCollection status",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "InProgress",
                                  "Failed",
                                  "Succeeded"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "No log collection has been initiated."
                                    },
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress",
                                      "description": "Log collection is currently in progress."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "Log collection has failed."
                                    },
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded",
                                      "description": "Log collection completed successfully."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "correlationId": {
                                "description": "CorrelationId of the log collection",
                                "type": "string",
                                "readOnly": true
                              },
                              "logCollectionJobType": {
                                "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                                "type": "string",
                                "enum": [
                                  "OnDemand",
                                  "Scheduled"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionJobType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OnDemand",
                                      "value": "OnDemand",
                                      "description": "Log collection is triggered manually and executed immediately."
                                    },
                                    {
                                      "name": "Scheduled",
                                      "value": "Scheduled",
                                      "description": "Log collection is scheduled to run at a predefined time or interval."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "endTimeCollected": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logCollectionError": {
                                "readOnly": true,
                                "description": "Log Collection Error details of the cluster.",
                                "type": "object",
                                "properties": {
                                  "errorCode": {
                                    "description": "Error Code of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "errorMessage": {
                                    "description": "Error Message of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "remoteSupportProperties": {
                      "description": "RemoteSupport properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "accessLevel": {
                          "readOnly": true,
                          "description": "Remote Support Access Level",
                          "type": "string",
                          "enum": [
                            "Diagnostics",
                            "DiagnosticsAndRepair"
                          ],
                          "x-ms-enum": {
                            "name": "AccessLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Diagnostics",
                                "value": "Diagnostics",
                                "description": "Allows remote diagnostics operations only."
                              },
                              {
                                "name": "DiagnosticsAndRepair",
                                "value": "DiagnosticsAndRepair",
                                "description": "Allows both remote diagnostics and repair operations."
                              }
                            ]
                          }
                        },
                        "expirationTimeStamp": {
                          "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "remoteSupportType": {
                          "description": "Remote Support Type for cluster",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Revoke"
                          ],
                          "x-ms-enum": {
                            "name": "RemoteSupportType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Enable remote support for the cluster."
                              },
                              {
                                "name": "Revoke",
                                "value": "Revoke",
                                "description": "Revoke previously enabled remote support for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "remoteSupportNodeSettings": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Settings of the cluster.",
                            "type": "object",
                            "properties": {
                              "arcResourceId": {
                                "description": "Arc ResourceId of the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "state": {
                                "description": "Remote Support Access Connection State on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "createdAt": {
                                "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "updatedAt": {
                                "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "connectionStatus": {
                                "description": "Remote Support Access Connection Status on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "connectionErrorMessage": {
                                "description": "Remote Support Access Connection Error Message on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "transcriptLocation": {
                                "description": "Remote Support Transcript location on the node",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "remoteSupportSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Session Details on the Node.",
                            "type": "object",
                            "properties": {
                              "sessionStartTime": {
                                "description": "Remote Support Session StartTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "sessionEndTime": {
                                "description": "Remote Support Session EndTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "nodeName": {
                                "description": "Name of the node",
                                "type": "string",
                                "readOnly": true
                              },
                              "duration": {
                                "description": "Duration of Remote Support Enablement",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "accessLevel": {
                                "readOnly": true,
                                "description": "Remote Support Access Level",
                                "type": "string",
                                "enum": [
                                  "Diagnostics",
                                  "DiagnosticsAndRepair"
                                ],
                                "x-ms-enum": {
                                  "name": "AccessLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Diagnostics",
                                      "value": "Diagnostics",
                                      "description": "Allows remote diagnostics operations only."
                                    },
                                    {
                                      "name": "DiagnosticsAndRepair",
                                      "value": "DiagnosticsAndRepair",
                                      "description": "Allows both remote diagnostics and repair operations."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "desiredProperties": {
                      "description": "Desired properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "windowsServerSubscription": {
                          "description": "Desired state of Windows Server Subscription.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "WindowsServerSubscription",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Windows Server Subscription is disabled."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Windows Server Subscription is enabled."
                              }
                            ]
                          }
                        },
                        "diagnosticLevel": {
                          "description": "Desired level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "reportedProperties": {
                      "description": "Properties reported by cluster agent.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clusterName": {
                          "description": "Name of the on-prem cluster connected to this resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterId": {
                          "description": "Unique id generated by the on-prem cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterVersion": {
                          "description": "Version of the cluster software.",
                          "type": "string",
                          "readOnly": true
                        },
                        "nodes": {
                          "description": "List of nodes reported by the cluster.",
                          "type": "array",
                          "items": {
                            "description": "Cluster node details.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "id": {
                                "description": "Id of the node in the cluster.",
                                "type": "number",
                                "readOnly": true
                              },
                              "windowsServerSubscription": {
                                "description": "State of Windows Server Subscription.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "WindowsServerSubscription",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Windows Server Subscription is disabled."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Windows Server Subscription is enabled."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "nodeType": {
                                "description": "Type of the cluster node hardware.",
                                "type": "string",
                                "enum": [
                                  "FirstParty",
                                  "ThirdParty"
                                ],
                                "x-ms-enum": {
                                  "name": "ClusterNodeType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "FirstParty",
                                      "value": "FirstParty",
                                      "description": "Cluster nodes are provided and managed by Microsoft."
                                    },
                                    {
                                      "name": "ThirdParty",
                                      "value": "ThirdParty",
                                      "description": "Cluster nodes are provided and managed by a third-party vendor."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "ehcResourceId": {
                                "description": "Edge Hardware Center Resource Id",
                                "type": "string",
                                "readOnly": true
                              },
                              "manufacturer": {
                                "description": "Manufacturer of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "model": {
                                "description": "Model name of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osName": {
                                "description": "Operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osVersion": {
                                "description": "Version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osDisplayVersion": {
                                "description": "Display version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Immutable id of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "coreCount": {
                                "description": "Number of physical cores on the cluster node.",
                                "type": "number",
                                "readOnly": true
                              },
                              "memoryInGiB": {
                                "description": "Total available memory on the cluster node (in GiB).",
                                "type": "number",
                                "readOnly": true
                              },
                              "lastLicensingTimestamp": {
                                "description": "Most recent licensing timestamp.",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "oemActivation": {
                                "description": "OEM activation status of the node.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OemActivation",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "OEM activation is disabled for the node."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "OEM activation is enabled for the node."
                                    }
                                  ]
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "lastUpdated": {
                          "description": "Last time the cluster reported the data.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "imdsAttestation": {
                          "description": "IMDS attestation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "ImdsAttestation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "IMDS attestation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "IMDS attestation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "diagnosticLevel": {
                          "description": "Level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        },
                        "supportedCapabilities": {
                          "description": "Capabilities supported by the cluster.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "clusterType": {
                          "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
                          "type": "string",
                          "enum": [
                            "FirstParty",
                            "ThirdParty"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterNodeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "FirstParty",
                                "value": "FirstParty",
                                "description": "All nodes in the cluster are provided and managed by Microsoft."
                              },
                              {
                                "name": "ThirdParty",
                                "value": "ThirdParty",
                                "description": "All nodes in the cluster are provided and managed by a third-party vendor."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "manufacturer": {
                          "description": "The manufacturer of all the nodes of the cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "oemActivation": {
                          "description": "OEM activation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "OemActivation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "OEM activation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "OEM activation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "hardwareClass": {
                          "description": "Hardware class of the cluster.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Small",
                            "Medium",
                            "Large"
                          ],
                          "default": "Medium",
                          "x-ms-enum": {
                            "name": "HardwareClass",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Small",
                                "value": "Small",
                                "description": "The hardware class is small."
                              },
                              {
                                "name": "Medium",
                                "value": "Medium",
                                "description": "The hardware class is medium. This corresponds to the default"
                              },
                              {
                                "name": "Large",
                                "value": "Large",
                                "description": "The hardware class is large."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "isolatedVmAttestationConfiguration": {
                      "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "attestationResourceId": {
                          "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Attestation/attestationProviders",
                                "scopes": [
                                  "Tenant"
                                ]
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "relyingPartyServiceEndpoint": {
                          "description": "Region specific endpoint for relying party service.",
                          "type": "string",
                          "readOnly": true
                        },
                        "attestationServiceEndpoint": {
                          "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "trialDaysRemaining": {
                      "description": "Number of days remaining in the trial period.",
                      "type": "number",
                      "readOnly": true
                    },
                    "billingModel": {
                      "description": "Type of billing applied to the resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "registrationTimestamp": {
                      "description": "First cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastSyncTimestamp": {
                      "description": "Most recent cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastBillingTimestamp": {
                      "description": "Most recent billing meter timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "serviceEndpoint": {
                      "description": "Region specific DataPath Endpoint of the cluster.",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceProviderObjectId": {
                      "description": "Object id of RP Service Principal",
                      "type": "string",
                      "readOnly": true
                    },
                    "secretsLocations": {
                      "type": "array",
                      "description": "List of secret locations.",
                      "items": {
                        "type": "object",
                        "description": "Secrets location details",
                        "properties": {
                          "secretsType": {
                            "description": "Type of secrets to store",
                            "type": "string",
                            "enum": [
                              "BackupSecrets"
                            ],
                            "x-ms-enum": {
                              "name": "SecretsType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "BackupSecrets",
                                  "value": "BackupSecrets",
                                  "description": "Backup secrets type"
                                }
                              ]
                            }
                          },
                          "secretsLocation": {
                            "type": "string",
                            "description": "secrets location"
                          }
                        },
                        "required": [
                          "secretsType",
                          "secretsLocation"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "clusterPattern": {
                      "description": "Supported Storage Type for HCI Cluster",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RackAware"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterPattern",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard cluster."
                          },
                          {
                            "name": "RackAware",
                            "value": "RackAware",
                            "description": "RackAware cluster."
                          }
                        ]
                      }
                    },
                    "localAvailabilityZones": {
                      "type": "array",
                      "description": "Local Availability Zone information for HCI cluster",
                      "items": {
                        "type": "object",
                        "description": "Local Availability Zone information for HCI cluster",
                        "properties": {
                          "localAvailabilityZoneName": {
                            "type": "string",
                            "description": "Local Availability Zone name for HCI cluster"
                          },
                          "nodes": {
                            "type": "array",
                            "description": "Nodes belonging to a particular zone",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "localAvailabilityZoneName"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/uploadCertificate": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "operationId": "Clusters_UploadCertificate",
        "description": "Upload certificate.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "uploadCertificateRequest",
            "in": "body",
            "description": "Upload certificate request.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object",
                  "properties": {
                    "certificates": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/createClusterIdentity": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "operationId": "Clusters_CreateIdentity",
        "description": "Create cluster identity.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Cluster Identity details.",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Cluster identity properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "aadClientId": {
                      "type": "string"
                    },
                    "aadTenantId": {
                      "type": "string"
                    },
                    "aadServicePrincipalObjectId": {
                      "type": "string"
                    },
                    "aadApplicationObjectId": {
                      "type": "string"
                    }
                  },
                  "additionalProperties": false,
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/extendSoftwareAssuranceBenefit": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "operationId": "Clusters_ExtendSoftwareAssuranceBenefit",
        "description": "Extends Software Assurance Benefit to a cluster",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "softwareAssuranceChangeRequest",
            "in": "body",
            "description": "Software Assurance Change Request Payload",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object",
                  "properties": {
                    "softwareAssuranceIntent": {
                      "type": "string",
                      "description": "Customer Intent for Software Assurance Benefit. This indicates whether the customer wishes to opt in or out of the Software Assurance program, which provides licensing and support benefits.",
                      "enum": [
                        "Enable",
                        "Disable"
                      ],
                      "x-ms-enum": {
                        "name": "SoftwareAssuranceIntent",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enable",
                            "value": "Enable",
                            "description": "Customer intends to enable the Software Assurance benefit."
                          },
                          {
                            "name": "Disable",
                            "value": "Disable",
                            "description": "Customer intends to disable the Software Assurance benefit."
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Cluster details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Identity of Cluster resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Cluster properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state. Indicates the current lifecycle status of the resource, including creation, update, deletion, connectivity, and error states.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning",
                        "NotSpecified",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "Deleted",
                        "PartiallySucceeded",
                        "InProgress",
                        "DisableInProgress",
                        "Connected",
                        "PartiallyConnected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently being provisioned."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation partially succeeded."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The resource is in the process of being disabled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the cluster agent. Indicates the current connectivity, validation, and deployment state of the agent within the cluster.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "ConnectedRecently",
                        "NotConnectedRecently",
                        "Disconnected",
                        "Error",
                        "NotSpecified",
                        "ValidationInProgress",
                        "ValidationSuccess",
                        "ValidationFailed",
                        "DeploymentInProgress",
                        "DeploymentFailed",
                        "DeploymentSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster agent has not yet registered with Azure."
                          },
                          {
                            "name": "ConnectedRecently",
                            "value": "ConnectedRecently",
                            "description": "The cluster agent has connected to Azure recently."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster agent has not connected to Azure recently."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster agent is currently disconnected from Azure."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the cluster agent's operation."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The status of the cluster agent is not specified."
                          },
                          {
                            "name": "ValidationInProgress",
                            "value": "ValidationInProgress",
                            "description": "Validation of the cluster agent is currently in progress."
                          },
                          {
                            "name": "ValidationSuccess",
                            "value": "ValidationSuccess",
                            "description": "Validation of the cluster agent completed successfully."
                          },
                          {
                            "name": "ValidationFailed",
                            "value": "ValidationFailed",
                            "description": "Validation of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentInProgress",
                            "value": "DeploymentInProgress",
                            "description": "Deployment of the cluster agent is currently in progress."
                          },
                          {
                            "name": "DeploymentFailed",
                            "value": "DeploymentFailed",
                            "description": "Deployment of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentSuccess",
                            "value": "DeploymentSuccess",
                            "description": "Deployment of the cluster agent completed successfully."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "connectivityStatus": {
                      "description": "Overall connectivity status for the cluster resource. Indicates whether the cluster is connected to Azure, partially connected, or has not recently communicated.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "Connected",
                        "NotConnectedRecently",
                        "PartiallyConnected",
                        "Disconnected",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectivityStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster has not yet registered with Azure."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The cluster is fully connected to Azure."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster has not connected to Azure recently."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some components of the cluster are connected, while others are not."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster is not connected to Azure."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The connectivity status is not specified."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "cloudId": {
                      "description": "Unique, immutable resource id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cloudManagementEndpoint": {
                      "description": "Endpoint configured for management from the Azure portal.",
                      "type": "string"
                    },
                    "aadClientId": {
                      "description": "App id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadTenantId": {
                      "description": "Tenant id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadApplicationObjectId": {
                      "description": "Object id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadServicePrincipalObjectId": {
                      "description": "Id of cluster identity service principal.",
                      "type": "string"
                    },
                    "softwareAssuranceProperties": {
                      "description": "Software Assurance properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "softwareAssuranceStatus": {
                          "description": "Status of the Software Assurance for the cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Software Assurance is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Software Assurance is disabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "softwareAssuranceIntent": {
                          "description": "Customer Intent for Software Assurance Benefit.",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Disable"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceIntent",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Customer intends to enable the Software Assurance benefit."
                              },
                              {
                                "name": "Disable",
                                "value": "Disable",
                                "description": "Customer intends to disable the Software Assurance benefit."
                              }
                            ]
                          }
                        },
                        "lastUpdated": {
                          "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "logCollectionProperties": {
                      "description": "Log Collection properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "fromDate": {
                          "description": "From DateTimeStamp from when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "toDate": {
                          "description": "To DateTimeStamp till when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "lastLogGenerated": {
                          "description": "Recent DateTimeStamp where logs are successfully generated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "logCollectionSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Log Collection Session details of the cluster.",
                            "type": "object",
                            "properties": {
                              "logStartTime": {
                                "description": "Start Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logEndTime": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "timeCollected": {
                                "description": "Duration of logs collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logSize": {
                                "description": "Size of the logs collected",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "logCollectionStatus": {
                                "description": "LogCollection status",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "InProgress",
                                  "Failed",
                                  "Succeeded"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "No log collection has been initiated."
                                    },
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress",
                                      "description": "Log collection is currently in progress."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "Log collection has failed."
                                    },
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded",
                                      "description": "Log collection completed successfully."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "correlationId": {
                                "description": "CorrelationId of the log collection",
                                "type": "string",
                                "readOnly": true
                              },
                              "logCollectionJobType": {
                                "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                                "type": "string",
                                "enum": [
                                  "OnDemand",
                                  "Scheduled"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionJobType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OnDemand",
                                      "value": "OnDemand",
                                      "description": "Log collection is triggered manually and executed immediately."
                                    },
                                    {
                                      "name": "Scheduled",
                                      "value": "Scheduled",
                                      "description": "Log collection is scheduled to run at a predefined time or interval."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "endTimeCollected": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logCollectionError": {
                                "readOnly": true,
                                "description": "Log Collection Error details of the cluster.",
                                "type": "object",
                                "properties": {
                                  "errorCode": {
                                    "description": "Error Code of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "errorMessage": {
                                    "description": "Error Message of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "remoteSupportProperties": {
                      "description": "RemoteSupport properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "accessLevel": {
                          "readOnly": true,
                          "description": "Remote Support Access Level",
                          "type": "string",
                          "enum": [
                            "Diagnostics",
                            "DiagnosticsAndRepair"
                          ],
                          "x-ms-enum": {
                            "name": "AccessLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Diagnostics",
                                "value": "Diagnostics",
                                "description": "Allows remote diagnostics operations only."
                              },
                              {
                                "name": "DiagnosticsAndRepair",
                                "value": "DiagnosticsAndRepair",
                                "description": "Allows both remote diagnostics and repair operations."
                              }
                            ]
                          }
                        },
                        "expirationTimeStamp": {
                          "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "remoteSupportType": {
                          "description": "Remote Support Type for cluster",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Revoke"
                          ],
                          "x-ms-enum": {
                            "name": "RemoteSupportType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Enable remote support for the cluster."
                              },
                              {
                                "name": "Revoke",
                                "value": "Revoke",
                                "description": "Revoke previously enabled remote support for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "remoteSupportNodeSettings": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Settings of the cluster.",
                            "type": "object",
                            "properties": {
                              "arcResourceId": {
                                "description": "Arc ResourceId of the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "state": {
                                "description": "Remote Support Access Connection State on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "createdAt": {
                                "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "updatedAt": {
                                "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "connectionStatus": {
                                "description": "Remote Support Access Connection Status on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "connectionErrorMessage": {
                                "description": "Remote Support Access Connection Error Message on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "transcriptLocation": {
                                "description": "Remote Support Transcript location on the node",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "remoteSupportSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Session Details on the Node.",
                            "type": "object",
                            "properties": {
                              "sessionStartTime": {
                                "description": "Remote Support Session StartTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "sessionEndTime": {
                                "description": "Remote Support Session EndTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "nodeName": {
                                "description": "Name of the node",
                                "type": "string",
                                "readOnly": true
                              },
                              "duration": {
                                "description": "Duration of Remote Support Enablement",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "accessLevel": {
                                "readOnly": true,
                                "description": "Remote Support Access Level",
                                "type": "string",
                                "enum": [
                                  "Diagnostics",
                                  "DiagnosticsAndRepair"
                                ],
                                "x-ms-enum": {
                                  "name": "AccessLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Diagnostics",
                                      "value": "Diagnostics",
                                      "description": "Allows remote diagnostics operations only."
                                    },
                                    {
                                      "name": "DiagnosticsAndRepair",
                                      "value": "DiagnosticsAndRepair",
                                      "description": "Allows both remote diagnostics and repair operations."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "desiredProperties": {
                      "description": "Desired properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "windowsServerSubscription": {
                          "description": "Desired state of Windows Server Subscription.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "WindowsServerSubscription",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Windows Server Subscription is disabled."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Windows Server Subscription is enabled."
                              }
                            ]
                          }
                        },
                        "diagnosticLevel": {
                          "description": "Desired level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "reportedProperties": {
                      "description": "Properties reported by cluster agent.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clusterName": {
                          "description": "Name of the on-prem cluster connected to this resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterId": {
                          "description": "Unique id generated by the on-prem cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterVersion": {
                          "description": "Version of the cluster software.",
                          "type": "string",
                          "readOnly": true
                        },
                        "nodes": {
                          "description": "List of nodes reported by the cluster.",
                          "type": "array",
                          "items": {
                            "description": "Cluster node details.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "id": {
                                "description": "Id of the node in the cluster.",
                                "type": "number",
                                "readOnly": true
                              },
                              "windowsServerSubscription": {
                                "description": "State of Windows Server Subscription.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "WindowsServerSubscription",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Windows Server Subscription is disabled."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Windows Server Subscription is enabled."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "nodeType": {
                                "description": "Type of the cluster node hardware.",
                                "type": "string",
                                "enum": [
                                  "FirstParty",
                                  "ThirdParty"
                                ],
                                "x-ms-enum": {
                                  "name": "ClusterNodeType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "FirstParty",
                                      "value": "FirstParty",
                                      "description": "Cluster nodes are provided and managed by Microsoft."
                                    },
                                    {
                                      "name": "ThirdParty",
                                      "value": "ThirdParty",
                                      "description": "Cluster nodes are provided and managed by a third-party vendor."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "ehcResourceId": {
                                "description": "Edge Hardware Center Resource Id",
                                "type": "string",
                                "readOnly": true
                              },
                              "manufacturer": {
                                "description": "Manufacturer of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "model": {
                                "description": "Model name of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osName": {
                                "description": "Operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osVersion": {
                                "description": "Version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osDisplayVersion": {
                                "description": "Display version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Immutable id of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "coreCount": {
                                "description": "Number of physical cores on the cluster node.",
                                "type": "number",
                                "readOnly": true
                              },
                              "memoryInGiB": {
                                "description": "Total available memory on the cluster node (in GiB).",
                                "type": "number",
                                "readOnly": true
                              },
                              "lastLicensingTimestamp": {
                                "description": "Most recent licensing timestamp.",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "oemActivation": {
                                "description": "OEM activation status of the node.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OemActivation",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "OEM activation is disabled for the node."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "OEM activation is enabled for the node."
                                    }
                                  ]
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "lastUpdated": {
                          "description": "Last time the cluster reported the data.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "imdsAttestation": {
                          "description": "IMDS attestation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "ImdsAttestation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "IMDS attestation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "IMDS attestation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "diagnosticLevel": {
                          "description": "Level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        },
                        "supportedCapabilities": {
                          "description": "Capabilities supported by the cluster.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "clusterType": {
                          "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
                          "type": "string",
                          "enum": [
                            "FirstParty",
                            "ThirdParty"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterNodeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "FirstParty",
                                "value": "FirstParty",
                                "description": "All nodes in the cluster are provided and managed by Microsoft."
                              },
                              {
                                "name": "ThirdParty",
                                "value": "ThirdParty",
                                "description": "All nodes in the cluster are provided and managed by a third-party vendor."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "manufacturer": {
                          "description": "The manufacturer of all the nodes of the cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "oemActivation": {
                          "description": "OEM activation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "OemActivation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "OEM activation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "OEM activation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "hardwareClass": {
                          "description": "Hardware class of the cluster.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Small",
                            "Medium",
                            "Large"
                          ],
                          "default": "Medium",
                          "x-ms-enum": {
                            "name": "HardwareClass",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Small",
                                "value": "Small",
                                "description": "The hardware class is small."
                              },
                              {
                                "name": "Medium",
                                "value": "Medium",
                                "description": "The hardware class is medium. This corresponds to the default"
                              },
                              {
                                "name": "Large",
                                "value": "Large",
                                "description": "The hardware class is large."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "isolatedVmAttestationConfiguration": {
                      "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "attestationResourceId": {
                          "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Attestation/attestationProviders",
                                "scopes": [
                                  "Tenant"
                                ]
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "relyingPartyServiceEndpoint": {
                          "description": "Region specific endpoint for relying party service.",
                          "type": "string",
                          "readOnly": true
                        },
                        "attestationServiceEndpoint": {
                          "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "trialDaysRemaining": {
                      "description": "Number of days remaining in the trial period.",
                      "type": "number",
                      "readOnly": true
                    },
                    "billingModel": {
                      "description": "Type of billing applied to the resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "registrationTimestamp": {
                      "description": "First cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastSyncTimestamp": {
                      "description": "Most recent cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastBillingTimestamp": {
                      "description": "Most recent billing meter timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "serviceEndpoint": {
                      "description": "Region specific DataPath Endpoint of the cluster.",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceProviderObjectId": {
                      "description": "Object id of RP Service Principal",
                      "type": "string",
                      "readOnly": true
                    },
                    "secretsLocations": {
                      "type": "array",
                      "description": "List of secret locations.",
                      "items": {
                        "type": "object",
                        "description": "Secrets location details",
                        "properties": {
                          "secretsType": {
                            "description": "Type of secrets to store",
                            "type": "string",
                            "enum": [
                              "BackupSecrets"
                            ],
                            "x-ms-enum": {
                              "name": "SecretsType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "BackupSecrets",
                                  "value": "BackupSecrets",
                                  "description": "Backup secrets type"
                                }
                              ]
                            }
                          },
                          "secretsLocation": {
                            "type": "string",
                            "description": "secrets location"
                          }
                        },
                        "required": [
                          "secretsType",
                          "secretsLocation"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "clusterPattern": {
                      "description": "Supported Storage Type for HCI Cluster",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RackAware"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterPattern",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard cluster."
                          },
                          {
                            "name": "RackAware",
                            "value": "RackAware",
                            "description": "RackAware cluster."
                          }
                        ]
                      }
                    },
                    "localAvailabilityZones": {
                      "type": "array",
                      "description": "Local Availability Zone information for HCI cluster",
                      "items": {
                        "type": "object",
                        "description": "Local Availability Zone information for HCI cluster",
                        "properties": {
                          "localAvailabilityZoneName": {
                            "type": "string",
                            "description": "Local Availability Zone name for HCI cluster"
                          },
                          "nodes": {
                            "type": "array",
                            "description": "Nodes belonging to a particular zone",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "localAvailabilityZoneName"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/triggerLogCollection": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "operationId": "Clusters_TriggerLogCollection",
        "description": "Trigger Log Collection on a cluster",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "logCollectionRequest",
            "in": "body",
            "description": "Trigger Log Collection Request Payload",
            "required": true,
            "schema": {
              "description": "Log Collection Request",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Properties for Log Collection Request",
                  "type": "object",
                  "properties": {
                    "fromDate": {
                      "description": "From DateTimeStamp from when logs need to be connected",
                      "type": "string",
                      "format": "date-time"
                    },
                    "toDate": {
                      "description": "To DateTimeStamp till when logs need to be connected",
                      "type": "string",
                      "format": "date-time"
                    }
                  },
                  "required": [
                    "fromDate",
                    "toDate"
                  ],
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Cluster details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Identity of Cluster resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Cluster properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state. Indicates the current lifecycle status of the resource, including creation, update, deletion, connectivity, and error states.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning",
                        "NotSpecified",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "Deleted",
                        "PartiallySucceeded",
                        "InProgress",
                        "DisableInProgress",
                        "Connected",
                        "PartiallyConnected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently being provisioned."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation partially succeeded."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The resource is in the process of being disabled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the cluster agent. Indicates the current connectivity, validation, and deployment state of the agent within the cluster.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "ConnectedRecently",
                        "NotConnectedRecently",
                        "Disconnected",
                        "Error",
                        "NotSpecified",
                        "ValidationInProgress",
                        "ValidationSuccess",
                        "ValidationFailed",
                        "DeploymentInProgress",
                        "DeploymentFailed",
                        "DeploymentSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster agent has not yet registered with Azure."
                          },
                          {
                            "name": "ConnectedRecently",
                            "value": "ConnectedRecently",
                            "description": "The cluster agent has connected to Azure recently."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster agent has not connected to Azure recently."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster agent is currently disconnected from Azure."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the cluster agent's operation."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The status of the cluster agent is not specified."
                          },
                          {
                            "name": "ValidationInProgress",
                            "value": "ValidationInProgress",
                            "description": "Validation of the cluster agent is currently in progress."
                          },
                          {
                            "name": "ValidationSuccess",
                            "value": "ValidationSuccess",
                            "description": "Validation of the cluster agent completed successfully."
                          },
                          {
                            "name": "ValidationFailed",
                            "value": "ValidationFailed",
                            "description": "Validation of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentInProgress",
                            "value": "DeploymentInProgress",
                            "description": "Deployment of the cluster agent is currently in progress."
                          },
                          {
                            "name": "DeploymentFailed",
                            "value": "DeploymentFailed",
                            "description": "Deployment of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentSuccess",
                            "value": "DeploymentSuccess",
                            "description": "Deployment of the cluster agent completed successfully."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "connectivityStatus": {
                      "description": "Overall connectivity status for the cluster resource. Indicates whether the cluster is connected to Azure, partially connected, or has not recently communicated.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "Connected",
                        "NotConnectedRecently",
                        "PartiallyConnected",
                        "Disconnected",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectivityStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster has not yet registered with Azure."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The cluster is fully connected to Azure."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster has not connected to Azure recently."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some components of the cluster are connected, while others are not."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster is not connected to Azure."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The connectivity status is not specified."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "cloudId": {
                      "description": "Unique, immutable resource id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cloudManagementEndpoint": {
                      "description": "Endpoint configured for management from the Azure portal.",
                      "type": "string"
                    },
                    "aadClientId": {
                      "description": "App id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadTenantId": {
                      "description": "Tenant id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadApplicationObjectId": {
                      "description": "Object id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadServicePrincipalObjectId": {
                      "description": "Id of cluster identity service principal.",
                      "type": "string"
                    },
                    "softwareAssuranceProperties": {
                      "description": "Software Assurance properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "softwareAssuranceStatus": {
                          "description": "Status of the Software Assurance for the cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Software Assurance is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Software Assurance is disabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "softwareAssuranceIntent": {
                          "description": "Customer Intent for Software Assurance Benefit.",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Disable"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceIntent",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Customer intends to enable the Software Assurance benefit."
                              },
                              {
                                "name": "Disable",
                                "value": "Disable",
                                "description": "Customer intends to disable the Software Assurance benefit."
                              }
                            ]
                          }
                        },
                        "lastUpdated": {
                          "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "logCollectionProperties": {
                      "description": "Log Collection properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "fromDate": {
                          "description": "From DateTimeStamp from when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "toDate": {
                          "description": "To DateTimeStamp till when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "lastLogGenerated": {
                          "description": "Recent DateTimeStamp where logs are successfully generated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "logCollectionSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Log Collection Session details of the cluster.",
                            "type": "object",
                            "properties": {
                              "logStartTime": {
                                "description": "Start Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logEndTime": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "timeCollected": {
                                "description": "Duration of logs collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logSize": {
                                "description": "Size of the logs collected",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "logCollectionStatus": {
                                "description": "LogCollection status",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "InProgress",
                                  "Failed",
                                  "Succeeded"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "No log collection has been initiated."
                                    },
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress",
                                      "description": "Log collection is currently in progress."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "Log collection has failed."
                                    },
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded",
                                      "description": "Log collection completed successfully."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "correlationId": {
                                "description": "CorrelationId of the log collection",
                                "type": "string",
                                "readOnly": true
                              },
                              "logCollectionJobType": {
                                "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                                "type": "string",
                                "enum": [
                                  "OnDemand",
                                  "Scheduled"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionJobType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OnDemand",
                                      "value": "OnDemand",
                                      "description": "Log collection is triggered manually and executed immediately."
                                    },
                                    {
                                      "name": "Scheduled",
                                      "value": "Scheduled",
                                      "description": "Log collection is scheduled to run at a predefined time or interval."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "endTimeCollected": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logCollectionError": {
                                "readOnly": true,
                                "description": "Log Collection Error details of the cluster.",
                                "type": "object",
                                "properties": {
                                  "errorCode": {
                                    "description": "Error Code of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "errorMessage": {
                                    "description": "Error Message of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "remoteSupportProperties": {
                      "description": "RemoteSupport properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "accessLevel": {
                          "readOnly": true,
                          "description": "Remote Support Access Level",
                          "type": "string",
                          "enum": [
                            "Diagnostics",
                            "DiagnosticsAndRepair"
                          ],
                          "x-ms-enum": {
                            "name": "AccessLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Diagnostics",
                                "value": "Diagnostics",
                                "description": "Allows remote diagnostics operations only."
                              },
                              {
                                "name": "DiagnosticsAndRepair",
                                "value": "DiagnosticsAndRepair",
                                "description": "Allows both remote diagnostics and repair operations."
                              }
                            ]
                          }
                        },
                        "expirationTimeStamp": {
                          "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "remoteSupportType": {
                          "description": "Remote Support Type for cluster",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Revoke"
                          ],
                          "x-ms-enum": {
                            "name": "RemoteSupportType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Enable remote support for the cluster."
                              },
                              {
                                "name": "Revoke",
                                "value": "Revoke",
                                "description": "Revoke previously enabled remote support for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "remoteSupportNodeSettings": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Settings of the cluster.",
                            "type": "object",
                            "properties": {
                              "arcResourceId": {
                                "description": "Arc ResourceId of the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "state": {
                                "description": "Remote Support Access Connection State on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "createdAt": {
                                "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "updatedAt": {
                                "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "connectionStatus": {
                                "description": "Remote Support Access Connection Status on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "connectionErrorMessage": {
                                "description": "Remote Support Access Connection Error Message on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "transcriptLocation": {
                                "description": "Remote Support Transcript location on the node",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "remoteSupportSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Session Details on the Node.",
                            "type": "object",
                            "properties": {
                              "sessionStartTime": {
                                "description": "Remote Support Session StartTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "sessionEndTime": {
                                "description": "Remote Support Session EndTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "nodeName": {
                                "description": "Name of the node",
                                "type": "string",
                                "readOnly": true
                              },
                              "duration": {
                                "description": "Duration of Remote Support Enablement",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "accessLevel": {
                                "readOnly": true,
                                "description": "Remote Support Access Level",
                                "type": "string",
                                "enum": [
                                  "Diagnostics",
                                  "DiagnosticsAndRepair"
                                ],
                                "x-ms-enum": {
                                  "name": "AccessLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Diagnostics",
                                      "value": "Diagnostics",
                                      "description": "Allows remote diagnostics operations only."
                                    },
                                    {
                                      "name": "DiagnosticsAndRepair",
                                      "value": "DiagnosticsAndRepair",
                                      "description": "Allows both remote diagnostics and repair operations."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "desiredProperties": {
                      "description": "Desired properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "windowsServerSubscription": {
                          "description": "Desired state of Windows Server Subscription.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "WindowsServerSubscription",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Windows Server Subscription is disabled."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Windows Server Subscription is enabled."
                              }
                            ]
                          }
                        },
                        "diagnosticLevel": {
                          "description": "Desired level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "reportedProperties": {
                      "description": "Properties reported by cluster agent.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clusterName": {
                          "description": "Name of the on-prem cluster connected to this resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterId": {
                          "description": "Unique id generated by the on-prem cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterVersion": {
                          "description": "Version of the cluster software.",
                          "type": "string",
                          "readOnly": true
                        },
                        "nodes": {
                          "description": "List of nodes reported by the cluster.",
                          "type": "array",
                          "items": {
                            "description": "Cluster node details.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "id": {
                                "description": "Id of the node in the cluster.",
                                "type": "number",
                                "readOnly": true
                              },
                              "windowsServerSubscription": {
                                "description": "State of Windows Server Subscription.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "WindowsServerSubscription",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Windows Server Subscription is disabled."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Windows Server Subscription is enabled."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "nodeType": {
                                "description": "Type of the cluster node hardware.",
                                "type": "string",
                                "enum": [
                                  "FirstParty",
                                  "ThirdParty"
                                ],
                                "x-ms-enum": {
                                  "name": "ClusterNodeType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "FirstParty",
                                      "value": "FirstParty",
                                      "description": "Cluster nodes are provided and managed by Microsoft."
                                    },
                                    {
                                      "name": "ThirdParty",
                                      "value": "ThirdParty",
                                      "description": "Cluster nodes are provided and managed by a third-party vendor."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "ehcResourceId": {
                                "description": "Edge Hardware Center Resource Id",
                                "type": "string",
                                "readOnly": true
                              },
                              "manufacturer": {
                                "description": "Manufacturer of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "model": {
                                "description": "Model name of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osName": {
                                "description": "Operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osVersion": {
                                "description": "Version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osDisplayVersion": {
                                "description": "Display version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Immutable id of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "coreCount": {
                                "description": "Number of physical cores on the cluster node.",
                                "type": "number",
                                "readOnly": true
                              },
                              "memoryInGiB": {
                                "description": "Total available memory on the cluster node (in GiB).",
                                "type": "number",
                                "readOnly": true
                              },
                              "lastLicensingTimestamp": {
                                "description": "Most recent licensing timestamp.",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "oemActivation": {
                                "description": "OEM activation status of the node.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OemActivation",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "OEM activation is disabled for the node."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "OEM activation is enabled for the node."
                                    }
                                  ]
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "lastUpdated": {
                          "description": "Last time the cluster reported the data.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "imdsAttestation": {
                          "description": "IMDS attestation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "ImdsAttestation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "IMDS attestation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "IMDS attestation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "diagnosticLevel": {
                          "description": "Level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        },
                        "supportedCapabilities": {
                          "description": "Capabilities supported by the cluster.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "clusterType": {
                          "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
                          "type": "string",
                          "enum": [
                            "FirstParty",
                            "ThirdParty"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterNodeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "FirstParty",
                                "value": "FirstParty",
                                "description": "All nodes in the cluster are provided and managed by Microsoft."
                              },
                              {
                                "name": "ThirdParty",
                                "value": "ThirdParty",
                                "description": "All nodes in the cluster are provided and managed by a third-party vendor."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "manufacturer": {
                          "description": "The manufacturer of all the nodes of the cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "oemActivation": {
                          "description": "OEM activation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "OemActivation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "OEM activation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "OEM activation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "hardwareClass": {
                          "description": "Hardware class of the cluster.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Small",
                            "Medium",
                            "Large"
                          ],
                          "default": "Medium",
                          "x-ms-enum": {
                            "name": "HardwareClass",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Small",
                                "value": "Small",
                                "description": "The hardware class is small."
                              },
                              {
                                "name": "Medium",
                                "value": "Medium",
                                "description": "The hardware class is medium. This corresponds to the default"
                              },
                              {
                                "name": "Large",
                                "value": "Large",
                                "description": "The hardware class is large."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "isolatedVmAttestationConfiguration": {
                      "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "attestationResourceId": {
                          "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Attestation/attestationProviders",
                                "scopes": [
                                  "Tenant"
                                ]
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "relyingPartyServiceEndpoint": {
                          "description": "Region specific endpoint for relying party service.",
                          "type": "string",
                          "readOnly": true
                        },
                        "attestationServiceEndpoint": {
                          "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "trialDaysRemaining": {
                      "description": "Number of days remaining in the trial period.",
                      "type": "number",
                      "readOnly": true
                    },
                    "billingModel": {
                      "description": "Type of billing applied to the resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "registrationTimestamp": {
                      "description": "First cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastSyncTimestamp": {
                      "description": "Most recent cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastBillingTimestamp": {
                      "description": "Most recent billing meter timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "serviceEndpoint": {
                      "description": "Region specific DataPath Endpoint of the cluster.",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceProviderObjectId": {
                      "description": "Object id of RP Service Principal",
                      "type": "string",
                      "readOnly": true
                    },
                    "secretsLocations": {
                      "type": "array",
                      "description": "List of secret locations.",
                      "items": {
                        "type": "object",
                        "description": "Secrets location details",
                        "properties": {
                          "secretsType": {
                            "description": "Type of secrets to store",
                            "type": "string",
                            "enum": [
                              "BackupSecrets"
                            ],
                            "x-ms-enum": {
                              "name": "SecretsType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "BackupSecrets",
                                  "value": "BackupSecrets",
                                  "description": "Backup secrets type"
                                }
                              ]
                            }
                          },
                          "secretsLocation": {
                            "type": "string",
                            "description": "secrets location"
                          }
                        },
                        "required": [
                          "secretsType",
                          "secretsLocation"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "clusterPattern": {
                      "description": "Supported Storage Type for HCI Cluster",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RackAware"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterPattern",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard cluster."
                          },
                          {
                            "name": "RackAware",
                            "value": "RackAware",
                            "description": "RackAware cluster."
                          }
                        ]
                      }
                    },
                    "localAvailabilityZones": {
                      "type": "array",
                      "description": "Local Availability Zone information for HCI cluster",
                      "items": {
                        "type": "object",
                        "description": "Local Availability Zone information for HCI cluster",
                        "properties": {
                          "localAvailabilityZoneName": {
                            "type": "string",
                            "description": "Local Availability Zone name for HCI cluster"
                          },
                          "nodes": {
                            "type": "array",
                            "description": "Nodes belonging to a particular zone",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "localAvailabilityZoneName"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/configureRemoteSupport": {
      "post": {
        "tags": [
          "Cluster"
        ],
        "operationId": "Clusters_ConfigureRemoteSupport",
        "description": "Configure RemoteSupport on a cluster",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "remoteSupportRequest",
            "in": "body",
            "description": "Configure Remote Support Request Payload",
            "required": true,
            "schema": {
              "description": "Remote Support Request",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Properties for Remote Support Request",
                  "type": "object",
                  "properties": {
                    "accessLevel": {
                      "readOnly": true,
                      "description": "Remote Support Access Level",
                      "type": "string",
                      "enum": [
                        "Diagnostics",
                        "DiagnosticsAndRepair"
                      ],
                      "x-ms-enum": {
                        "name": "AccessLevel",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Diagnostics",
                            "value": "Diagnostics",
                            "description": "Allows remote diagnostics operations only."
                          },
                          {
                            "name": "DiagnosticsAndRepair",
                            "value": "DiagnosticsAndRepair",
                            "description": "Allows both remote diagnostics and repair operations."
                          }
                        ]
                      }
                    },
                    "expirationTimeStamp": {
                      "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
                      "type": "string",
                      "format": "date-time"
                    },
                    "remoteSupportType": {
                      "description": "Remote Support Type for cluster",
                      "type": "string",
                      "enum": [
                        "Enable",
                        "Revoke"
                      ],
                      "x-ms-enum": {
                        "name": "RemoteSupportType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Enable",
                            "value": "Enable",
                            "description": "Enable remote support for the cluster."
                          },
                          {
                            "name": "Revoke",
                            "value": "Revoke",
                            "description": "Revoke previously enabled remote support for the cluster."
                          }
                        ]
                      }
                    }
                  },
                  "additionalProperties": false
                }
              },
              "additionalProperties": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Cluster details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "tags": {
                  "type": "object",
                  "description": "Resource tags.",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "x-ms-mutability": [
                    "read",
                    "create",
                    "update"
                  ]
                },
                "location": {
                  "type": "string",
                  "description": "The geo-location where the resource lives",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ]
                },
                "identity": {
                  "description": "Identity of Cluster resource",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "tenantId": {
                      "type": "string",
                      "format": "uuid",
                      "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                      "readOnly": true
                    },
                    "type": {
                      "type": "string",
                      "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                      "enum": [
                        "None",
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned, UserAssigned"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedServiceIdentityType",
                        "modelAsString": true
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "title": "User-Assigned Identities",
                      "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                      "additionalProperties": {
                        "type": "object",
                        "description": "User assigned identity properties",
                        "properties": {
                          "principalId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The principal ID of the assigned identity.",
                            "readOnly": true
                          },
                          "clientId": {
                            "type": "string",
                            "format": "uuid",
                            "description": "The client ID of the assigned identity.",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "type"
                  ]
                },
                "properties": {
                  "description": "Cluster properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state. Indicates the current lifecycle status of the resource, including creation, update, deletion, connectivity, and error states.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning",
                        "NotSpecified",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "Deleted",
                        "PartiallySucceeded",
                        "InProgress",
                        "DisableInProgress",
                        "Connected",
                        "PartiallyConnected",
                        "Disconnected"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently being provisioned."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation partially succeeded."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress."
                          },
                          {
                            "name": "DisableInProgress",
                            "value": "DisableInProgress",
                            "description": "The resource is in the process of being disabled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the cluster agent. Indicates the current connectivity, validation, and deployment state of the agent within the cluster.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "ConnectedRecently",
                        "NotConnectedRecently",
                        "Disconnected",
                        "Error",
                        "NotSpecified",
                        "ValidationInProgress",
                        "ValidationSuccess",
                        "ValidationFailed",
                        "DeploymentInProgress",
                        "DeploymentFailed",
                        "DeploymentSuccess"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster agent has not yet registered with Azure."
                          },
                          {
                            "name": "ConnectedRecently",
                            "value": "ConnectedRecently",
                            "description": "The cluster agent has connected to Azure recently."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster agent has not connected to Azure recently."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster agent is currently disconnected from Azure."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the cluster agent's operation."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The status of the cluster agent is not specified."
                          },
                          {
                            "name": "ValidationInProgress",
                            "value": "ValidationInProgress",
                            "description": "Validation of the cluster agent is currently in progress."
                          },
                          {
                            "name": "ValidationSuccess",
                            "value": "ValidationSuccess",
                            "description": "Validation of the cluster agent completed successfully."
                          },
                          {
                            "name": "ValidationFailed",
                            "value": "ValidationFailed",
                            "description": "Validation of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentInProgress",
                            "value": "DeploymentInProgress",
                            "description": "Deployment of the cluster agent is currently in progress."
                          },
                          {
                            "name": "DeploymentFailed",
                            "value": "DeploymentFailed",
                            "description": "Deployment of the cluster agent failed."
                          },
                          {
                            "name": "DeploymentSuccess",
                            "value": "DeploymentSuccess",
                            "description": "Deployment of the cluster agent completed successfully."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "connectivityStatus": {
                      "description": "Overall connectivity status for the cluster resource. Indicates whether the cluster is connected to Azure, partially connected, or has not recently communicated.",
                      "type": "string",
                      "enum": [
                        "NotYetRegistered",
                        "Connected",
                        "NotConnectedRecently",
                        "PartiallyConnected",
                        "Disconnected",
                        "NotSpecified"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectivityStatus",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotYetRegistered",
                            "value": "NotYetRegistered",
                            "description": "The cluster has not yet registered with Azure."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The cluster is fully connected to Azure."
                          },
                          {
                            "name": "NotConnectedRecently",
                            "value": "NotConnectedRecently",
                            "description": "The cluster has not connected to Azure recently."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some components of the cluster are connected, while others are not."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The cluster is not connected to Azure."
                          },
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The connectivity status is not specified."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "cloudId": {
                      "description": "Unique, immutable resource id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "cloudManagementEndpoint": {
                      "description": "Endpoint configured for management from the Azure portal.",
                      "type": "string"
                    },
                    "aadClientId": {
                      "description": "App id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadTenantId": {
                      "description": "Tenant id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadApplicationObjectId": {
                      "description": "Object id of cluster AAD identity.",
                      "type": "string"
                    },
                    "aadServicePrincipalObjectId": {
                      "description": "Id of cluster identity service principal.",
                      "type": "string"
                    },
                    "softwareAssuranceProperties": {
                      "description": "Software Assurance properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "softwareAssuranceStatus": {
                          "description": "Status of the Software Assurance for the cluster.",
                          "type": "string",
                          "enum": [
                            "Enabled",
                            "Disabled"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Software Assurance is enabled for the cluster."
                              },
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Software Assurance is disabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "softwareAssuranceIntent": {
                          "description": "Customer Intent for Software Assurance Benefit.",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Disable"
                          ],
                          "x-ms-enum": {
                            "name": "SoftwareAssuranceIntent",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Customer intends to enable the Software Assurance benefit."
                              },
                              {
                                "name": "Disable",
                                "value": "Disable",
                                "description": "Customer intends to disable the Software Assurance benefit."
                              }
                            ]
                          }
                        },
                        "lastUpdated": {
                          "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "logCollectionProperties": {
                      "description": "Log Collection properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "fromDate": {
                          "description": "From DateTimeStamp from when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "toDate": {
                          "description": "To DateTimeStamp till when logs need to be connected",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "lastLogGenerated": {
                          "description": "Recent DateTimeStamp where logs are successfully generated",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "logCollectionSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Log Collection Session details of the cluster.",
                            "type": "object",
                            "properties": {
                              "logStartTime": {
                                "description": "Start Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logEndTime": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "timeCollected": {
                                "description": "Duration of logs collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logSize": {
                                "description": "Size of the logs collected",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "logCollectionStatus": {
                                "description": "LogCollection status",
                                "type": "string",
                                "enum": [
                                  "None",
                                  "InProgress",
                                  "Failed",
                                  "Succeeded"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "None",
                                      "value": "None",
                                      "description": "No log collection has been initiated."
                                    },
                                    {
                                      "name": "InProgress",
                                      "value": "InProgress",
                                      "description": "Log collection is currently in progress."
                                    },
                                    {
                                      "name": "Failed",
                                      "value": "Failed",
                                      "description": "Log collection has failed."
                                    },
                                    {
                                      "name": "Succeeded",
                                      "value": "Succeeded",
                                      "description": "Log collection completed successfully."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "correlationId": {
                                "description": "CorrelationId of the log collection",
                                "type": "string",
                                "readOnly": true
                              },
                              "logCollectionJobType": {
                                "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                                "type": "string",
                                "enum": [
                                  "OnDemand",
                                  "Scheduled"
                                ],
                                "x-ms-enum": {
                                  "name": "LogCollectionJobType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "OnDemand",
                                      "value": "OnDemand",
                                      "description": "Log collection is triggered manually and executed immediately."
                                    },
                                    {
                                      "name": "Scheduled",
                                      "value": "Scheduled",
                                      "description": "Log collection is scheduled to run at a predefined time or interval."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "endTimeCollected": {
                                "description": "End Time of the logs when it was collected",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "logCollectionError": {
                                "readOnly": true,
                                "description": "Log Collection Error details of the cluster.",
                                "type": "object",
                                "properties": {
                                  "errorCode": {
                                    "description": "Error Code of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  },
                                  "errorMessage": {
                                    "description": "Error Message of the log collection",
                                    "type": "string",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "remoteSupportProperties": {
                      "description": "RemoteSupport properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "accessLevel": {
                          "readOnly": true,
                          "description": "Remote Support Access Level",
                          "type": "string",
                          "enum": [
                            "Diagnostics",
                            "DiagnosticsAndRepair"
                          ],
                          "x-ms-enum": {
                            "name": "AccessLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Diagnostics",
                                "value": "Diagnostics",
                                "description": "Allows remote diagnostics operations only."
                              },
                              {
                                "name": "DiagnosticsAndRepair",
                                "value": "DiagnosticsAndRepair",
                                "description": "Allows both remote diagnostics and repair operations."
                              }
                            ]
                          }
                        },
                        "expirationTimeStamp": {
                          "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "remoteSupportType": {
                          "description": "Remote Support Type for cluster",
                          "type": "string",
                          "enum": [
                            "Enable",
                            "Revoke"
                          ],
                          "x-ms-enum": {
                            "name": "RemoteSupportType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Enable",
                                "value": "Enable",
                                "description": "Enable remote support for the cluster."
                              },
                              {
                                "name": "Revoke",
                                "value": "Revoke",
                                "description": "Revoke previously enabled remote support for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "remoteSupportNodeSettings": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Settings of the cluster.",
                            "type": "object",
                            "properties": {
                              "arcResourceId": {
                                "description": "Arc ResourceId of the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "state": {
                                "description": "Remote Support Access Connection State on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "createdAt": {
                                "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "updatedAt": {
                                "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "connectionStatus": {
                                "description": "Remote Support Access Connection Status on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "connectionErrorMessage": {
                                "description": "Remote Support Access Connection Error Message on the Node",
                                "type": "string",
                                "readOnly": true
                              },
                              "transcriptLocation": {
                                "description": "Remote Support Transcript location on the node",
                                "type": "string",
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "remoteSupportSessionDetails": {
                          "type": "array",
                          "items": {
                            "description": "Remote Support Node Session Details on the Node.",
                            "type": "object",
                            "properties": {
                              "sessionStartTime": {
                                "description": "Remote Support Session StartTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "sessionEndTime": {
                                "description": "Remote Support Session EndTime on the Node",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "nodeName": {
                                "description": "Name of the node",
                                "type": "string",
                                "readOnly": true
                              },
                              "duration": {
                                "description": "Duration of Remote Support Enablement",
                                "type": "integer",
                                "format": "int64",
                                "readOnly": true
                              },
                              "accessLevel": {
                                "readOnly": true,
                                "description": "Remote Support Access Level",
                                "type": "string",
                                "enum": [
                                  "Diagnostics",
                                  "DiagnosticsAndRepair"
                                ],
                                "x-ms-enum": {
                                  "name": "AccessLevel",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Diagnostics",
                                      "value": "Diagnostics",
                                      "description": "Allows remote diagnostics operations only."
                                    },
                                    {
                                      "name": "DiagnosticsAndRepair",
                                      "value": "DiagnosticsAndRepair",
                                      "description": "Allows both remote diagnostics and repair operations."
                                    }
                                  ]
                                }
                              }
                            }
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "desiredProperties": {
                      "description": "Desired properties of the cluster.",
                      "type": "object",
                      "properties": {
                        "windowsServerSubscription": {
                          "description": "Desired state of Windows Server Subscription.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "WindowsServerSubscription",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "Windows Server Subscription is disabled."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "Windows Server Subscription is enabled."
                              }
                            ]
                          }
                        },
                        "diagnosticLevel": {
                          "description": "Desired level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "reportedProperties": {
                      "description": "Properties reported by cluster agent.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "clusterName": {
                          "description": "Name of the on-prem cluster connected to this resource.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterId": {
                          "description": "Unique id generated by the on-prem cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "clusterVersion": {
                          "description": "Version of the cluster software.",
                          "type": "string",
                          "readOnly": true
                        },
                        "nodes": {
                          "description": "List of nodes reported by the cluster.",
                          "type": "array",
                          "items": {
                            "description": "Cluster node details.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "description": "Name of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "id": {
                                "description": "Id of the node in the cluster.",
                                "type": "number",
                                "readOnly": true
                              },
                              "windowsServerSubscription": {
                                "description": "State of Windows Server Subscription.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "WindowsServerSubscription",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "Windows Server Subscription is disabled."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "Windows Server Subscription is enabled."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "nodeType": {
                                "description": "Type of the cluster node hardware.",
                                "type": "string",
                                "enum": [
                                  "FirstParty",
                                  "ThirdParty"
                                ],
                                "x-ms-enum": {
                                  "name": "ClusterNodeType",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "FirstParty",
                                      "value": "FirstParty",
                                      "description": "Cluster nodes are provided and managed by Microsoft."
                                    },
                                    {
                                      "name": "ThirdParty",
                                      "value": "ThirdParty",
                                      "description": "Cluster nodes are provided and managed by a third-party vendor."
                                    }
                                  ]
                                },
                                "readOnly": true
                              },
                              "ehcResourceId": {
                                "description": "Edge Hardware Center Resource Id",
                                "type": "string",
                                "readOnly": true
                              },
                              "manufacturer": {
                                "description": "Manufacturer of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "model": {
                                "description": "Model name of the cluster node hardware.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osName": {
                                "description": "Operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osVersion": {
                                "description": "Version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "osDisplayVersion": {
                                "description": "Display version of the operating system running on the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "serialNumber": {
                                "description": "Immutable id of the cluster node.",
                                "type": "string",
                                "readOnly": true
                              },
                              "coreCount": {
                                "description": "Number of physical cores on the cluster node.",
                                "type": "number",
                                "readOnly": true
                              },
                              "memoryInGiB": {
                                "description": "Total available memory on the cluster node (in GiB).",
                                "type": "number",
                                "readOnly": true
                              },
                              "lastLicensingTimestamp": {
                                "description": "Most recent licensing timestamp.",
                                "type": "string",
                                "format": "date-time",
                                "readOnly": true
                              },
                              "oemActivation": {
                                "description": "OEM activation status of the node.",
                                "type": "string",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "x-ms-enum": {
                                  "name": "OemActivation",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Disabled",
                                      "value": "Disabled",
                                      "description": "OEM activation is disabled for the node."
                                    },
                                    {
                                      "name": "Enabled",
                                      "value": "Enabled",
                                      "description": "OEM activation is enabled for the node."
                                    }
                                  ]
                                },
                                "readOnly": true
                              }
                            }
                          },
                          "readOnly": true
                        },
                        "lastUpdated": {
                          "description": "Last time the cluster reported the data.",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        },
                        "imdsAttestation": {
                          "description": "IMDS attestation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "ImdsAttestation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "IMDS attestation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "IMDS attestation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "diagnosticLevel": {
                          "description": "Level of diagnostic data emitted by the cluster.",
                          "type": "string",
                          "enum": [
                            "Off",
                            "Basic",
                            "Enhanced"
                          ],
                          "x-ms-enum": {
                            "name": "DiagnosticLevel",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Off",
                                "value": "Off",
                                "description": "No diagnostic data will be emitted."
                              },
                              {
                                "name": "Basic",
                                "value": "Basic",
                                "description": "Basic diagnostic data will be emitted, including essential health metrics."
                              },
                              {
                                "name": "Enhanced",
                                "value": "Enhanced",
                                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                              }
                            ]
                          }
                        },
                        "supportedCapabilities": {
                          "description": "Capabilities supported by the cluster.",
                          "type": "array",
                          "readOnly": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "clusterType": {
                          "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
                          "type": "string",
                          "enum": [
                            "FirstParty",
                            "ThirdParty"
                          ],
                          "x-ms-enum": {
                            "name": "ClusterNodeType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "FirstParty",
                                "value": "FirstParty",
                                "description": "All nodes in the cluster are provided and managed by Microsoft."
                              },
                              {
                                "name": "ThirdParty",
                                "value": "ThirdParty",
                                "description": "All nodes in the cluster are provided and managed by a third-party vendor."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "manufacturer": {
                          "description": "The manufacturer of all the nodes of the cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "oemActivation": {
                          "description": "OEM activation status of the cluster.",
                          "type": "string",
                          "enum": [
                            "Disabled",
                            "Enabled"
                          ],
                          "x-ms-enum": {
                            "name": "OemActivation",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Disabled",
                                "value": "Disabled",
                                "description": "OEM activation is disabled for the cluster."
                              },
                              {
                                "name": "Enabled",
                                "value": "Enabled",
                                "description": "OEM activation is enabled for the cluster."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "hardwareClass": {
                          "description": "Hardware class of the cluster.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Small",
                            "Medium",
                            "Large"
                          ],
                          "default": "Medium",
                          "x-ms-enum": {
                            "name": "HardwareClass",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Small",
                                "value": "Small",
                                "description": "The hardware class is small."
                              },
                              {
                                "name": "Medium",
                                "value": "Medium",
                                "description": "The hardware class is medium. This corresponds to the default"
                              },
                              {
                                "name": "Large",
                                "value": "Large",
                                "description": "The hardware class is large."
                              }
                            ]
                          }
                        }
                      }
                    },
                    "isolatedVmAttestationConfiguration": {
                      "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "attestationResourceId": {
                          "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Attestation/attestationProviders",
                                "scopes": [
                                  "Tenant"
                                ]
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "relyingPartyServiceEndpoint": {
                          "description": "Region specific endpoint for relying party service.",
                          "type": "string",
                          "readOnly": true
                        },
                        "attestationServiceEndpoint": {
                          "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
                          "type": "string",
                          "readOnly": true
                        }
                      }
                    },
                    "trialDaysRemaining": {
                      "description": "Number of days remaining in the trial period.",
                      "type": "number",
                      "readOnly": true
                    },
                    "billingModel": {
                      "description": "Type of billing applied to the resource.",
                      "type": "string",
                      "readOnly": true
                    },
                    "registrationTimestamp": {
                      "description": "First cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastSyncTimestamp": {
                      "description": "Most recent cluster sync timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "lastBillingTimestamp": {
                      "description": "Most recent billing meter timestamp.",
                      "type": "string",
                      "format": "date-time",
                      "readOnly": true
                    },
                    "serviceEndpoint": {
                      "description": "Region specific DataPath Endpoint of the cluster.",
                      "type": "string",
                      "readOnly": true
                    },
                    "resourceProviderObjectId": {
                      "description": "Object id of RP Service Principal",
                      "type": "string",
                      "readOnly": true
                    },
                    "secretsLocations": {
                      "type": "array",
                      "description": "List of secret locations.",
                      "items": {
                        "type": "object",
                        "description": "Secrets location details",
                        "properties": {
                          "secretsType": {
                            "description": "Type of secrets to store",
                            "type": "string",
                            "enum": [
                              "BackupSecrets"
                            ],
                            "x-ms-enum": {
                              "name": "SecretsType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "BackupSecrets",
                                  "value": "BackupSecrets",
                                  "description": "Backup secrets type"
                                }
                              ]
                            }
                          },
                          "secretsLocation": {
                            "type": "string",
                            "description": "secrets location"
                          }
                        },
                        "required": [
                          "secretsType",
                          "secretsLocation"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "clusterPattern": {
                      "description": "Supported Storage Type for HCI Cluster",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Standard",
                        "RackAware"
                      ],
                      "x-ms-enum": {
                        "name": "ClusterPattern",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Standard",
                            "value": "Standard",
                            "description": "Standard cluster."
                          },
                          {
                            "name": "RackAware",
                            "value": "RackAware",
                            "description": "RackAware cluster."
                          }
                        ]
                      }
                    },
                    "localAvailabilityZones": {
                      "type": "array",
                      "description": "Local Availability Zone information for HCI cluster",
                      "items": {
                        "type": "object",
                        "description": "Local Availability Zone information for HCI cluster",
                        "properties": {
                          "localAvailabilityZoneName": {
                            "type": "string",
                            "description": "Local Availability Zone name for HCI cluster"
                          },
                          "nodes": {
                            "type": "array",
                            "description": "Nodes belonging to a particular zone",
                            "items": {
                              "type": "string"
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "localAvailabilityZoneName"
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted",
            "headers": {
              "Location": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/deploymentSettings": {
      "get": {
        "operationId": "DeploymentSettings_ListByClusters",
        "tags": [
          "DeploymentSettings"
        ],
        "description": "List DeploymentSetting resources by Clusters",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeploymentSettingListResult"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/deploymentSettings/{deploymentSettingsName}": {
      "get": {
        "operationId": "DeploymentSettings_Get",
        "tags": [
          "DeploymentSettings"
        ],
        "description": "Get a DeploymentSetting",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentSettingsName",
            "in": "path",
            "description": "Name of Deployment Setting",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "$ref": "#/definitions/DeploymentSetting"
            }
          }
        }
      },
      "put": {
        "operationId": "DeploymentSettings_CreateOrUpdate",
        "tags": [
          "DeploymentSettings"
        ],
        "description": "Create a DeploymentSetting",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentSettingsName",
            "in": "path",
            "description": "Name of Deployment Setting",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeploymentSetting"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'DeploymentSetting' update operation succeeded",
            "schema": {
              "$ref": "#/definitions/DeploymentSetting"
            }
          },
          "201": {
            "description": "Resource 'DeploymentSetting' create operation succeeded",
            "schema": {
              "$ref": "#/definitions/DeploymentSetting"
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DeploymentSettings_Delete",
        "tags": [
          "DeploymentSettings"
        ],
        "description": "Delete a DeploymentSetting",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "deploymentSettingsName",
            "in": "path",
            "description": "Name of Deployment Setting",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/edgeDevices/{edgeDeviceName}/jobs": {
      "get": {
        "operationId": "EdgeDeviceJobs_ListByEdgeDevice",
        "tags": [
          "EdgeDeviceJobs"
        ],
        "description": "List EdgeDeviceJob resources by EdgeDevice",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "edgeDeviceName",
            "in": "path",
            "description": "The name of the EdgeDevice",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a EdgeDeviceJob list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The EdgeDeviceJob items on this page",
                  "items": {
                    "type": "object",
                    "description": "EdgeDevice Jobs resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "kind": {
                        "description": "Edge Solution type to support polymorphic resource.",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "string",
                        "enum": [
                          "HCI"
                        ],
                        "default": "HCI",
                        "x-ms-enum": {
                          "name": "EdgeDeviceKind",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "HCI",
                              "value": "HCI",
                              "description": "Arc-enabled edge device with HCI OS."
                            }
                          ]
                        }
                      }
                    },
                    "discriminator": "kind",
                    "required": [
                      "kind"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/edgeDevices/{edgeDeviceName}/jobs/{jobsName}": {
      "get": {
        "operationId": "EdgeDeviceJobs_Get",
        "tags": [
          "EdgeDeviceJobs"
        ],
        "description": "Get a EdgeDeviceJob",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "edgeDeviceName",
            "in": "path",
            "description": "The name of the EdgeDevice",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "jobsName",
            "in": "path",
            "description": "Name of EdgeDevice Job",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "EdgeDevice Jobs resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "description": "Edge Solution type to support polymorphic resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "HCI"
                  ],
                  "default": "HCI",
                  "x-ms-enum": {
                    "name": "EdgeDeviceKind",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "HCI",
                        "value": "HCI",
                        "description": "Arc-enabled edge device with HCI OS."
                      }
                    ]
                  }
                }
              },
              "discriminator": "kind",
              "required": [
                "kind"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "EdgeDeviceJobs_CreateOrUpdate",
        "tags": [
          "EdgeDeviceJobs"
        ],
        "description": "Create a EdgeDeviceJob",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "edgeDeviceName",
            "in": "path",
            "description": "The name of the EdgeDevice",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "jobsName",
            "in": "path",
            "description": "Name of EdgeDevice Job",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "EdgeDevice Jobs resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "description": "Edge Solution type to support polymorphic resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "HCI"
                  ],
                  "default": "HCI",
                  "x-ms-enum": {
                    "name": "EdgeDeviceKind",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "HCI",
                        "value": "HCI",
                        "description": "Arc-enabled edge device with HCI OS."
                      }
                    ]
                  }
                }
              },
              "discriminator": "kind",
              "required": [
                "kind"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'EdgeDeviceJob' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "EdgeDevice Jobs resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "description": "Edge Solution type to support polymorphic resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "HCI"
                  ],
                  "default": "HCI",
                  "x-ms-enum": {
                    "name": "EdgeDeviceKind",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "HCI",
                        "value": "HCI",
                        "description": "Arc-enabled edge device with HCI OS."
                      }
                    ]
                  }
                }
              },
              "discriminator": "kind",
              "required": [
                "kind"
              ]
            }
          },
          "201": {
            "description": "Resource 'EdgeDeviceJob' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "EdgeDevice Jobs resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "description": "Edge Solution type to support polymorphic resource.",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "string",
                  "enum": [
                    "HCI"
                  ],
                  "default": "HCI",
                  "x-ms-enum": {
                    "name": "EdgeDeviceKind",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "HCI",
                        "value": "HCI",
                        "description": "Arc-enabled edge device with HCI OS."
                      }
                    ]
                  }
                }
              },
              "discriminator": "kind",
              "required": [
                "kind"
              ]
            },
            "headers": {
              "Azure-AsyncOperation": {
                "type": "string",
                "description": "A link to the status monitor"
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "EdgeDeviceJobs_Delete",
        "tags": [
          "EdgeDeviceJobs"
        ],
        "description": "Delete a EdgeDeviceJob",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "edgeDeviceName",
            "in": "path",
            "description": "The name of the EdgeDevice",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "jobsName",
            "in": "path",
            "description": "Name of EdgeDevice Job",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              },
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          },
          "204": {
            "description": "Resource does not exist."
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/edgeDevices": {
      "get": {
        "operationId": "EdgeDevices_List",
        "tags": [
          "EdgeDevices"
        ],
        "description": "List EdgeDevice resources by parent",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a EdgeDevice list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The EdgeDevice items on this page",
                  "items": {
                    "type": "object",
                    "description": "Edge device resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "kind": {
                        "description": "Device kind to support polymorphic resource.",
                        "x-ms-mutability": [
                          "create",
                          "read"
                        ],
                        "type": "string",
                        "enum": [
                          "HCI"
                        ],
                        "default": "HCI",
                        "x-ms-enum": {
                          "name": "DeviceKind",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "HCI",
                              "value": "HCI",
                              "description": "Arc-enabled edge device with HCI OS."
                            }
                          ]
                        }
                      }
                    },
                    "discriminator": "kind",
                    "required": [
                      "kind"
                    ]
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/edgeDevices/{edgeDeviceName}": {
      "get": {
        "operationId": "EdgeDevices_Get",
        "tags": [
          "EdgeDevices"
        ],
        "description": "Get a EdgeDevice",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "edgeDeviceName",
            "in": "path",
            "description": "Name of Device",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Edge device resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "description": "Device kind to support polymorphic resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ],
                  "type": "string",
                  "enum": [
                    "HCI"
                  ],
                  "default": "HCI",
                  "x-ms-enum": {
                    "name": "DeviceKind",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "HCI",
                        "value": "HCI",
                        "description": "Arc-enabled edge device with HCI OS."
                      }
                    ]
                  }
                }
              },
              "discriminator": "kind",
              "required": [
                "kind"
              ]
            }
          }
        }
      },
      "put": {
        "operationId": "EdgeDevices_CreateOrUpdate",
        "tags": [
          "EdgeDevices"
        ],
        "description": "Create a EdgeDevice",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "edgeDeviceName",
            "in": "path",
            "description": "Name of Device",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Edge device resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "description": "Device kind to support polymorphic resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ],
                  "type": "string",
                  "enum": [
                    "HCI"
                  ],
                  "default": "HCI",
                  "x-ms-enum": {
                    "name": "DeviceKind",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "HCI",
                        "value": "HCI",
                        "description": "Arc-enabled edge device with HCI OS."
                      }
                    ]
                  }
                }
              },
              "discriminator": "kind",
              "required": [
                "kind"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Edge device resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "description": "Device kind to support polymorphic resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ],
                  "type": "string",
                  "enum": [
                    "HCI"
                  ],
                  "default": "HCI",
                  "x-ms-enum": {
                    "name": "DeviceKind",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "HCI",
                        "value": "HCI",
                        "description": "Arc-enabled edge device with HCI OS."
                      }
                    ]
                  }
                }
              },
              "discriminator": "kind",
              "required": [
                "kind"
              ]
            }
          },
          "201": {
            "description": "Resource successfully created.",
            "schema": {
              "type": "object",
              "description": "Edge device resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "kind": {
                  "description": "Device kind to support polymorphic resource.",
                  "x-ms-mutability": [
                    "create",
                    "read"
                  ],
                  "type": "string",
                  "enum": [
                    "HCI"
                  ],
                  "default": "HCI",
                  "x-ms-enum": {
                    "name": "DeviceKind",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "HCI",
                        "value": "HCI",
                        "description": "Arc-enabled edge device with HCI OS."
                      }
                    ]
                  }
                }
              },
              "discriminator": "kind",
              "required": [
                "kind"
              ]
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "EdgeDevices_Delete",
        "tags": [
          "EdgeDevices"
        ],
        "description": "Delete a EdgeDevice",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "edgeDeviceName",
            "in": "path",
            "description": "Name of Device",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        }
      }
    },
    "/{resourceUri}/providers/Microsoft.AzureStackHCI/edgeDevices/{edgeDeviceName}/validate": {
      "post": {
        "operationId": "EdgeDevices_Validate",
        "tags": [
          "EdgeDevices"
        ],
        "description": "A long-running resource action.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceUri",
            "in": "path",
            "description": "The fully qualified Azure Resource manager identifier of the resource.",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "x-ms-skip-url-encoding": true
          },
          {
            "name": "edgeDeviceName",
            "in": "path",
            "description": "Name of Device",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "ValidateRequest",
            "in": "body",
            "description": "The content of the action request",
            "required": true,
            "schema": {
              "type": "object",
              "description": "The validate request for Edge Device.",
              "properties": {
                "edgeDeviceIds": {
                  "type": "array",
                  "description": "Node Ids against which, current node has to be validated.",
                  "items": {
                    "type": "string"
                  }
                },
                "additionalInfo": {
                  "type": "string",
                  "description": "Additional info required for validation."
                }
              },
              "required": [
                "edgeDeviceIds"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "An Accepted response with an Operation-Location header.",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "edge device validation status",
                  "readOnly": true
                }
              }
            }
          },
          "202": {
            "description": "Resource operation accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions": {
      "get": {
        "operationId": "Extensions_ListByArcSetting",
        "description": "List all Extensions under ArcSetting resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Extensions in HCI cluster.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of Extensions in HCI cluster.",
                  "type": "array",
                  "items": {
                    "description": "Details of a particular extension in HCI Cluster.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Describes Machine Extension Properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the Extension proxy resource. Indicates the current lifecycle status of the resource, such as whether it's being created, updated, deleted, or has encountered an error.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The provisioning state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred during provisioning."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Provisioning completed successfully."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Provisioning failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Provisioning was canceled."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The resource is connected."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The resource is disconnected."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The resource has been deleted."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The resource is being created."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is being updated."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The resource is being moved."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "Provisioning partially succeeded."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The resource is partially connected."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "Provisioning is in progress."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Provisioning request has been accepted."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is currently provisioning."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "extensionParameters": {
                            "description": "Parameters specific to this extension type.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "forceUpdateTag": {
                                "type": "string",
                                "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                              },
                              "publisher": {
                                "type": "string",
                                "description": "The name of the extension handler publisher."
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                              },
                              "typeHandlerVersion": {
                                "type": "string",
                                "description": "Specifies the version of the script handler. Latest version would be used if not specified."
                              },
                              "autoUpgradeMinorVersion": {
                                "type": "boolean",
                                "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                              },
                              "settings": {
                                "type": "object",
                                "description": "Json formatted public settings for the extension."
                              },
                              "protectedSettings": {
                                "type": "object",
                                "description": "Protected settings (may contain secrets).",
                                "x-ms-secret": true
                              },
                              "enableAutomaticUpgrade": {
                                "type": "boolean",
                                "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                              }
                            }
                          },
                          "aggregateState": {
                            "description": "Aggregate state of Arc Extensions across the nodes in this HCI cluster. This reflects the overall status of the extension deployment and operation across all nodes.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning",
                              "UpgradeFailedRollbackSucceeded"
                            ],
                            "x-ms-enum": {
                              "name": "ExtensionAggregateState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The aggregate state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred in the aggregate state."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The operation succeeded across all nodes."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The operation was canceled across the nodes."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The operation failed on all or most nodes."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "All nodes are connected."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "All nodes are disconnected."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The extension has been deleted from all nodes."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The extension is being created across the nodes."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The extension is being updated across the nodes."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The extension is being deleted across the nodes."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The extension is being moved across the nodes."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The operation succeeded on some nodes."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "Some nodes are connected, others are not."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The operation is currently in progress across the nodes."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The extension is currently being provisioned across the nodes."
                                },
                                {
                                  "name": "UpgradeFailedRollbackSucceeded",
                                  "value": "UpgradeFailedRollbackSucceeded",
                                  "description": "Extension upgrade failed, but rollback succeeded across the nodes."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "perNodeExtensionDetails": {
                            "description": "State of Arc Extension in each of the nodes.",
                            "type": "array",
                            "items": {
                              "description": "Status of Arc Extension for a particular node in HCI Cluster.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the node in HCI Cluster.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "extension": {
                                  "description": "Fully qualified resource ID for the particular Arc Extension on this node.",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "typeHandlerVersion": {
                                  "type": "string",
                                  "description": "Specifies the version of the script handler.",
                                  "readOnly": true
                                },
                                "state": {
                                  "description": "State of Arc Extension in this node. Reflects the current lifecycle status of the extension on the individual node, such as whether it's being created, updated, deleted, or has encountered an error.",
                                  "type": "string",
                                  "enum": [
                                    "NotSpecified",
                                    "Error",
                                    "Succeeded",
                                    "Canceled",
                                    "Failed",
                                    "Connected",
                                    "Disconnected",
                                    "Deleted",
                                    "Creating",
                                    "Updating",
                                    "Deleting",
                                    "Moving",
                                    "PartiallySucceeded",
                                    "PartiallyConnected",
                                    "InProgress",
                                    "Accepted",
                                    "Provisioning"
                                  ],
                                  "x-ms-enum": {
                                    "name": "NodeExtensionState",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "NotSpecified",
                                        "value": "NotSpecified",
                                        "description": "The state is not specified."
                                      },
                                      {
                                        "name": "Error",
                                        "value": "Error",
                                        "description": "An error occurred during the extension lifecycle."
                                      },
                                      {
                                        "name": "Succeeded",
                                        "value": "Succeeded",
                                        "description": "The extension operation completed successfully."
                                      },
                                      {
                                        "name": "Canceled",
                                        "value": "Canceled",
                                        "description": "The extension operation was canceled."
                                      },
                                      {
                                        "name": "Failed",
                                        "value": "Failed",
                                        "description": "The extension operation failed."
                                      },
                                      {
                                        "name": "Connected",
                                        "value": "Connected",
                                        "description": "The extension is connected on the node."
                                      },
                                      {
                                        "name": "Disconnected",
                                        "value": "Disconnected",
                                        "description": "The extension is disconnected on the node."
                                      },
                                      {
                                        "name": "Deleted",
                                        "value": "Deleted",
                                        "description": "The extension has been deleted from the node."
                                      },
                                      {
                                        "name": "Creating",
                                        "value": "Creating",
                                        "description": "The extension is being created on the node."
                                      },
                                      {
                                        "name": "Updating",
                                        "value": "Updating",
                                        "description": "The extension is being updated on the node."
                                      },
                                      {
                                        "name": "Deleting",
                                        "value": "Deleting",
                                        "description": "The extension is being deleted from the node."
                                      },
                                      {
                                        "name": "Moving",
                                        "value": "Moving",
                                        "description": "The extension is being moved on the node."
                                      },
                                      {
                                        "name": "PartiallySucceeded",
                                        "value": "PartiallySucceeded",
                                        "description": "The extension operation partially succeeded."
                                      },
                                      {
                                        "name": "PartiallyConnected",
                                        "value": "PartiallyConnected",
                                        "description": "The extension is partially connected on the node."
                                      },
                                      {
                                        "name": "InProgress",
                                        "value": "InProgress",
                                        "description": "The extension operation is currently in progress."
                                      },
                                      {
                                        "name": "Accepted",
                                        "value": "Accepted",
                                        "description": "The extension operation has been accepted and is pending execution."
                                      },
                                      {
                                        "name": "Provisioning",
                                        "value": "Provisioning",
                                        "description": "The extension is currently being provisioned on the node."
                                      }
                                    ]
                                  },
                                  "readOnly": true
                                },
                                "instanceView": {
                                  "description": "The extension instance view.",
                                  "readOnly": true,
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The extension name."
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Specifies the type of the extension; an example is \"MicrosoftMonitoringAgent\"."
                                    },
                                    "typeHandlerVersion": {
                                      "type": "string",
                                      "description": "Specifies the version of the script handler."
                                    },
                                    "status": {
                                      "type": "object",
                                      "description": "Instance view status.",
                                      "properties": {
                                        "code": {
                                          "type": "string",
                                          "description": "The status code."
                                        },
                                        "level": {
                                          "type": "string",
                                          "description": "The level code. Indicates the severity or importance of the status message.",
                                          "enum": [
                                            "Info",
                                            "Warning",
                                            "Error"
                                          ],
                                          "x-ms-enum": {
                                            "name": "StatusLevelTypes",
                                            "modelAsString": true,
                                            "values": [
                                              {
                                                "name": "Info",
                                                "value": "Info",
                                                "description": "Informational message indicating normal operation."
                                              },
                                              {
                                                "name": "Warning",
                                                "value": "Warning",
                                                "description": "Warning message indicating a potential issue or non-critical problem."
                                              },
                                              {
                                                "name": "Error",
                                                "value": "Error",
                                                "description": "Error message indicating a failure or critical issue."
                                              }
                                            ]
                                          }
                                        },
                                        "displayStatus": {
                                          "type": "string",
                                          "description": "The short localizable label for the status."
                                        },
                                        "message": {
                                          "type": "string",
                                          "description": "The detailed status message, including for alerts and error messages."
                                        },
                                        "time": {
                                          "type": "string",
                                          "format": "date-time",
                                          "description": "The time of the status."
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "readOnly": true
                          },
                          "managedBy": {
                            "description": "Indicates if the extension is managed by Azure or the user. This determines who controls the deployment and lifecycle of the extension.",
                            "type": "string",
                            "enum": [
                              "Azure",
                              "User"
                            ],
                            "x-ms-enum": {
                              "name": "ExtensionManagedBy",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Azure",
                                  "value": "Azure",
                                  "description": "The extension is managed by Azure."
                                },
                                {
                                  "name": "User",
                                  "value": "User",
                                  "description": "The extension is managed by the user."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to the next set of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}": {
      "get": {
        "operationId": "Extensions_Get",
        "description": "Get particular Arc Extension of HCI Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Details of a particular extension in HCI Cluster.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Describes Machine Extension Properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Extension proxy resource. Indicates the current lifecycle status of the resource, such as whether it's being created, updated, deleted, or has encountered an error.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred during provisioning."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning was canceled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "Provisioning partially succeeded."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "Provisioning is in progress."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning request has been accepted."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently provisioning."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "extensionParameters": {
                      "description": "Parameters specific to this extension type.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "forceUpdateTag": {
                          "type": "string",
                          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The name of the extension handler publisher."
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                        },
                        "typeHandlerVersion": {
                          "type": "string",
                          "description": "Specifies the version of the script handler. Latest version would be used if not specified."
                        },
                        "autoUpgradeMinorVersion": {
                          "type": "boolean",
                          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                        },
                        "settings": {
                          "type": "object",
                          "description": "Json formatted public settings for the extension."
                        },
                        "protectedSettings": {
                          "type": "object",
                          "description": "Protected settings (may contain secrets).",
                          "x-ms-secret": true
                        },
                        "enableAutomaticUpgrade": {
                          "type": "boolean",
                          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                        }
                      }
                    },
                    "aggregateState": {
                      "description": "Aggregate state of Arc Extensions across the nodes in this HCI cluster. This reflects the overall status of the extension deployment and operation across all nodes.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "UpgradeFailedRollbackSucceeded"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionAggregateState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The aggregate state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the aggregate state."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation succeeded across all nodes."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled across the nodes."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed on all or most nodes."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "All nodes are connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "All nodes are disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The extension has been deleted from all nodes."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The extension is being created across the nodes."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The extension is being updated across the nodes."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The extension is being deleted across the nodes."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The extension is being moved across the nodes."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation succeeded on some nodes."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some nodes are connected, others are not."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress across the nodes."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The extension is currently being provisioned across the nodes."
                          },
                          {
                            "name": "UpgradeFailedRollbackSucceeded",
                            "value": "UpgradeFailedRollbackSucceeded",
                            "description": "Extension upgrade failed, but rollback succeeded across the nodes."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "perNodeExtensionDetails": {
                      "description": "State of Arc Extension in each of the nodes.",
                      "type": "array",
                      "items": {
                        "description": "Status of Arc Extension for a particular node in HCI Cluster.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the node in HCI Cluster.",
                            "type": "string",
                            "readOnly": true
                          },
                          "extension": {
                            "description": "Fully qualified resource ID for the particular Arc Extension on this node.",
                            "type": "string",
                            "readOnly": true
                          },
                          "typeHandlerVersion": {
                            "type": "string",
                            "description": "Specifies the version of the script handler.",
                            "readOnly": true
                          },
                          "state": {
                            "description": "State of Arc Extension in this node. Reflects the current lifecycle status of the extension on the individual node, such as whether it's being created, updated, deleted, or has encountered an error.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning"
                            ],
                            "x-ms-enum": {
                              "name": "NodeExtensionState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred during the extension lifecycle."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The extension operation completed successfully."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The extension operation was canceled."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The extension operation failed."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The extension is connected on the node."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The extension is disconnected on the node."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The extension has been deleted from the node."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The extension is being created on the node."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The extension is being updated on the node."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The extension is being deleted from the node."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The extension is being moved on the node."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The extension operation partially succeeded."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The extension is partially connected on the node."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The extension operation is currently in progress."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The extension operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The extension is currently being provisioned on the node."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "instanceView": {
                            "description": "The extension instance view.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The extension name."
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the type of the extension; an example is \"MicrosoftMonitoringAgent\"."
                              },
                              "typeHandlerVersion": {
                                "type": "string",
                                "description": "Specifies the version of the script handler."
                              },
                              "status": {
                                "type": "object",
                                "description": "Instance view status.",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "The status code."
                                  },
                                  "level": {
                                    "type": "string",
                                    "description": "The level code. Indicates the severity or importance of the status message.",
                                    "enum": [
                                      "Info",
                                      "Warning",
                                      "Error"
                                    ],
                                    "x-ms-enum": {
                                      "name": "StatusLevelTypes",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Info",
                                          "value": "Info",
                                          "description": "Informational message indicating normal operation."
                                        },
                                        {
                                          "name": "Warning",
                                          "value": "Warning",
                                          "description": "Warning message indicating a potential issue or non-critical problem."
                                        },
                                        {
                                          "name": "Error",
                                          "value": "Error",
                                          "description": "Error message indicating a failure or critical issue."
                                        }
                                      ]
                                    }
                                  },
                                  "displayStatus": {
                                    "type": "string",
                                    "description": "The short localizable label for the status."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "The detailed status message, including for alerts and error messages."
                                  },
                                  "time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time of the status."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "managedBy": {
                      "description": "Indicates if the extension is managed by Azure or the user. This determines who controls the deployment and lifecycle of the extension.",
                      "type": "string",
                      "enum": [
                        "Azure",
                        "User"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionManagedBy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Azure",
                            "value": "Azure",
                            "description": "The extension is managed by Azure."
                          },
                          {
                            "name": "User",
                            "value": "User",
                            "description": "The extension is managed by the user."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "Extensions_Create",
        "description": "Create Extension for HCI cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "extension",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Details of a particular extension in HCI Cluster.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Describes Machine Extension Properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Extension proxy resource. Indicates the current lifecycle status of the resource, such as whether it's being created, updated, deleted, or has encountered an error.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred during provisioning."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning was canceled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "Provisioning partially succeeded."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "Provisioning is in progress."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning request has been accepted."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently provisioning."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "extensionParameters": {
                      "description": "Parameters specific to this extension type.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "forceUpdateTag": {
                          "type": "string",
                          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The name of the extension handler publisher."
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                        },
                        "typeHandlerVersion": {
                          "type": "string",
                          "description": "Specifies the version of the script handler. Latest version would be used if not specified."
                        },
                        "autoUpgradeMinorVersion": {
                          "type": "boolean",
                          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                        },
                        "settings": {
                          "type": "object",
                          "description": "Json formatted public settings for the extension."
                        },
                        "protectedSettings": {
                          "type": "object",
                          "description": "Protected settings (may contain secrets).",
                          "x-ms-secret": true
                        },
                        "enableAutomaticUpgrade": {
                          "type": "boolean",
                          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                        }
                      }
                    },
                    "aggregateState": {
                      "description": "Aggregate state of Arc Extensions across the nodes in this HCI cluster. This reflects the overall status of the extension deployment and operation across all nodes.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "UpgradeFailedRollbackSucceeded"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionAggregateState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The aggregate state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the aggregate state."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation succeeded across all nodes."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled across the nodes."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed on all or most nodes."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "All nodes are connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "All nodes are disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The extension has been deleted from all nodes."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The extension is being created across the nodes."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The extension is being updated across the nodes."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The extension is being deleted across the nodes."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The extension is being moved across the nodes."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation succeeded on some nodes."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some nodes are connected, others are not."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress across the nodes."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The extension is currently being provisioned across the nodes."
                          },
                          {
                            "name": "UpgradeFailedRollbackSucceeded",
                            "value": "UpgradeFailedRollbackSucceeded",
                            "description": "Extension upgrade failed, but rollback succeeded across the nodes."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "perNodeExtensionDetails": {
                      "description": "State of Arc Extension in each of the nodes.",
                      "type": "array",
                      "items": {
                        "description": "Status of Arc Extension for a particular node in HCI Cluster.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the node in HCI Cluster.",
                            "type": "string",
                            "readOnly": true
                          },
                          "extension": {
                            "description": "Fully qualified resource ID for the particular Arc Extension on this node.",
                            "type": "string",
                            "readOnly": true
                          },
                          "typeHandlerVersion": {
                            "type": "string",
                            "description": "Specifies the version of the script handler.",
                            "readOnly": true
                          },
                          "state": {
                            "description": "State of Arc Extension in this node. Reflects the current lifecycle status of the extension on the individual node, such as whether it's being created, updated, deleted, or has encountered an error.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning"
                            ],
                            "x-ms-enum": {
                              "name": "NodeExtensionState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred during the extension lifecycle."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The extension operation completed successfully."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The extension operation was canceled."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The extension operation failed."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The extension is connected on the node."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The extension is disconnected on the node."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The extension has been deleted from the node."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The extension is being created on the node."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The extension is being updated on the node."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The extension is being deleted from the node."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The extension is being moved on the node."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The extension operation partially succeeded."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The extension is partially connected on the node."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The extension operation is currently in progress."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The extension operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The extension is currently being provisioned on the node."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "instanceView": {
                            "description": "The extension instance view.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The extension name."
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the type of the extension; an example is \"MicrosoftMonitoringAgent\"."
                              },
                              "typeHandlerVersion": {
                                "type": "string",
                                "description": "Specifies the version of the script handler."
                              },
                              "status": {
                                "type": "object",
                                "description": "Instance view status.",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "The status code."
                                  },
                                  "level": {
                                    "type": "string",
                                    "description": "The level code. Indicates the severity or importance of the status message.",
                                    "enum": [
                                      "Info",
                                      "Warning",
                                      "Error"
                                    ],
                                    "x-ms-enum": {
                                      "name": "StatusLevelTypes",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Info",
                                          "value": "Info",
                                          "description": "Informational message indicating normal operation."
                                        },
                                        {
                                          "name": "Warning",
                                          "value": "Warning",
                                          "description": "Warning message indicating a potential issue or non-critical problem."
                                        },
                                        {
                                          "name": "Error",
                                          "value": "Error",
                                          "description": "Error message indicating a failure or critical issue."
                                        }
                                      ]
                                    }
                                  },
                                  "displayStatus": {
                                    "type": "string",
                                    "description": "The short localizable label for the status."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "The detailed status message, including for alerts and error messages."
                                  },
                                  "time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time of the status."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "managedBy": {
                      "description": "Indicates if the extension is managed by Azure or the user. This determines who controls the deployment and lifecycle of the extension.",
                      "type": "string",
                      "enum": [
                        "Azure",
                        "User"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionManagedBy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Azure",
                            "value": "Azure",
                            "description": "The extension is managed by Azure."
                          },
                          {
                            "name": "User",
                            "value": "User",
                            "description": "The extension is managed by the user."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "description": "Details of the Machine Extension to be created."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Succeeded",
            "schema": {
              "description": "Details of a particular extension in HCI Cluster.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Describes Machine Extension Properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Extension proxy resource. Indicates the current lifecycle status of the resource, such as whether it's being created, updated, deleted, or has encountered an error.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred during provisioning."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning was canceled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "Provisioning partially succeeded."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "Provisioning is in progress."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning request has been accepted."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently provisioning."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "extensionParameters": {
                      "description": "Parameters specific to this extension type.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "forceUpdateTag": {
                          "type": "string",
                          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The name of the extension handler publisher."
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                        },
                        "typeHandlerVersion": {
                          "type": "string",
                          "description": "Specifies the version of the script handler. Latest version would be used if not specified."
                        },
                        "autoUpgradeMinorVersion": {
                          "type": "boolean",
                          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                        },
                        "settings": {
                          "type": "object",
                          "description": "Json formatted public settings for the extension."
                        },
                        "protectedSettings": {
                          "type": "object",
                          "description": "Protected settings (may contain secrets).",
                          "x-ms-secret": true
                        },
                        "enableAutomaticUpgrade": {
                          "type": "boolean",
                          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                        }
                      }
                    },
                    "aggregateState": {
                      "description": "Aggregate state of Arc Extensions across the nodes in this HCI cluster. This reflects the overall status of the extension deployment and operation across all nodes.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "UpgradeFailedRollbackSucceeded"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionAggregateState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The aggregate state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the aggregate state."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation succeeded across all nodes."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled across the nodes."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed on all or most nodes."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "All nodes are connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "All nodes are disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The extension has been deleted from all nodes."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The extension is being created across the nodes."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The extension is being updated across the nodes."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The extension is being deleted across the nodes."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The extension is being moved across the nodes."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation succeeded on some nodes."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some nodes are connected, others are not."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress across the nodes."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The extension is currently being provisioned across the nodes."
                          },
                          {
                            "name": "UpgradeFailedRollbackSucceeded",
                            "value": "UpgradeFailedRollbackSucceeded",
                            "description": "Extension upgrade failed, but rollback succeeded across the nodes."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "perNodeExtensionDetails": {
                      "description": "State of Arc Extension in each of the nodes.",
                      "type": "array",
                      "items": {
                        "description": "Status of Arc Extension for a particular node in HCI Cluster.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the node in HCI Cluster.",
                            "type": "string",
                            "readOnly": true
                          },
                          "extension": {
                            "description": "Fully qualified resource ID for the particular Arc Extension on this node.",
                            "type": "string",
                            "readOnly": true
                          },
                          "typeHandlerVersion": {
                            "type": "string",
                            "description": "Specifies the version of the script handler.",
                            "readOnly": true
                          },
                          "state": {
                            "description": "State of Arc Extension in this node. Reflects the current lifecycle status of the extension on the individual node, such as whether it's being created, updated, deleted, or has encountered an error.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning"
                            ],
                            "x-ms-enum": {
                              "name": "NodeExtensionState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred during the extension lifecycle."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The extension operation completed successfully."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The extension operation was canceled."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The extension operation failed."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The extension is connected on the node."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The extension is disconnected on the node."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The extension has been deleted from the node."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The extension is being created on the node."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The extension is being updated on the node."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The extension is being deleted from the node."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The extension is being moved on the node."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The extension operation partially succeeded."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The extension is partially connected on the node."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The extension operation is currently in progress."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The extension operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The extension is currently being provisioned on the node."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "instanceView": {
                            "description": "The extension instance view.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The extension name."
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the type of the extension; an example is \"MicrosoftMonitoringAgent\"."
                              },
                              "typeHandlerVersion": {
                                "type": "string",
                                "description": "Specifies the version of the script handler."
                              },
                              "status": {
                                "type": "object",
                                "description": "Instance view status.",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "The status code."
                                  },
                                  "level": {
                                    "type": "string",
                                    "description": "The level code. Indicates the severity or importance of the status message.",
                                    "enum": [
                                      "Info",
                                      "Warning",
                                      "Error"
                                    ],
                                    "x-ms-enum": {
                                      "name": "StatusLevelTypes",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Info",
                                          "value": "Info",
                                          "description": "Informational message indicating normal operation."
                                        },
                                        {
                                          "name": "Warning",
                                          "value": "Warning",
                                          "description": "Warning message indicating a potential issue or non-critical problem."
                                        },
                                        {
                                          "name": "Error",
                                          "value": "Error",
                                          "description": "Error message indicating a failure or critical issue."
                                        }
                                      ]
                                    }
                                  },
                                  "displayStatus": {
                                    "type": "string",
                                    "description": "The short localizable label for the status."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "The detailed status message, including for alerts and error messages."
                                  },
                                  "time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time of the status."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "managedBy": {
                      "description": "Indicates if the extension is managed by Azure or the user. This determines who controls the deployment and lifecycle of the extension.",
                      "type": "string",
                      "enum": [
                        "Azure",
                        "User"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionManagedBy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Azure",
                            "value": "Azure",
                            "description": "The extension is managed by Azure."
                          },
                          {
                            "name": "User",
                            "value": "User",
                            "description": "The extension is managed by the user."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "description": "Details of a particular extension in HCI Cluster.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Describes Machine Extension Properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Extension proxy resource. Indicates the current lifecycle status of the resource, such as whether it's being created, updated, deleted, or has encountered an error.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred during provisioning."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning was canceled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "Provisioning partially succeeded."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "Provisioning is in progress."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning request has been accepted."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently provisioning."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "extensionParameters": {
                      "description": "Parameters specific to this extension type.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "forceUpdateTag": {
                          "type": "string",
                          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The name of the extension handler publisher."
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                        },
                        "typeHandlerVersion": {
                          "type": "string",
                          "description": "Specifies the version of the script handler. Latest version would be used if not specified."
                        },
                        "autoUpgradeMinorVersion": {
                          "type": "boolean",
                          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                        },
                        "settings": {
                          "type": "object",
                          "description": "Json formatted public settings for the extension."
                        },
                        "protectedSettings": {
                          "type": "object",
                          "description": "Protected settings (may contain secrets).",
                          "x-ms-secret": true
                        },
                        "enableAutomaticUpgrade": {
                          "type": "boolean",
                          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                        }
                      }
                    },
                    "aggregateState": {
                      "description": "Aggregate state of Arc Extensions across the nodes in this HCI cluster. This reflects the overall status of the extension deployment and operation across all nodes.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "UpgradeFailedRollbackSucceeded"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionAggregateState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The aggregate state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the aggregate state."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation succeeded across all nodes."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled across the nodes."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed on all or most nodes."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "All nodes are connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "All nodes are disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The extension has been deleted from all nodes."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The extension is being created across the nodes."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The extension is being updated across the nodes."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The extension is being deleted across the nodes."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The extension is being moved across the nodes."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation succeeded on some nodes."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some nodes are connected, others are not."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress across the nodes."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The extension is currently being provisioned across the nodes."
                          },
                          {
                            "name": "UpgradeFailedRollbackSucceeded",
                            "value": "UpgradeFailedRollbackSucceeded",
                            "description": "Extension upgrade failed, but rollback succeeded across the nodes."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "perNodeExtensionDetails": {
                      "description": "State of Arc Extension in each of the nodes.",
                      "type": "array",
                      "items": {
                        "description": "Status of Arc Extension for a particular node in HCI Cluster.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the node in HCI Cluster.",
                            "type": "string",
                            "readOnly": true
                          },
                          "extension": {
                            "description": "Fully qualified resource ID for the particular Arc Extension on this node.",
                            "type": "string",
                            "readOnly": true
                          },
                          "typeHandlerVersion": {
                            "type": "string",
                            "description": "Specifies the version of the script handler.",
                            "readOnly": true
                          },
                          "state": {
                            "description": "State of Arc Extension in this node. Reflects the current lifecycle status of the extension on the individual node, such as whether it's being created, updated, deleted, or has encountered an error.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning"
                            ],
                            "x-ms-enum": {
                              "name": "NodeExtensionState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred during the extension lifecycle."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The extension operation completed successfully."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The extension operation was canceled."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The extension operation failed."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The extension is connected on the node."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The extension is disconnected on the node."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The extension has been deleted from the node."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The extension is being created on the node."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The extension is being updated on the node."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The extension is being deleted from the node."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The extension is being moved on the node."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The extension operation partially succeeded."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The extension is partially connected on the node."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The extension operation is currently in progress."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The extension operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The extension is currently being provisioned on the node."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "instanceView": {
                            "description": "The extension instance view.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The extension name."
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the type of the extension; an example is \"MicrosoftMonitoringAgent\"."
                              },
                              "typeHandlerVersion": {
                                "type": "string",
                                "description": "Specifies the version of the script handler."
                              },
                              "status": {
                                "type": "object",
                                "description": "Instance view status.",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "The status code."
                                  },
                                  "level": {
                                    "type": "string",
                                    "description": "The level code. Indicates the severity or importance of the status message.",
                                    "enum": [
                                      "Info",
                                      "Warning",
                                      "Error"
                                    ],
                                    "x-ms-enum": {
                                      "name": "StatusLevelTypes",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Info",
                                          "value": "Info",
                                          "description": "Informational message indicating normal operation."
                                        },
                                        {
                                          "name": "Warning",
                                          "value": "Warning",
                                          "description": "Warning message indicating a potential issue or non-critical problem."
                                        },
                                        {
                                          "name": "Error",
                                          "value": "Error",
                                          "description": "Error message indicating a failure or critical issue."
                                        }
                                      ]
                                    }
                                  },
                                  "displayStatus": {
                                    "type": "string",
                                    "description": "The short localizable label for the status."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "The detailed status message, including for alerts and error messages."
                                  },
                                  "time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time of the status."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "managedBy": {
                      "description": "Indicates if the extension is managed by Azure or the user. This determines who controls the deployment and lifecycle of the extension.",
                      "type": "string",
                      "enum": [
                        "Azure",
                        "User"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionManagedBy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Azure",
                            "value": "Azure",
                            "description": "The extension is managed by Azure."
                          },
                          {
                            "name": "User",
                            "value": "User",
                            "description": "The extension is managed by the user."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "Extensions_Update",
        "description": "Update Extension for HCI cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "extension",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Extension Details to update",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Describes Machine Extension Properties that can be updated.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "extensionParameters": {
                      "description": "Describes the properties of a Machine Extension that can be updated.",
                      "type": "object",
                      "properties": {
                        "typeHandlerVersion": {
                          "type": "string",
                          "description": "Specifies the version of the script handler. Latest version would be used if not specified."
                        },
                        "enableAutomaticUpgrade": {
                          "type": "boolean",
                          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                        },
                        "settings": {
                          "type": "object",
                          "description": "Json formatted public settings for the extension."
                        },
                        "protectedSettings": {
                          "type": "object",
                          "description": "Protected settings (may contain secrets).",
                          "x-ms-secret": true
                        }
                      }
                    }
                  }
                }
              }
            },
            "description": "Details of the Machine Extension to be created."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Details of a particular extension in HCI Cluster.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Describes Machine Extension Properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Extension proxy resource. Indicates the current lifecycle status of the resource, such as whether it's being created, updated, deleted, or has encountered an error.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The provisioning state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred during provisioning."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Provisioning completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Provisioning failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Provisioning was canceled."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "The resource is connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "The resource is disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The resource has been deleted."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The resource is being created."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is being updated."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The resource is being moved."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "Provisioning partially succeeded."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "The resource is partially connected."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "Provisioning is in progress."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "Provisioning request has been accepted."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is currently provisioning."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "extensionParameters": {
                      "description": "Parameters specific to this extension type.",
                      "x-ms-client-flatten": true,
                      "type": "object",
                      "properties": {
                        "forceUpdateTag": {
                          "type": "string",
                          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                        },
                        "publisher": {
                          "type": "string",
                          "description": "The name of the extension handler publisher."
                        },
                        "type": {
                          "type": "string",
                          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                        },
                        "typeHandlerVersion": {
                          "type": "string",
                          "description": "Specifies the version of the script handler. Latest version would be used if not specified."
                        },
                        "autoUpgradeMinorVersion": {
                          "type": "boolean",
                          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                        },
                        "settings": {
                          "type": "object",
                          "description": "Json formatted public settings for the extension."
                        },
                        "protectedSettings": {
                          "type": "object",
                          "description": "Protected settings (may contain secrets).",
                          "x-ms-secret": true
                        },
                        "enableAutomaticUpgrade": {
                          "type": "boolean",
                          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                        }
                      }
                    },
                    "aggregateState": {
                      "description": "Aggregate state of Arc Extensions across the nodes in this HCI cluster. This reflects the overall status of the extension deployment and operation across all nodes.",
                      "type": "string",
                      "enum": [
                        "NotSpecified",
                        "Error",
                        "Succeeded",
                        "Canceled",
                        "Failed",
                        "Connected",
                        "Disconnected",
                        "Deleted",
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Moving",
                        "PartiallySucceeded",
                        "PartiallyConnected",
                        "InProgress",
                        "Accepted",
                        "Provisioning",
                        "UpgradeFailedRollbackSucceeded"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionAggregateState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "NotSpecified",
                            "value": "NotSpecified",
                            "description": "The aggregate state is not specified."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred in the aggregate state."
                          },
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The operation succeeded across all nodes."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The operation was canceled across the nodes."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The operation failed on all or most nodes."
                          },
                          {
                            "name": "Connected",
                            "value": "Connected",
                            "description": "All nodes are connected."
                          },
                          {
                            "name": "Disconnected",
                            "value": "Disconnected",
                            "description": "All nodes are disconnected."
                          },
                          {
                            "name": "Deleted",
                            "value": "Deleted",
                            "description": "The extension has been deleted from all nodes."
                          },
                          {
                            "name": "Creating",
                            "value": "Creating",
                            "description": "The extension is being created across the nodes."
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The extension is being updated across the nodes."
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The extension is being deleted across the nodes."
                          },
                          {
                            "name": "Moving",
                            "value": "Moving",
                            "description": "The extension is being moved across the nodes."
                          },
                          {
                            "name": "PartiallySucceeded",
                            "value": "PartiallySucceeded",
                            "description": "The operation succeeded on some nodes."
                          },
                          {
                            "name": "PartiallyConnected",
                            "value": "PartiallyConnected",
                            "description": "Some nodes are connected, others are not."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The operation is currently in progress across the nodes."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The extension is currently being provisioned across the nodes."
                          },
                          {
                            "name": "UpgradeFailedRollbackSucceeded",
                            "value": "UpgradeFailedRollbackSucceeded",
                            "description": "Extension upgrade failed, but rollback succeeded across the nodes."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "perNodeExtensionDetails": {
                      "description": "State of Arc Extension in each of the nodes.",
                      "type": "array",
                      "items": {
                        "description": "Status of Arc Extension for a particular node in HCI Cluster.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the node in HCI Cluster.",
                            "type": "string",
                            "readOnly": true
                          },
                          "extension": {
                            "description": "Fully qualified resource ID for the particular Arc Extension on this node.",
                            "type": "string",
                            "readOnly": true
                          },
                          "typeHandlerVersion": {
                            "type": "string",
                            "description": "Specifies the version of the script handler.",
                            "readOnly": true
                          },
                          "state": {
                            "description": "State of Arc Extension in this node. Reflects the current lifecycle status of the extension on the individual node, such as whether it's being created, updated, deleted, or has encountered an error.",
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Error",
                              "Succeeded",
                              "Canceled",
                              "Failed",
                              "Connected",
                              "Disconnected",
                              "Deleted",
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Moving",
                              "PartiallySucceeded",
                              "PartiallyConnected",
                              "InProgress",
                              "Accepted",
                              "Provisioning"
                            ],
                            "x-ms-enum": {
                              "name": "NodeExtensionState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "The state is not specified."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred during the extension lifecycle."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The extension operation completed successfully."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The extension operation was canceled."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The extension operation failed."
                                },
                                {
                                  "name": "Connected",
                                  "value": "Connected",
                                  "description": "The extension is connected on the node."
                                },
                                {
                                  "name": "Disconnected",
                                  "value": "Disconnected",
                                  "description": "The extension is disconnected on the node."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "The extension has been deleted from the node."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "The extension is being created on the node."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The extension is being updated on the node."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The extension is being deleted from the node."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "The extension is being moved on the node."
                                },
                                {
                                  "name": "PartiallySucceeded",
                                  "value": "PartiallySucceeded",
                                  "description": "The extension operation partially succeeded."
                                },
                                {
                                  "name": "PartiallyConnected",
                                  "value": "PartiallyConnected",
                                  "description": "The extension is partially connected on the node."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The extension operation is currently in progress."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The extension operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The extension is currently being provisioned on the node."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "instanceView": {
                            "description": "The extension instance view.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The extension name."
                              },
                              "type": {
                                "type": "string",
                                "description": "Specifies the type of the extension; an example is \"MicrosoftMonitoringAgent\"."
                              },
                              "typeHandlerVersion": {
                                "type": "string",
                                "description": "Specifies the version of the script handler."
                              },
                              "status": {
                                "type": "object",
                                "description": "Instance view status.",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "description": "The status code."
                                  },
                                  "level": {
                                    "type": "string",
                                    "description": "The level code. Indicates the severity or importance of the status message.",
                                    "enum": [
                                      "Info",
                                      "Warning",
                                      "Error"
                                    ],
                                    "x-ms-enum": {
                                      "name": "StatusLevelTypes",
                                      "modelAsString": true,
                                      "values": [
                                        {
                                          "name": "Info",
                                          "value": "Info",
                                          "description": "Informational message indicating normal operation."
                                        },
                                        {
                                          "name": "Warning",
                                          "value": "Warning",
                                          "description": "Warning message indicating a potential issue or non-critical problem."
                                        },
                                        {
                                          "name": "Error",
                                          "value": "Error",
                                          "description": "Error message indicating a failure or critical issue."
                                        }
                                      ]
                                    }
                                  },
                                  "displayStatus": {
                                    "type": "string",
                                    "description": "The short localizable label for the status."
                                  },
                                  "message": {
                                    "type": "string",
                                    "description": "The detailed status message, including for alerts and error messages."
                                  },
                                  "time": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "The time of the status."
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true
                    },
                    "managedBy": {
                      "description": "Indicates if the extension is managed by Azure or the user. This determines who controls the deployment and lifecycle of the extension.",
                      "type": "string",
                      "enum": [
                        "Azure",
                        "User"
                      ],
                      "x-ms-enum": {
                        "name": "ExtensionManagedBy",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Azure",
                            "value": "Azure",
                            "description": "The extension is managed by Azure."
                          },
                          {
                            "name": "User",
                            "value": "User",
                            "description": "The extension is managed by the user."
                          }
                        ]
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted"
          }
        }
      },
      "delete": {
        "operationId": "Extensions_Delete",
        "description": "Delete particular Arc Extension of HCI Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "OK"
          },
          "204": {
            "description": "OK"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/arcSettings/{arcSettingName}/extensions/{extensionName}/upgrade": {
      "post": {
        "operationId": "Extensions_Upgrade",
        "description": "Upgrade a particular Arc Extension of HCI Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "arcSettingName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "extensionName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the machine extension.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "extensionUpgradeParameters",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Describes the parameters for Extension upgrade.",
              "properties": {
                "targetVersion": {
                  "type": "string",
                  "description": "Extension Upgrade Target Version."
                }
              }
            },
            "description": "Parameters supplied to the Upgrade Extensions operation."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}/offers": {
      "get": {
        "operationId": "Offers_ListByPublisher",
        "description": "List Offers available for a publisher within the HCI Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "publisherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the publisher available within HCI cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=content,contentVersion to populate additional fields related to the marketplace offer.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Offer proxy resources for the HCI cluster.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of Offer proxy resources.",
                  "type": "array",
                  "items": {
                    "description": "Offer details.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Offer properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning State",
                            "type": "string",
                            "readOnly": true
                          },
                          "publisherId": {
                            "type": "string",
                            "description": "Identifier of the Publisher for the offer"
                          },
                          "content": {
                            "type": "string",
                            "description": "JSON serialized catalog content of the offer"
                          },
                          "contentVersion": {
                            "type": "string",
                            "description": "The API version of the catalog service used to serve the catalog content"
                          },
                          "skuMappings": {
                            "type": "array",
                            "description": "Array of SKU mappings",
                            "items": {
                              "description": "SKU Mapping details.",
                              "type": "object",
                              "properties": {
                                "catalogPlanId": {
                                  "type": "string",
                                  "description": "Identifier of the CatalogPlan for the sku"
                                },
                                "marketplaceSkuId": {
                                  "type": "string",
                                  "description": "Identifier for the sku"
                                },
                                "marketplaceSkuVersions": {
                                  "type": "array",
                                  "description": "Array of SKU versions available",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to the next set of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/offers": {
      "get": {
        "operationId": "Offers_ListByCluster",
        "description": "List Offers available across publishers for the HCI Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=content,contentVersion to populate additional fields related to the marketplace offer.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Offer proxy resources for the HCI cluster.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of Offer proxy resources.",
                  "type": "array",
                  "items": {
                    "description": "Offer details.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Offer properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning State",
                            "type": "string",
                            "readOnly": true
                          },
                          "publisherId": {
                            "type": "string",
                            "description": "Identifier of the Publisher for the offer"
                          },
                          "content": {
                            "type": "string",
                            "description": "JSON serialized catalog content of the offer"
                          },
                          "contentVersion": {
                            "type": "string",
                            "description": "The API version of the catalog service used to serve the catalog content"
                          },
                          "skuMappings": {
                            "type": "array",
                            "description": "Array of SKU mappings",
                            "items": {
                              "description": "SKU Mapping details.",
                              "type": "object",
                              "properties": {
                                "catalogPlanId": {
                                  "type": "string",
                                  "description": "Identifier of the CatalogPlan for the sku"
                                },
                                "marketplaceSkuId": {
                                  "type": "string",
                                  "description": "Identifier for the sku"
                                },
                                "marketplaceSkuVersions": {
                                  "type": "array",
                                  "description": "Array of SKU versions available",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to the next set of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}/offers/{offerName}": {
      "get": {
        "operationId": "Offers_Get",
        "description": "Get Offer resource details within a publisher of HCI Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "publisherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the publisher available within HCI cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "offerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the offer available within HCI cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=content,contentVersion to populate additional fields related to the marketplace offer.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Offer details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Offer properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State",
                      "type": "string",
                      "readOnly": true
                    },
                    "publisherId": {
                      "type": "string",
                      "description": "Identifier of the Publisher for the offer"
                    },
                    "content": {
                      "type": "string",
                      "description": "JSON serialized catalog content of the offer"
                    },
                    "contentVersion": {
                      "type": "string",
                      "description": "The API version of the catalog service used to serve the catalog content"
                    },
                    "skuMappings": {
                      "type": "array",
                      "description": "Array of SKU mappings",
                      "items": {
                        "description": "SKU Mapping details.",
                        "type": "object",
                        "properties": {
                          "catalogPlanId": {
                            "type": "string",
                            "description": "Identifier of the CatalogPlan for the sku"
                          },
                          "marketplaceSkuId": {
                            "type": "string",
                            "description": "Identifier for the sku"
                          },
                          "marketplaceSkuVersions": {
                            "type": "array",
                            "description": "Array of SKU versions available",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers": {
      "get": {
        "operationId": "Publishers_ListByCluster",
        "description": "List Publishers available for the HCI Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Publisher proxy resources for the HCI cluster.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of Publisher proxy resources.",
                  "type": "array",
                  "items": {
                    "description": "Publisher details.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "Publisher properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning State",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to the next set of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}": {
      "get": {
        "operationId": "Publishers_Get",
        "description": "Get Publisher resource details of HCI Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "publisherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the publisher available within HCI cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Publisher details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "Publisher properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/securitySettings": {
      "get": {
        "operationId": "SecuritySettings_ListByClusters",
        "tags": [
          "SecuritySettings"
        ],
        "description": "List SecuritySetting resources by Clusters",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a SecuritySetting list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The SecuritySetting items on this page",
                  "items": {
                    "type": "object",
                    "description": "Security settings proxy resource",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "x-ms-client-flatten": true,
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "type": "object",
                        "properties": {
                          "securedCoreComplianceAssignment": {
                            "description": "Secured Core Compliance Assignment",
                            "default": "Audit",
                            "type": "string",
                            "enum": [
                              "Audit",
                              "ApplyAndAutoCorrect"
                            ],
                            "x-ms-enum": {
                              "name": "ComplianceAssignmentType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Audit",
                                  "value": "Audit",
                                  "description": "Report on the state of the machine, but don't make changes."
                                },
                                {
                                  "name": "ApplyAndAutoCorrect",
                                  "value": "ApplyAndAutoCorrect",
                                  "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                                }
                              ]
                            }
                          },
                          "wdacComplianceAssignment": {
                            "description": "WDAC Compliance Assignment",
                            "default": "Audit",
                            "type": "string",
                            "enum": [
                              "Audit",
                              "ApplyAndAutoCorrect"
                            ],
                            "x-ms-enum": {
                              "name": "ComplianceAssignmentType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Audit",
                                  "value": "Audit",
                                  "description": "Report on the state of the machine, but don't make changes."
                                },
                                {
                                  "name": "ApplyAndAutoCorrect",
                                  "value": "ApplyAndAutoCorrect",
                                  "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                                }
                              ]
                            }
                          },
                          "smbEncryptionForIntraClusterTrafficComplianceAssignment": {
                            "description": "SMB encryption for intra-cluster traffic Compliance Assignment",
                            "default": "Audit",
                            "type": "string",
                            "enum": [
                              "Audit",
                              "ApplyAndAutoCorrect"
                            ],
                            "x-ms-enum": {
                              "name": "ComplianceAssignmentType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Audit",
                                  "value": "Audit",
                                  "description": "Report on the state of the machine, but don't make changes."
                                },
                                {
                                  "name": "ApplyAndAutoCorrect",
                                  "value": "ApplyAndAutoCorrect",
                                  "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                                }
                              ]
                            }
                          },
                          "securityComplianceStatus": {
                            "description": "Security Compliance Status",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "securedCoreCompliance": {
                                "description": "Indicates whether HCI hosts meets secured-core server requirements.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Compliant",
                                  "NonCompliant",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "ComplianceStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Compliant",
                                      "value": "Compliant",
                                      "description": "The resource is compliant"
                                    },
                                    {
                                      "name": "NonCompliant",
                                      "value": "NonCompliant",
                                      "description": "The resource is non-compliant"
                                    },
                                    {
                                      "name": "Pending",
                                      "value": "Pending",
                                      "description": "The resource compliance status is pending"
                                    }
                                  ]
                                }
                              },
                              "wdacCompliance": {
                                "description": "Indicates whether HCI hosts have enforced consistent Windows Defender Application Control.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Compliant",
                                  "NonCompliant",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "ComplianceStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Compliant",
                                      "value": "Compliant",
                                      "description": "The resource is compliant"
                                    },
                                    {
                                      "name": "NonCompliant",
                                      "value": "NonCompliant",
                                      "description": "The resource is non-compliant"
                                    },
                                    {
                                      "name": "Pending",
                                      "value": "Pending",
                                      "description": "The resource compliance status is pending"
                                    }
                                  ]
                                }
                              },
                              "dataAtRestEncrypted": {
                                "description": "Indicates whether data at-rest encryption is enabled on Azure Stack HCI clustered volumes.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Compliant",
                                  "NonCompliant",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "ComplianceStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Compliant",
                                      "value": "Compliant",
                                      "description": "The resource is compliant"
                                    },
                                    {
                                      "name": "NonCompliant",
                                      "value": "NonCompliant",
                                      "description": "The resource is non-compliant"
                                    },
                                    {
                                      "name": "Pending",
                                      "value": "Pending",
                                      "description": "The resource compliance status is pending"
                                    }
                                  ]
                                }
                              },
                              "dataInTransitProtected": {
                                "description": "Indicates whether HCI cluster has data in-transit protection.",
                                "readOnly": true,
                                "type": "string",
                                "enum": [
                                  "Compliant",
                                  "NonCompliant",
                                  "Pending"
                                ],
                                "x-ms-enum": {
                                  "name": "ComplianceStatus",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "Compliant",
                                      "value": "Compliant",
                                      "description": "The resource is compliant"
                                    },
                                    {
                                      "name": "NonCompliant",
                                      "value": "NonCompliant",
                                      "description": "The resource is non-compliant"
                                    },
                                    {
                                      "name": "Pending",
                                      "value": "Pending",
                                      "description": "The resource compliance status is pending"
                                    }
                                  ]
                                }
                              },
                              "lastUpdated": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time in UTC when compliance status was last updated.",
                                "readOnly": true
                              }
                            }
                          },
                          "provisioningState": {
                            "description": "The status of the last operation.",
                            "type": "string",
                            "readOnly": true,
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Provisioning",
                              "Updating",
                              "Deleting",
                              "Accepted"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Resource has been created."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Resource creation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Resource creation was canceled."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The resource is being provisioned"
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "The resource is updating"
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "The resource is being deleted"
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The resource create request has been accepted"
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/securitySettings/{securitySettingsName}": {
      "get": {
        "operationId": "SecuritySettings_Get",
        "tags": [
          "SecuritySettings"
        ],
        "description": "Get a SecuritySetting",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "securitySettingsName",
            "in": "path",
            "description": "Name of security setting",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "200": {
            "description": "ARM operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Security settings proxy resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "securedCoreComplianceAssignment": {
                      "description": "Secured Core Compliance Assignment",
                      "default": "Audit",
                      "type": "string",
                      "enum": [
                        "Audit",
                        "ApplyAndAutoCorrect"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceAssignmentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Audit",
                            "value": "Audit",
                            "description": "Report on the state of the machine, but don't make changes."
                          },
                          {
                            "name": "ApplyAndAutoCorrect",
                            "value": "ApplyAndAutoCorrect",
                            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                          }
                        ]
                      }
                    },
                    "wdacComplianceAssignment": {
                      "description": "WDAC Compliance Assignment",
                      "default": "Audit",
                      "type": "string",
                      "enum": [
                        "Audit",
                        "ApplyAndAutoCorrect"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceAssignmentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Audit",
                            "value": "Audit",
                            "description": "Report on the state of the machine, but don't make changes."
                          },
                          {
                            "name": "ApplyAndAutoCorrect",
                            "value": "ApplyAndAutoCorrect",
                            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                          }
                        ]
                      }
                    },
                    "smbEncryptionForIntraClusterTrafficComplianceAssignment": {
                      "description": "SMB encryption for intra-cluster traffic Compliance Assignment",
                      "default": "Audit",
                      "type": "string",
                      "enum": [
                        "Audit",
                        "ApplyAndAutoCorrect"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceAssignmentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Audit",
                            "value": "Audit",
                            "description": "Report on the state of the machine, but don't make changes."
                          },
                          {
                            "name": "ApplyAndAutoCorrect",
                            "value": "ApplyAndAutoCorrect",
                            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                          }
                        ]
                      }
                    },
                    "securityComplianceStatus": {
                      "description": "Security Compliance Status",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "securedCoreCompliance": {
                          "description": "Indicates whether HCI hosts meets secured-core server requirements.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "wdacCompliance": {
                          "description": "Indicates whether HCI hosts have enforced consistent Windows Defender Application Control.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "dataAtRestEncrypted": {
                          "description": "Indicates whether data at-rest encryption is enabled on Azure Stack HCI clustered volumes.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "dataInTransitProtected": {
                          "description": "Indicates whether HCI cluster has data in-transit protection.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "lastUpdated": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time in UTC when compliance status was last updated.",
                          "readOnly": true
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SecuritySettings_CreateOrUpdate",
        "tags": [
          "SecuritySettings"
        ],
        "description": "Create a security setting",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "securitySettingsName",
            "in": "path",
            "description": "Name of security setting",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          },
          {
            "name": "resource",
            "in": "body",
            "description": "Resource create parameters.",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Security settings proxy resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "securedCoreComplianceAssignment": {
                      "description": "Secured Core Compliance Assignment",
                      "default": "Audit",
                      "type": "string",
                      "enum": [
                        "Audit",
                        "ApplyAndAutoCorrect"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceAssignmentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Audit",
                            "value": "Audit",
                            "description": "Report on the state of the machine, but don't make changes."
                          },
                          {
                            "name": "ApplyAndAutoCorrect",
                            "value": "ApplyAndAutoCorrect",
                            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                          }
                        ]
                      }
                    },
                    "wdacComplianceAssignment": {
                      "description": "WDAC Compliance Assignment",
                      "default": "Audit",
                      "type": "string",
                      "enum": [
                        "Audit",
                        "ApplyAndAutoCorrect"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceAssignmentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Audit",
                            "value": "Audit",
                            "description": "Report on the state of the machine, but don't make changes."
                          },
                          {
                            "name": "ApplyAndAutoCorrect",
                            "value": "ApplyAndAutoCorrect",
                            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                          }
                        ]
                      }
                    },
                    "smbEncryptionForIntraClusterTrafficComplianceAssignment": {
                      "description": "SMB encryption for intra-cluster traffic Compliance Assignment",
                      "default": "Audit",
                      "type": "string",
                      "enum": [
                        "Audit",
                        "ApplyAndAutoCorrect"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceAssignmentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Audit",
                            "value": "Audit",
                            "description": "Report on the state of the machine, but don't make changes."
                          },
                          {
                            "name": "ApplyAndAutoCorrect",
                            "value": "ApplyAndAutoCorrect",
                            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                          }
                        ]
                      }
                    },
                    "securityComplianceStatus": {
                      "description": "Security Compliance Status",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "securedCoreCompliance": {
                          "description": "Indicates whether HCI hosts meets secured-core server requirements.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "wdacCompliance": {
                          "description": "Indicates whether HCI hosts have enforced consistent Windows Defender Application Control.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "dataAtRestEncrypted": {
                          "description": "Indicates whether data at-rest encryption is enabled on Azure Stack HCI clustered volumes.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "dataInTransitProtected": {
                          "description": "Indicates whether HCI cluster has data in-transit protection.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "lastUpdated": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time in UTC when compliance status was last updated.",
                          "readOnly": true
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Resource 'SecuritySetting' update operation succeeded",
            "schema": {
              "type": "object",
              "description": "Security settings proxy resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "securedCoreComplianceAssignment": {
                      "description": "Secured Core Compliance Assignment",
                      "default": "Audit",
                      "type": "string",
                      "enum": [
                        "Audit",
                        "ApplyAndAutoCorrect"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceAssignmentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Audit",
                            "value": "Audit",
                            "description": "Report on the state of the machine, but don't make changes."
                          },
                          {
                            "name": "ApplyAndAutoCorrect",
                            "value": "ApplyAndAutoCorrect",
                            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                          }
                        ]
                      }
                    },
                    "wdacComplianceAssignment": {
                      "description": "WDAC Compliance Assignment",
                      "default": "Audit",
                      "type": "string",
                      "enum": [
                        "Audit",
                        "ApplyAndAutoCorrect"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceAssignmentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Audit",
                            "value": "Audit",
                            "description": "Report on the state of the machine, but don't make changes."
                          },
                          {
                            "name": "ApplyAndAutoCorrect",
                            "value": "ApplyAndAutoCorrect",
                            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                          }
                        ]
                      }
                    },
                    "smbEncryptionForIntraClusterTrafficComplianceAssignment": {
                      "description": "SMB encryption for intra-cluster traffic Compliance Assignment",
                      "default": "Audit",
                      "type": "string",
                      "enum": [
                        "Audit",
                        "ApplyAndAutoCorrect"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceAssignmentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Audit",
                            "value": "Audit",
                            "description": "Report on the state of the machine, but don't make changes."
                          },
                          {
                            "name": "ApplyAndAutoCorrect",
                            "value": "ApplyAndAutoCorrect",
                            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                          }
                        ]
                      }
                    },
                    "securityComplianceStatus": {
                      "description": "Security Compliance Status",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "securedCoreCompliance": {
                          "description": "Indicates whether HCI hosts meets secured-core server requirements.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "wdacCompliance": {
                          "description": "Indicates whether HCI hosts have enforced consistent Windows Defender Application Control.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "dataAtRestEncrypted": {
                          "description": "Indicates whether data at-rest encryption is enabled on Azure Stack HCI clustered volumes.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "dataInTransitProtected": {
                          "description": "Indicates whether HCI cluster has data in-transit protection.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "lastUpdated": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time in UTC when compliance status was last updated.",
                          "readOnly": true
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource 'SecuritySetting' create operation succeeded",
            "schema": {
              "type": "object",
              "description": "Security settings proxy resource",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "x-ms-client-flatten": true,
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "type": "object",
                  "properties": {
                    "securedCoreComplianceAssignment": {
                      "description": "Secured Core Compliance Assignment",
                      "default": "Audit",
                      "type": "string",
                      "enum": [
                        "Audit",
                        "ApplyAndAutoCorrect"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceAssignmentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Audit",
                            "value": "Audit",
                            "description": "Report on the state of the machine, but don't make changes."
                          },
                          {
                            "name": "ApplyAndAutoCorrect",
                            "value": "ApplyAndAutoCorrect",
                            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                          }
                        ]
                      }
                    },
                    "wdacComplianceAssignment": {
                      "description": "WDAC Compliance Assignment",
                      "default": "Audit",
                      "type": "string",
                      "enum": [
                        "Audit",
                        "ApplyAndAutoCorrect"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceAssignmentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Audit",
                            "value": "Audit",
                            "description": "Report on the state of the machine, but don't make changes."
                          },
                          {
                            "name": "ApplyAndAutoCorrect",
                            "value": "ApplyAndAutoCorrect",
                            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                          }
                        ]
                      }
                    },
                    "smbEncryptionForIntraClusterTrafficComplianceAssignment": {
                      "description": "SMB encryption for intra-cluster traffic Compliance Assignment",
                      "default": "Audit",
                      "type": "string",
                      "enum": [
                        "Audit",
                        "ApplyAndAutoCorrect"
                      ],
                      "x-ms-enum": {
                        "name": "ComplianceAssignmentType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Audit",
                            "value": "Audit",
                            "description": "Report on the state of the machine, but don't make changes."
                          },
                          {
                            "name": "ApplyAndAutoCorrect",
                            "value": "ApplyAndAutoCorrect",
                            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                          }
                        ]
                      }
                    },
                    "securityComplianceStatus": {
                      "description": "Security Compliance Status",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "securedCoreCompliance": {
                          "description": "Indicates whether HCI hosts meets secured-core server requirements.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "wdacCompliance": {
                          "description": "Indicates whether HCI hosts have enforced consistent Windows Defender Application Control.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "dataAtRestEncrypted": {
                          "description": "Indicates whether data at-rest encryption is enabled on Azure Stack HCI clustered volumes.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "dataInTransitProtected": {
                          "description": "Indicates whether HCI cluster has data in-transit protection.",
                          "readOnly": true,
                          "type": "string",
                          "enum": [
                            "Compliant",
                            "NonCompliant",
                            "Pending"
                          ],
                          "x-ms-enum": {
                            "name": "ComplianceStatus",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Compliant",
                                "value": "Compliant",
                                "description": "The resource is compliant"
                              },
                              {
                                "name": "NonCompliant",
                                "value": "NonCompliant",
                                "description": "The resource is non-compliant"
                              },
                              {
                                "name": "Pending",
                                "value": "Pending",
                                "description": "The resource compliance status is pending"
                              }
                            ]
                          }
                        },
                        "lastUpdated": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time in UTC when compliance status was last updated.",
                          "readOnly": true
                        }
                      }
                    },
                    "provisioningState": {
                      "description": "The status of the last operation.",
                      "type": "string",
                      "readOnly": true,
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Provisioning",
                        "Updating",
                        "Deleting",
                        "Accepted"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "Resource has been created."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "Resource creation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "Resource creation was canceled."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The resource is being provisioned"
                          },
                          {
                            "name": "Updating",
                            "value": "Updating",
                            "description": "The resource is updating"
                          },
                          {
                            "name": "Deleting",
                            "value": "Deleting",
                            "description": "The resource is being deleted"
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The resource create request has been accepted"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            },
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "SecuritySettings_Delete",
        "tags": [
          "SecuritySettings"
        ],
        "description": "Delete a SecuritySetting",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "securitySettingsName",
            "in": "path",
            "description": "Name of security setting",
            "required": true,
            "type": "string",
            "default": "default",
            "pattern": "^[a-zA-Z0-9-]{3,24}$"
          }
        ],
        "responses": {
          "202": {
            "description": "Resource deletion accepted.",
            "headers": {
              "Retry-After": {
                "type": "integer",
                "format": "int32",
                "description": "The Retry-After header can indicate how long the client should wait before polling the operation status."
              },
              "Location": {
                "type": "string",
                "description": "The Location header contains the URL where the status of the long running operation can be checked."
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}/offers/{offerName}/skus": {
      "get": {
        "operationId": "Skus_ListByOffer",
        "description": "List Skus available for a offer within the HCI Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "publisherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the publisher available within HCI cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "offerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the offer available within HCI cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=content,contentVersion to populate additional fields related to the marketplace offer.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of SKU proxy resources for the HCI cluster.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of SKU proxy resources.",
                  "type": "array",
                  "items": {
                    "description": "Sku details.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "SKU properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning State",
                            "type": "string",
                            "readOnly": true
                          },
                          "publisherId": {
                            "type": "string",
                            "description": "Identifier of the Publisher for the offer"
                          },
                          "offerId": {
                            "type": "string",
                            "description": "Identifier of the Offer for the sku"
                          },
                          "content": {
                            "type": "string",
                            "description": "JSON serialized catalog content of the sku offer"
                          },
                          "contentVersion": {
                            "type": "string",
                            "description": "The API version of the catalog service used to serve the catalog content"
                          },
                          "skuMappings": {
                            "type": "array",
                            "description": "Array of SKU mappings",
                            "items": {
                              "description": "SKU Mapping details.",
                              "type": "object",
                              "properties": {
                                "catalogPlanId": {
                                  "type": "string",
                                  "description": "Identifier of the CatalogPlan for the sku"
                                },
                                "marketplaceSkuId": {
                                  "type": "string",
                                  "description": "Identifier for the sku"
                                },
                                "marketplaceSkuVersions": {
                                  "type": "array",
                                  "description": "Array of SKU versions available",
                                  "items": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                },
                "nextLink": {
                  "description": "Link to the next set of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/publishers/{publisherName}/offers/{offerName}/skus/{skuName}": {
      "get": {
        "operationId": "Skus_Get",
        "description": "Get SKU resource details within a offer of HCI Cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "publisherName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the publisher available within HCI cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "offerName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the offer available within HCI cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "skuName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the SKU available within HCI cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specify $expand=content,contentVersion to populate additional fields related to the marketplace offer.",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Sku details.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "SKU properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning State",
                      "type": "string",
                      "readOnly": true
                    },
                    "publisherId": {
                      "type": "string",
                      "description": "Identifier of the Publisher for the offer"
                    },
                    "offerId": {
                      "type": "string",
                      "description": "Identifier of the Offer for the sku"
                    },
                    "content": {
                      "type": "string",
                      "description": "JSON serialized catalog content of the sku offer"
                    },
                    "contentVersion": {
                      "type": "string",
                      "description": "The API version of the catalog service used to serve the catalog content"
                    },
                    "skuMappings": {
                      "type": "array",
                      "description": "Array of SKU mappings",
                      "items": {
                        "description": "SKU Mapping details.",
                        "type": "object",
                        "properties": {
                          "catalogPlanId": {
                            "type": "string",
                            "description": "Identifier of the CatalogPlan for the sku"
                          },
                          "marketplaceSkuId": {
                            "type": "string",
                            "description": "Identifier for the sku"
                          },
                          "marketplaceSkuVersions": {
                            "type": "array",
                            "description": "Array of SKU versions available",
                            "items": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "x-ms-identifiers": []
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}/updateRuns": {
      "get": {
        "operationId": "UpdateRuns_List",
        "description": "List all Update runs for a specified update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "updateName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Update",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateRunList"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}/updateRuns/{updateRunName}": {
      "delete": {
        "operationId": "UpdateRuns_Delete",
        "description": "Delete specified Update Run",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "updateName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Update",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "updateRunName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Update Run",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "ACCEPTED",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "put": {
        "operationId": "UpdateRuns_Put",
        "description": "Put Update runs for a specified update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "updateName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Update",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "updateRunName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Update Run",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "updateRunsProperties",
            "in": "body",
            "description": "Properties of the updateRuns object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateRun"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateRun"
            }
          }
        }
      },
      "get": {
        "operationId": "UpdateRuns_Get",
        "description": "Get the Update run for a specified update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "updateName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Update",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "updateRunName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Update Run",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UpdateRun"
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updateSummaries": {
      "get": {
        "operationId": "UpdateSummaries_List",
        "description": "List all Update summaries under the HCI cluster",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Update Summaries",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of Update Summaries",
                  "type": "array",
                  "items": {
                    "description": "Get the update summaries for the cluster",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "description": "Update summaries properties",
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the UpdateSummaries proxy resource. Indicates the current lifecycle status of the update summary operation, such as whether it has been accepted, is in progress, or has completed.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Provisioning"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The update summary operation completed successfully."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The update summary operation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The update summary operation was canceled before completion."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The update summary operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The update summary operation is currently being provisioned."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "oemFamily": {
                            "description": "OEM family name.",
                            "type": "string"
                          },
                          "currentOemVersion": {
                            "description": "Current OEM Version.",
                            "type": "string"
                          },
                          "hardwareModel": {
                            "description": "Name of the hardware model.",
                            "type": "string"
                          },
                          "packageVersions": {
                            "description": "Current version of each updatable component.",
                            "type": "array",
                            "items": {
                              "description": "Current version of each updatable component.",
                              "type": "object",
                              "properties": {
                                "packageType": {
                                  "description": "Package type",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Package version",
                                  "type": "string"
                                },
                                "lastUpdated": {
                                  "description": "Last time this component was updated.",
                                  "type": "string",
                                  "format": "date-time"
                                }
                              }
                            },
                            "x-ms-client-flatten": true,
                            "x-ms-identifiers": [
                              "version"
                            ]
                          },
                          "currentVersion": {
                            "description": "Current Solution Bundle version of the stamp.",
                            "type": "string"
                          },
                          "currentSbeVersion": {
                            "description": "Current Sbe version of the stamp.",
                            "type": "string"
                          },
                          "lastUpdated": {
                            "description": "Last time an update installation completed successfully.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "lastChecked": {
                            "description": "Last time the update service successfully checked for updates",
                            "type": "string",
                            "format": "date-time"
                          },
                          "healthState": {
                            "description": "Overall health state for update-specific health checks.",
                            "type": "object",
                            "x-ms-client-flatten": true,
                            "enum": [
                              "Unknown",
                              "Success",
                              "Failure",
                              "Warning",
                              "Error",
                              "InProgress"
                            ],
                            "x-ms-enum": {
                              "name": "HealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "The health state is not known or cannot be determined."
                                },
                                {
                                  "name": "Success",
                                  "value": "Success",
                                  "description": "The component is healthy and operating as expected."
                                },
                                {
                                  "name": "Failure",
                                  "value": "Failure",
                                  "description": "The component has failed and is not functioning properly."
                                },
                                {
                                  "name": "Warning",
                                  "value": "Warning",
                                  "description": "The component has a warning that may require attention but is still operational."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "The component has encountered an error affecting its functionality."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The health evaluation or operation is currently in progress."
                                }
                              ]
                            }
                          },
                          "healthCheckResult": {
                            "description": "An array of pre-check result objects.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                                  "type": "string"
                                },
                                "displayName": {
                                  "description": "The health check DisplayName localized of the individual test executed.",
                                  "type": "string"
                                },
                                "tags": {
                                  "description": "Key-value pairs that allow grouping/filtering individual tests.",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "Key that allow grouping/filtering individual tests.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value of the key that allow grouping/filtering individual tests.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "healthCheckTags": {
                                  "description": "Key-value pairs that allow grouping/filtering individual tests.",
                                  "type": "object"
                                },
                                "title": {
                                  "description": "User-facing name; one or more sentences indicating the direct issue.",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                                  "type": "string",
                                  "enum": [
                                    "Succeeded",
                                    "Failed",
                                    "InProgress"
                                  ],
                                  "x-ms-enum": {
                                    "name": "status",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Succeeded",
                                        "value": "Succeeded",
                                        "description": "The check completed successfully."
                                      },
                                      {
                                        "name": "Failed",
                                        "value": "Failed",
                                        "description": "The check completed but failed."
                                      },
                                      {
                                        "name": "InProgress",
                                        "value": "InProgress",
                                        "description": "The check is currently in progress."
                                      }
                                    ]
                                  }
                                },
                                "severity": {
                                  "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                                  "type": "string",
                                  "enum": [
                                    "Critical",
                                    "Warning",
                                    "Informational",
                                    "Hidden"
                                  ],
                                  "x-ms-enum": {
                                    "name": "severity",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Critical",
                                        "value": "Critical",
                                        "description": "A critical issue that blocks updates and requires immediate attention."
                                      },
                                      {
                                        "name": "Warning",
                                        "value": "Warning",
                                        "description": "A warning that may indicate a potential issue but does not block updates."
                                      },
                                      {
                                        "name": "Informational",
                                        "value": "Informational",
                                        "description": "General information that does not indicate any issue."
                                      },
                                      {
                                        "name": "Hidden",
                                        "value": "Hidden",
                                        "description": "The result is hidden and not shown in the output."
                                      }
                                    ]
                                  }
                                },
                                "description": {
                                  "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                                  "type": "string"
                                },
                                "remediation": {
                                  "description": "Set of steps that can be taken to resolve the issue found.",
                                  "type": "string"
                                },
                                "targetResourceID": {
                                  "description": "The unique identifier for the affected resource (such as a node or drive).",
                                  "type": "string"
                                },
                                "targetResourceName": {
                                  "description": "The name of the affected resource.",
                                  "type": "string"
                                },
                                "targetResourceType": {
                                  "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "The time in which the HealthCheck was called.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "additionalData": {
                                  "description": "Property bag of key value pairs for additional information.",
                                  "type": "string"
                                },
                                "healthCheckSource": {
                                  "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-client-flatten": true,
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "healthCheckDate": {
                            "description": "Last time the package-specific checks were run.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "state": {
                            "description": "Overall update state of the stamp. Indicates the current status of update deployment across the stamp, including preparation, application, and any issues encountered.",
                            "type": "string",
                            "enum": [
                              "Unknown",
                              "AppliedSuccessfully",
                              "UpdateAvailable",
                              "UpdateInProgress",
                              "UpdateFailed",
                              "NeedsAttention",
                              "PreparationInProgress",
                              "PreparationFailed"
                            ],
                            "x-ms-enum": {
                              "name": "updateSummariesPropertiesState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "The update state is not known."
                                },
                                {
                                  "name": "AppliedSuccessfully",
                                  "value": "AppliedSuccessfully",
                                  "description": "Updates have been successfully applied to the stamp."
                                },
                                {
                                  "name": "UpdateAvailable",
                                  "value": "UpdateAvailable",
                                  "description": "Updates are available but have not yet been applied."
                                },
                                {
                                  "name": "UpdateInProgress",
                                  "value": "UpdateInProgress",
                                  "description": "Updates are currently being applied to the stamp."
                                },
                                {
                                  "name": "UpdateFailed",
                                  "value": "UpdateFailed",
                                  "description": "The update process failed."
                                },
                                {
                                  "name": "NeedsAttention",
                                  "value": "NeedsAttention",
                                  "description": "The update process requires user intervention or has encountered issues needing attention."
                                },
                                {
                                  "name": "PreparationInProgress",
                                  "value": "PreparationInProgress",
                                  "description": "Preparation for the update is currently in progress."
                                },
                                {
                                  "name": "PreparationFailed",
                                  "value": "PreparationFailed",
                                  "description": "Preparation for the update failed."
                                }
                              ]
                            }
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": []
                },
                "nextLink": {
                  "description": "Link to the next set of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updateSummaries/default": {
      "delete": {
        "operationId": "UpdateSummaries_Delete",
        "description": "Delete Update Summaries",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "ACCEPTED",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "put": {
        "operationId": "UpdateSummaries_Put",
        "description": "Put Update summaries under the HCI cluster",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "updateLocationProperties",
            "in": "body",
            "description": "Properties of the UpdateSummaries resource",
            "required": true,
            "schema": {
              "description": "Get the update summaries for the cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Update summaries properties",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the UpdateSummaries proxy resource. Indicates the current lifecycle status of the update summary operation, such as whether it has been accepted, is in progress, or has completed.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The update summary operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The update summary operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The update summary operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The update summary operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The update summary operation is currently being provisioned."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "oemFamily": {
                      "description": "OEM family name.",
                      "type": "string"
                    },
                    "currentOemVersion": {
                      "description": "Current OEM Version.",
                      "type": "string"
                    },
                    "hardwareModel": {
                      "description": "Name of the hardware model.",
                      "type": "string"
                    },
                    "packageVersions": {
                      "description": "Current version of each updatable component.",
                      "type": "array",
                      "items": {
                        "description": "Current version of each updatable component.",
                        "type": "object",
                        "properties": {
                          "packageType": {
                            "description": "Package type",
                            "type": "string"
                          },
                          "version": {
                            "description": "Package version",
                            "type": "string"
                          },
                          "lastUpdated": {
                            "description": "Last time this component was updated.",
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "x-ms-client-flatten": true,
                      "x-ms-identifiers": [
                        "version"
                      ]
                    },
                    "currentVersion": {
                      "description": "Current Solution Bundle version of the stamp.",
                      "type": "string"
                    },
                    "currentSbeVersion": {
                      "description": "Current Sbe version of the stamp.",
                      "type": "string"
                    },
                    "lastUpdated": {
                      "description": "Last time an update installation completed successfully.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastChecked": {
                      "description": "Last time the update service successfully checked for updates",
                      "type": "string",
                      "format": "date-time"
                    },
                    "healthState": {
                      "description": "Overall health state for update-specific health checks.",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "enum": [
                        "Unknown",
                        "Success",
                        "Failure",
                        "Warning",
                        "Error",
                        "InProgress"
                      ],
                      "x-ms-enum": {
                        "name": "HealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "The health state is not known or cannot be determined."
                          },
                          {
                            "name": "Success",
                            "value": "Success",
                            "description": "The component is healthy and operating as expected."
                          },
                          {
                            "name": "Failure",
                            "value": "Failure",
                            "description": "The component has failed and is not functioning properly."
                          },
                          {
                            "name": "Warning",
                            "value": "Warning",
                            "description": "The component has a warning that may require attention but is still operational."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "The component has encountered an error affecting its functionality."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The health evaluation or operation is currently in progress."
                          }
                        ]
                      }
                    },
                    "healthCheckResult": {
                      "description": "An array of pre-check result objects.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The health check DisplayName localized of the individual test executed.",
                            "type": "string"
                          },
                          "tags": {
                            "description": "Key-value pairs that allow grouping/filtering individual tests.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "Key that allow grouping/filtering individual tests.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the key that allow grouping/filtering individual tests.",
                                "type": "string"
                              }
                            }
                          },
                          "healthCheckTags": {
                            "description": "Key-value pairs that allow grouping/filtering individual tests.",
                            "type": "object"
                          },
                          "title": {
                            "description": "User-facing name; one or more sentences indicating the direct issue.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "InProgress"
                            ],
                            "x-ms-enum": {
                              "name": "status",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The check completed successfully."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The check completed but failed."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The check is currently in progress."
                                }
                              ]
                            }
                          },
                          "severity": {
                            "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                            "type": "string",
                            "enum": [
                              "Critical",
                              "Warning",
                              "Informational",
                              "Hidden"
                            ],
                            "x-ms-enum": {
                              "name": "severity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Critical",
                                  "value": "Critical",
                                  "description": "A critical issue that blocks updates and requires immediate attention."
                                },
                                {
                                  "name": "Warning",
                                  "value": "Warning",
                                  "description": "A warning that may indicate a potential issue but does not block updates."
                                },
                                {
                                  "name": "Informational",
                                  "value": "Informational",
                                  "description": "General information that does not indicate any issue."
                                },
                                {
                                  "name": "Hidden",
                                  "value": "Hidden",
                                  "description": "The result is hidden and not shown in the output."
                                }
                              ]
                            }
                          },
                          "description": {
                            "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                            "type": "string"
                          },
                          "remediation": {
                            "description": "Set of steps that can be taken to resolve the issue found.",
                            "type": "string"
                          },
                          "targetResourceID": {
                            "description": "The unique identifier for the affected resource (such as a node or drive).",
                            "type": "string"
                          },
                          "targetResourceName": {
                            "description": "The name of the affected resource.",
                            "type": "string"
                          },
                          "targetResourceType": {
                            "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                            "type": "string"
                          },
                          "timestamp": {
                            "description": "The time in which the HealthCheck was called.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "additionalData": {
                            "description": "Property bag of key value pairs for additional information.",
                            "type": "string"
                          },
                          "healthCheckSource": {
                            "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-client-flatten": true,
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "healthCheckDate": {
                      "description": "Last time the package-specific checks were run.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "state": {
                      "description": "Overall update state of the stamp. Indicates the current status of update deployment across the stamp, including preparation, application, and any issues encountered.",
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "AppliedSuccessfully",
                        "UpdateAvailable",
                        "UpdateInProgress",
                        "UpdateFailed",
                        "NeedsAttention",
                        "PreparationInProgress",
                        "PreparationFailed"
                      ],
                      "x-ms-enum": {
                        "name": "updateSummariesPropertiesState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "The update state is not known."
                          },
                          {
                            "name": "AppliedSuccessfully",
                            "value": "AppliedSuccessfully",
                            "description": "Updates have been successfully applied to the stamp."
                          },
                          {
                            "name": "UpdateAvailable",
                            "value": "UpdateAvailable",
                            "description": "Updates are available but have not yet been applied."
                          },
                          {
                            "name": "UpdateInProgress",
                            "value": "UpdateInProgress",
                            "description": "Updates are currently being applied to the stamp."
                          },
                          {
                            "name": "UpdateFailed",
                            "value": "UpdateFailed",
                            "description": "The update process failed."
                          },
                          {
                            "name": "NeedsAttention",
                            "value": "NeedsAttention",
                            "description": "The update process requires user intervention or has encountered issues needing attention."
                          },
                          {
                            "name": "PreparationInProgress",
                            "value": "PreparationInProgress",
                            "description": "Preparation for the update is currently in progress."
                          },
                          {
                            "name": "PreparationFailed",
                            "value": "PreparationFailed",
                            "description": "Preparation for the update failed."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Get the update summaries for the cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Update summaries properties",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the UpdateSummaries proxy resource. Indicates the current lifecycle status of the update summary operation, such as whether it has been accepted, is in progress, or has completed.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The update summary operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The update summary operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The update summary operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The update summary operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The update summary operation is currently being provisioned."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "oemFamily": {
                      "description": "OEM family name.",
                      "type": "string"
                    },
                    "currentOemVersion": {
                      "description": "Current OEM Version.",
                      "type": "string"
                    },
                    "hardwareModel": {
                      "description": "Name of the hardware model.",
                      "type": "string"
                    },
                    "packageVersions": {
                      "description": "Current version of each updatable component.",
                      "type": "array",
                      "items": {
                        "description": "Current version of each updatable component.",
                        "type": "object",
                        "properties": {
                          "packageType": {
                            "description": "Package type",
                            "type": "string"
                          },
                          "version": {
                            "description": "Package version",
                            "type": "string"
                          },
                          "lastUpdated": {
                            "description": "Last time this component was updated.",
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "x-ms-client-flatten": true,
                      "x-ms-identifiers": [
                        "version"
                      ]
                    },
                    "currentVersion": {
                      "description": "Current Solution Bundle version of the stamp.",
                      "type": "string"
                    },
                    "currentSbeVersion": {
                      "description": "Current Sbe version of the stamp.",
                      "type": "string"
                    },
                    "lastUpdated": {
                      "description": "Last time an update installation completed successfully.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastChecked": {
                      "description": "Last time the update service successfully checked for updates",
                      "type": "string",
                      "format": "date-time"
                    },
                    "healthState": {
                      "description": "Overall health state for update-specific health checks.",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "enum": [
                        "Unknown",
                        "Success",
                        "Failure",
                        "Warning",
                        "Error",
                        "InProgress"
                      ],
                      "x-ms-enum": {
                        "name": "HealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "The health state is not known or cannot be determined."
                          },
                          {
                            "name": "Success",
                            "value": "Success",
                            "description": "The component is healthy and operating as expected."
                          },
                          {
                            "name": "Failure",
                            "value": "Failure",
                            "description": "The component has failed and is not functioning properly."
                          },
                          {
                            "name": "Warning",
                            "value": "Warning",
                            "description": "The component has a warning that may require attention but is still operational."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "The component has encountered an error affecting its functionality."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The health evaluation or operation is currently in progress."
                          }
                        ]
                      }
                    },
                    "healthCheckResult": {
                      "description": "An array of pre-check result objects.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The health check DisplayName localized of the individual test executed.",
                            "type": "string"
                          },
                          "tags": {
                            "description": "Key-value pairs that allow grouping/filtering individual tests.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "Key that allow grouping/filtering individual tests.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the key that allow grouping/filtering individual tests.",
                                "type": "string"
                              }
                            }
                          },
                          "healthCheckTags": {
                            "description": "Key-value pairs that allow grouping/filtering individual tests.",
                            "type": "object"
                          },
                          "title": {
                            "description": "User-facing name; one or more sentences indicating the direct issue.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "InProgress"
                            ],
                            "x-ms-enum": {
                              "name": "status",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The check completed successfully."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The check completed but failed."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The check is currently in progress."
                                }
                              ]
                            }
                          },
                          "severity": {
                            "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                            "type": "string",
                            "enum": [
                              "Critical",
                              "Warning",
                              "Informational",
                              "Hidden"
                            ],
                            "x-ms-enum": {
                              "name": "severity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Critical",
                                  "value": "Critical",
                                  "description": "A critical issue that blocks updates and requires immediate attention."
                                },
                                {
                                  "name": "Warning",
                                  "value": "Warning",
                                  "description": "A warning that may indicate a potential issue but does not block updates."
                                },
                                {
                                  "name": "Informational",
                                  "value": "Informational",
                                  "description": "General information that does not indicate any issue."
                                },
                                {
                                  "name": "Hidden",
                                  "value": "Hidden",
                                  "description": "The result is hidden and not shown in the output."
                                }
                              ]
                            }
                          },
                          "description": {
                            "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                            "type": "string"
                          },
                          "remediation": {
                            "description": "Set of steps that can be taken to resolve the issue found.",
                            "type": "string"
                          },
                          "targetResourceID": {
                            "description": "The unique identifier for the affected resource (such as a node or drive).",
                            "type": "string"
                          },
                          "targetResourceName": {
                            "description": "The name of the affected resource.",
                            "type": "string"
                          },
                          "targetResourceType": {
                            "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                            "type": "string"
                          },
                          "timestamp": {
                            "description": "The time in which the HealthCheck was called.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "additionalData": {
                            "description": "Property bag of key value pairs for additional information.",
                            "type": "string"
                          },
                          "healthCheckSource": {
                            "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-client-flatten": true,
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "healthCheckDate": {
                      "description": "Last time the package-specific checks were run.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "state": {
                      "description": "Overall update state of the stamp. Indicates the current status of update deployment across the stamp, including preparation, application, and any issues encountered.",
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "AppliedSuccessfully",
                        "UpdateAvailable",
                        "UpdateInProgress",
                        "UpdateFailed",
                        "NeedsAttention",
                        "PreparationInProgress",
                        "PreparationFailed"
                      ],
                      "x-ms-enum": {
                        "name": "updateSummariesPropertiesState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "The update state is not known."
                          },
                          {
                            "name": "AppliedSuccessfully",
                            "value": "AppliedSuccessfully",
                            "description": "Updates have been successfully applied to the stamp."
                          },
                          {
                            "name": "UpdateAvailable",
                            "value": "UpdateAvailable",
                            "description": "Updates are available but have not yet been applied."
                          },
                          {
                            "name": "UpdateInProgress",
                            "value": "UpdateInProgress",
                            "description": "Updates are currently being applied to the stamp."
                          },
                          {
                            "name": "UpdateFailed",
                            "value": "UpdateFailed",
                            "description": "The update process failed."
                          },
                          {
                            "name": "NeedsAttention",
                            "value": "NeedsAttention",
                            "description": "The update process requires user intervention or has encountered issues needing attention."
                          },
                          {
                            "name": "PreparationInProgress",
                            "value": "PreparationInProgress",
                            "description": "Preparation for the update is currently in progress."
                          },
                          {
                            "name": "PreparationFailed",
                            "value": "PreparationFailed",
                            "description": "Preparation for the update failed."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "UpdateSummaries_Get",
        "description": "Get all Update summaries under the HCI cluster",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Get the update summaries for the cluster",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Update summaries properties",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the UpdateSummaries proxy resource. Indicates the current lifecycle status of the update summary operation, such as whether it has been accepted, is in progress, or has completed.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The update summary operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The update summary operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The update summary operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The update summary operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The update summary operation is currently being provisioned."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "oemFamily": {
                      "description": "OEM family name.",
                      "type": "string"
                    },
                    "currentOemVersion": {
                      "description": "Current OEM Version.",
                      "type": "string"
                    },
                    "hardwareModel": {
                      "description": "Name of the hardware model.",
                      "type": "string"
                    },
                    "packageVersions": {
                      "description": "Current version of each updatable component.",
                      "type": "array",
                      "items": {
                        "description": "Current version of each updatable component.",
                        "type": "object",
                        "properties": {
                          "packageType": {
                            "description": "Package type",
                            "type": "string"
                          },
                          "version": {
                            "description": "Package version",
                            "type": "string"
                          },
                          "lastUpdated": {
                            "description": "Last time this component was updated.",
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "x-ms-client-flatten": true,
                      "x-ms-identifiers": [
                        "version"
                      ]
                    },
                    "currentVersion": {
                      "description": "Current Solution Bundle version of the stamp.",
                      "type": "string"
                    },
                    "currentSbeVersion": {
                      "description": "Current Sbe version of the stamp.",
                      "type": "string"
                    },
                    "lastUpdated": {
                      "description": "Last time an update installation completed successfully.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "lastChecked": {
                      "description": "Last time the update service successfully checked for updates",
                      "type": "string",
                      "format": "date-time"
                    },
                    "healthState": {
                      "description": "Overall health state for update-specific health checks.",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "enum": [
                        "Unknown",
                        "Success",
                        "Failure",
                        "Warning",
                        "Error",
                        "InProgress"
                      ],
                      "x-ms-enum": {
                        "name": "HealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "The health state is not known or cannot be determined."
                          },
                          {
                            "name": "Success",
                            "value": "Success",
                            "description": "The component is healthy and operating as expected."
                          },
                          {
                            "name": "Failure",
                            "value": "Failure",
                            "description": "The component has failed and is not functioning properly."
                          },
                          {
                            "name": "Warning",
                            "value": "Warning",
                            "description": "The component has a warning that may require attention but is still operational."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "The component has encountered an error affecting its functionality."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The health evaluation or operation is currently in progress."
                          }
                        ]
                      }
                    },
                    "healthCheckResult": {
                      "description": "An array of pre-check result objects.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The health check DisplayName localized of the individual test executed.",
                            "type": "string"
                          },
                          "tags": {
                            "description": "Key-value pairs that allow grouping/filtering individual tests.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "Key that allow grouping/filtering individual tests.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the key that allow grouping/filtering individual tests.",
                                "type": "string"
                              }
                            }
                          },
                          "healthCheckTags": {
                            "description": "Key-value pairs that allow grouping/filtering individual tests.",
                            "type": "object"
                          },
                          "title": {
                            "description": "User-facing name; one or more sentences indicating the direct issue.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "InProgress"
                            ],
                            "x-ms-enum": {
                              "name": "status",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The check completed successfully."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The check completed but failed."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The check is currently in progress."
                                }
                              ]
                            }
                          },
                          "severity": {
                            "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                            "type": "string",
                            "enum": [
                              "Critical",
                              "Warning",
                              "Informational",
                              "Hidden"
                            ],
                            "x-ms-enum": {
                              "name": "severity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Critical",
                                  "value": "Critical",
                                  "description": "A critical issue that blocks updates and requires immediate attention."
                                },
                                {
                                  "name": "Warning",
                                  "value": "Warning",
                                  "description": "A warning that may indicate a potential issue but does not block updates."
                                },
                                {
                                  "name": "Informational",
                                  "value": "Informational",
                                  "description": "General information that does not indicate any issue."
                                },
                                {
                                  "name": "Hidden",
                                  "value": "Hidden",
                                  "description": "The result is hidden and not shown in the output."
                                }
                              ]
                            }
                          },
                          "description": {
                            "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                            "type": "string"
                          },
                          "remediation": {
                            "description": "Set of steps that can be taken to resolve the issue found.",
                            "type": "string"
                          },
                          "targetResourceID": {
                            "description": "The unique identifier for the affected resource (such as a node or drive).",
                            "type": "string"
                          },
                          "targetResourceName": {
                            "description": "The name of the affected resource.",
                            "type": "string"
                          },
                          "targetResourceType": {
                            "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                            "type": "string"
                          },
                          "timestamp": {
                            "description": "The time in which the HealthCheck was called.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "additionalData": {
                            "description": "Property bag of key value pairs for additional information.",
                            "type": "string"
                          },
                          "healthCheckSource": {
                            "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-client-flatten": true,
                      "x-ms-identifiers": [
                        "name"
                      ]
                    },
                    "healthCheckDate": {
                      "description": "Last time the package-specific checks were run.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "state": {
                      "description": "Overall update state of the stamp. Indicates the current status of update deployment across the stamp, including preparation, application, and any issues encountered.",
                      "type": "string",
                      "enum": [
                        "Unknown",
                        "AppliedSuccessfully",
                        "UpdateAvailable",
                        "UpdateInProgress",
                        "UpdateFailed",
                        "NeedsAttention",
                        "PreparationInProgress",
                        "PreparationFailed"
                      ],
                      "x-ms-enum": {
                        "name": "updateSummariesPropertiesState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "The update state is not known."
                          },
                          {
                            "name": "AppliedSuccessfully",
                            "value": "AppliedSuccessfully",
                            "description": "Updates have been successfully applied to the stamp."
                          },
                          {
                            "name": "UpdateAvailable",
                            "value": "UpdateAvailable",
                            "description": "Updates are available but have not yet been applied."
                          },
                          {
                            "name": "UpdateInProgress",
                            "value": "UpdateInProgress",
                            "description": "Updates are currently being applied to the stamp."
                          },
                          {
                            "name": "UpdateFailed",
                            "value": "UpdateFailed",
                            "description": "The update process failed."
                          },
                          {
                            "name": "NeedsAttention",
                            "value": "NeedsAttention",
                            "description": "The update process requires user intervention or has encountered issues needing attention."
                          },
                          {
                            "name": "PreparationInProgress",
                            "value": "PreparationInProgress",
                            "description": "Preparation for the update is currently in progress."
                          },
                          {
                            "name": "PreparationFailed",
                            "value": "PreparationFailed",
                            "description": "Preparation for the update failed."
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}/apply": {
      "post": {
        "operationId": "Updates_Post",
        "description": "Apply Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "updateName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Update",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "ACCEPTED",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates": {
      "get": {
        "operationId": "Updates_List",
        "description": "List all Updates",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "List of Updates",
              "type": "object",
              "properties": {
                "value": {
                  "description": "List of Updates",
                  "type": "array",
                  "items": {
                    "description": "Update details",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "type": "object",
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "location": {
                        "type": "string",
                        "x-ms-mutability": [
                          "read",
                          "create"
                        ],
                        "description": "The geo-location where the resource lives"
                      },
                      "properties": {
                        "description": "Update properties",
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "properties": {
                          "provisioningState": {
                            "description": "Provisioning state of the Updates proxy resource. Indicates the current lifecycle status of the update operation, such as whether it has been accepted, is in progress, or has completed.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Provisioning"
                            ],
                            "x-ms-enum": {
                              "name": "ProvisioningState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The update operation completed successfully."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The update operation failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "The update operation was canceled before completion."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "The update operation has been accepted and is pending execution."
                                },
                                {
                                  "name": "Provisioning",
                                  "value": "Provisioning",
                                  "description": "The update operation is currently being provisioned."
                                }
                              ]
                            },
                            "readOnly": true
                          },
                          "installedDate": {
                            "description": "Date that the update was installed.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "description": {
                            "description": "Description of the update.",
                            "type": "string"
                          },
                          "minSbeVersionRequired": {
                            "description": "Minimum Sbe Version of the update.",
                            "type": "string"
                          },
                          "state": {
                            "description": "Represents the current state of the update as it relates to this stamp. This includes phases such as preparation, installation, scanning, and error handling, providing insight into the update's progress and any issues encountered.",
                            "type": "string",
                            "enum": [
                              "HasPrerequisite",
                              "Obsolete",
                              "Ready",
                              "NotApplicableBecauseAnotherUpdateIsInProgress",
                              "Preparing",
                              "Installing",
                              "Installed",
                              "PreparationFailed",
                              "InstallationFailed",
                              "Invalid",
                              "Recalled",
                              "Downloading",
                              "DownloadFailed",
                              "HealthChecking",
                              "HealthCheckFailed",
                              "ReadyToInstall",
                              "ScanInProgress",
                              "ScanFailed",
                              "AdditionalContentRequired"
                            ],
                            "x-ms-enum": {
                              "name": "state",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "HasPrerequisite",
                                  "value": "HasPrerequisite",
                                  "description": "The update has prerequisites that must be fulfilled before it can proceed."
                                },
                                {
                                  "name": "Obsolete",
                                  "value": "Obsolete",
                                  "description": "The update is obsolete and no longer applicable."
                                },
                                {
                                  "name": "Ready",
                                  "value": "Ready",
                                  "description": "The update is ready to be installed."
                                },
                                {
                                  "name": "NotApplicableBecauseAnotherUpdateIsInProgress",
                                  "value": "NotApplicableBecauseAnotherUpdateIsInProgress",
                                  "description": "The update cannot be applied because another update is currently in progress."
                                },
                                {
                                  "name": "Preparing",
                                  "value": "Preparing",
                                  "description": "The update is currently in the preparation phase."
                                },
                                {
                                  "name": "Installing",
                                  "value": "Installing",
                                  "description": "The update is currently being installed."
                                },
                                {
                                  "name": "Installed",
                                  "value": "Installed",
                                  "description": "The update has been successfully installed."
                                },
                                {
                                  "name": "PreparationFailed",
                                  "value": "PreparationFailed",
                                  "description": "The update preparation phase failed."
                                },
                                {
                                  "name": "InstallationFailed",
                                  "value": "InstallationFailed",
                                  "description": "The update installation failed."
                                },
                                {
                                  "name": "Invalid",
                                  "value": "Invalid",
                                  "description": "The update is invalid and cannot be applied."
                                },
                                {
                                  "name": "Recalled",
                                  "value": "Recalled",
                                  "description": "The update has been recalled and should not be applied."
                                },
                                {
                                  "name": "Downloading",
                                  "value": "Downloading",
                                  "description": "The update is currently being downloaded."
                                },
                                {
                                  "name": "DownloadFailed",
                                  "value": "DownloadFailed",
                                  "description": "The update download failed."
                                },
                                {
                                  "name": "HealthChecking",
                                  "value": "HealthChecking",
                                  "description": "A health check is being performed before applying the update."
                                },
                                {
                                  "name": "HealthCheckFailed",
                                  "value": "HealthCheckFailed",
                                  "description": "The health check failed, preventing the update from proceeding."
                                },
                                {
                                  "name": "ReadyToInstall",
                                  "value": "ReadyToInstall",
                                  "description": "The update is ready to be installed after successful preparation and checks."
                                },
                                {
                                  "name": "ScanInProgress",
                                  "value": "ScanInProgress",
                                  "description": "The system is scanning for updates."
                                },
                                {
                                  "name": "ScanFailed",
                                  "value": "ScanFailed",
                                  "description": "The scan for updates failed."
                                },
                                {
                                  "name": "AdditionalContentRequired",
                                  "value": "AdditionalContentRequired",
                                  "description": "Additional content is required to proceed with the update."
                                }
                              ]
                            }
                          },
                          "prerequisites": {
                            "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
                            "type": "array",
                            "items": {
                              "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
                              "type": "object",
                              "properties": {
                                "updateType": {
                                  "description": "Updatable component type.",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Version of the prerequisite.",
                                  "type": "string"
                                },
                                "packageName": {
                                  "description": "Friendly name of the prerequisite.",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "packageName"
                            ]
                          },
                          "componentVersions": {
                            "description": "An array of component versions for a Solution Bundle update, and an empty array otherwise.  ",
                            "type": "array",
                            "items": {
                              "description": "Current version of each updatable component.",
                              "type": "object",
                              "properties": {
                                "packageType": {
                                  "description": "Package type",
                                  "type": "string"
                                },
                                "version": {
                                  "description": "Package version",
                                  "type": "string"
                                },
                                "lastUpdated": {
                                  "description": "Last time this component was updated.",
                                  "type": "string",
                                  "format": "date-time"
                                }
                              }
                            },
                            "x-ms-client-flatten": true,
                            "x-ms-identifiers": [
                              "version"
                            ]
                          },
                          "rebootRequired": {
                            "type": "object",
                            "x-ms-client-flatten": true,
                            "description": "Indicates whether a reboot is required after the update or operation. Helps determine if a system restart is necessary to complete the process.",
                            "enum": [
                              "Unknown",
                              "True",
                              "False"
                            ],
                            "x-ms-enum": {
                              "name": "RebootRequirement",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "It is not known whether a reboot is required."
                                },
                                {
                                  "name": "True",
                                  "value": "True",
                                  "description": "A reboot is required to complete the operation."
                                },
                                {
                                  "name": "False",
                                  "value": "False",
                                  "description": "No reboot is required after the operation."
                                }
                              ]
                            }
                          },
                          "healthState": {
                            "description": "Overall health state for update-specific health checks.",
                            "type": "object",
                            "x-ms-client-flatten": true,
                            "enum": [
                              "Unknown",
                              "Success",
                              "Failure",
                              "Warning",
                              "Error",
                              "InProgress"
                            ],
                            "x-ms-enum": {
                              "name": "HealthState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Unknown",
                                  "value": "Unknown",
                                  "description": "The health state is not known or cannot be determined."
                                },
                                {
                                  "name": "Success",
                                  "value": "Success",
                                  "description": "The health check completed successfully and the system is healthy."
                                },
                                {
                                  "name": "Failure",
                                  "value": "Failure",
                                  "description": "The health check failed, indicating a critical issue."
                                },
                                {
                                  "name": "Warning",
                                  "value": "Warning",
                                  "description": "The health check detected a non-critical issue that may require attention."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "An error occurred during the health check process."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The health check is currently in progress."
                                }
                              ]
                            }
                          },
                          "healthCheckResult": {
                            "description": "An array of PrecheckResult objects.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                                  "type": "string"
                                },
                                "displayName": {
                                  "description": "The health check DisplayName localized of the individual test executed.",
                                  "type": "string"
                                },
                                "tags": {
                                  "description": "Key-value pairs that allow grouping/filtering individual tests.",
                                  "type": "object",
                                  "properties": {
                                    "key": {
                                      "description": "Key that allow grouping/filtering individual tests.",
                                      "type": "string"
                                    },
                                    "value": {
                                      "description": "Value of the key that allow grouping/filtering individual tests.",
                                      "type": "string"
                                    }
                                  }
                                },
                                "healthCheckTags": {
                                  "description": "Key-value pairs that allow grouping/filtering individual tests.",
                                  "type": "object"
                                },
                                "title": {
                                  "description": "User-facing name; one or more sentences indicating the direct issue.",
                                  "type": "string"
                                },
                                "status": {
                                  "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                                  "type": "string",
                                  "enum": [
                                    "Succeeded",
                                    "Failed",
                                    "InProgress"
                                  ],
                                  "x-ms-enum": {
                                    "name": "status",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Succeeded",
                                        "value": "Succeeded",
                                        "description": "The check completed successfully."
                                      },
                                      {
                                        "name": "Failed",
                                        "value": "Failed",
                                        "description": "The check completed but failed."
                                      },
                                      {
                                        "name": "InProgress",
                                        "value": "InProgress",
                                        "description": "The check is currently in progress."
                                      }
                                    ]
                                  }
                                },
                                "severity": {
                                  "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                                  "type": "string",
                                  "enum": [
                                    "Critical",
                                    "Warning",
                                    "Informational",
                                    "Hidden"
                                  ],
                                  "x-ms-enum": {
                                    "name": "severity",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Critical",
                                        "value": "Critical",
                                        "description": "A critical issue that blocks updates and requires immediate attention."
                                      },
                                      {
                                        "name": "Warning",
                                        "value": "Warning",
                                        "description": "A warning that may indicate a potential issue but does not block updates."
                                      },
                                      {
                                        "name": "Informational",
                                        "value": "Informational",
                                        "description": "General information that does not indicate any issue."
                                      },
                                      {
                                        "name": "Hidden",
                                        "value": "Hidden",
                                        "description": "The result is hidden and not shown in the output."
                                      }
                                    ]
                                  }
                                },
                                "description": {
                                  "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                                  "type": "string"
                                },
                                "remediation": {
                                  "description": "Set of steps that can be taken to resolve the issue found.",
                                  "type": "string"
                                },
                                "targetResourceID": {
                                  "description": "The unique identifier for the affected resource (such as a node or drive).",
                                  "type": "string"
                                },
                                "targetResourceName": {
                                  "description": "The name of the affected resource.",
                                  "type": "string"
                                },
                                "targetResourceType": {
                                  "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                                  "type": "string"
                                },
                                "timestamp": {
                                  "description": "The time in which the HealthCheck was called.",
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "additionalData": {
                                  "description": "Property bag of key value pairs for additional information.",
                                  "type": "string"
                                },
                                "healthCheckSource": {
                                  "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                                  "type": "string"
                                }
                              }
                            },
                            "x-ms-client-flatten": true
                          },
                          "healthCheckDate": {
                            "description": "Last time the package-specific checks were run.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "packagePath": {
                            "description": "Path where the update package is available.",
                            "type": "string"
                          },
                          "packageSizeInMb": {
                            "description": "Size of the package. This value is a combination of the size from update metadata and size of the payload that results from the live scan operation for OS update content.",
                            "type": "number"
                          },
                          "displayName": {
                            "description": "Display name of the Update",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the update.",
                            "type": "string"
                          },
                          "publisher": {
                            "description": "Publisher of the update package.",
                            "type": "string"
                          },
                          "releaseLink": {
                            "description": "Link to release notes for the update.",
                            "type": "string"
                          },
                          "availabilityType": {
                            "description": "Indicates how the update content is made available for download. This determines whether the update is sourced locally, from an online repository, or requires user notification.",
                            "type": "string",
                            "enum": [
                              "Local",
                              "Online",
                              "Notify"
                            ],
                            "x-ms-enum": {
                              "name": "availabilityType",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Local",
                                  "value": "Local",
                                  "description": "The update content is available locally within the environment."
                                },
                                {
                                  "name": "Online",
                                  "value": "Online",
                                  "description": "The update content is available from an online source."
                                },
                                {
                                  "name": "Notify",
                                  "value": "Notify",
                                  "description": "The system will notify the user when update content becomes available."
                                }
                              ]
                            }
                          },
                          "packageType": {
                            "description": "Customer-visible type of the update.",
                            "type": "string"
                          },
                          "additionalProperties": {
                            "description": "Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information when an update is flagged as Invalid for the stamp based on OEM type.",
                            "type": "string"
                          },
                          "updateStateProperties": {
                            "description": "Additional information regarding the state of the update. See definition of UpdateStateProperties type below for more details on this property.",
                            "type": "object",
                            "x-ms-client-flatten": true,
                            "properties": {
                              "progressPercentage": {
                                "description": "Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded.",
                                "type": "number"
                              },
                              "notifyMessage": {
                                "description": "Brief message with instructions for updates of AvailabilityType Notify.",
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "nextLink": {
                  "description": "Link to the next set of results.",
                  "type": "string",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AzureStackHCI/clusters/{clusterName}/updates/{updateName}": {
      "delete": {
        "operationId": "Updates_Delete",
        "description": "Delete specified Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "updateName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Update",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "ACCEPTED",
            "headers": {
              "Azure-AsyncOperation": {
                "description": "URL to query for status of the operation.",
                "type": "string"
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      },
      "put": {
        "operationId": "Updates_Put",
        "description": "Put specified Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "updateName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Update",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "updateProperties",
            "in": "body",
            "description": "Properties of the Updates object",
            "required": true,
            "schema": {
              "description": "Update details",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Update properties",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Updates proxy resource. Indicates the current lifecycle status of the update operation, such as whether it has been accepted, is in progress, or has completed.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The update operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The update operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The update operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The update operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The update operation is currently being provisioned."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "installedDate": {
                      "description": "Date that the update was installed.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "description": "Description of the update.",
                      "type": "string"
                    },
                    "minSbeVersionRequired": {
                      "description": "Minimum Sbe Version of the update.",
                      "type": "string"
                    },
                    "state": {
                      "description": "Represents the current state of the update as it relates to this stamp. This includes phases such as preparation, installation, scanning, and error handling, providing insight into the update's progress and any issues encountered.",
                      "type": "string",
                      "enum": [
                        "HasPrerequisite",
                        "Obsolete",
                        "Ready",
                        "NotApplicableBecauseAnotherUpdateIsInProgress",
                        "Preparing",
                        "Installing",
                        "Installed",
                        "PreparationFailed",
                        "InstallationFailed",
                        "Invalid",
                        "Recalled",
                        "Downloading",
                        "DownloadFailed",
                        "HealthChecking",
                        "HealthCheckFailed",
                        "ReadyToInstall",
                        "ScanInProgress",
                        "ScanFailed",
                        "AdditionalContentRequired"
                      ],
                      "x-ms-enum": {
                        "name": "state",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "HasPrerequisite",
                            "value": "HasPrerequisite",
                            "description": "The update has prerequisites that must be fulfilled before it can proceed."
                          },
                          {
                            "name": "Obsolete",
                            "value": "Obsolete",
                            "description": "The update is obsolete and no longer applicable."
                          },
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "The update is ready to be installed."
                          },
                          {
                            "name": "NotApplicableBecauseAnotherUpdateIsInProgress",
                            "value": "NotApplicableBecauseAnotherUpdateIsInProgress",
                            "description": "The update cannot be applied because another update is currently in progress."
                          },
                          {
                            "name": "Preparing",
                            "value": "Preparing",
                            "description": "The update is currently in the preparation phase."
                          },
                          {
                            "name": "Installing",
                            "value": "Installing",
                            "description": "The update is currently being installed."
                          },
                          {
                            "name": "Installed",
                            "value": "Installed",
                            "description": "The update has been successfully installed."
                          },
                          {
                            "name": "PreparationFailed",
                            "value": "PreparationFailed",
                            "description": "The update preparation phase failed."
                          },
                          {
                            "name": "InstallationFailed",
                            "value": "InstallationFailed",
                            "description": "The update installation failed."
                          },
                          {
                            "name": "Invalid",
                            "value": "Invalid",
                            "description": "The update is invalid and cannot be applied."
                          },
                          {
                            "name": "Recalled",
                            "value": "Recalled",
                            "description": "The update has been recalled and should not be applied."
                          },
                          {
                            "name": "Downloading",
                            "value": "Downloading",
                            "description": "The update is currently being downloaded."
                          },
                          {
                            "name": "DownloadFailed",
                            "value": "DownloadFailed",
                            "description": "The update download failed."
                          },
                          {
                            "name": "HealthChecking",
                            "value": "HealthChecking",
                            "description": "A health check is being performed before applying the update."
                          },
                          {
                            "name": "HealthCheckFailed",
                            "value": "HealthCheckFailed",
                            "description": "The health check failed, preventing the update from proceeding."
                          },
                          {
                            "name": "ReadyToInstall",
                            "value": "ReadyToInstall",
                            "description": "The update is ready to be installed after successful preparation and checks."
                          },
                          {
                            "name": "ScanInProgress",
                            "value": "ScanInProgress",
                            "description": "The system is scanning for updates."
                          },
                          {
                            "name": "ScanFailed",
                            "value": "ScanFailed",
                            "description": "The scan for updates failed."
                          },
                          {
                            "name": "AdditionalContentRequired",
                            "value": "AdditionalContentRequired",
                            "description": "Additional content is required to proceed with the update."
                          }
                        ]
                      }
                    },
                    "prerequisites": {
                      "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
                      "type": "array",
                      "items": {
                        "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
                        "type": "object",
                        "properties": {
                          "updateType": {
                            "description": "Updatable component type.",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the prerequisite.",
                            "type": "string"
                          },
                          "packageName": {
                            "description": "Friendly name of the prerequisite.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "packageName"
                      ]
                    },
                    "componentVersions": {
                      "description": "An array of component versions for a Solution Bundle update, and an empty array otherwise.  ",
                      "type": "array",
                      "items": {
                        "description": "Current version of each updatable component.",
                        "type": "object",
                        "properties": {
                          "packageType": {
                            "description": "Package type",
                            "type": "string"
                          },
                          "version": {
                            "description": "Package version",
                            "type": "string"
                          },
                          "lastUpdated": {
                            "description": "Last time this component was updated.",
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "x-ms-client-flatten": true,
                      "x-ms-identifiers": [
                        "version"
                      ]
                    },
                    "rebootRequired": {
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "description": "Indicates whether a reboot is required after the update or operation. Helps determine if a system restart is necessary to complete the process.",
                      "enum": [
                        "Unknown",
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "RebootRequirement",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "It is not known whether a reboot is required."
                          },
                          {
                            "name": "True",
                            "value": "True",
                            "description": "A reboot is required to complete the operation."
                          },
                          {
                            "name": "False",
                            "value": "False",
                            "description": "No reboot is required after the operation."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "description": "Overall health state for update-specific health checks.",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "enum": [
                        "Unknown",
                        "Success",
                        "Failure",
                        "Warning",
                        "Error",
                        "InProgress"
                      ],
                      "x-ms-enum": {
                        "name": "HealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "The health state is not known or cannot be determined."
                          },
                          {
                            "name": "Success",
                            "value": "Success",
                            "description": "The health check completed successfully and the system is healthy."
                          },
                          {
                            "name": "Failure",
                            "value": "Failure",
                            "description": "The health check failed, indicating a critical issue."
                          },
                          {
                            "name": "Warning",
                            "value": "Warning",
                            "description": "The health check detected a non-critical issue that may require attention."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred during the health check process."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The health check is currently in progress."
                          }
                        ]
                      }
                    },
                    "healthCheckResult": {
                      "description": "An array of PrecheckResult objects.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The health check DisplayName localized of the individual test executed.",
                            "type": "string"
                          },
                          "tags": {
                            "description": "Key-value pairs that allow grouping/filtering individual tests.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "Key that allow grouping/filtering individual tests.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the key that allow grouping/filtering individual tests.",
                                "type": "string"
                              }
                            }
                          },
                          "healthCheckTags": {
                            "description": "Key-value pairs that allow grouping/filtering individual tests.",
                            "type": "object"
                          },
                          "title": {
                            "description": "User-facing name; one or more sentences indicating the direct issue.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "InProgress"
                            ],
                            "x-ms-enum": {
                              "name": "status",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The check completed successfully."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The check completed but failed."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The check is currently in progress."
                                }
                              ]
                            }
                          },
                          "severity": {
                            "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                            "type": "string",
                            "enum": [
                              "Critical",
                              "Warning",
                              "Informational",
                              "Hidden"
                            ],
                            "x-ms-enum": {
                              "name": "severity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Critical",
                                  "value": "Critical",
                                  "description": "A critical issue that blocks updates and requires immediate attention."
                                },
                                {
                                  "name": "Warning",
                                  "value": "Warning",
                                  "description": "A warning that may indicate a potential issue but does not block updates."
                                },
                                {
                                  "name": "Informational",
                                  "value": "Informational",
                                  "description": "General information that does not indicate any issue."
                                },
                                {
                                  "name": "Hidden",
                                  "value": "Hidden",
                                  "description": "The result is hidden and not shown in the output."
                                }
                              ]
                            }
                          },
                          "description": {
                            "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                            "type": "string"
                          },
                          "remediation": {
                            "description": "Set of steps that can be taken to resolve the issue found.",
                            "type": "string"
                          },
                          "targetResourceID": {
                            "description": "The unique identifier for the affected resource (such as a node or drive).",
                            "type": "string"
                          },
                          "targetResourceName": {
                            "description": "The name of the affected resource.",
                            "type": "string"
                          },
                          "targetResourceType": {
                            "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                            "type": "string"
                          },
                          "timestamp": {
                            "description": "The time in which the HealthCheck was called.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "additionalData": {
                            "description": "Property bag of key value pairs for additional information.",
                            "type": "string"
                          },
                          "healthCheckSource": {
                            "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-client-flatten": true
                    },
                    "healthCheckDate": {
                      "description": "Last time the package-specific checks were run.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "packagePath": {
                      "description": "Path where the update package is available.",
                      "type": "string"
                    },
                    "packageSizeInMb": {
                      "description": "Size of the package. This value is a combination of the size from update metadata and size of the payload that results from the live scan operation for OS update content.",
                      "type": "number"
                    },
                    "displayName": {
                      "description": "Display name of the Update",
                      "type": "string"
                    },
                    "version": {
                      "description": "Version of the update.",
                      "type": "string"
                    },
                    "publisher": {
                      "description": "Publisher of the update package.",
                      "type": "string"
                    },
                    "releaseLink": {
                      "description": "Link to release notes for the update.",
                      "type": "string"
                    },
                    "availabilityType": {
                      "description": "Indicates how the update content is made available for download. This determines whether the update is sourced locally, from an online repository, or requires user notification.",
                      "type": "string",
                      "enum": [
                        "Local",
                        "Online",
                        "Notify"
                      ],
                      "x-ms-enum": {
                        "name": "availabilityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Local",
                            "value": "Local",
                            "description": "The update content is available locally within the environment."
                          },
                          {
                            "name": "Online",
                            "value": "Online",
                            "description": "The update content is available from an online source."
                          },
                          {
                            "name": "Notify",
                            "value": "Notify",
                            "description": "The system will notify the user when update content becomes available."
                          }
                        ]
                      }
                    },
                    "packageType": {
                      "description": "Customer-visible type of the update.",
                      "type": "string"
                    },
                    "additionalProperties": {
                      "description": "Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information when an update is flagged as Invalid for the stamp based on OEM type.",
                      "type": "string"
                    },
                    "updateStateProperties": {
                      "description": "Additional information regarding the state of the update. See definition of UpdateStateProperties type below for more details on this property.",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "progressPercentage": {
                          "description": "Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded.",
                          "type": "number"
                        },
                        "notifyMessage": {
                          "description": "Brief message with instructions for updates of AvailabilityType Notify.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Update details",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Update properties",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Updates proxy resource. Indicates the current lifecycle status of the update operation, such as whether it has been accepted, is in progress, or has completed.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The update operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The update operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The update operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The update operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The update operation is currently being provisioned."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "installedDate": {
                      "description": "Date that the update was installed.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "description": "Description of the update.",
                      "type": "string"
                    },
                    "minSbeVersionRequired": {
                      "description": "Minimum Sbe Version of the update.",
                      "type": "string"
                    },
                    "state": {
                      "description": "Represents the current state of the update as it relates to this stamp. This includes phases such as preparation, installation, scanning, and error handling, providing insight into the update's progress and any issues encountered.",
                      "type": "string",
                      "enum": [
                        "HasPrerequisite",
                        "Obsolete",
                        "Ready",
                        "NotApplicableBecauseAnotherUpdateIsInProgress",
                        "Preparing",
                        "Installing",
                        "Installed",
                        "PreparationFailed",
                        "InstallationFailed",
                        "Invalid",
                        "Recalled",
                        "Downloading",
                        "DownloadFailed",
                        "HealthChecking",
                        "HealthCheckFailed",
                        "ReadyToInstall",
                        "ScanInProgress",
                        "ScanFailed",
                        "AdditionalContentRequired"
                      ],
                      "x-ms-enum": {
                        "name": "state",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "HasPrerequisite",
                            "value": "HasPrerequisite",
                            "description": "The update has prerequisites that must be fulfilled before it can proceed."
                          },
                          {
                            "name": "Obsolete",
                            "value": "Obsolete",
                            "description": "The update is obsolete and no longer applicable."
                          },
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "The update is ready to be installed."
                          },
                          {
                            "name": "NotApplicableBecauseAnotherUpdateIsInProgress",
                            "value": "NotApplicableBecauseAnotherUpdateIsInProgress",
                            "description": "The update cannot be applied because another update is currently in progress."
                          },
                          {
                            "name": "Preparing",
                            "value": "Preparing",
                            "description": "The update is currently in the preparation phase."
                          },
                          {
                            "name": "Installing",
                            "value": "Installing",
                            "description": "The update is currently being installed."
                          },
                          {
                            "name": "Installed",
                            "value": "Installed",
                            "description": "The update has been successfully installed."
                          },
                          {
                            "name": "PreparationFailed",
                            "value": "PreparationFailed",
                            "description": "The update preparation phase failed."
                          },
                          {
                            "name": "InstallationFailed",
                            "value": "InstallationFailed",
                            "description": "The update installation failed."
                          },
                          {
                            "name": "Invalid",
                            "value": "Invalid",
                            "description": "The update is invalid and cannot be applied."
                          },
                          {
                            "name": "Recalled",
                            "value": "Recalled",
                            "description": "The update has been recalled and should not be applied."
                          },
                          {
                            "name": "Downloading",
                            "value": "Downloading",
                            "description": "The update is currently being downloaded."
                          },
                          {
                            "name": "DownloadFailed",
                            "value": "DownloadFailed",
                            "description": "The update download failed."
                          },
                          {
                            "name": "HealthChecking",
                            "value": "HealthChecking",
                            "description": "A health check is being performed before applying the update."
                          },
                          {
                            "name": "HealthCheckFailed",
                            "value": "HealthCheckFailed",
                            "description": "The health check failed, preventing the update from proceeding."
                          },
                          {
                            "name": "ReadyToInstall",
                            "value": "ReadyToInstall",
                            "description": "The update is ready to be installed after successful preparation and checks."
                          },
                          {
                            "name": "ScanInProgress",
                            "value": "ScanInProgress",
                            "description": "The system is scanning for updates."
                          },
                          {
                            "name": "ScanFailed",
                            "value": "ScanFailed",
                            "description": "The scan for updates failed."
                          },
                          {
                            "name": "AdditionalContentRequired",
                            "value": "AdditionalContentRequired",
                            "description": "Additional content is required to proceed with the update."
                          }
                        ]
                      }
                    },
                    "prerequisites": {
                      "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
                      "type": "array",
                      "items": {
                        "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
                        "type": "object",
                        "properties": {
                          "updateType": {
                            "description": "Updatable component type.",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the prerequisite.",
                            "type": "string"
                          },
                          "packageName": {
                            "description": "Friendly name of the prerequisite.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "packageName"
                      ]
                    },
                    "componentVersions": {
                      "description": "An array of component versions for a Solution Bundle update, and an empty array otherwise.  ",
                      "type": "array",
                      "items": {
                        "description": "Current version of each updatable component.",
                        "type": "object",
                        "properties": {
                          "packageType": {
                            "description": "Package type",
                            "type": "string"
                          },
                          "version": {
                            "description": "Package version",
                            "type": "string"
                          },
                          "lastUpdated": {
                            "description": "Last time this component was updated.",
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "x-ms-client-flatten": true,
                      "x-ms-identifiers": [
                        "version"
                      ]
                    },
                    "rebootRequired": {
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "description": "Indicates whether a reboot is required after the update or operation. Helps determine if a system restart is necessary to complete the process.",
                      "enum": [
                        "Unknown",
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "RebootRequirement",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "It is not known whether a reboot is required."
                          },
                          {
                            "name": "True",
                            "value": "True",
                            "description": "A reboot is required to complete the operation."
                          },
                          {
                            "name": "False",
                            "value": "False",
                            "description": "No reboot is required after the operation."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "description": "Overall health state for update-specific health checks.",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "enum": [
                        "Unknown",
                        "Success",
                        "Failure",
                        "Warning",
                        "Error",
                        "InProgress"
                      ],
                      "x-ms-enum": {
                        "name": "HealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "The health state is not known or cannot be determined."
                          },
                          {
                            "name": "Success",
                            "value": "Success",
                            "description": "The health check completed successfully and the system is healthy."
                          },
                          {
                            "name": "Failure",
                            "value": "Failure",
                            "description": "The health check failed, indicating a critical issue."
                          },
                          {
                            "name": "Warning",
                            "value": "Warning",
                            "description": "The health check detected a non-critical issue that may require attention."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred during the health check process."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The health check is currently in progress."
                          }
                        ]
                      }
                    },
                    "healthCheckResult": {
                      "description": "An array of PrecheckResult objects.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The health check DisplayName localized of the individual test executed.",
                            "type": "string"
                          },
                          "tags": {
                            "description": "Key-value pairs that allow grouping/filtering individual tests.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "Key that allow grouping/filtering individual tests.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the key that allow grouping/filtering individual tests.",
                                "type": "string"
                              }
                            }
                          },
                          "healthCheckTags": {
                            "description": "Key-value pairs that allow grouping/filtering individual tests.",
                            "type": "object"
                          },
                          "title": {
                            "description": "User-facing name; one or more sentences indicating the direct issue.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "InProgress"
                            ],
                            "x-ms-enum": {
                              "name": "status",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The check completed successfully."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The check completed but failed."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The check is currently in progress."
                                }
                              ]
                            }
                          },
                          "severity": {
                            "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                            "type": "string",
                            "enum": [
                              "Critical",
                              "Warning",
                              "Informational",
                              "Hidden"
                            ],
                            "x-ms-enum": {
                              "name": "severity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Critical",
                                  "value": "Critical",
                                  "description": "A critical issue that blocks updates and requires immediate attention."
                                },
                                {
                                  "name": "Warning",
                                  "value": "Warning",
                                  "description": "A warning that may indicate a potential issue but does not block updates."
                                },
                                {
                                  "name": "Informational",
                                  "value": "Informational",
                                  "description": "General information that does not indicate any issue."
                                },
                                {
                                  "name": "Hidden",
                                  "value": "Hidden",
                                  "description": "The result is hidden and not shown in the output."
                                }
                              ]
                            }
                          },
                          "description": {
                            "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                            "type": "string"
                          },
                          "remediation": {
                            "description": "Set of steps that can be taken to resolve the issue found.",
                            "type": "string"
                          },
                          "targetResourceID": {
                            "description": "The unique identifier for the affected resource (such as a node or drive).",
                            "type": "string"
                          },
                          "targetResourceName": {
                            "description": "The name of the affected resource.",
                            "type": "string"
                          },
                          "targetResourceType": {
                            "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                            "type": "string"
                          },
                          "timestamp": {
                            "description": "The time in which the HealthCheck was called.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "additionalData": {
                            "description": "Property bag of key value pairs for additional information.",
                            "type": "string"
                          },
                          "healthCheckSource": {
                            "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-client-flatten": true
                    },
                    "healthCheckDate": {
                      "description": "Last time the package-specific checks were run.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "packagePath": {
                      "description": "Path where the update package is available.",
                      "type": "string"
                    },
                    "packageSizeInMb": {
                      "description": "Size of the package. This value is a combination of the size from update metadata and size of the payload that results from the live scan operation for OS update content.",
                      "type": "number"
                    },
                    "displayName": {
                      "description": "Display name of the Update",
                      "type": "string"
                    },
                    "version": {
                      "description": "Version of the update.",
                      "type": "string"
                    },
                    "publisher": {
                      "description": "Publisher of the update package.",
                      "type": "string"
                    },
                    "releaseLink": {
                      "description": "Link to release notes for the update.",
                      "type": "string"
                    },
                    "availabilityType": {
                      "description": "Indicates how the update content is made available for download. This determines whether the update is sourced locally, from an online repository, or requires user notification.",
                      "type": "string",
                      "enum": [
                        "Local",
                        "Online",
                        "Notify"
                      ],
                      "x-ms-enum": {
                        "name": "availabilityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Local",
                            "value": "Local",
                            "description": "The update content is available locally within the environment."
                          },
                          {
                            "name": "Online",
                            "value": "Online",
                            "description": "The update content is available from an online source."
                          },
                          {
                            "name": "Notify",
                            "value": "Notify",
                            "description": "The system will notify the user when update content becomes available."
                          }
                        ]
                      }
                    },
                    "packageType": {
                      "description": "Customer-visible type of the update.",
                      "type": "string"
                    },
                    "additionalProperties": {
                      "description": "Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information when an update is flagged as Invalid for the stamp based on OEM type.",
                      "type": "string"
                    },
                    "updateStateProperties": {
                      "description": "Additional information regarding the state of the update. See definition of UpdateStateProperties type below for more details on this property.",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "progressPercentage": {
                          "description": "Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded.",
                          "type": "number"
                        },
                        "notifyMessage": {
                          "description": "Brief message with instructions for updates of AvailabilityType Notify.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "Updates_Get",
        "description": "Get specified Update",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the cluster.",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "updateName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the Update",
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Update details",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "type": "object",
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "location": {
                  "type": "string",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "description": "The geo-location where the resource lives"
                },
                "properties": {
                  "description": "Update properties",
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "properties": {
                    "provisioningState": {
                      "description": "Provisioning state of the Updates proxy resource. Indicates the current lifecycle status of the update operation, such as whether it has been accepted, is in progress, or has completed.",
                      "type": "string",
                      "enum": [
                        "Succeeded",
                        "Failed",
                        "Canceled",
                        "Accepted",
                        "Provisioning"
                      ],
                      "x-ms-enum": {
                        "name": "ProvisioningState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Succeeded",
                            "value": "Succeeded",
                            "description": "The update operation completed successfully."
                          },
                          {
                            "name": "Failed",
                            "value": "Failed",
                            "description": "The update operation failed."
                          },
                          {
                            "name": "Canceled",
                            "value": "Canceled",
                            "description": "The update operation was canceled before completion."
                          },
                          {
                            "name": "Accepted",
                            "value": "Accepted",
                            "description": "The update operation has been accepted and is pending execution."
                          },
                          {
                            "name": "Provisioning",
                            "value": "Provisioning",
                            "description": "The update operation is currently being provisioned."
                          }
                        ]
                      },
                      "readOnly": true
                    },
                    "installedDate": {
                      "description": "Date that the update was installed.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "description": "Description of the update.",
                      "type": "string"
                    },
                    "minSbeVersionRequired": {
                      "description": "Minimum Sbe Version of the update.",
                      "type": "string"
                    },
                    "state": {
                      "description": "Represents the current state of the update as it relates to this stamp. This includes phases such as preparation, installation, scanning, and error handling, providing insight into the update's progress and any issues encountered.",
                      "type": "string",
                      "enum": [
                        "HasPrerequisite",
                        "Obsolete",
                        "Ready",
                        "NotApplicableBecauseAnotherUpdateIsInProgress",
                        "Preparing",
                        "Installing",
                        "Installed",
                        "PreparationFailed",
                        "InstallationFailed",
                        "Invalid",
                        "Recalled",
                        "Downloading",
                        "DownloadFailed",
                        "HealthChecking",
                        "HealthCheckFailed",
                        "ReadyToInstall",
                        "ScanInProgress",
                        "ScanFailed",
                        "AdditionalContentRequired"
                      ],
                      "x-ms-enum": {
                        "name": "state",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "HasPrerequisite",
                            "value": "HasPrerequisite",
                            "description": "The update has prerequisites that must be fulfilled before it can proceed."
                          },
                          {
                            "name": "Obsolete",
                            "value": "Obsolete",
                            "description": "The update is obsolete and no longer applicable."
                          },
                          {
                            "name": "Ready",
                            "value": "Ready",
                            "description": "The update is ready to be installed."
                          },
                          {
                            "name": "NotApplicableBecauseAnotherUpdateIsInProgress",
                            "value": "NotApplicableBecauseAnotherUpdateIsInProgress",
                            "description": "The update cannot be applied because another update is currently in progress."
                          },
                          {
                            "name": "Preparing",
                            "value": "Preparing",
                            "description": "The update is currently in the preparation phase."
                          },
                          {
                            "name": "Installing",
                            "value": "Installing",
                            "description": "The update is currently being installed."
                          },
                          {
                            "name": "Installed",
                            "value": "Installed",
                            "description": "The update has been successfully installed."
                          },
                          {
                            "name": "PreparationFailed",
                            "value": "PreparationFailed",
                            "description": "The update preparation phase failed."
                          },
                          {
                            "name": "InstallationFailed",
                            "value": "InstallationFailed",
                            "description": "The update installation failed."
                          },
                          {
                            "name": "Invalid",
                            "value": "Invalid",
                            "description": "The update is invalid and cannot be applied."
                          },
                          {
                            "name": "Recalled",
                            "value": "Recalled",
                            "description": "The update has been recalled and should not be applied."
                          },
                          {
                            "name": "Downloading",
                            "value": "Downloading",
                            "description": "The update is currently being downloaded."
                          },
                          {
                            "name": "DownloadFailed",
                            "value": "DownloadFailed",
                            "description": "The update download failed."
                          },
                          {
                            "name": "HealthChecking",
                            "value": "HealthChecking",
                            "description": "A health check is being performed before applying the update."
                          },
                          {
                            "name": "HealthCheckFailed",
                            "value": "HealthCheckFailed",
                            "description": "The health check failed, preventing the update from proceeding."
                          },
                          {
                            "name": "ReadyToInstall",
                            "value": "ReadyToInstall",
                            "description": "The update is ready to be installed after successful preparation and checks."
                          },
                          {
                            "name": "ScanInProgress",
                            "value": "ScanInProgress",
                            "description": "The system is scanning for updates."
                          },
                          {
                            "name": "ScanFailed",
                            "value": "ScanFailed",
                            "description": "The scan for updates failed."
                          },
                          {
                            "name": "AdditionalContentRequired",
                            "value": "AdditionalContentRequired",
                            "description": "Additional content is required to proceed with the update."
                          }
                        ]
                      }
                    },
                    "prerequisites": {
                      "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
                      "type": "array",
                      "items": {
                        "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
                        "type": "object",
                        "properties": {
                          "updateType": {
                            "description": "Updatable component type.",
                            "type": "string"
                          },
                          "version": {
                            "description": "Version of the prerequisite.",
                            "type": "string"
                          },
                          "packageName": {
                            "description": "Friendly name of the prerequisite.",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-identifiers": [
                        "packageName"
                      ]
                    },
                    "componentVersions": {
                      "description": "An array of component versions for a Solution Bundle update, and an empty array otherwise.  ",
                      "type": "array",
                      "items": {
                        "description": "Current version of each updatable component.",
                        "type": "object",
                        "properties": {
                          "packageType": {
                            "description": "Package type",
                            "type": "string"
                          },
                          "version": {
                            "description": "Package version",
                            "type": "string"
                          },
                          "lastUpdated": {
                            "description": "Last time this component was updated.",
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      },
                      "x-ms-client-flatten": true,
                      "x-ms-identifiers": [
                        "version"
                      ]
                    },
                    "rebootRequired": {
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "description": "Indicates whether a reboot is required after the update or operation. Helps determine if a system restart is necessary to complete the process.",
                      "enum": [
                        "Unknown",
                        "True",
                        "False"
                      ],
                      "x-ms-enum": {
                        "name": "RebootRequirement",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "It is not known whether a reboot is required."
                          },
                          {
                            "name": "True",
                            "value": "True",
                            "description": "A reboot is required to complete the operation."
                          },
                          {
                            "name": "False",
                            "value": "False",
                            "description": "No reboot is required after the operation."
                          }
                        ]
                      }
                    },
                    "healthState": {
                      "description": "Overall health state for update-specific health checks.",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "enum": [
                        "Unknown",
                        "Success",
                        "Failure",
                        "Warning",
                        "Error",
                        "InProgress"
                      ],
                      "x-ms-enum": {
                        "name": "HealthState",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Unknown",
                            "value": "Unknown",
                            "description": "The health state is not known or cannot be determined."
                          },
                          {
                            "name": "Success",
                            "value": "Success",
                            "description": "The health check completed successfully and the system is healthy."
                          },
                          {
                            "name": "Failure",
                            "value": "Failure",
                            "description": "The health check failed, indicating a critical issue."
                          },
                          {
                            "name": "Warning",
                            "value": "Warning",
                            "description": "The health check detected a non-critical issue that may require attention."
                          },
                          {
                            "name": "Error",
                            "value": "Error",
                            "description": "An error occurred during the health check process."
                          },
                          {
                            "name": "InProgress",
                            "value": "InProgress",
                            "description": "The health check is currently in progress."
                          }
                        ]
                      }
                    },
                    "healthCheckResult": {
                      "description": "An array of PrecheckResult objects.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                            "type": "string"
                          },
                          "displayName": {
                            "description": "The health check DisplayName localized of the individual test executed.",
                            "type": "string"
                          },
                          "tags": {
                            "description": "Key-value pairs that allow grouping/filtering individual tests.",
                            "type": "object",
                            "properties": {
                              "key": {
                                "description": "Key that allow grouping/filtering individual tests.",
                                "type": "string"
                              },
                              "value": {
                                "description": "Value of the key that allow grouping/filtering individual tests.",
                                "type": "string"
                              }
                            }
                          },
                          "healthCheckTags": {
                            "description": "Key-value pairs that allow grouping/filtering individual tests.",
                            "type": "object"
                          },
                          "title": {
                            "description": "User-facing name; one or more sentences indicating the direct issue.",
                            "type": "string"
                          },
                          "status": {
                            "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                            "type": "string",
                            "enum": [
                              "Succeeded",
                              "Failed",
                              "InProgress"
                            ],
                            "x-ms-enum": {
                              "name": "status",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "The check completed successfully."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "The check completed but failed."
                                },
                                {
                                  "name": "InProgress",
                                  "value": "InProgress",
                                  "description": "The check is currently in progress."
                                }
                              ]
                            }
                          },
                          "severity": {
                            "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                            "type": "string",
                            "enum": [
                              "Critical",
                              "Warning",
                              "Informational",
                              "Hidden"
                            ],
                            "x-ms-enum": {
                              "name": "severity",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Critical",
                                  "value": "Critical",
                                  "description": "A critical issue that blocks updates and requires immediate attention."
                                },
                                {
                                  "name": "Warning",
                                  "value": "Warning",
                                  "description": "A warning that may indicate a potential issue but does not block updates."
                                },
                                {
                                  "name": "Informational",
                                  "value": "Informational",
                                  "description": "General information that does not indicate any issue."
                                },
                                {
                                  "name": "Hidden",
                                  "value": "Hidden",
                                  "description": "The result is hidden and not shown in the output."
                                }
                              ]
                            }
                          },
                          "description": {
                            "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                            "type": "string"
                          },
                          "remediation": {
                            "description": "Set of steps that can be taken to resolve the issue found.",
                            "type": "string"
                          },
                          "targetResourceID": {
                            "description": "The unique identifier for the affected resource (such as a node or drive).",
                            "type": "string"
                          },
                          "targetResourceName": {
                            "description": "The name of the affected resource.",
                            "type": "string"
                          },
                          "targetResourceType": {
                            "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                            "type": "string"
                          },
                          "timestamp": {
                            "description": "The time in which the HealthCheck was called.",
                            "type": "string",
                            "format": "date-time"
                          },
                          "additionalData": {
                            "description": "Property bag of key value pairs for additional information.",
                            "type": "string"
                          },
                          "healthCheckSource": {
                            "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                            "type": "string"
                          }
                        }
                      },
                      "x-ms-client-flatten": true
                    },
                    "healthCheckDate": {
                      "description": "Last time the package-specific checks were run.",
                      "type": "string",
                      "format": "date-time"
                    },
                    "packagePath": {
                      "description": "Path where the update package is available.",
                      "type": "string"
                    },
                    "packageSizeInMb": {
                      "description": "Size of the package. This value is a combination of the size from update metadata and size of the payload that results from the live scan operation for OS update content.",
                      "type": "number"
                    },
                    "displayName": {
                      "description": "Display name of the Update",
                      "type": "string"
                    },
                    "version": {
                      "description": "Version of the update.",
                      "type": "string"
                    },
                    "publisher": {
                      "description": "Publisher of the update package.",
                      "type": "string"
                    },
                    "releaseLink": {
                      "description": "Link to release notes for the update.",
                      "type": "string"
                    },
                    "availabilityType": {
                      "description": "Indicates how the update content is made available for download. This determines whether the update is sourced locally, from an online repository, or requires user notification.",
                      "type": "string",
                      "enum": [
                        "Local",
                        "Online",
                        "Notify"
                      ],
                      "x-ms-enum": {
                        "name": "availabilityType",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "Local",
                            "value": "Local",
                            "description": "The update content is available locally within the environment."
                          },
                          {
                            "name": "Online",
                            "value": "Online",
                            "description": "The update content is available from an online source."
                          },
                          {
                            "name": "Notify",
                            "value": "Notify",
                            "description": "The system will notify the user when update content becomes available."
                          }
                        ]
                      }
                    },
                    "packageType": {
                      "description": "Customer-visible type of the update.",
                      "type": "string"
                    },
                    "additionalProperties": {
                      "description": "Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information when an update is flagged as Invalid for the stamp based on OEM type.",
                      "type": "string"
                    },
                    "updateStateProperties": {
                      "description": "Additional information regarding the state of the update. See definition of UpdateStateProperties type below for more details on this property.",
                      "type": "object",
                      "x-ms-client-flatten": true,
                      "properties": {
                        "progressPercentage": {
                          "description": "Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded.",
                          "type": "number"
                        },
                        "notifyMessage": {
                          "description": "Brief message with instructions for updates of AvailabilityType Notify.",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/locations/{location}/validatedSolutionRecipes": {
      "get": {
        "operationId": "ValidatedSolutionRecipes_ListBySubscriptionLocationResource",
        "tags": [
          "ValidatedSolutionRecipes"
        ],
        "description": "List all validated solution recipes.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "The response of a ValidatedSolutionRecipe list operation.",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "The ValidatedSolutionRecipe items on this page",
                  "items": {
                    "type": "object",
                    "description": "Represents a validated solution recipe resource.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                        "readOnly": true
                      },
                      "name": {
                        "type": "string",
                        "description": "The name of the resource",
                        "readOnly": true
                      },
                      "type": {
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                        "readOnly": true
                      },
                      "systemData": {
                        "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      },
                      "properties": {
                        "description": "The resource-specific properties for this resource.",
                        "type": "object",
                        "properties": {
                          "recipeContent": {
                            "description": "Represents contents of a validated solution recipe.",
                            "type": "object",
                            "properties": {
                              "info": {
                                "description": "Represents information about a validated solution recipe.",
                                "type": "object",
                                "properties": {
                                  "solutionType": {
                                    "type": "string",
                                    "description": "Represents the solution type for which this validated solution recipe is applicable."
                                  },
                                  "version": {
                                    "type": "string",
                                    "description": "Represents the version for which this validated solution recipe is applicable."
                                  }
                                },
                                "required": [
                                  "solutionType",
                                  "version"
                                ]
                              },
                              "capabilities": {
                                "description": "Represents capabilities available in a validated solution recipe.",
                                "type": "object",
                                "properties": {
                                  "clusterCapabilities": {
                                    "type": "array",
                                    "description": "Represents the cluster capabilities.",
                                    "items": {
                                      "type": "object",
                                      "description": "Represents capability available in a validated solution recipe.",
                                      "properties": {
                                        "capabilityName": {
                                          "type": "string",
                                          "description": "Represents the capability name."
                                        }
                                      },
                                      "required": [
                                        "capabilityName"
                                      ]
                                    },
                                    "x-ms-identifiers": []
                                  },
                                  "nodeCapabilities": {
                                    "type": "array",
                                    "description": "Represents the node capabilities.",
                                    "items": {
                                      "type": "object",
                                      "description": "Represents capability available in a validated solution recipe.",
                                      "properties": {
                                        "capabilityName": {
                                          "type": "string",
                                          "description": "Represents the capability name."
                                        }
                                      },
                                      "required": [
                                        "capabilityName"
                                      ]
                                    },
                                    "x-ms-identifiers": []
                                  }
                                },
                                "required": [
                                  "clusterCapabilities",
                                  "nodeCapabilities"
                                ]
                              },
                              "components": {
                                "type": "array",
                                "description": "Represents components available in a validated solution recipe.",
                                "items": {
                                  "type": "object",
                                  "description": "Represents component available in a validated solution recipe.",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Represents the component's name."
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Represents the component's type."
                                    },
                                    "requiredVersion": {
                                      "type": "string",
                                      "description": "Represents the component's required version."
                                    },
                                    "installOrder": {
                                      "type": "integer",
                                      "format": "int64",
                                      "description": "Represents the component's install order."
                                    },
                                    "tags": {
                                      "type": "array",
                                      "description": "Represents the component's tags.",
                                      "items": {
                                        "type": "string"
                                      }
                                    },
                                    "payloads": {
                                      "type": "array",
                                      "description": "Represents the component's payloads.",
                                      "items": {
                                        "type": "object",
                                        "description": "Represents payloads associated with a component available in a validated solution recipe.",
                                        "properties": {
                                          "identifier": {
                                            "type": "string",
                                            "description": "Represents the unique identifier of the payload used to query the URL."
                                          },
                                          "hash": {
                                            "type": "string",
                                            "description": "Represents the cryptographic hash of the payload, ensuring data integrity."
                                          },
                                          "fileName": {
                                            "type": "string",
                                            "description": "Represents the name of the file associated with the payload."
                                          },
                                          "url": {
                                            "type": "string",
                                            "description": "Represents the URL from which the payload can be downloaded."
                                          }
                                        },
                                        "required": [
                                          "identifier",
                                          "hash",
                                          "fileName",
                                          "url"
                                        ]
                                      },
                                      "x-ms-identifiers": []
                                    },
                                    "metadata": {
                                      "description": "Represents the component's metadata.",
                                      "type": "object",
                                      "properties": {
                                        "extensionType": {
                                          "type": "string",
                                          "description": "Represents the type of extension."
                                        },
                                        "publisher": {
                                          "type": "string",
                                          "description": "Represents the publisher of the extension."
                                        },
                                        "enableAutomaticUpgrade": {
                                          "type": "boolean",
                                          "description": "Indicates whether automatic upgrades of the extension are enabled."
                                        },
                                        "lcmUpdate": {
                                          "type": "boolean",
                                          "description": "Indicates whether the LCM (Lifecycle Management) update of the extension is enabled."
                                        },
                                        "catalog": {
                                          "type": "string",
                                          "description": "Specifies the catalog to which the extension belongs."
                                        },
                                        "ring": {
                                          "type": "string",
                                          "description": "Specifies the ring to which the extension belongs, internally used by component."
                                        },
                                        "releaseTrain": {
                                          "type": "string",
                                          "description": "Specifies the release train to which given component belongs."
                                        },
                                        "link": {
                                          "type": "string",
                                          "description": "Specifies the link associated with the extension."
                                        },
                                        "name": {
                                          "type": "string",
                                          "description": "Specifies the name of the extension."
                                        },
                                        "expectedHash": {
                                          "type": "string",
                                          "description": "Specifies the expected hash of the extension."
                                        },
                                        "previewSource": {
                                          "type": "string",
                                          "description": "Specifies the preview source of the extension."
                                        }
                                      }
                                    }
                                  },
                                  "required": [
                                    "name",
                                    "type",
                                    "tags"
                                  ]
                                },
                                "x-ms-identifiers": []
                              }
                            },
                            "required": [
                              "info",
                              "components"
                            ]
                          },
                          "signature": {
                            "type": "string",
                            "description": "Represents the signature of the recipe, to be used for ensuring its integrity."
                          }
                        },
                        "required": [
                          "recipeContent"
                        ]
                      }
                    }
                  }
                },
                "nextLink": {
                  "type": "string",
                  "format": "uri",
                  "description": "The link to the next page of items"
                }
              },
              "required": [
                "value"
              ]
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.AzureStackHCI/locations/{location}/validatedSolutionRecipes/{validatedSolutionRecipeName}": {
      "get": {
        "operationId": "ValidatedSolutionRecipes_Get",
        "tags": [
          "ValidatedSolutionRecipes"
        ],
        "description": "Get a validated solution recipe.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "location",
            "in": "path",
            "description": "The name of the Azure region.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "validatedSolutionRecipeName",
            "in": "path",
            "description": "The name of the ValidatedSolutionRecipe",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z0-9-.]{3,50}$"
          }
        ],
        "responses": {
          "200": {
            "description": "Azure operation completed successfully.",
            "schema": {
              "type": "object",
              "description": "Represents a validated solution recipe resource.",
              "properties": {
                "id": {
                  "type": "string",
                  "format": "arm-id",
                  "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                  "readOnly": true
                },
                "name": {
                  "type": "string",
                  "description": "The name of the resource",
                  "readOnly": true
                },
                "type": {
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                  "readOnly": true
                },
                "systemData": {
                  "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                },
                "properties": {
                  "description": "The resource-specific properties for this resource.",
                  "type": "object",
                  "properties": {
                    "recipeContent": {
                      "description": "Represents contents of a validated solution recipe.",
                      "type": "object",
                      "properties": {
                        "info": {
                          "description": "Represents information about a validated solution recipe.",
                          "type": "object",
                          "properties": {
                            "solutionType": {
                              "type": "string",
                              "description": "Represents the solution type for which this validated solution recipe is applicable."
                            },
                            "version": {
                              "type": "string",
                              "description": "Represents the version for which this validated solution recipe is applicable."
                            }
                          },
                          "required": [
                            "solutionType",
                            "version"
                          ]
                        },
                        "capabilities": {
                          "description": "Represents capabilities available in a validated solution recipe.",
                          "type": "object",
                          "properties": {
                            "clusterCapabilities": {
                              "type": "array",
                              "description": "Represents the cluster capabilities.",
                              "items": {
                                "type": "object",
                                "description": "Represents capability available in a validated solution recipe.",
                                "properties": {
                                  "capabilityName": {
                                    "type": "string",
                                    "description": "Represents the capability name."
                                  }
                                },
                                "required": [
                                  "capabilityName"
                                ]
                              },
                              "x-ms-identifiers": []
                            },
                            "nodeCapabilities": {
                              "type": "array",
                              "description": "Represents the node capabilities.",
                              "items": {
                                "type": "object",
                                "description": "Represents capability available in a validated solution recipe.",
                                "properties": {
                                  "capabilityName": {
                                    "type": "string",
                                    "description": "Represents the capability name."
                                  }
                                },
                                "required": [
                                  "capabilityName"
                                ]
                              },
                              "x-ms-identifiers": []
                            }
                          },
                          "required": [
                            "clusterCapabilities",
                            "nodeCapabilities"
                          ]
                        },
                        "components": {
                          "type": "array",
                          "description": "Represents components available in a validated solution recipe.",
                          "items": {
                            "type": "object",
                            "description": "Represents component available in a validated solution recipe.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Represents the component's name."
                              },
                              "type": {
                                "type": "string",
                                "description": "Represents the component's type."
                              },
                              "requiredVersion": {
                                "type": "string",
                                "description": "Represents the component's required version."
                              },
                              "installOrder": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Represents the component's install order."
                              },
                              "tags": {
                                "type": "array",
                                "description": "Represents the component's tags.",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "payloads": {
                                "type": "array",
                                "description": "Represents the component's payloads.",
                                "items": {
                                  "type": "object",
                                  "description": "Represents payloads associated with a component available in a validated solution recipe.",
                                  "properties": {
                                    "identifier": {
                                      "type": "string",
                                      "description": "Represents the unique identifier of the payload used to query the URL."
                                    },
                                    "hash": {
                                      "type": "string",
                                      "description": "Represents the cryptographic hash of the payload, ensuring data integrity."
                                    },
                                    "fileName": {
                                      "type": "string",
                                      "description": "Represents the name of the file associated with the payload."
                                    },
                                    "url": {
                                      "type": "string",
                                      "description": "Represents the URL from which the payload can be downloaded."
                                    }
                                  },
                                  "required": [
                                    "identifier",
                                    "hash",
                                    "fileName",
                                    "url"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "metadata": {
                                "description": "Represents the component's metadata.",
                                "type": "object",
                                "properties": {
                                  "extensionType": {
                                    "type": "string",
                                    "description": "Represents the type of extension."
                                  },
                                  "publisher": {
                                    "type": "string",
                                    "description": "Represents the publisher of the extension."
                                  },
                                  "enableAutomaticUpgrade": {
                                    "type": "boolean",
                                    "description": "Indicates whether automatic upgrades of the extension are enabled."
                                  },
                                  "lcmUpdate": {
                                    "type": "boolean",
                                    "description": "Indicates whether the LCM (Lifecycle Management) update of the extension is enabled."
                                  },
                                  "catalog": {
                                    "type": "string",
                                    "description": "Specifies the catalog to which the extension belongs."
                                  },
                                  "ring": {
                                    "type": "string",
                                    "description": "Specifies the ring to which the extension belongs, internally used by component."
                                  },
                                  "releaseTrain": {
                                    "type": "string",
                                    "description": "Specifies the release train to which given component belongs."
                                  },
                                  "link": {
                                    "type": "string",
                                    "description": "Specifies the link associated with the extension."
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "Specifies the name of the extension."
                                  },
                                  "expectedHash": {
                                    "type": "string",
                                    "description": "Specifies the expected hash of the extension."
                                  },
                                  "previewSource": {
                                    "type": "string",
                                    "description": "Specifies the preview source of the extension."
                                  }
                                }
                              }
                            },
                            "required": [
                              "name",
                              "type",
                              "tags"
                            ]
                          },
                          "x-ms-identifiers": []
                        }
                      },
                      "required": [
                        "info",
                        "components"
                      ]
                    },
                    "signature": {
                      "type": "string",
                      "description": "Represents the signature of the recipe, to be used for ensuring its integrity."
                    }
                  },
                  "required": [
                    "recipeContent"
                  ]
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ArcSettingList": {
      "description": "List of ArcSetting proxy resources for the HCI cluster.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of ArcSetting proxy resources.",
          "type": "array",
          "items": {
            "description": "ArcSetting details.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "ArcSetting properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the ArcSetting proxy resource.",
                    "type": "string",
                    "enum": [
                      "NotSpecified",
                      "Error",
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Connected",
                      "Disconnected",
                      "Deleted",
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Moving",
                      "PartiallySucceeded",
                      "PartiallyConnected",
                      "InProgress",
                      "Accepted",
                      "Provisioning",
                      "DisableInProgress"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "The provisioning state is not specified."
                        },
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "An error occurred during provisioning."
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Provisioning completed successfully."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Provisioning failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Provisioning was canceled."
                        },
                        {
                          "name": "Connected",
                          "value": "Connected",
                          "description": "The resource is connected."
                        },
                        {
                          "name": "Disconnected",
                          "value": "Disconnected",
                          "description": "The resource is disconnected."
                        },
                        {
                          "name": "Deleted",
                          "value": "Deleted",
                          "description": "The resource has been deleted."
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "The resource is being created."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is being updated."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted."
                        },
                        {
                          "name": "Moving",
                          "value": "Moving",
                          "description": "The resource is being moved."
                        },
                        {
                          "name": "PartiallySucceeded",
                          "value": "PartiallySucceeded",
                          "description": "Provisioning partially succeeded."
                        },
                        {
                          "name": "PartiallyConnected",
                          "value": "PartiallyConnected",
                          "description": "The resource is partially connected."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "Provisioning is in progress."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Provisioning request has been accepted."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is currently provisioning."
                        },
                        {
                          "name": "DisableInProgress",
                          "value": "DisableInProgress",
                          "description": "The resource is being disabled."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "arcInstanceResourceGroup": {
                    "description": "The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.",
                    "type": "string"
                  },
                  "arcApplicationClientId": {
                    "description": "App id of arc AAD identity.",
                    "type": "string"
                  },
                  "arcApplicationTenantId": {
                    "description": "Tenant id of arc AAD identity.",
                    "type": "string"
                  },
                  "arcServicePrincipalObjectId": {
                    "description": "Object id of arc AAD service principal.",
                    "type": "string"
                  },
                  "arcApplicationObjectId": {
                    "description": "Object id of arc AAD identity.",
                    "type": "string"
                  },
                  "aggregateState": {
                    "description": "Aggregate state of Arc agent across the nodes in this HCI cluster.",
                    "type": "string",
                    "enum": [
                      "NotSpecified",
                      "Error",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "Connected",
                      "Disconnected",
                      "Deleted",
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Moving",
                      "PartiallySucceeded",
                      "PartiallyConnected",
                      "InProgress",
                      "Accepted",
                      "Provisioning",
                      "DisableInProgress"
                    ],
                    "x-ms-enum": {
                      "name": "ArcSettingAggregateState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "The aggregate state is not specified."
                        },
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "An error occurred in the aggregate state."
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The operation successfully completed across all nodes."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The operation was canceled across the nodes."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The operation failed on all or most nodes."
                        },
                        {
                          "name": "Connected",
                          "value": "Connected",
                          "description": "All nodes are connected."
                        },
                        {
                          "name": "Disconnected",
                          "value": "Disconnected",
                          "description": "All nodes are disconnected."
                        },
                        {
                          "name": "Deleted",
                          "value": "Deleted",
                          "description": "The Arc agent has been deleted from all nodes."
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "The Arc agent is being created across the nodes."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The Arc agent is being updated across the nodes."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The Arc agent is being deleted across the nodes."
                        },
                        {
                          "name": "Moving",
                          "value": "Moving",
                          "description": "The Arc agent is being moved across the nodes."
                        },
                        {
                          "name": "PartiallySucceeded",
                          "value": "PartiallySucceeded",
                          "description": "The operation succeeded on some nodes."
                        },
                        {
                          "name": "PartiallyConnected",
                          "value": "PartiallyConnected",
                          "description": "Some nodes are connected, others are not."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "The operation is currently in progress across the nodes."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The operation has been accepted and is pending execution."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The Arc agent is being provisioned across the nodes."
                        },
                        {
                          "name": "DisableInProgress",
                          "value": "DisableInProgress",
                          "description": "The Arc agent is being disabled across the nodes."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "perNodeDetails": {
                    "description": "State of Arc agent in each of the nodes.",
                    "type": "array",
                    "items": {
                      "description": "Status of Arc agent for a particular node in HCI Cluster.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "readOnly": true,
                          "description": "Name of the Node in HCI Cluster"
                        },
                        "arcInstance": {
                          "description": "Fully qualified resource ID for the Arc agent of this node.",
                          "type": "string",
                          "readOnly": true
                        },
                        "arcNodeServicePrincipalObjectId": {
                          "description": "The service principal id of the arc for server node",
                          "type": "string",
                          "readOnly": true
                        },
                        "state": {
                          "description": "State of the Arc agent in this node. Indicates the current lifecycle status of the agent, such as whether it's being provisioned, connected, updated, or has encountered an error.",
                          "type": "string",
                          "enum": [
                            "NotSpecified",
                            "Error",
                            "Succeeded",
                            "Canceled",
                            "Failed",
                            "Connected",
                            "Disconnected",
                            "Deleted",
                            "Creating",
                            "Updating",
                            "Deleting",
                            "Moving",
                            "PartiallySucceeded",
                            "PartiallyConnected",
                            "InProgress",
                            "Accepted",
                            "Provisioning",
                            "DisableInProgress"
                          ],
                          "x-ms-enum": {
                            "name": "NodeArcState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NotSpecified",
                                "value": "NotSpecified",
                                "description": "The state is not specified."
                              },
                              {
                                "name": "Error",
                                "value": "Error",
                                "description": "An error occurred during the agent's lifecycle."
                              },
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "The operation completed successfully."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "The operation was canceled before completion."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "The operation failed."
                              },
                              {
                                "name": "Connected",
                                "value": "Connected",
                                "description": "The Arc agent is connected on this node."
                              },
                              {
                                "name": "Disconnected",
                                "value": "Disconnected",
                                "description": "The Arc agent is disconnected on this node."
                              },
                              {
                                "name": "Deleted",
                                "value": "Deleted",
                                "description": "The Arc agent has been deleted from this node."
                              },
                              {
                                "name": "Creating",
                                "value": "Creating",
                                "description": "The Arc agent is being created on this node."
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "The Arc agent is being updated on this node."
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "The Arc agent is being deleted from this node."
                              },
                              {
                                "name": "Moving",
                                "value": "Moving",
                                "description": "The Arc agent is being moved on this node."
                              },
                              {
                                "name": "PartiallySucceeded",
                                "value": "PartiallySucceeded",
                                "description": "The operation partially succeeded."
                              },
                              {
                                "name": "PartiallyConnected",
                                "value": "PartiallyConnected",
                                "description": "The Arc agent is partially connected on this node."
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress",
                                "description": "The operation is currently in progress."
                              },
                              {
                                "name": "Accepted",
                                "value": "Accepted",
                                "description": "The operation has been accepted and is pending execution."
                              },
                              {
                                "name": "Provisioning",
                                "value": "Provisioning",
                                "description": "The Arc agent is currently being provisioned on this node."
                              },
                              {
                                "name": "DisableInProgress",
                                "value": "DisableInProgress",
                                "description": "The Arc agent is in the process of being disabled on this node."
                              }
                            ]
                          },
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "connectivityProperties": {
                    "description": "contains connectivity related configuration for ARC resources",
                    "type": "object",
                    "items": {
                      "description": "Connectivity related configuration required by arc server.",
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "True indicates ARC connectivity is enabled"
                        },
                        "serviceConfigurations": {
                          "type": "array",
                          "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
                          "items": {
                            "type": "object",
                            "description": "Service configuration details",
                            "required": [
                              "serviceName",
                              "port"
                            ],
                            "properties": {
                              "serviceName": {
                                "type": "string",
                                "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
                                "enum": [
                                  "WAC"
                                ],
                                "x-ms-enum": {
                                  "name": "serviceName",
                                  "modelAsString": true,
                                  "values": [
                                    {
                                      "name": "WAC",
                                      "value": "WAC",
                                      "description": "Windows Admin Center (WAC) is the service associated with this operation."
                                    }
                                  ]
                                }
                              },
                              "port": {
                                "type": "integer",
                                "format": "int64",
                                "description": "The port on which service is enabled."
                              }
                            }
                          },
                          "x-ms-identifiers": [
                            "serviceName"
                          ]
                        }
                      },
                      "additionalProperties": false
                    }
                  },
                  "defaultExtensions": {
                    "description": "Properties for each of the default extensions category",
                    "type": "array",
                    "items": {
                      "description": "Properties for a particular default extension category.",
                      "type": "object",
                      "properties": {
                        "category": {
                          "description": "Default extension category",
                          "type": "string",
                          "readOnly": true
                        },
                        "consentTime": {
                          "description": "Consent time for extension category",
                          "type": "string",
                          "format": "date-time",
                          "readOnly": true
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "category"
                    ],
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ArcSettingsPatch": {
      "description": "ArcSetting details to update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "properties": {
          "description": "ArcSettings properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "connectivityProperties": {
              "description": "contains connectivity related configuration for ARC resources",
              "type": "object",
              "items": {
                "description": "Connectivity related configuration required by arc server.",
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "True indicates ARC connectivity is enabled"
                  },
                  "serviceConfigurations": {
                    "type": "array",
                    "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
                    "items": {
                      "type": "object",
                      "description": "Service configuration details",
                      "required": [
                        "serviceName",
                        "port"
                      ],
                      "properties": {
                        "serviceName": {
                          "type": "string",
                          "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
                          "enum": [
                            "WAC"
                          ],
                          "x-ms-enum": {
                            "name": "serviceName",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "WAC",
                                "value": "WAC",
                                "description": "Windows Admin Center (WAC) is the service associated with this operation."
                              }
                            ]
                          }
                        },
                        "port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The port on which service is enabled."
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "serviceName"
                    ]
                  }
                },
                "additionalProperties": false
              }
            }
          }
        }
      }
    },
    "ArcSettingsPatchProperties": {
      "description": "ArcSettings properties.",
      "type": "object",
      "properties": {
        "connectivityProperties": {
          "description": "contains connectivity related configuration for ARC resources",
          "type": "object",
          "items": {
            "description": "Connectivity related configuration required by arc server.",
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "True indicates ARC connectivity is enabled"
              },
              "serviceConfigurations": {
                "type": "array",
                "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
                "items": {
                  "type": "object",
                  "description": "Service configuration details",
                  "required": [
                    "serviceName",
                    "port"
                  ],
                  "properties": {
                    "serviceName": {
                      "type": "string",
                      "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
                      "enum": [
                        "WAC"
                      ],
                      "x-ms-enum": {
                        "name": "serviceName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "WAC",
                            "value": "WAC",
                            "description": "Windows Admin Center (WAC) is the service associated with this operation."
                          }
                        ]
                      }
                    },
                    "port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The port on which service is enabled."
                    }
                  }
                },
                "x-ms-identifiers": [
                  "serviceName"
                ]
              }
            },
            "additionalProperties": false
          }
        }
      }
    },
    "ArcSetting": {
      "description": "ArcSetting details.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "ArcSetting properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the ArcSetting proxy resource.",
              "type": "string",
              "enum": [
                "NotSpecified",
                "Error",
                "Succeeded",
                "Failed",
                "Canceled",
                "Connected",
                "Disconnected",
                "Deleted",
                "Creating",
                "Updating",
                "Deleting",
                "Moving",
                "PartiallySucceeded",
                "PartiallyConnected",
                "InProgress",
                "Accepted",
                "Provisioning",
                "DisableInProgress"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The provisioning state is not specified."
                  },
                  {
                    "name": "Error",
                    "value": "Error",
                    "description": "An error occurred during provisioning."
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Provisioning completed successfully."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Provisioning failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Provisioning was canceled."
                  },
                  {
                    "name": "Connected",
                    "value": "Connected",
                    "description": "The resource is connected."
                  },
                  {
                    "name": "Disconnected",
                    "value": "Disconnected",
                    "description": "The resource is disconnected."
                  },
                  {
                    "name": "Deleted",
                    "value": "Deleted",
                    "description": "The resource has been deleted."
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "The resource is being created."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is being updated."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Moving",
                    "value": "Moving",
                    "description": "The resource is being moved."
                  },
                  {
                    "name": "PartiallySucceeded",
                    "value": "PartiallySucceeded",
                    "description": "Provisioning partially succeeded."
                  },
                  {
                    "name": "PartiallyConnected",
                    "value": "PartiallyConnected",
                    "description": "The resource is partially connected."
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress",
                    "description": "Provisioning is in progress."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Provisioning request has been accepted."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is currently provisioning."
                  },
                  {
                    "name": "DisableInProgress",
                    "value": "DisableInProgress",
                    "description": "The resource is being disabled."
                  }
                ]
              },
              "readOnly": true
            },
            "arcInstanceResourceGroup": {
              "description": "The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.",
              "type": "string"
            },
            "arcApplicationClientId": {
              "description": "App id of arc AAD identity.",
              "type": "string"
            },
            "arcApplicationTenantId": {
              "description": "Tenant id of arc AAD identity.",
              "type": "string"
            },
            "arcServicePrincipalObjectId": {
              "description": "Object id of arc AAD service principal.",
              "type": "string"
            },
            "arcApplicationObjectId": {
              "description": "Object id of arc AAD identity.",
              "type": "string"
            },
            "aggregateState": {
              "description": "Aggregate state of Arc agent across the nodes in this HCI cluster.",
              "type": "string",
              "enum": [
                "NotSpecified",
                "Error",
                "Succeeded",
                "Canceled",
                "Failed",
                "Connected",
                "Disconnected",
                "Deleted",
                "Creating",
                "Updating",
                "Deleting",
                "Moving",
                "PartiallySucceeded",
                "PartiallyConnected",
                "InProgress",
                "Accepted",
                "Provisioning",
                "DisableInProgress"
              ],
              "x-ms-enum": {
                "name": "ArcSettingAggregateState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The aggregate state is not specified."
                  },
                  {
                    "name": "Error",
                    "value": "Error",
                    "description": "An error occurred in the aggregate state."
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The operation successfully completed across all nodes."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The operation was canceled across the nodes."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The operation failed on all or most nodes."
                  },
                  {
                    "name": "Connected",
                    "value": "Connected",
                    "description": "All nodes are connected."
                  },
                  {
                    "name": "Disconnected",
                    "value": "Disconnected",
                    "description": "All nodes are disconnected."
                  },
                  {
                    "name": "Deleted",
                    "value": "Deleted",
                    "description": "The Arc agent has been deleted from all nodes."
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "The Arc agent is being created across the nodes."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The Arc agent is being updated across the nodes."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The Arc agent is being deleted across the nodes."
                  },
                  {
                    "name": "Moving",
                    "value": "Moving",
                    "description": "The Arc agent is being moved across the nodes."
                  },
                  {
                    "name": "PartiallySucceeded",
                    "value": "PartiallySucceeded",
                    "description": "The operation succeeded on some nodes."
                  },
                  {
                    "name": "PartiallyConnected",
                    "value": "PartiallyConnected",
                    "description": "Some nodes are connected, others are not."
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress",
                    "description": "The operation is currently in progress across the nodes."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The operation has been accepted and is pending execution."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The Arc agent is being provisioned across the nodes."
                  },
                  {
                    "name": "DisableInProgress",
                    "value": "DisableInProgress",
                    "description": "The Arc agent is being disabled across the nodes."
                  }
                ]
              },
              "readOnly": true
            },
            "perNodeDetails": {
              "description": "State of Arc agent in each of the nodes.",
              "type": "array",
              "items": {
                "description": "Status of Arc agent for a particular node in HCI Cluster.",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "readOnly": true,
                    "description": "Name of the Node in HCI Cluster"
                  },
                  "arcInstance": {
                    "description": "Fully qualified resource ID for the Arc agent of this node.",
                    "type": "string",
                    "readOnly": true
                  },
                  "arcNodeServicePrincipalObjectId": {
                    "description": "The service principal id of the arc for server node",
                    "type": "string",
                    "readOnly": true
                  },
                  "state": {
                    "description": "State of the Arc agent in this node. Indicates the current lifecycle status of the agent, such as whether it's being provisioned, connected, updated, or has encountered an error.",
                    "type": "string",
                    "enum": [
                      "NotSpecified",
                      "Error",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "Connected",
                      "Disconnected",
                      "Deleted",
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Moving",
                      "PartiallySucceeded",
                      "PartiallyConnected",
                      "InProgress",
                      "Accepted",
                      "Provisioning",
                      "DisableInProgress"
                    ],
                    "x-ms-enum": {
                      "name": "NodeArcState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "The state is not specified."
                        },
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "An error occurred during the agent's lifecycle."
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The operation completed successfully."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The operation was canceled before completion."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The operation failed."
                        },
                        {
                          "name": "Connected",
                          "value": "Connected",
                          "description": "The Arc agent is connected on this node."
                        },
                        {
                          "name": "Disconnected",
                          "value": "Disconnected",
                          "description": "The Arc agent is disconnected on this node."
                        },
                        {
                          "name": "Deleted",
                          "value": "Deleted",
                          "description": "The Arc agent has been deleted from this node."
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "The Arc agent is being created on this node."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The Arc agent is being updated on this node."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The Arc agent is being deleted from this node."
                        },
                        {
                          "name": "Moving",
                          "value": "Moving",
                          "description": "The Arc agent is being moved on this node."
                        },
                        {
                          "name": "PartiallySucceeded",
                          "value": "PartiallySucceeded",
                          "description": "The operation partially succeeded."
                        },
                        {
                          "name": "PartiallyConnected",
                          "value": "PartiallyConnected",
                          "description": "The Arc agent is partially connected on this node."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "The operation is currently in progress."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The operation has been accepted and is pending execution."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The Arc agent is currently being provisioned on this node."
                        },
                        {
                          "name": "DisableInProgress",
                          "value": "DisableInProgress",
                          "description": "The Arc agent is in the process of being disabled on this node."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            },
            "connectivityProperties": {
              "description": "contains connectivity related configuration for ARC resources",
              "type": "object",
              "items": {
                "description": "Connectivity related configuration required by arc server.",
                "type": "object",
                "properties": {
                  "enabled": {
                    "type": "boolean",
                    "description": "True indicates ARC connectivity is enabled"
                  },
                  "serviceConfigurations": {
                    "type": "array",
                    "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
                    "items": {
                      "type": "object",
                      "description": "Service configuration details",
                      "required": [
                        "serviceName",
                        "port"
                      ],
                      "properties": {
                        "serviceName": {
                          "type": "string",
                          "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
                          "enum": [
                            "WAC"
                          ],
                          "x-ms-enum": {
                            "name": "serviceName",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "WAC",
                                "value": "WAC",
                                "description": "Windows Admin Center (WAC) is the service associated with this operation."
                              }
                            ]
                          }
                        },
                        "port": {
                          "type": "integer",
                          "format": "int64",
                          "description": "The port on which service is enabled."
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "serviceName"
                    ]
                  }
                },
                "additionalProperties": false
              }
            },
            "defaultExtensions": {
              "description": "Properties for each of the default extensions category",
              "type": "array",
              "items": {
                "description": "Properties for a particular default extension category.",
                "type": "object",
                "properties": {
                  "category": {
                    "description": "Default extension category",
                    "type": "string",
                    "readOnly": true
                  },
                  "consentTime": {
                    "description": "Consent time for extension category",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  }
                }
              },
              "x-ms-identifiers": [
                "category"
              ],
              "readOnly": true
            }
          }
        }
      }
    },
    "ArcSettingProperties": {
      "description": "ArcSetting properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the ArcSetting proxy resource.",
          "type": "string",
          "enum": [
            "NotSpecified",
            "Error",
            "Succeeded",
            "Failed",
            "Canceled",
            "Connected",
            "Disconnected",
            "Deleted",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "PartiallySucceeded",
            "PartiallyConnected",
            "InProgress",
            "Accepted",
            "Provisioning",
            "DisableInProgress"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The provisioning state is not specified."
              },
              {
                "name": "Error",
                "value": "Error",
                "description": "An error occurred during provisioning."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Provisioning completed successfully."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Provisioning failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Provisioning was canceled."
              },
              {
                "name": "Connected",
                "value": "Connected",
                "description": "The resource is connected."
              },
              {
                "name": "Disconnected",
                "value": "Disconnected",
                "description": "The resource is disconnected."
              },
              {
                "name": "Deleted",
                "value": "Deleted",
                "description": "The resource has been deleted."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The resource is being created."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is being updated."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted."
              },
              {
                "name": "Moving",
                "value": "Moving",
                "description": "The resource is being moved."
              },
              {
                "name": "PartiallySucceeded",
                "value": "PartiallySucceeded",
                "description": "Provisioning partially succeeded."
              },
              {
                "name": "PartiallyConnected",
                "value": "PartiallyConnected",
                "description": "The resource is partially connected."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "Provisioning is in progress."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Provisioning request has been accepted."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is currently provisioning."
              },
              {
                "name": "DisableInProgress",
                "value": "DisableInProgress",
                "description": "The resource is being disabled."
              }
            ]
          },
          "readOnly": true
        },
        "arcInstanceResourceGroup": {
          "description": "The resource group that hosts the Arc agents, ie. Hybrid Compute Machine resources.",
          "type": "string"
        },
        "arcApplicationClientId": {
          "description": "App id of arc AAD identity.",
          "type": "string"
        },
        "arcApplicationTenantId": {
          "description": "Tenant id of arc AAD identity.",
          "type": "string"
        },
        "arcServicePrincipalObjectId": {
          "description": "Object id of arc AAD service principal.",
          "type": "string"
        },
        "arcApplicationObjectId": {
          "description": "Object id of arc AAD identity.",
          "type": "string"
        },
        "aggregateState": {
          "description": "Aggregate state of Arc agent across the nodes in this HCI cluster.",
          "type": "string",
          "enum": [
            "NotSpecified",
            "Error",
            "Succeeded",
            "Canceled",
            "Failed",
            "Connected",
            "Disconnected",
            "Deleted",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "PartiallySucceeded",
            "PartiallyConnected",
            "InProgress",
            "Accepted",
            "Provisioning",
            "DisableInProgress"
          ],
          "x-ms-enum": {
            "name": "ArcSettingAggregateState",
            "modelAsString": true,
            "values": [
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The aggregate state is not specified."
              },
              {
                "name": "Error",
                "value": "Error",
                "description": "An error occurred in the aggregate state."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The operation successfully completed across all nodes."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The operation was canceled across the nodes."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The operation failed on all or most nodes."
              },
              {
                "name": "Connected",
                "value": "Connected",
                "description": "All nodes are connected."
              },
              {
                "name": "Disconnected",
                "value": "Disconnected",
                "description": "All nodes are disconnected."
              },
              {
                "name": "Deleted",
                "value": "Deleted",
                "description": "The Arc agent has been deleted from all nodes."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The Arc agent is being created across the nodes."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The Arc agent is being updated across the nodes."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The Arc agent is being deleted across the nodes."
              },
              {
                "name": "Moving",
                "value": "Moving",
                "description": "The Arc agent is being moved across the nodes."
              },
              {
                "name": "PartiallySucceeded",
                "value": "PartiallySucceeded",
                "description": "The operation succeeded on some nodes."
              },
              {
                "name": "PartiallyConnected",
                "value": "PartiallyConnected",
                "description": "Some nodes are connected, others are not."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "The operation is currently in progress across the nodes."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The operation has been accepted and is pending execution."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The Arc agent is being provisioned across the nodes."
              },
              {
                "name": "DisableInProgress",
                "value": "DisableInProgress",
                "description": "The Arc agent is being disabled across the nodes."
              }
            ]
          },
          "readOnly": true
        },
        "perNodeDetails": {
          "description": "State of Arc agent in each of the nodes.",
          "type": "array",
          "items": {
            "description": "Status of Arc agent for a particular node in HCI Cluster.",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "readOnly": true,
                "description": "Name of the Node in HCI Cluster"
              },
              "arcInstance": {
                "description": "Fully qualified resource ID for the Arc agent of this node.",
                "type": "string",
                "readOnly": true
              },
              "arcNodeServicePrincipalObjectId": {
                "description": "The service principal id of the arc for server node",
                "type": "string",
                "readOnly": true
              },
              "state": {
                "description": "State of the Arc agent in this node. Indicates the current lifecycle status of the agent, such as whether it's being provisioned, connected, updated, or has encountered an error.",
                "type": "string",
                "enum": [
                  "NotSpecified",
                  "Error",
                  "Succeeded",
                  "Canceled",
                  "Failed",
                  "Connected",
                  "Disconnected",
                  "Deleted",
                  "Creating",
                  "Updating",
                  "Deleting",
                  "Moving",
                  "PartiallySucceeded",
                  "PartiallyConnected",
                  "InProgress",
                  "Accepted",
                  "Provisioning",
                  "DisableInProgress"
                ],
                "x-ms-enum": {
                  "name": "NodeArcState",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "NotSpecified",
                      "value": "NotSpecified",
                      "description": "The state is not specified."
                    },
                    {
                      "name": "Error",
                      "value": "Error",
                      "description": "An error occurred during the agent's lifecycle."
                    },
                    {
                      "name": "Succeeded",
                      "value": "Succeeded",
                      "description": "The operation completed successfully."
                    },
                    {
                      "name": "Canceled",
                      "value": "Canceled",
                      "description": "The operation was canceled before completion."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "The operation failed."
                    },
                    {
                      "name": "Connected",
                      "value": "Connected",
                      "description": "The Arc agent is connected on this node."
                    },
                    {
                      "name": "Disconnected",
                      "value": "Disconnected",
                      "description": "The Arc agent is disconnected on this node."
                    },
                    {
                      "name": "Deleted",
                      "value": "Deleted",
                      "description": "The Arc agent has been deleted from this node."
                    },
                    {
                      "name": "Creating",
                      "value": "Creating",
                      "description": "The Arc agent is being created on this node."
                    },
                    {
                      "name": "Updating",
                      "value": "Updating",
                      "description": "The Arc agent is being updated on this node."
                    },
                    {
                      "name": "Deleting",
                      "value": "Deleting",
                      "description": "The Arc agent is being deleted from this node."
                    },
                    {
                      "name": "Moving",
                      "value": "Moving",
                      "description": "The Arc agent is being moved on this node."
                    },
                    {
                      "name": "PartiallySucceeded",
                      "value": "PartiallySucceeded",
                      "description": "The operation partially succeeded."
                    },
                    {
                      "name": "PartiallyConnected",
                      "value": "PartiallyConnected",
                      "description": "The Arc agent is partially connected on this node."
                    },
                    {
                      "name": "InProgress",
                      "value": "InProgress",
                      "description": "The operation is currently in progress."
                    },
                    {
                      "name": "Accepted",
                      "value": "Accepted",
                      "description": "The operation has been accepted and is pending execution."
                    },
                    {
                      "name": "Provisioning",
                      "value": "Provisioning",
                      "description": "The Arc agent is currently being provisioned on this node."
                    },
                    {
                      "name": "DisableInProgress",
                      "value": "DisableInProgress",
                      "description": "The Arc agent is in the process of being disabled on this node."
                    }
                  ]
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "connectivityProperties": {
          "description": "contains connectivity related configuration for ARC resources",
          "type": "object",
          "items": {
            "description": "Connectivity related configuration required by arc server.",
            "type": "object",
            "properties": {
              "enabled": {
                "type": "boolean",
                "description": "True indicates ARC connectivity is enabled"
              },
              "serviceConfigurations": {
                "type": "array",
                "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
                "items": {
                  "type": "object",
                  "description": "Service configuration details",
                  "required": [
                    "serviceName",
                    "port"
                  ],
                  "properties": {
                    "serviceName": {
                      "type": "string",
                      "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
                      "enum": [
                        "WAC"
                      ],
                      "x-ms-enum": {
                        "name": "serviceName",
                        "modelAsString": true,
                        "values": [
                          {
                            "name": "WAC",
                            "value": "WAC",
                            "description": "Windows Admin Center (WAC) is the service associated with this operation."
                          }
                        ]
                      }
                    },
                    "port": {
                      "type": "integer",
                      "format": "int64",
                      "description": "The port on which service is enabled."
                    }
                  }
                },
                "x-ms-identifiers": [
                  "serviceName"
                ]
              }
            },
            "additionalProperties": false
          }
        },
        "defaultExtensions": {
          "description": "Properties for each of the default extensions category",
          "type": "array",
          "items": {
            "description": "Properties for a particular default extension category.",
            "type": "object",
            "properties": {
              "category": {
                "description": "Default extension category",
                "type": "string",
                "readOnly": true
              },
              "consentTime": {
                "description": "Consent time for extension category",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              }
            }
          },
          "x-ms-identifiers": [
            "category"
          ],
          "readOnly": true
        }
      }
    },
    "PerNodeState": {
      "description": "Status of Arc agent for a particular node in HCI Cluster.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Name of the Node in HCI Cluster"
        },
        "arcInstance": {
          "description": "Fully qualified resource ID for the Arc agent of this node.",
          "type": "string",
          "readOnly": true
        },
        "arcNodeServicePrincipalObjectId": {
          "description": "The service principal id of the arc for server node",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "description": "State of the Arc agent in this node. Indicates the current lifecycle status of the agent, such as whether it's being provisioned, connected, updated, or has encountered an error.",
          "type": "string",
          "enum": [
            "NotSpecified",
            "Error",
            "Succeeded",
            "Canceled",
            "Failed",
            "Connected",
            "Disconnected",
            "Deleted",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "PartiallySucceeded",
            "PartiallyConnected",
            "InProgress",
            "Accepted",
            "Provisioning",
            "DisableInProgress"
          ],
          "x-ms-enum": {
            "name": "NodeArcState",
            "modelAsString": true,
            "values": [
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The state is not specified."
              },
              {
                "name": "Error",
                "value": "Error",
                "description": "An error occurred during the agent's lifecycle."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The operation completed successfully."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The operation was canceled before completion."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The operation failed."
              },
              {
                "name": "Connected",
                "value": "Connected",
                "description": "The Arc agent is connected on this node."
              },
              {
                "name": "Disconnected",
                "value": "Disconnected",
                "description": "The Arc agent is disconnected on this node."
              },
              {
                "name": "Deleted",
                "value": "Deleted",
                "description": "The Arc agent has been deleted from this node."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The Arc agent is being created on this node."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The Arc agent is being updated on this node."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The Arc agent is being deleted from this node."
              },
              {
                "name": "Moving",
                "value": "Moving",
                "description": "The Arc agent is being moved on this node."
              },
              {
                "name": "PartiallySucceeded",
                "value": "PartiallySucceeded",
                "description": "The operation partially succeeded."
              },
              {
                "name": "PartiallyConnected",
                "value": "PartiallyConnected",
                "description": "The Arc agent is partially connected on this node."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "The operation is currently in progress."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The operation has been accepted and is pending execution."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The Arc agent is currently being provisioned on this node."
              },
              {
                "name": "DisableInProgress",
                "value": "DisableInProgress",
                "description": "The Arc agent is in the process of being disabled on this node."
              }
            ]
          },
          "readOnly": true
        }
      }
    },
    "DefaultExtensionDetails": {
      "description": "Properties for a particular default extension category.",
      "type": "object",
      "properties": {
        "category": {
          "description": "Default extension category",
          "type": "string",
          "readOnly": true
        },
        "consentTime": {
          "description": "Consent time for extension category",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "ArcConnectivityProperties": {
      "description": "Connectivity related configuration required by arc server.",
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "True indicates ARC connectivity is enabled"
        },
        "serviceConfigurations": {
          "type": "array",
          "description": "Service configurations associated with the connectivity resource. They are only processed by the server if 'enabled' property is set to 'true'.",
          "items": {
            "type": "object",
            "description": "Service configuration details",
            "required": [
              "serviceName",
              "port"
            ],
            "properties": {
              "serviceName": {
                "type": "string",
                "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
                "enum": [
                  "WAC"
                ],
                "x-ms-enum": {
                  "name": "serviceName",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "WAC",
                      "value": "WAC",
                      "description": "Windows Admin Center (WAC) is the service associated with this operation."
                    }
                  ]
                }
              },
              "port": {
                "type": "integer",
                "format": "int64",
                "description": "The port on which service is enabled."
              }
            }
          },
          "x-ms-identifiers": [
            "serviceName"
          ]
        }
      },
      "additionalProperties": false
    },
    "ServiceConfiguration": {
      "type": "object",
      "description": "Service configuration details",
      "required": [
        "serviceName",
        "port"
      ],
      "properties": {
        "serviceName": {
          "type": "string",
          "description": "Specifies the name of the service associated with the update or operation. This helps identify which system component or tool is involved.",
          "enum": [
            "WAC"
          ],
          "x-ms-enum": {
            "name": "serviceName",
            "modelAsString": true,
            "values": [
              {
                "name": "WAC",
                "value": "WAC",
                "description": "Windows Admin Center (WAC) is the service associated with this operation."
              }
            ]
          }
        },
        "port": {
          "type": "integer",
          "format": "int64",
          "description": "The port on which service is enabled."
        }
      }
    },
    "PasswordCredential": {
      "type": "object",
      "properties": {
        "secretText": {
          "type": "string"
        },
        "keyId": {
          "type": "string"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "endDateTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "additionalProperties": false,
      "readOnly": true
    },
    "ArcIdentityResponse": {
      "description": "ArcIdentity details.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "ArcIdentity properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "arcApplicationClientId": {
              "type": "string"
            },
            "arcApplicationTenantId": {
              "type": "string"
            },
            "arcServicePrincipalObjectId": {
              "type": "string"
            },
            "arcApplicationObjectId": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "readOnly": true
        }
      }
    },
    "ArcIdentityResponseProperties": {
      "type": "object",
      "properties": {
        "arcApplicationClientId": {
          "type": "string"
        },
        "arcApplicationTenantId": {
          "type": "string"
        },
        "arcServicePrincipalObjectId": {
          "type": "string"
        },
        "arcApplicationObjectId": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "readOnly": true
    },
    "ClusterList": {
      "description": "List of clusters.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of clusters.",
          "type": "array",
          "items": {
            "description": "Cluster details.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "tags": {
                "type": "object",
                "description": "Resource tags.",
                "additionalProperties": {
                  "type": "string"
                },
                "x-ms-mutability": [
                  "read",
                  "create",
                  "update"
                ]
              },
              "location": {
                "type": "string",
                "description": "The geo-location where the resource lives",
                "x-ms-mutability": [
                  "read",
                  "create"
                ]
              },
              "identity": {
                "description": "Identity of Cluster resource",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "tenantId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
                    "readOnly": true
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
                    "enum": [
                      "None",
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned, UserAssigned"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedServiceIdentityType",
                      "modelAsString": true
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "title": "User-Assigned Identities",
                    "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
                    "additionalProperties": {
                      "type": "object",
                      "description": "User assigned identity properties",
                      "properties": {
                        "principalId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The principal ID of the assigned identity.",
                          "readOnly": true
                        },
                        "clientId": {
                          "type": "string",
                          "format": "uuid",
                          "description": "The client ID of the assigned identity.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "required": [
                  "type"
                ]
              },
              "properties": {
                "description": "Cluster properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state. Indicates the current lifecycle status of the resource, including creation, update, deletion, connectivity, and error states.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted",
                      "Provisioning",
                      "NotSpecified",
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Moving",
                      "Deleted",
                      "PartiallySucceeded",
                      "InProgress",
                      "DisableInProgress",
                      "Connected",
                      "PartiallyConnected",
                      "Disconnected"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The operation completed successfully."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The operation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The operation was canceled before completion."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The operation has been accepted and is pending execution."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is currently being provisioned."
                        },
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "The provisioning state is not specified."
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "The resource is being created."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is being updated."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted."
                        },
                        {
                          "name": "Moving",
                          "value": "Moving",
                          "description": "The resource is being moved."
                        },
                        {
                          "name": "Deleted",
                          "value": "Deleted",
                          "description": "The resource has been deleted."
                        },
                        {
                          "name": "PartiallySucceeded",
                          "value": "PartiallySucceeded",
                          "description": "The operation partially succeeded."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "The operation is currently in progress."
                        },
                        {
                          "name": "DisableInProgress",
                          "value": "DisableInProgress",
                          "description": "The resource is in the process of being disabled."
                        },
                        {
                          "name": "Connected",
                          "value": "Connected",
                          "description": "The resource is connected."
                        },
                        {
                          "name": "PartiallyConnected",
                          "value": "PartiallyConnected",
                          "description": "The resource is partially connected."
                        },
                        {
                          "name": "Disconnected",
                          "value": "Disconnected",
                          "description": "The resource is disconnected."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the cluster agent. Indicates the current connectivity, validation, and deployment state of the agent within the cluster.",
                    "type": "string",
                    "enum": [
                      "NotYetRegistered",
                      "ConnectedRecently",
                      "NotConnectedRecently",
                      "Disconnected",
                      "Error",
                      "NotSpecified",
                      "ValidationInProgress",
                      "ValidationSuccess",
                      "ValidationFailed",
                      "DeploymentInProgress",
                      "DeploymentFailed",
                      "DeploymentSuccess"
                    ],
                    "x-ms-enum": {
                      "name": "Status",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NotYetRegistered",
                          "value": "NotYetRegistered",
                          "description": "The cluster agent has not yet registered with Azure."
                        },
                        {
                          "name": "ConnectedRecently",
                          "value": "ConnectedRecently",
                          "description": "The cluster agent has connected to Azure recently."
                        },
                        {
                          "name": "NotConnectedRecently",
                          "value": "NotConnectedRecently",
                          "description": "The cluster agent has not connected to Azure recently."
                        },
                        {
                          "name": "Disconnected",
                          "value": "Disconnected",
                          "description": "The cluster agent is currently disconnected from Azure."
                        },
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "An error occurred in the cluster agent's operation."
                        },
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "The status of the cluster agent is not specified."
                        },
                        {
                          "name": "ValidationInProgress",
                          "value": "ValidationInProgress",
                          "description": "Validation of the cluster agent is currently in progress."
                        },
                        {
                          "name": "ValidationSuccess",
                          "value": "ValidationSuccess",
                          "description": "Validation of the cluster agent completed successfully."
                        },
                        {
                          "name": "ValidationFailed",
                          "value": "ValidationFailed",
                          "description": "Validation of the cluster agent failed."
                        },
                        {
                          "name": "DeploymentInProgress",
                          "value": "DeploymentInProgress",
                          "description": "Deployment of the cluster agent is currently in progress."
                        },
                        {
                          "name": "DeploymentFailed",
                          "value": "DeploymentFailed",
                          "description": "Deployment of the cluster agent failed."
                        },
                        {
                          "name": "DeploymentSuccess",
                          "value": "DeploymentSuccess",
                          "description": "Deployment of the cluster agent completed successfully."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "connectivityStatus": {
                    "description": "Overall connectivity status for the cluster resource. Indicates whether the cluster is connected to Azure, partially connected, or has not recently communicated.",
                    "type": "string",
                    "enum": [
                      "NotYetRegistered",
                      "Connected",
                      "NotConnectedRecently",
                      "PartiallyConnected",
                      "Disconnected",
                      "NotSpecified"
                    ],
                    "x-ms-enum": {
                      "name": "ConnectivityStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NotYetRegistered",
                          "value": "NotYetRegistered",
                          "description": "The cluster has not yet registered with Azure."
                        },
                        {
                          "name": "Connected",
                          "value": "Connected",
                          "description": "The cluster is fully connected to Azure."
                        },
                        {
                          "name": "NotConnectedRecently",
                          "value": "NotConnectedRecently",
                          "description": "The cluster has not connected to Azure recently."
                        },
                        {
                          "name": "PartiallyConnected",
                          "value": "PartiallyConnected",
                          "description": "Some components of the cluster are connected, while others are not."
                        },
                        {
                          "name": "Disconnected",
                          "value": "Disconnected",
                          "description": "The cluster is not connected to Azure."
                        },
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "The connectivity status is not specified."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "cloudId": {
                    "description": "Unique, immutable resource id.",
                    "type": "string",
                    "readOnly": true
                  },
                  "cloudManagementEndpoint": {
                    "description": "Endpoint configured for management from the Azure portal.",
                    "type": "string"
                  },
                  "aadClientId": {
                    "description": "App id of cluster AAD identity.",
                    "type": "string"
                  },
                  "aadTenantId": {
                    "description": "Tenant id of cluster AAD identity.",
                    "type": "string"
                  },
                  "aadApplicationObjectId": {
                    "description": "Object id of cluster AAD identity.",
                    "type": "string"
                  },
                  "aadServicePrincipalObjectId": {
                    "description": "Id of cluster identity service principal.",
                    "type": "string"
                  },
                  "softwareAssuranceProperties": {
                    "description": "Software Assurance properties of the cluster.",
                    "type": "object",
                    "properties": {
                      "softwareAssuranceStatus": {
                        "description": "Status of the Software Assurance for the cluster.",
                        "type": "string",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "x-ms-enum": {
                          "name": "SoftwareAssuranceStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "Software Assurance is enabled for the cluster."
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "Software Assurance is disabled for the cluster."
                            }
                          ]
                        },
                        "readOnly": true
                      },
                      "softwareAssuranceIntent": {
                        "description": "Customer Intent for Software Assurance Benefit.",
                        "type": "string",
                        "enum": [
                          "Enable",
                          "Disable"
                        ],
                        "x-ms-enum": {
                          "name": "SoftwareAssuranceIntent",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enable",
                              "value": "Enable",
                              "description": "Customer intends to enable the Software Assurance benefit."
                            },
                            {
                              "name": "Disable",
                              "value": "Disable",
                              "description": "Customer intends to disable the Software Assurance benefit."
                            }
                          ]
                        }
                      },
                      "lastUpdated": {
                        "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      }
                    }
                  },
                  "logCollectionProperties": {
                    "description": "Log Collection properties of the cluster.",
                    "type": "object",
                    "properties": {
                      "fromDate": {
                        "description": "From DateTimeStamp from when logs need to be connected",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "toDate": {
                        "description": "To DateTimeStamp till when logs need to be connected",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "lastLogGenerated": {
                        "description": "Recent DateTimeStamp where logs are successfully generated",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "logCollectionSessionDetails": {
                        "type": "array",
                        "items": {
                          "description": "Log Collection Session details of the cluster.",
                          "type": "object",
                          "properties": {
                            "logStartTime": {
                              "description": "Start Time of the logs when it was collected",
                              "type": "string",
                              "format": "date-time",
                              "readOnly": true
                            },
                            "logEndTime": {
                              "description": "End Time of the logs when it was collected",
                              "type": "string",
                              "format": "date-time",
                              "readOnly": true
                            },
                            "timeCollected": {
                              "description": "Duration of logs collected",
                              "type": "string",
                              "format": "date-time",
                              "readOnly": true
                            },
                            "logSize": {
                              "description": "Size of the logs collected",
                              "type": "integer",
                              "format": "int64",
                              "readOnly": true
                            },
                            "logCollectionStatus": {
                              "description": "LogCollection status",
                              "type": "string",
                              "enum": [
                                "None",
                                "InProgress",
                                "Failed",
                                "Succeeded"
                              ],
                              "x-ms-enum": {
                                "name": "LogCollectionStatus",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "None",
                                    "value": "None",
                                    "description": "No log collection has been initiated."
                                  },
                                  {
                                    "name": "InProgress",
                                    "value": "InProgress",
                                    "description": "Log collection is currently in progress."
                                  },
                                  {
                                    "name": "Failed",
                                    "value": "Failed",
                                    "description": "Log collection has failed."
                                  },
                                  {
                                    "name": "Succeeded",
                                    "value": "Succeeded",
                                    "description": "Log collection completed successfully."
                                  }
                                ]
                              },
                              "readOnly": true
                            },
                            "correlationId": {
                              "description": "CorrelationId of the log collection",
                              "type": "string",
                              "readOnly": true
                            },
                            "logCollectionJobType": {
                              "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                              "type": "string",
                              "enum": [
                                "OnDemand",
                                "Scheduled"
                              ],
                              "x-ms-enum": {
                                "name": "LogCollectionJobType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "OnDemand",
                                    "value": "OnDemand",
                                    "description": "Log collection is triggered manually and executed immediately."
                                  },
                                  {
                                    "name": "Scheduled",
                                    "value": "Scheduled",
                                    "description": "Log collection is scheduled to run at a predefined time or interval."
                                  }
                                ]
                              },
                              "readOnly": true
                            },
                            "endTimeCollected": {
                              "description": "End Time of the logs when it was collected",
                              "type": "string",
                              "format": "date-time",
                              "readOnly": true
                            },
                            "logCollectionError": {
                              "readOnly": true,
                              "description": "Log Collection Error details of the cluster.",
                              "type": "object",
                              "properties": {
                                "errorCode": {
                                  "description": "Error Code of the log collection",
                                  "type": "string",
                                  "readOnly": true
                                },
                                "errorMessage": {
                                  "description": "Error Message of the log collection",
                                  "type": "string",
                                  "readOnly": true
                                }
                              }
                            }
                          }
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "remoteSupportProperties": {
                    "description": "RemoteSupport properties of the cluster.",
                    "type": "object",
                    "properties": {
                      "accessLevel": {
                        "readOnly": true,
                        "description": "Remote Support Access Level",
                        "type": "string",
                        "enum": [
                          "Diagnostics",
                          "DiagnosticsAndRepair"
                        ],
                        "x-ms-enum": {
                          "name": "AccessLevel",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Diagnostics",
                              "value": "Diagnostics",
                              "description": "Allows remote diagnostics operations only."
                            },
                            {
                              "name": "DiagnosticsAndRepair",
                              "value": "DiagnosticsAndRepair",
                              "description": "Allows both remote diagnostics and repair operations."
                            }
                          ]
                        }
                      },
                      "expirationTimeStamp": {
                        "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "remoteSupportType": {
                        "description": "Remote Support Type for cluster",
                        "type": "string",
                        "enum": [
                          "Enable",
                          "Revoke"
                        ],
                        "x-ms-enum": {
                          "name": "RemoteSupportType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enable",
                              "value": "Enable",
                              "description": "Enable remote support for the cluster."
                            },
                            {
                              "name": "Revoke",
                              "value": "Revoke",
                              "description": "Revoke previously enabled remote support for the cluster."
                            }
                          ]
                        },
                        "readOnly": true
                      },
                      "remoteSupportNodeSettings": {
                        "type": "array",
                        "items": {
                          "description": "Remote Support Node Settings of the cluster.",
                          "type": "object",
                          "properties": {
                            "arcResourceId": {
                              "description": "Arc ResourceId of the Node",
                              "type": "string",
                              "readOnly": true
                            },
                            "state": {
                              "description": "Remote Support Access Connection State on the Node",
                              "type": "string",
                              "readOnly": true
                            },
                            "createdAt": {
                              "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                              "type": "string",
                              "format": "date-time",
                              "readOnly": true
                            },
                            "updatedAt": {
                              "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                              "type": "string",
                              "format": "date-time",
                              "readOnly": true
                            },
                            "connectionStatus": {
                              "description": "Remote Support Access Connection Status on the Node",
                              "type": "string",
                              "readOnly": true
                            },
                            "connectionErrorMessage": {
                              "description": "Remote Support Access Connection Error Message on the Node",
                              "type": "string",
                              "readOnly": true
                            },
                            "transcriptLocation": {
                              "description": "Remote Support Transcript location on the node",
                              "type": "string",
                              "readOnly": true
                            }
                          }
                        },
                        "readOnly": true
                      },
                      "remoteSupportSessionDetails": {
                        "type": "array",
                        "items": {
                          "description": "Remote Support Node Session Details on the Node.",
                          "type": "object",
                          "properties": {
                            "sessionStartTime": {
                              "description": "Remote Support Session StartTime on the Node",
                              "type": "string",
                              "format": "date-time",
                              "readOnly": true
                            },
                            "sessionEndTime": {
                              "description": "Remote Support Session EndTime on the Node",
                              "type": "string",
                              "format": "date-time",
                              "readOnly": true
                            },
                            "nodeName": {
                              "description": "Name of the node",
                              "type": "string",
                              "readOnly": true
                            },
                            "duration": {
                              "description": "Duration of Remote Support Enablement",
                              "type": "integer",
                              "format": "int64",
                              "readOnly": true
                            },
                            "accessLevel": {
                              "readOnly": true,
                              "description": "Remote Support Access Level",
                              "type": "string",
                              "enum": [
                                "Diagnostics",
                                "DiagnosticsAndRepair"
                              ],
                              "x-ms-enum": {
                                "name": "AccessLevel",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Diagnostics",
                                    "value": "Diagnostics",
                                    "description": "Allows remote diagnostics operations only."
                                  },
                                  {
                                    "name": "DiagnosticsAndRepair",
                                    "value": "DiagnosticsAndRepair",
                                    "description": "Allows both remote diagnostics and repair operations."
                                  }
                                ]
                              }
                            }
                          }
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "desiredProperties": {
                    "description": "Desired properties of the cluster.",
                    "type": "object",
                    "properties": {
                      "windowsServerSubscription": {
                        "description": "Desired state of Windows Server Subscription.",
                        "type": "string",
                        "enum": [
                          "Disabled",
                          "Enabled"
                        ],
                        "x-ms-enum": {
                          "name": "WindowsServerSubscription",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "Windows Server Subscription is disabled."
                            },
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "Windows Server Subscription is enabled."
                            }
                          ]
                        }
                      },
                      "diagnosticLevel": {
                        "description": "Desired level of diagnostic data emitted by the cluster.",
                        "type": "string",
                        "enum": [
                          "Off",
                          "Basic",
                          "Enhanced"
                        ],
                        "x-ms-enum": {
                          "name": "DiagnosticLevel",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Off",
                              "value": "Off",
                              "description": "No diagnostic data will be emitted."
                            },
                            {
                              "name": "Basic",
                              "value": "Basic",
                              "description": "Basic diagnostic data will be emitted, including essential health metrics."
                            },
                            {
                              "name": "Enhanced",
                              "value": "Enhanced",
                              "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "reportedProperties": {
                    "description": "Properties reported by cluster agent.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "clusterName": {
                        "description": "Name of the on-prem cluster connected to this resource.",
                        "type": "string",
                        "readOnly": true
                      },
                      "clusterId": {
                        "description": "Unique id generated by the on-prem cluster.",
                        "type": "string",
                        "readOnly": true
                      },
                      "clusterVersion": {
                        "description": "Version of the cluster software.",
                        "type": "string",
                        "readOnly": true
                      },
                      "nodes": {
                        "description": "List of nodes reported by the cluster.",
                        "type": "array",
                        "items": {
                          "description": "Cluster node details.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "description": "Name of the cluster node.",
                              "type": "string",
                              "readOnly": true
                            },
                            "id": {
                              "description": "Id of the node in the cluster.",
                              "type": "number",
                              "readOnly": true
                            },
                            "windowsServerSubscription": {
                              "description": "State of Windows Server Subscription.",
                              "type": "string",
                              "enum": [
                                "Disabled",
                                "Enabled"
                              ],
                              "x-ms-enum": {
                                "name": "WindowsServerSubscription",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "Windows Server Subscription is disabled."
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "Windows Server Subscription is enabled."
                                  }
                                ]
                              },
                              "readOnly": true
                            },
                            "nodeType": {
                              "description": "Type of the cluster node hardware.",
                              "type": "string",
                              "enum": [
                                "FirstParty",
                                "ThirdParty"
                              ],
                              "x-ms-enum": {
                                "name": "ClusterNodeType",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "FirstParty",
                                    "value": "FirstParty",
                                    "description": "Cluster nodes are provided and managed by Microsoft."
                                  },
                                  {
                                    "name": "ThirdParty",
                                    "value": "ThirdParty",
                                    "description": "Cluster nodes are provided and managed by a third-party vendor."
                                  }
                                ]
                              },
                              "readOnly": true
                            },
                            "ehcResourceId": {
                              "description": "Edge Hardware Center Resource Id",
                              "type": "string",
                              "readOnly": true
                            },
                            "manufacturer": {
                              "description": "Manufacturer of the cluster node hardware.",
                              "type": "string",
                              "readOnly": true
                            },
                            "model": {
                              "description": "Model name of the cluster node hardware.",
                              "type": "string",
                              "readOnly": true
                            },
                            "osName": {
                              "description": "Operating system running on the cluster node.",
                              "type": "string",
                              "readOnly": true
                            },
                            "osVersion": {
                              "description": "Version of the operating system running on the cluster node.",
                              "type": "string",
                              "readOnly": true
                            },
                            "osDisplayVersion": {
                              "description": "Display version of the operating system running on the cluster node.",
                              "type": "string",
                              "readOnly": true
                            },
                            "serialNumber": {
                              "description": "Immutable id of the cluster node.",
                              "type": "string",
                              "readOnly": true
                            },
                            "coreCount": {
                              "description": "Number of physical cores on the cluster node.",
                              "type": "number",
                              "readOnly": true
                            },
                            "memoryInGiB": {
                              "description": "Total available memory on the cluster node (in GiB).",
                              "type": "number",
                              "readOnly": true
                            },
                            "lastLicensingTimestamp": {
                              "description": "Most recent licensing timestamp.",
                              "type": "string",
                              "format": "date-time",
                              "readOnly": true
                            },
                            "oemActivation": {
                              "description": "OEM activation status of the node.",
                              "type": "string",
                              "enum": [
                                "Disabled",
                                "Enabled"
                              ],
                              "x-ms-enum": {
                                "name": "OemActivation",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "Disabled",
                                    "value": "Disabled",
                                    "description": "OEM activation is disabled for the node."
                                  },
                                  {
                                    "name": "Enabled",
                                    "value": "Enabled",
                                    "description": "OEM activation is enabled for the node."
                                  }
                                ]
                              },
                              "readOnly": true
                            }
                          }
                        },
                        "readOnly": true
                      },
                      "lastUpdated": {
                        "description": "Last time the cluster reported the data.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "imdsAttestation": {
                        "description": "IMDS attestation status of the cluster.",
                        "type": "string",
                        "enum": [
                          "Disabled",
                          "Enabled"
                        ],
                        "x-ms-enum": {
                          "name": "ImdsAttestation",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "IMDS attestation is disabled for the cluster."
                            },
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "IMDS attestation is enabled for the cluster."
                            }
                          ]
                        },
                        "readOnly": true
                      },
                      "diagnosticLevel": {
                        "description": "Level of diagnostic data emitted by the cluster.",
                        "type": "string",
                        "enum": [
                          "Off",
                          "Basic",
                          "Enhanced"
                        ],
                        "x-ms-enum": {
                          "name": "DiagnosticLevel",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Off",
                              "value": "Off",
                              "description": "No diagnostic data will be emitted."
                            },
                            {
                              "name": "Basic",
                              "value": "Basic",
                              "description": "Basic diagnostic data will be emitted, including essential health metrics."
                            },
                            {
                              "name": "Enhanced",
                              "value": "Enhanced",
                              "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                            }
                          ]
                        }
                      },
                      "supportedCapabilities": {
                        "description": "Capabilities supported by the cluster.",
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "type": "string"
                        }
                      },
                      "clusterType": {
                        "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
                        "type": "string",
                        "enum": [
                          "FirstParty",
                          "ThirdParty"
                        ],
                        "x-ms-enum": {
                          "name": "ClusterNodeType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "FirstParty",
                              "value": "FirstParty",
                              "description": "All nodes in the cluster are provided and managed by Microsoft."
                            },
                            {
                              "name": "ThirdParty",
                              "value": "ThirdParty",
                              "description": "All nodes in the cluster are provided and managed by a third-party vendor."
                            }
                          ]
                        },
                        "readOnly": true
                      },
                      "manufacturer": {
                        "description": "The manufacturer of all the nodes of the cluster.",
                        "type": "string",
                        "readOnly": true
                      },
                      "oemActivation": {
                        "description": "OEM activation status of the cluster.",
                        "type": "string",
                        "enum": [
                          "Disabled",
                          "Enabled"
                        ],
                        "x-ms-enum": {
                          "name": "OemActivation",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "OEM activation is disabled for the cluster."
                            },
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "OEM activation is enabled for the cluster."
                            }
                          ]
                        },
                        "readOnly": true
                      },
                      "hardwareClass": {
                        "description": "Hardware class of the cluster.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Small",
                          "Medium",
                          "Large"
                        ],
                        "default": "Medium",
                        "x-ms-enum": {
                          "name": "HardwareClass",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Small",
                              "value": "Small",
                              "description": "The hardware class is small."
                            },
                            {
                              "name": "Medium",
                              "value": "Medium",
                              "description": "The hardware class is medium. This corresponds to the default"
                            },
                            {
                              "name": "Large",
                              "value": "Large",
                              "description": "The hardware class is large."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "isolatedVmAttestationConfiguration": {
                    "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "attestationResourceId": {
                        "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
                        "type": "string",
                        "format": "arm-id",
                        "x-ms-arm-id-details": {
                          "allowedResources": [
                            {
                              "type": "Microsoft.Attestation/attestationProviders",
                              "scopes": [
                                "Tenant"
                              ]
                            }
                          ]
                        },
                        "readOnly": true
                      },
                      "relyingPartyServiceEndpoint": {
                        "description": "Region specific endpoint for relying party service.",
                        "type": "string",
                        "readOnly": true
                      },
                      "attestationServiceEndpoint": {
                        "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "trialDaysRemaining": {
                    "description": "Number of days remaining in the trial period.",
                    "type": "number",
                    "readOnly": true
                  },
                  "billingModel": {
                    "description": "Type of billing applied to the resource.",
                    "type": "string",
                    "readOnly": true
                  },
                  "registrationTimestamp": {
                    "description": "First cluster sync timestamp.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "lastSyncTimestamp": {
                    "description": "Most recent cluster sync timestamp.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "lastBillingTimestamp": {
                    "description": "Most recent billing meter timestamp.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "serviceEndpoint": {
                    "description": "Region specific DataPath Endpoint of the cluster.",
                    "type": "string",
                    "readOnly": true
                  },
                  "resourceProviderObjectId": {
                    "description": "Object id of RP Service Principal",
                    "type": "string",
                    "readOnly": true
                  },
                  "secretsLocations": {
                    "type": "array",
                    "description": "List of secret locations.",
                    "items": {
                      "type": "object",
                      "description": "Secrets location details",
                      "properties": {
                        "secretsType": {
                          "description": "Type of secrets to store",
                          "type": "string",
                          "enum": [
                            "BackupSecrets"
                          ],
                          "x-ms-enum": {
                            "name": "SecretsType",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "BackupSecrets",
                                "value": "BackupSecrets",
                                "description": "Backup secrets type"
                              }
                            ]
                          }
                        },
                        "secretsLocation": {
                          "type": "string",
                          "description": "secrets location"
                        }
                      },
                      "required": [
                        "secretsType",
                        "secretsLocation"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "clusterPattern": {
                    "description": "Supported Storage Type for HCI Cluster",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Standard",
                      "RackAware"
                    ],
                    "x-ms-enum": {
                      "name": "ClusterPattern",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Standard",
                          "value": "Standard",
                          "description": "Standard cluster."
                        },
                        {
                          "name": "RackAware",
                          "value": "RackAware",
                          "description": "RackAware cluster."
                        }
                      ]
                    }
                  },
                  "localAvailabilityZones": {
                    "type": "array",
                    "description": "Local Availability Zone information for HCI cluster",
                    "items": {
                      "type": "object",
                      "description": "Local Availability Zone information for HCI cluster",
                      "properties": {
                        "localAvailabilityZoneName": {
                          "type": "string",
                          "description": "Local Availability Zone name for HCI cluster"
                        },
                        "nodes": {
                          "type": "array",
                          "description": "Nodes belonging to a particular zone",
                          "items": {
                            "type": "string"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "localAvailabilityZoneName"
                    ]
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Cluster": {
      "description": "Cluster details.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "tags": {
          "type": "object",
          "description": "Resource tags.",
          "additionalProperties": {
            "type": "string"
          },
          "x-ms-mutability": [
            "read",
            "create",
            "update"
          ]
        },
        "location": {
          "type": "string",
          "description": "The geo-location where the resource lives",
          "x-ms-mutability": [
            "read",
            "create"
          ]
        },
        "identity": {
          "description": "Identity of Cluster resource",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "description": "Cluster properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state. Indicates the current lifecycle status of the resource, including creation, update, deletion, connectivity, and error states.",
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted",
                "Provisioning",
                "NotSpecified",
                "Creating",
                "Updating",
                "Deleting",
                "Moving",
                "Deleted",
                "PartiallySucceeded",
                "InProgress",
                "DisableInProgress",
                "Connected",
                "PartiallyConnected",
                "Disconnected"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The operation completed successfully."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The operation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The operation was canceled before completion."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The operation has been accepted and is pending execution."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is currently being provisioned."
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The provisioning state is not specified."
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "The resource is being created."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is being updated."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Moving",
                    "value": "Moving",
                    "description": "The resource is being moved."
                  },
                  {
                    "name": "Deleted",
                    "value": "Deleted",
                    "description": "The resource has been deleted."
                  },
                  {
                    "name": "PartiallySucceeded",
                    "value": "PartiallySucceeded",
                    "description": "The operation partially succeeded."
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress",
                    "description": "The operation is currently in progress."
                  },
                  {
                    "name": "DisableInProgress",
                    "value": "DisableInProgress",
                    "description": "The resource is in the process of being disabled."
                  },
                  {
                    "name": "Connected",
                    "value": "Connected",
                    "description": "The resource is connected."
                  },
                  {
                    "name": "PartiallyConnected",
                    "value": "PartiallyConnected",
                    "description": "The resource is partially connected."
                  },
                  {
                    "name": "Disconnected",
                    "value": "Disconnected",
                    "description": "The resource is disconnected."
                  }
                ]
              },
              "readOnly": true
            },
            "status": {
              "description": "Status of the cluster agent. Indicates the current connectivity, validation, and deployment state of the agent within the cluster.",
              "type": "string",
              "enum": [
                "NotYetRegistered",
                "ConnectedRecently",
                "NotConnectedRecently",
                "Disconnected",
                "Error",
                "NotSpecified",
                "ValidationInProgress",
                "ValidationSuccess",
                "ValidationFailed",
                "DeploymentInProgress",
                "DeploymentFailed",
                "DeploymentSuccess"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotYetRegistered",
                    "value": "NotYetRegistered",
                    "description": "The cluster agent has not yet registered with Azure."
                  },
                  {
                    "name": "ConnectedRecently",
                    "value": "ConnectedRecently",
                    "description": "The cluster agent has connected to Azure recently."
                  },
                  {
                    "name": "NotConnectedRecently",
                    "value": "NotConnectedRecently",
                    "description": "The cluster agent has not connected to Azure recently."
                  },
                  {
                    "name": "Disconnected",
                    "value": "Disconnected",
                    "description": "The cluster agent is currently disconnected from Azure."
                  },
                  {
                    "name": "Error",
                    "value": "Error",
                    "description": "An error occurred in the cluster agent's operation."
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The status of the cluster agent is not specified."
                  },
                  {
                    "name": "ValidationInProgress",
                    "value": "ValidationInProgress",
                    "description": "Validation of the cluster agent is currently in progress."
                  },
                  {
                    "name": "ValidationSuccess",
                    "value": "ValidationSuccess",
                    "description": "Validation of the cluster agent completed successfully."
                  },
                  {
                    "name": "ValidationFailed",
                    "value": "ValidationFailed",
                    "description": "Validation of the cluster agent failed."
                  },
                  {
                    "name": "DeploymentInProgress",
                    "value": "DeploymentInProgress",
                    "description": "Deployment of the cluster agent is currently in progress."
                  },
                  {
                    "name": "DeploymentFailed",
                    "value": "DeploymentFailed",
                    "description": "Deployment of the cluster agent failed."
                  },
                  {
                    "name": "DeploymentSuccess",
                    "value": "DeploymentSuccess",
                    "description": "Deployment of the cluster agent completed successfully."
                  }
                ]
              },
              "readOnly": true
            },
            "connectivityStatus": {
              "description": "Overall connectivity status for the cluster resource. Indicates whether the cluster is connected to Azure, partially connected, or has not recently communicated.",
              "type": "string",
              "enum": [
                "NotYetRegistered",
                "Connected",
                "NotConnectedRecently",
                "PartiallyConnected",
                "Disconnected",
                "NotSpecified"
              ],
              "x-ms-enum": {
                "name": "ConnectivityStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotYetRegistered",
                    "value": "NotYetRegistered",
                    "description": "The cluster has not yet registered with Azure."
                  },
                  {
                    "name": "Connected",
                    "value": "Connected",
                    "description": "The cluster is fully connected to Azure."
                  },
                  {
                    "name": "NotConnectedRecently",
                    "value": "NotConnectedRecently",
                    "description": "The cluster has not connected to Azure recently."
                  },
                  {
                    "name": "PartiallyConnected",
                    "value": "PartiallyConnected",
                    "description": "Some components of the cluster are connected, while others are not."
                  },
                  {
                    "name": "Disconnected",
                    "value": "Disconnected",
                    "description": "The cluster is not connected to Azure."
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The connectivity status is not specified."
                  }
                ]
              },
              "readOnly": true
            },
            "cloudId": {
              "description": "Unique, immutable resource id.",
              "type": "string",
              "readOnly": true
            },
            "cloudManagementEndpoint": {
              "description": "Endpoint configured for management from the Azure portal.",
              "type": "string"
            },
            "aadClientId": {
              "description": "App id of cluster AAD identity.",
              "type": "string"
            },
            "aadTenantId": {
              "description": "Tenant id of cluster AAD identity.",
              "type": "string"
            },
            "aadApplicationObjectId": {
              "description": "Object id of cluster AAD identity.",
              "type": "string"
            },
            "aadServicePrincipalObjectId": {
              "description": "Id of cluster identity service principal.",
              "type": "string"
            },
            "softwareAssuranceProperties": {
              "description": "Software Assurance properties of the cluster.",
              "type": "object",
              "properties": {
                "softwareAssuranceStatus": {
                  "description": "Status of the Software Assurance for the cluster.",
                  "type": "string",
                  "enum": [
                    "Enabled",
                    "Disabled"
                  ],
                  "x-ms-enum": {
                    "name": "SoftwareAssuranceStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Software Assurance is enabled for the cluster."
                      },
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Software Assurance is disabled for the cluster."
                      }
                    ]
                  },
                  "readOnly": true
                },
                "softwareAssuranceIntent": {
                  "description": "Customer Intent for Software Assurance Benefit.",
                  "type": "string",
                  "enum": [
                    "Enable",
                    "Disable"
                  ],
                  "x-ms-enum": {
                    "name": "SoftwareAssuranceIntent",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enable",
                        "value": "Enable",
                        "description": "Customer intends to enable the Software Assurance benefit."
                      },
                      {
                        "name": "Disable",
                        "value": "Disable",
                        "description": "Customer intends to disable the Software Assurance benefit."
                      }
                    ]
                  }
                },
                "lastUpdated": {
                  "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                }
              }
            },
            "logCollectionProperties": {
              "description": "Log Collection properties of the cluster.",
              "type": "object",
              "properties": {
                "fromDate": {
                  "description": "From DateTimeStamp from when logs need to be connected",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "toDate": {
                  "description": "To DateTimeStamp till when logs need to be connected",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "lastLogGenerated": {
                  "description": "Recent DateTimeStamp where logs are successfully generated",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "logCollectionSessionDetails": {
                  "type": "array",
                  "items": {
                    "description": "Log Collection Session details of the cluster.",
                    "type": "object",
                    "properties": {
                      "logStartTime": {
                        "description": "Start Time of the logs when it was collected",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "logEndTime": {
                        "description": "End Time of the logs when it was collected",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "timeCollected": {
                        "description": "Duration of logs collected",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "logSize": {
                        "description": "Size of the logs collected",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                      },
                      "logCollectionStatus": {
                        "description": "LogCollection status",
                        "type": "string",
                        "enum": [
                          "None",
                          "InProgress",
                          "Failed",
                          "Succeeded"
                        ],
                        "x-ms-enum": {
                          "name": "LogCollectionStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "None",
                              "value": "None",
                              "description": "No log collection has been initiated."
                            },
                            {
                              "name": "InProgress",
                              "value": "InProgress",
                              "description": "Log collection is currently in progress."
                            },
                            {
                              "name": "Failed",
                              "value": "Failed",
                              "description": "Log collection has failed."
                            },
                            {
                              "name": "Succeeded",
                              "value": "Succeeded",
                              "description": "Log collection completed successfully."
                            }
                          ]
                        },
                        "readOnly": true
                      },
                      "correlationId": {
                        "description": "CorrelationId of the log collection",
                        "type": "string",
                        "readOnly": true
                      },
                      "logCollectionJobType": {
                        "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                        "type": "string",
                        "enum": [
                          "OnDemand",
                          "Scheduled"
                        ],
                        "x-ms-enum": {
                          "name": "LogCollectionJobType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "OnDemand",
                              "value": "OnDemand",
                              "description": "Log collection is triggered manually and executed immediately."
                            },
                            {
                              "name": "Scheduled",
                              "value": "Scheduled",
                              "description": "Log collection is scheduled to run at a predefined time or interval."
                            }
                          ]
                        },
                        "readOnly": true
                      },
                      "endTimeCollected": {
                        "description": "End Time of the logs when it was collected",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "logCollectionError": {
                        "readOnly": true,
                        "description": "Log Collection Error details of the cluster.",
                        "type": "object",
                        "properties": {
                          "errorCode": {
                            "description": "Error Code of the log collection",
                            "type": "string",
                            "readOnly": true
                          },
                          "errorMessage": {
                            "description": "Error Message of the log collection",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "remoteSupportProperties": {
              "description": "RemoteSupport properties of the cluster.",
              "type": "object",
              "properties": {
                "accessLevel": {
                  "readOnly": true,
                  "description": "Remote Support Access Level",
                  "type": "string",
                  "enum": [
                    "Diagnostics",
                    "DiagnosticsAndRepair"
                  ],
                  "x-ms-enum": {
                    "name": "AccessLevel",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Diagnostics",
                        "value": "Diagnostics",
                        "description": "Allows remote diagnostics operations only."
                      },
                      {
                        "name": "DiagnosticsAndRepair",
                        "value": "DiagnosticsAndRepair",
                        "description": "Allows both remote diagnostics and repair operations."
                      }
                    ]
                  }
                },
                "expirationTimeStamp": {
                  "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "remoteSupportType": {
                  "description": "Remote Support Type for cluster",
                  "type": "string",
                  "enum": [
                    "Enable",
                    "Revoke"
                  ],
                  "x-ms-enum": {
                    "name": "RemoteSupportType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Enable",
                        "value": "Enable",
                        "description": "Enable remote support for the cluster."
                      },
                      {
                        "name": "Revoke",
                        "value": "Revoke",
                        "description": "Revoke previously enabled remote support for the cluster."
                      }
                    ]
                  },
                  "readOnly": true
                },
                "remoteSupportNodeSettings": {
                  "type": "array",
                  "items": {
                    "description": "Remote Support Node Settings of the cluster.",
                    "type": "object",
                    "properties": {
                      "arcResourceId": {
                        "description": "Arc ResourceId of the Node",
                        "type": "string",
                        "readOnly": true
                      },
                      "state": {
                        "description": "Remote Support Access Connection State on the Node",
                        "type": "string",
                        "readOnly": true
                      },
                      "createdAt": {
                        "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "updatedAt": {
                        "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "connectionStatus": {
                        "description": "Remote Support Access Connection Status on the Node",
                        "type": "string",
                        "readOnly": true
                      },
                      "connectionErrorMessage": {
                        "description": "Remote Support Access Connection Error Message on the Node",
                        "type": "string",
                        "readOnly": true
                      },
                      "transcriptLocation": {
                        "description": "Remote Support Transcript location on the node",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true
                },
                "remoteSupportSessionDetails": {
                  "type": "array",
                  "items": {
                    "description": "Remote Support Node Session Details on the Node.",
                    "type": "object",
                    "properties": {
                      "sessionStartTime": {
                        "description": "Remote Support Session StartTime on the Node",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "sessionEndTime": {
                        "description": "Remote Support Session EndTime on the Node",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "nodeName": {
                        "description": "Name of the node",
                        "type": "string",
                        "readOnly": true
                      },
                      "duration": {
                        "description": "Duration of Remote Support Enablement",
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true
                      },
                      "accessLevel": {
                        "readOnly": true,
                        "description": "Remote Support Access Level",
                        "type": "string",
                        "enum": [
                          "Diagnostics",
                          "DiagnosticsAndRepair"
                        ],
                        "x-ms-enum": {
                          "name": "AccessLevel",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Diagnostics",
                              "value": "Diagnostics",
                              "description": "Allows remote diagnostics operations only."
                            },
                            {
                              "name": "DiagnosticsAndRepair",
                              "value": "DiagnosticsAndRepair",
                              "description": "Allows both remote diagnostics and repair operations."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "readOnly": true
                }
              }
            },
            "desiredProperties": {
              "description": "Desired properties of the cluster.",
              "type": "object",
              "properties": {
                "windowsServerSubscription": {
                  "description": "Desired state of Windows Server Subscription.",
                  "type": "string",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "x-ms-enum": {
                    "name": "WindowsServerSubscription",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Windows Server Subscription is disabled."
                      },
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Windows Server Subscription is enabled."
                      }
                    ]
                  }
                },
                "diagnosticLevel": {
                  "description": "Desired level of diagnostic data emitted by the cluster.",
                  "type": "string",
                  "enum": [
                    "Off",
                    "Basic",
                    "Enhanced"
                  ],
                  "x-ms-enum": {
                    "name": "DiagnosticLevel",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Off",
                        "value": "Off",
                        "description": "No diagnostic data will be emitted."
                      },
                      {
                        "name": "Basic",
                        "value": "Basic",
                        "description": "Basic diagnostic data will be emitted, including essential health metrics."
                      },
                      {
                        "name": "Enhanced",
                        "value": "Enhanced",
                        "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                      }
                    ]
                  }
                }
              }
            },
            "reportedProperties": {
              "description": "Properties reported by cluster agent.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "clusterName": {
                  "description": "Name of the on-prem cluster connected to this resource.",
                  "type": "string",
                  "readOnly": true
                },
                "clusterId": {
                  "description": "Unique id generated by the on-prem cluster.",
                  "type": "string",
                  "readOnly": true
                },
                "clusterVersion": {
                  "description": "Version of the cluster software.",
                  "type": "string",
                  "readOnly": true
                },
                "nodes": {
                  "description": "List of nodes reported by the cluster.",
                  "type": "array",
                  "items": {
                    "description": "Cluster node details.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Name of the cluster node.",
                        "type": "string",
                        "readOnly": true
                      },
                      "id": {
                        "description": "Id of the node in the cluster.",
                        "type": "number",
                        "readOnly": true
                      },
                      "windowsServerSubscription": {
                        "description": "State of Windows Server Subscription.",
                        "type": "string",
                        "enum": [
                          "Disabled",
                          "Enabled"
                        ],
                        "x-ms-enum": {
                          "name": "WindowsServerSubscription",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "Windows Server Subscription is disabled."
                            },
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "Windows Server Subscription is enabled."
                            }
                          ]
                        },
                        "readOnly": true
                      },
                      "nodeType": {
                        "description": "Type of the cluster node hardware.",
                        "type": "string",
                        "enum": [
                          "FirstParty",
                          "ThirdParty"
                        ],
                        "x-ms-enum": {
                          "name": "ClusterNodeType",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "FirstParty",
                              "value": "FirstParty",
                              "description": "Cluster nodes are provided and managed by Microsoft."
                            },
                            {
                              "name": "ThirdParty",
                              "value": "ThirdParty",
                              "description": "Cluster nodes are provided and managed by a third-party vendor."
                            }
                          ]
                        },
                        "readOnly": true
                      },
                      "ehcResourceId": {
                        "description": "Edge Hardware Center Resource Id",
                        "type": "string",
                        "readOnly": true
                      },
                      "manufacturer": {
                        "description": "Manufacturer of the cluster node hardware.",
                        "type": "string",
                        "readOnly": true
                      },
                      "model": {
                        "description": "Model name of the cluster node hardware.",
                        "type": "string",
                        "readOnly": true
                      },
                      "osName": {
                        "description": "Operating system running on the cluster node.",
                        "type": "string",
                        "readOnly": true
                      },
                      "osVersion": {
                        "description": "Version of the operating system running on the cluster node.",
                        "type": "string",
                        "readOnly": true
                      },
                      "osDisplayVersion": {
                        "description": "Display version of the operating system running on the cluster node.",
                        "type": "string",
                        "readOnly": true
                      },
                      "serialNumber": {
                        "description": "Immutable id of the cluster node.",
                        "type": "string",
                        "readOnly": true
                      },
                      "coreCount": {
                        "description": "Number of physical cores on the cluster node.",
                        "type": "number",
                        "readOnly": true
                      },
                      "memoryInGiB": {
                        "description": "Total available memory on the cluster node (in GiB).",
                        "type": "number",
                        "readOnly": true
                      },
                      "lastLicensingTimestamp": {
                        "description": "Most recent licensing timestamp.",
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                      },
                      "oemActivation": {
                        "description": "OEM activation status of the node.",
                        "type": "string",
                        "enum": [
                          "Disabled",
                          "Enabled"
                        ],
                        "x-ms-enum": {
                          "name": "OemActivation",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "OEM activation is disabled for the node."
                            },
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "OEM activation is enabled for the node."
                            }
                          ]
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true
                },
                "lastUpdated": {
                  "description": "Last time the cluster reported the data.",
                  "type": "string",
                  "format": "date-time",
                  "readOnly": true
                },
                "imdsAttestation": {
                  "description": "IMDS attestation status of the cluster.",
                  "type": "string",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "x-ms-enum": {
                    "name": "ImdsAttestation",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "IMDS attestation is disabled for the cluster."
                      },
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "IMDS attestation is enabled for the cluster."
                      }
                    ]
                  },
                  "readOnly": true
                },
                "diagnosticLevel": {
                  "description": "Level of diagnostic data emitted by the cluster.",
                  "type": "string",
                  "enum": [
                    "Off",
                    "Basic",
                    "Enhanced"
                  ],
                  "x-ms-enum": {
                    "name": "DiagnosticLevel",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Off",
                        "value": "Off",
                        "description": "No diagnostic data will be emitted."
                      },
                      {
                        "name": "Basic",
                        "value": "Basic",
                        "description": "Basic diagnostic data will be emitted, including essential health metrics."
                      },
                      {
                        "name": "Enhanced",
                        "value": "Enhanced",
                        "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                      }
                    ]
                  }
                },
                "supportedCapabilities": {
                  "description": "Capabilities supported by the cluster.",
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "string"
                  }
                },
                "clusterType": {
                  "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
                  "type": "string",
                  "enum": [
                    "FirstParty",
                    "ThirdParty"
                  ],
                  "x-ms-enum": {
                    "name": "ClusterNodeType",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "FirstParty",
                        "value": "FirstParty",
                        "description": "All nodes in the cluster are provided and managed by Microsoft."
                      },
                      {
                        "name": "ThirdParty",
                        "value": "ThirdParty",
                        "description": "All nodes in the cluster are provided and managed by a third-party vendor."
                      }
                    ]
                  },
                  "readOnly": true
                },
                "manufacturer": {
                  "description": "The manufacturer of all the nodes of the cluster.",
                  "type": "string",
                  "readOnly": true
                },
                "oemActivation": {
                  "description": "OEM activation status of the cluster.",
                  "type": "string",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "x-ms-enum": {
                    "name": "OemActivation",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "OEM activation is disabled for the cluster."
                      },
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "OEM activation is enabled for the cluster."
                      }
                    ]
                  },
                  "readOnly": true
                },
                "hardwareClass": {
                  "description": "Hardware class of the cluster.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Small",
                    "Medium",
                    "Large"
                  ],
                  "default": "Medium",
                  "x-ms-enum": {
                    "name": "HardwareClass",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Small",
                        "value": "Small",
                        "description": "The hardware class is small."
                      },
                      {
                        "name": "Medium",
                        "value": "Medium",
                        "description": "The hardware class is medium. This corresponds to the default"
                      },
                      {
                        "name": "Large",
                        "value": "Large",
                        "description": "The hardware class is large."
                      }
                    ]
                  }
                }
              }
            },
            "isolatedVmAttestationConfiguration": {
              "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "attestationResourceId": {
                  "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
                  "type": "string",
                  "format": "arm-id",
                  "x-ms-arm-id-details": {
                    "allowedResources": [
                      {
                        "type": "Microsoft.Attestation/attestationProviders",
                        "scopes": [
                          "Tenant"
                        ]
                      }
                    ]
                  },
                  "readOnly": true
                },
                "relyingPartyServiceEndpoint": {
                  "description": "Region specific endpoint for relying party service.",
                  "type": "string",
                  "readOnly": true
                },
                "attestationServiceEndpoint": {
                  "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
                  "type": "string",
                  "readOnly": true
                }
              }
            },
            "trialDaysRemaining": {
              "description": "Number of days remaining in the trial period.",
              "type": "number",
              "readOnly": true
            },
            "billingModel": {
              "description": "Type of billing applied to the resource.",
              "type": "string",
              "readOnly": true
            },
            "registrationTimestamp": {
              "description": "First cluster sync timestamp.",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "lastSyncTimestamp": {
              "description": "Most recent cluster sync timestamp.",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "lastBillingTimestamp": {
              "description": "Most recent billing meter timestamp.",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "serviceEndpoint": {
              "description": "Region specific DataPath Endpoint of the cluster.",
              "type": "string",
              "readOnly": true
            },
            "resourceProviderObjectId": {
              "description": "Object id of RP Service Principal",
              "type": "string",
              "readOnly": true
            },
            "secretsLocations": {
              "type": "array",
              "description": "List of secret locations.",
              "items": {
                "type": "object",
                "description": "Secrets location details",
                "properties": {
                  "secretsType": {
                    "description": "Type of secrets to store",
                    "type": "string",
                    "enum": [
                      "BackupSecrets"
                    ],
                    "x-ms-enum": {
                      "name": "SecretsType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "BackupSecrets",
                          "value": "BackupSecrets",
                          "description": "Backup secrets type"
                        }
                      ]
                    }
                  },
                  "secretsLocation": {
                    "type": "string",
                    "description": "secrets location"
                  }
                },
                "required": [
                  "secretsType",
                  "secretsLocation"
                ]
              },
              "x-ms-identifiers": []
            },
            "clusterPattern": {
              "description": "Supported Storage Type for HCI Cluster",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Standard",
                "RackAware"
              ],
              "x-ms-enum": {
                "name": "ClusterPattern",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Standard",
                    "value": "Standard",
                    "description": "Standard cluster."
                  },
                  {
                    "name": "RackAware",
                    "value": "RackAware",
                    "description": "RackAware cluster."
                  }
                ]
              }
            },
            "localAvailabilityZones": {
              "type": "array",
              "description": "Local Availability Zone information for HCI cluster",
              "items": {
                "type": "object",
                "description": "Local Availability Zone information for HCI cluster",
                "properties": {
                  "localAvailabilityZoneName": {
                    "type": "string",
                    "description": "Local Availability Zone name for HCI cluster"
                  },
                  "nodes": {
                    "type": "array",
                    "description": "Nodes belonging to a particular zone",
                    "items": {
                      "type": "string"
                    },
                    "x-ms-identifiers": []
                  }
                }
              },
              "x-ms-identifiers": [
                "localAvailabilityZoneName"
              ]
            }
          }
        }
      }
    },
    "ClusterPatch": {
      "description": "Cluster details to update.",
      "type": "object",
      "properties": {
        "tags": {
          "description": "Resource tags.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "identity": {
          "description": "Identity of Cluster resource",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "principalId": {
              "type": "string",
              "format": "uuid",
              "description": "The service principal ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "tenantId": {
              "type": "string",
              "format": "uuid",
              "description": "The tenant ID of the system assigned identity. This property will only be provided for a system assigned identity.",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "Type of managed service identity (where both SystemAssigned and UserAssigned types are allowed).",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned, UserAssigned"
              ],
              "x-ms-enum": {
                "name": "ManagedServiceIdentityType",
                "modelAsString": true
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "title": "User-Assigned Identities",
              "description": "The set of user assigned identities associated with the resource. The userAssignedIdentities dictionary keys will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}. The dictionary values can be empty objects ({}) in requests.",
              "additionalProperties": {
                "type": "object",
                "description": "User assigned identity properties",
                "properties": {
                  "principalId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The principal ID of the assigned identity.",
                    "readOnly": true
                  },
                  "clientId": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The client ID of the assigned identity.",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "properties": {
          "description": "Cluster properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "cloudManagementEndpoint": {
              "description": "Endpoint configured for management from the Azure portal",
              "type": "string"
            },
            "aadClientId": {
              "description": "App id of cluster AAD identity.",
              "type": "string"
            },
            "aadTenantId": {
              "description": "Tenant id of cluster AAD identity.",
              "type": "string"
            },
            "desiredProperties": {
              "description": "Desired properties of the cluster.",
              "type": "object",
              "properties": {
                "windowsServerSubscription": {
                  "description": "Desired state of Windows Server Subscription.",
                  "type": "string",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "x-ms-enum": {
                    "name": "WindowsServerSubscription",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Disabled",
                        "value": "Disabled",
                        "description": "Windows Server Subscription is disabled."
                      },
                      {
                        "name": "Enabled",
                        "value": "Enabled",
                        "description": "Windows Server Subscription is enabled."
                      }
                    ]
                  }
                },
                "diagnosticLevel": {
                  "description": "Desired level of diagnostic data emitted by the cluster.",
                  "type": "string",
                  "enum": [
                    "Off",
                    "Basic",
                    "Enhanced"
                  ],
                  "x-ms-enum": {
                    "name": "DiagnosticLevel",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Off",
                        "value": "Off",
                        "description": "No diagnostic data will be emitted."
                      },
                      {
                        "name": "Basic",
                        "value": "Basic",
                        "description": "Basic diagnostic data will be emitted, including essential health metrics."
                      },
                      {
                        "name": "Enhanced",
                        "value": "Enhanced",
                        "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                      }
                    ]
                  }
                }
              }
            }
          }
        }
      }
    },
    "ClusterProperties": {
      "description": "Cluster properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state. Indicates the current lifecycle status of the resource, including creation, update, deletion, connectivity, and error states.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Provisioning",
            "NotSpecified",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "Deleted",
            "PartiallySucceeded",
            "InProgress",
            "DisableInProgress",
            "Connected",
            "PartiallyConnected",
            "Disconnected"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The operation completed successfully."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The operation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The operation was canceled before completion."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The operation has been accepted and is pending execution."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is currently being provisioned."
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The provisioning state is not specified."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The resource is being created."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is being updated."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted."
              },
              {
                "name": "Moving",
                "value": "Moving",
                "description": "The resource is being moved."
              },
              {
                "name": "Deleted",
                "value": "Deleted",
                "description": "The resource has been deleted."
              },
              {
                "name": "PartiallySucceeded",
                "value": "PartiallySucceeded",
                "description": "The operation partially succeeded."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "The operation is currently in progress."
              },
              {
                "name": "DisableInProgress",
                "value": "DisableInProgress",
                "description": "The resource is in the process of being disabled."
              },
              {
                "name": "Connected",
                "value": "Connected",
                "description": "The resource is connected."
              },
              {
                "name": "PartiallyConnected",
                "value": "PartiallyConnected",
                "description": "The resource is partially connected."
              },
              {
                "name": "Disconnected",
                "value": "Disconnected",
                "description": "The resource is disconnected."
              }
            ]
          },
          "readOnly": true
        },
        "status": {
          "description": "Status of the cluster agent. Indicates the current connectivity, validation, and deployment state of the agent within the cluster.",
          "type": "string",
          "enum": [
            "NotYetRegistered",
            "ConnectedRecently",
            "NotConnectedRecently",
            "Disconnected",
            "Error",
            "NotSpecified",
            "ValidationInProgress",
            "ValidationSuccess",
            "ValidationFailed",
            "DeploymentInProgress",
            "DeploymentFailed",
            "DeploymentSuccess"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true,
            "values": [
              {
                "name": "NotYetRegistered",
                "value": "NotYetRegistered",
                "description": "The cluster agent has not yet registered with Azure."
              },
              {
                "name": "ConnectedRecently",
                "value": "ConnectedRecently",
                "description": "The cluster agent has connected to Azure recently."
              },
              {
                "name": "NotConnectedRecently",
                "value": "NotConnectedRecently",
                "description": "The cluster agent has not connected to Azure recently."
              },
              {
                "name": "Disconnected",
                "value": "Disconnected",
                "description": "The cluster agent is currently disconnected from Azure."
              },
              {
                "name": "Error",
                "value": "Error",
                "description": "An error occurred in the cluster agent's operation."
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The status of the cluster agent is not specified."
              },
              {
                "name": "ValidationInProgress",
                "value": "ValidationInProgress",
                "description": "Validation of the cluster agent is currently in progress."
              },
              {
                "name": "ValidationSuccess",
                "value": "ValidationSuccess",
                "description": "Validation of the cluster agent completed successfully."
              },
              {
                "name": "ValidationFailed",
                "value": "ValidationFailed",
                "description": "Validation of the cluster agent failed."
              },
              {
                "name": "DeploymentInProgress",
                "value": "DeploymentInProgress",
                "description": "Deployment of the cluster agent is currently in progress."
              },
              {
                "name": "DeploymentFailed",
                "value": "DeploymentFailed",
                "description": "Deployment of the cluster agent failed."
              },
              {
                "name": "DeploymentSuccess",
                "value": "DeploymentSuccess",
                "description": "Deployment of the cluster agent completed successfully."
              }
            ]
          },
          "readOnly": true
        },
        "connectivityStatus": {
          "description": "Overall connectivity status for the cluster resource. Indicates whether the cluster is connected to Azure, partially connected, or has not recently communicated.",
          "type": "string",
          "enum": [
            "NotYetRegistered",
            "Connected",
            "NotConnectedRecently",
            "PartiallyConnected",
            "Disconnected",
            "NotSpecified"
          ],
          "x-ms-enum": {
            "name": "ConnectivityStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "NotYetRegistered",
                "value": "NotYetRegistered",
                "description": "The cluster has not yet registered with Azure."
              },
              {
                "name": "Connected",
                "value": "Connected",
                "description": "The cluster is fully connected to Azure."
              },
              {
                "name": "NotConnectedRecently",
                "value": "NotConnectedRecently",
                "description": "The cluster has not connected to Azure recently."
              },
              {
                "name": "PartiallyConnected",
                "value": "PartiallyConnected",
                "description": "Some components of the cluster are connected, while others are not."
              },
              {
                "name": "Disconnected",
                "value": "Disconnected",
                "description": "The cluster is not connected to Azure."
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The connectivity status is not specified."
              }
            ]
          },
          "readOnly": true
        },
        "cloudId": {
          "description": "Unique, immutable resource id.",
          "type": "string",
          "readOnly": true
        },
        "cloudManagementEndpoint": {
          "description": "Endpoint configured for management from the Azure portal.",
          "type": "string"
        },
        "aadClientId": {
          "description": "App id of cluster AAD identity.",
          "type": "string"
        },
        "aadTenantId": {
          "description": "Tenant id of cluster AAD identity.",
          "type": "string"
        },
        "aadApplicationObjectId": {
          "description": "Object id of cluster AAD identity.",
          "type": "string"
        },
        "aadServicePrincipalObjectId": {
          "description": "Id of cluster identity service principal.",
          "type": "string"
        },
        "softwareAssuranceProperties": {
          "description": "Software Assurance properties of the cluster.",
          "type": "object",
          "properties": {
            "softwareAssuranceStatus": {
              "description": "Status of the Software Assurance for the cluster.",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled"
              ],
              "x-ms-enum": {
                "name": "SoftwareAssuranceStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Software Assurance is enabled for the cluster."
                  },
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Software Assurance is disabled for the cluster."
                  }
                ]
              },
              "readOnly": true
            },
            "softwareAssuranceIntent": {
              "description": "Customer Intent for Software Assurance Benefit.",
              "type": "string",
              "enum": [
                "Enable",
                "Disable"
              ],
              "x-ms-enum": {
                "name": "SoftwareAssuranceIntent",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enable",
                    "value": "Enable",
                    "description": "Customer intends to enable the Software Assurance benefit."
                  },
                  {
                    "name": "Disable",
                    "value": "Disable",
                    "description": "Customer intends to disable the Software Assurance benefit."
                  }
                ]
              }
            },
            "lastUpdated": {
              "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            }
          }
        },
        "logCollectionProperties": {
          "description": "Log Collection properties of the cluster.",
          "type": "object",
          "properties": {
            "fromDate": {
              "description": "From DateTimeStamp from when logs need to be connected",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "toDate": {
              "description": "To DateTimeStamp till when logs need to be connected",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "lastLogGenerated": {
              "description": "Recent DateTimeStamp where logs are successfully generated",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "logCollectionSessionDetails": {
              "type": "array",
              "items": {
                "description": "Log Collection Session details of the cluster.",
                "type": "object",
                "properties": {
                  "logStartTime": {
                    "description": "Start Time of the logs when it was collected",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "logEndTime": {
                    "description": "End Time of the logs when it was collected",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "timeCollected": {
                    "description": "Duration of logs collected",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "logSize": {
                    "description": "Size of the logs collected",
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                  },
                  "logCollectionStatus": {
                    "description": "LogCollection status",
                    "type": "string",
                    "enum": [
                      "None",
                      "InProgress",
                      "Failed",
                      "Succeeded"
                    ],
                    "x-ms-enum": {
                      "name": "LogCollectionStatus",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "None",
                          "value": "None",
                          "description": "No log collection has been initiated."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "Log collection is currently in progress."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Log collection has failed."
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Log collection completed successfully."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "correlationId": {
                    "description": "CorrelationId of the log collection",
                    "type": "string",
                    "readOnly": true
                  },
                  "logCollectionJobType": {
                    "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                    "type": "string",
                    "enum": [
                      "OnDemand",
                      "Scheduled"
                    ],
                    "x-ms-enum": {
                      "name": "LogCollectionJobType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "OnDemand",
                          "value": "OnDemand",
                          "description": "Log collection is triggered manually and executed immediately."
                        },
                        {
                          "name": "Scheduled",
                          "value": "Scheduled",
                          "description": "Log collection is scheduled to run at a predefined time or interval."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "endTimeCollected": {
                    "description": "End Time of the logs when it was collected",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "logCollectionError": {
                    "readOnly": true,
                    "description": "Log Collection Error details of the cluster.",
                    "type": "object",
                    "properties": {
                      "errorCode": {
                        "description": "Error Code of the log collection",
                        "type": "string",
                        "readOnly": true
                      },
                      "errorMessage": {
                        "description": "Error Message of the log collection",
                        "type": "string",
                        "readOnly": true
                      }
                    }
                  }
                }
              },
              "readOnly": true
            }
          }
        },
        "remoteSupportProperties": {
          "description": "RemoteSupport properties of the cluster.",
          "type": "object",
          "properties": {
            "accessLevel": {
              "readOnly": true,
              "description": "Remote Support Access Level",
              "type": "string",
              "enum": [
                "Diagnostics",
                "DiagnosticsAndRepair"
              ],
              "x-ms-enum": {
                "name": "AccessLevel",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Diagnostics",
                    "value": "Diagnostics",
                    "description": "Allows remote diagnostics operations only."
                  },
                  {
                    "name": "DiagnosticsAndRepair",
                    "value": "DiagnosticsAndRepair",
                    "description": "Allows both remote diagnostics and repair operations."
                  }
                ]
              }
            },
            "expirationTimeStamp": {
              "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "remoteSupportType": {
              "description": "Remote Support Type for cluster",
              "type": "string",
              "enum": [
                "Enable",
                "Revoke"
              ],
              "x-ms-enum": {
                "name": "RemoteSupportType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enable",
                    "value": "Enable",
                    "description": "Enable remote support for the cluster."
                  },
                  {
                    "name": "Revoke",
                    "value": "Revoke",
                    "description": "Revoke previously enabled remote support for the cluster."
                  }
                ]
              },
              "readOnly": true
            },
            "remoteSupportNodeSettings": {
              "type": "array",
              "items": {
                "description": "Remote Support Node Settings of the cluster.",
                "type": "object",
                "properties": {
                  "arcResourceId": {
                    "description": "Arc ResourceId of the Node",
                    "type": "string",
                    "readOnly": true
                  },
                  "state": {
                    "description": "Remote Support Access Connection State on the Node",
                    "type": "string",
                    "readOnly": true
                  },
                  "createdAt": {
                    "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "updatedAt": {
                    "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "connectionStatus": {
                    "description": "Remote Support Access Connection Status on the Node",
                    "type": "string",
                    "readOnly": true
                  },
                  "connectionErrorMessage": {
                    "description": "Remote Support Access Connection Error Message on the Node",
                    "type": "string",
                    "readOnly": true
                  },
                  "transcriptLocation": {
                    "description": "Remote Support Transcript location on the node",
                    "type": "string",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            },
            "remoteSupportSessionDetails": {
              "type": "array",
              "items": {
                "description": "Remote Support Node Session Details on the Node.",
                "type": "object",
                "properties": {
                  "sessionStartTime": {
                    "description": "Remote Support Session StartTime on the Node",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "sessionEndTime": {
                    "description": "Remote Support Session EndTime on the Node",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "nodeName": {
                    "description": "Name of the node",
                    "type": "string",
                    "readOnly": true
                  },
                  "duration": {
                    "description": "Duration of Remote Support Enablement",
                    "type": "integer",
                    "format": "int64",
                    "readOnly": true
                  },
                  "accessLevel": {
                    "readOnly": true,
                    "description": "Remote Support Access Level",
                    "type": "string",
                    "enum": [
                      "Diagnostics",
                      "DiagnosticsAndRepair"
                    ],
                    "x-ms-enum": {
                      "name": "AccessLevel",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Diagnostics",
                          "value": "Diagnostics",
                          "description": "Allows remote diagnostics operations only."
                        },
                        {
                          "name": "DiagnosticsAndRepair",
                          "value": "DiagnosticsAndRepair",
                          "description": "Allows both remote diagnostics and repair operations."
                        }
                      ]
                    }
                  }
                }
              },
              "readOnly": true
            }
          }
        },
        "desiredProperties": {
          "description": "Desired properties of the cluster.",
          "type": "object",
          "properties": {
            "windowsServerSubscription": {
              "description": "Desired state of Windows Server Subscription.",
              "type": "string",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "WindowsServerSubscription",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Windows Server Subscription is disabled."
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Windows Server Subscription is enabled."
                  }
                ]
              }
            },
            "diagnosticLevel": {
              "description": "Desired level of diagnostic data emitted by the cluster.",
              "type": "string",
              "enum": [
                "Off",
                "Basic",
                "Enhanced"
              ],
              "x-ms-enum": {
                "name": "DiagnosticLevel",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Off",
                    "value": "Off",
                    "description": "No diagnostic data will be emitted."
                  },
                  {
                    "name": "Basic",
                    "value": "Basic",
                    "description": "Basic diagnostic data will be emitted, including essential health metrics."
                  },
                  {
                    "name": "Enhanced",
                    "value": "Enhanced",
                    "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                  }
                ]
              }
            }
          }
        },
        "reportedProperties": {
          "description": "Properties reported by cluster agent.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "clusterName": {
              "description": "Name of the on-prem cluster connected to this resource.",
              "type": "string",
              "readOnly": true
            },
            "clusterId": {
              "description": "Unique id generated by the on-prem cluster.",
              "type": "string",
              "readOnly": true
            },
            "clusterVersion": {
              "description": "Version of the cluster software.",
              "type": "string",
              "readOnly": true
            },
            "nodes": {
              "description": "List of nodes reported by the cluster.",
              "type": "array",
              "items": {
                "description": "Cluster node details.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the cluster node.",
                    "type": "string",
                    "readOnly": true
                  },
                  "id": {
                    "description": "Id of the node in the cluster.",
                    "type": "number",
                    "readOnly": true
                  },
                  "windowsServerSubscription": {
                    "description": "State of Windows Server Subscription.",
                    "type": "string",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "name": "WindowsServerSubscription",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "Windows Server Subscription is disabled."
                        },
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "Windows Server Subscription is enabled."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "nodeType": {
                    "description": "Type of the cluster node hardware.",
                    "type": "string",
                    "enum": [
                      "FirstParty",
                      "ThirdParty"
                    ],
                    "x-ms-enum": {
                      "name": "ClusterNodeType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "FirstParty",
                          "value": "FirstParty",
                          "description": "Cluster nodes are provided and managed by Microsoft."
                        },
                        {
                          "name": "ThirdParty",
                          "value": "ThirdParty",
                          "description": "Cluster nodes are provided and managed by a third-party vendor."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "ehcResourceId": {
                    "description": "Edge Hardware Center Resource Id",
                    "type": "string",
                    "readOnly": true
                  },
                  "manufacturer": {
                    "description": "Manufacturer of the cluster node hardware.",
                    "type": "string",
                    "readOnly": true
                  },
                  "model": {
                    "description": "Model name of the cluster node hardware.",
                    "type": "string",
                    "readOnly": true
                  },
                  "osName": {
                    "description": "Operating system running on the cluster node.",
                    "type": "string",
                    "readOnly": true
                  },
                  "osVersion": {
                    "description": "Version of the operating system running on the cluster node.",
                    "type": "string",
                    "readOnly": true
                  },
                  "osDisplayVersion": {
                    "description": "Display version of the operating system running on the cluster node.",
                    "type": "string",
                    "readOnly": true
                  },
                  "serialNumber": {
                    "description": "Immutable id of the cluster node.",
                    "type": "string",
                    "readOnly": true
                  },
                  "coreCount": {
                    "description": "Number of physical cores on the cluster node.",
                    "type": "number",
                    "readOnly": true
                  },
                  "memoryInGiB": {
                    "description": "Total available memory on the cluster node (in GiB).",
                    "type": "number",
                    "readOnly": true
                  },
                  "lastLicensingTimestamp": {
                    "description": "Most recent licensing timestamp.",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true
                  },
                  "oemActivation": {
                    "description": "OEM activation status of the node.",
                    "type": "string",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "x-ms-enum": {
                      "name": "OemActivation",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "OEM activation is disabled for the node."
                        },
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "OEM activation is enabled for the node."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                }
              },
              "readOnly": true
            },
            "lastUpdated": {
              "description": "Last time the cluster reported the data.",
              "type": "string",
              "format": "date-time",
              "readOnly": true
            },
            "imdsAttestation": {
              "description": "IMDS attestation status of the cluster.",
              "type": "string",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "ImdsAttestation",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "IMDS attestation is disabled for the cluster."
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "IMDS attestation is enabled for the cluster."
                  }
                ]
              },
              "readOnly": true
            },
            "diagnosticLevel": {
              "description": "Level of diagnostic data emitted by the cluster.",
              "type": "string",
              "enum": [
                "Off",
                "Basic",
                "Enhanced"
              ],
              "x-ms-enum": {
                "name": "DiagnosticLevel",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Off",
                    "value": "Off",
                    "description": "No diagnostic data will be emitted."
                  },
                  {
                    "name": "Basic",
                    "value": "Basic",
                    "description": "Basic diagnostic data will be emitted, including essential health metrics."
                  },
                  {
                    "name": "Enhanced",
                    "value": "Enhanced",
                    "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                  }
                ]
              }
            },
            "supportedCapabilities": {
              "description": "Capabilities supported by the cluster.",
              "type": "array",
              "readOnly": true,
              "items": {
                "type": "string"
              }
            },
            "clusterType": {
              "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
              "type": "string",
              "enum": [
                "FirstParty",
                "ThirdParty"
              ],
              "x-ms-enum": {
                "name": "ClusterNodeType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "FirstParty",
                    "value": "FirstParty",
                    "description": "All nodes in the cluster are provided and managed by Microsoft."
                  },
                  {
                    "name": "ThirdParty",
                    "value": "ThirdParty",
                    "description": "All nodes in the cluster are provided and managed by a third-party vendor."
                  }
                ]
              },
              "readOnly": true
            },
            "manufacturer": {
              "description": "The manufacturer of all the nodes of the cluster.",
              "type": "string",
              "readOnly": true
            },
            "oemActivation": {
              "description": "OEM activation status of the cluster.",
              "type": "string",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "OemActivation",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "OEM activation is disabled for the cluster."
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "OEM activation is enabled for the cluster."
                  }
                ]
              },
              "readOnly": true
            },
            "hardwareClass": {
              "description": "Hardware class of the cluster.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Small",
                "Medium",
                "Large"
              ],
              "default": "Medium",
              "x-ms-enum": {
                "name": "HardwareClass",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Small",
                    "value": "Small",
                    "description": "The hardware class is small."
                  },
                  {
                    "name": "Medium",
                    "value": "Medium",
                    "description": "The hardware class is medium. This corresponds to the default"
                  },
                  {
                    "name": "Large",
                    "value": "Large",
                    "description": "The hardware class is large."
                  }
                ]
              }
            }
          }
        },
        "isolatedVmAttestationConfiguration": {
          "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "attestationResourceId": {
              "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Attestation/attestationProviders",
                    "scopes": [
                      "Tenant"
                    ]
                  }
                ]
              },
              "readOnly": true
            },
            "relyingPartyServiceEndpoint": {
              "description": "Region specific endpoint for relying party service.",
              "type": "string",
              "readOnly": true
            },
            "attestationServiceEndpoint": {
              "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
              "type": "string",
              "readOnly": true
            }
          }
        },
        "trialDaysRemaining": {
          "description": "Number of days remaining in the trial period.",
          "type": "number",
          "readOnly": true
        },
        "billingModel": {
          "description": "Type of billing applied to the resource.",
          "type": "string",
          "readOnly": true
        },
        "registrationTimestamp": {
          "description": "First cluster sync timestamp.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastSyncTimestamp": {
          "description": "Most recent cluster sync timestamp.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastBillingTimestamp": {
          "description": "Most recent billing meter timestamp.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "serviceEndpoint": {
          "description": "Region specific DataPath Endpoint of the cluster.",
          "type": "string",
          "readOnly": true
        },
        "resourceProviderObjectId": {
          "description": "Object id of RP Service Principal",
          "type": "string",
          "readOnly": true
        },
        "secretsLocations": {
          "type": "array",
          "description": "List of secret locations.",
          "items": {
            "type": "object",
            "description": "Secrets location details",
            "properties": {
              "secretsType": {
                "description": "Type of secrets to store",
                "type": "string",
                "enum": [
                  "BackupSecrets"
                ],
                "x-ms-enum": {
                  "name": "SecretsType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "BackupSecrets",
                      "value": "BackupSecrets",
                      "description": "Backup secrets type"
                    }
                  ]
                }
              },
              "secretsLocation": {
                "type": "string",
                "description": "secrets location"
              }
            },
            "required": [
              "secretsType",
              "secretsLocation"
            ]
          },
          "x-ms-identifiers": []
        },
        "clusterPattern": {
          "description": "Supported Storage Type for HCI Cluster",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Standard",
            "RackAware"
          ],
          "x-ms-enum": {
            "name": "ClusterPattern",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard",
                "value": "Standard",
                "description": "Standard cluster."
              },
              {
                "name": "RackAware",
                "value": "RackAware",
                "description": "RackAware cluster."
              }
            ]
          }
        },
        "localAvailabilityZones": {
          "type": "array",
          "description": "Local Availability Zone information for HCI cluster",
          "items": {
            "type": "object",
            "description": "Local Availability Zone information for HCI cluster",
            "properties": {
              "localAvailabilityZoneName": {
                "type": "string",
                "description": "Local Availability Zone name for HCI cluster"
              },
              "nodes": {
                "type": "array",
                "description": "Nodes belonging to a particular zone",
                "items": {
                  "type": "string"
                },
                "x-ms-identifiers": []
              }
            }
          },
          "x-ms-identifiers": [
            "localAvailabilityZoneName"
          ]
        }
      }
    },
    "ClusterPatchProperties": {
      "description": "Cluster properties.",
      "type": "object",
      "properties": {
        "cloudManagementEndpoint": {
          "description": "Endpoint configured for management from the Azure portal",
          "type": "string"
        },
        "aadClientId": {
          "description": "App id of cluster AAD identity.",
          "type": "string"
        },
        "aadTenantId": {
          "description": "Tenant id of cluster AAD identity.",
          "type": "string"
        },
        "desiredProperties": {
          "description": "Desired properties of the cluster.",
          "type": "object",
          "properties": {
            "windowsServerSubscription": {
              "description": "Desired state of Windows Server Subscription.",
              "type": "string",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "x-ms-enum": {
                "name": "WindowsServerSubscription",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Disabled",
                    "value": "Disabled",
                    "description": "Windows Server Subscription is disabled."
                  },
                  {
                    "name": "Enabled",
                    "value": "Enabled",
                    "description": "Windows Server Subscription is enabled."
                  }
                ]
              }
            },
            "diagnosticLevel": {
              "description": "Desired level of diagnostic data emitted by the cluster.",
              "type": "string",
              "enum": [
                "Off",
                "Basic",
                "Enhanced"
              ],
              "x-ms-enum": {
                "name": "DiagnosticLevel",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Off",
                    "value": "Off",
                    "description": "No diagnostic data will be emitted."
                  },
                  {
                    "name": "Basic",
                    "value": "Basic",
                    "description": "Basic diagnostic data will be emitted, including essential health metrics."
                  },
                  {
                    "name": "Enhanced",
                    "value": "Enhanced",
                    "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "LogCollectionProperties": {
      "description": "Log Collection properties of the cluster.",
      "type": "object",
      "properties": {
        "fromDate": {
          "description": "From DateTimeStamp from when logs need to be connected",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "toDate": {
          "description": "To DateTimeStamp till when logs need to be connected",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "lastLogGenerated": {
          "description": "Recent DateTimeStamp where logs are successfully generated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "logCollectionSessionDetails": {
          "type": "array",
          "items": {
            "description": "Log Collection Session details of the cluster.",
            "type": "object",
            "properties": {
              "logStartTime": {
                "description": "Start Time of the logs when it was collected",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "logEndTime": {
                "description": "End Time of the logs when it was collected",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "timeCollected": {
                "description": "Duration of logs collected",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "logSize": {
                "description": "Size of the logs collected",
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "logCollectionStatus": {
                "description": "LogCollection status",
                "type": "string",
                "enum": [
                  "None",
                  "InProgress",
                  "Failed",
                  "Succeeded"
                ],
                "x-ms-enum": {
                  "name": "LogCollectionStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "None",
                      "value": "None",
                      "description": "No log collection has been initiated."
                    },
                    {
                      "name": "InProgress",
                      "value": "InProgress",
                      "description": "Log collection is currently in progress."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "Log collection has failed."
                    },
                    {
                      "name": "Succeeded",
                      "value": "Succeeded",
                      "description": "Log collection completed successfully."
                    }
                  ]
                },
                "readOnly": true
              },
              "correlationId": {
                "description": "CorrelationId of the log collection",
                "type": "string",
                "readOnly": true
              },
              "logCollectionJobType": {
                "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
                "type": "string",
                "enum": [
                  "OnDemand",
                  "Scheduled"
                ],
                "x-ms-enum": {
                  "name": "LogCollectionJobType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "OnDemand",
                      "value": "OnDemand",
                      "description": "Log collection is triggered manually and executed immediately."
                    },
                    {
                      "name": "Scheduled",
                      "value": "Scheduled",
                      "description": "Log collection is scheduled to run at a predefined time or interval."
                    }
                  ]
                },
                "readOnly": true
              },
              "endTimeCollected": {
                "description": "End Time of the logs when it was collected",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "logCollectionError": {
                "readOnly": true,
                "description": "Log Collection Error details of the cluster.",
                "type": "object",
                "properties": {
                  "errorCode": {
                    "description": "Error Code of the log collection",
                    "type": "string",
                    "readOnly": true
                  },
                  "errorMessage": {
                    "description": "Error Message of the log collection",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "LogCollectionSession": {
      "description": "Log Collection Session details of the cluster.",
      "type": "object",
      "properties": {
        "logStartTime": {
          "description": "Start Time of the logs when it was collected",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "logEndTime": {
          "description": "End Time of the logs when it was collected",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "timeCollected": {
          "description": "Duration of logs collected",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "logSize": {
          "description": "Size of the logs collected",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "logCollectionStatus": {
          "description": "LogCollection status",
          "type": "string",
          "enum": [
            "None",
            "InProgress",
            "Failed",
            "Succeeded"
          ],
          "x-ms-enum": {
            "name": "LogCollectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No log collection has been initiated."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "Log collection is currently in progress."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Log collection has failed."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Log collection completed successfully."
              }
            ]
          },
          "readOnly": true
        },
        "correlationId": {
          "description": "CorrelationId of the log collection",
          "type": "string",
          "readOnly": true
        },
        "logCollectionJobType": {
          "description": "Specifies the type of log collection job. Determines whether the logs are collected immediately on demand or as part of a scheduled operation.",
          "type": "string",
          "enum": [
            "OnDemand",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "LogCollectionJobType",
            "modelAsString": true,
            "values": [
              {
                "name": "OnDemand",
                "value": "OnDemand",
                "description": "Log collection is triggered manually and executed immediately."
              },
              {
                "name": "Scheduled",
                "value": "Scheduled",
                "description": "Log collection is scheduled to run at a predefined time or interval."
              }
            ]
          },
          "readOnly": true
        },
        "endTimeCollected": {
          "description": "End Time of the logs when it was collected",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "logCollectionError": {
          "readOnly": true,
          "description": "Log Collection Error details of the cluster.",
          "type": "object",
          "properties": {
            "errorCode": {
              "description": "Error Code of the log collection",
              "type": "string",
              "readOnly": true
            },
            "errorMessage": {
              "description": "Error Message of the log collection",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "AccessLevel": {
      "description": "Remote Support Access Level",
      "type": "string",
      "enum": [
        "Diagnostics",
        "DiagnosticsAndRepair"
      ],
      "x-ms-enum": {
        "name": "AccessLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "Diagnostics",
            "value": "Diagnostics",
            "description": "Allows remote diagnostics operations only."
          },
          {
            "name": "DiagnosticsAndRepair",
            "value": "DiagnosticsAndRepair",
            "description": "Allows both remote diagnostics and repair operations."
          }
        ]
      }
    },
    "LogCollectionError": {
      "description": "Log Collection Error details of the cluster.",
      "type": "object",
      "properties": {
        "errorCode": {
          "description": "Error Code of the log collection",
          "type": "string",
          "readOnly": true
        },
        "errorMessage": {
          "description": "Error Message of the log collection",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "RemoteSupportProperties": {
      "description": "Remote Support properties of the cluster.",
      "type": "object",
      "properties": {
        "accessLevel": {
          "readOnly": true,
          "description": "Remote Support Access Level",
          "type": "string",
          "enum": [
            "Diagnostics",
            "DiagnosticsAndRepair"
          ],
          "x-ms-enum": {
            "name": "AccessLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "Diagnostics",
                "value": "Diagnostics",
                "description": "Allows remote diagnostics operations only."
              },
              {
                "name": "DiagnosticsAndRepair",
                "value": "DiagnosticsAndRepair",
                "description": "Allows both remote diagnostics and repair operations."
              }
            ]
          }
        },
        "expirationTimeStamp": {
          "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "remoteSupportType": {
          "description": "Remote Support Type for cluster",
          "type": "string",
          "enum": [
            "Enable",
            "Revoke"
          ],
          "x-ms-enum": {
            "name": "RemoteSupportType",
            "modelAsString": true,
            "values": [
              {
                "name": "Enable",
                "value": "Enable",
                "description": "Enable remote support for the cluster."
              },
              {
                "name": "Revoke",
                "value": "Revoke",
                "description": "Revoke previously enabled remote support for the cluster."
              }
            ]
          },
          "readOnly": true
        },
        "remoteSupportNodeSettings": {
          "type": "array",
          "items": {
            "description": "Remote Support Node Settings of the cluster.",
            "type": "object",
            "properties": {
              "arcResourceId": {
                "description": "Arc ResourceId of the Node",
                "type": "string",
                "readOnly": true
              },
              "state": {
                "description": "Remote Support Access Connection State on the Node",
                "type": "string",
                "readOnly": true
              },
              "createdAt": {
                "description": "Remote Support Enablement Request Created TimeStamp on the Node",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "updatedAt": {
                "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "connectionStatus": {
                "description": "Remote Support Access Connection Status on the Node",
                "type": "string",
                "readOnly": true
              },
              "connectionErrorMessage": {
                "description": "Remote Support Access Connection Error Message on the Node",
                "type": "string",
                "readOnly": true
              },
              "transcriptLocation": {
                "description": "Remote Support Transcript location on the node",
                "type": "string",
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "remoteSupportSessionDetails": {
          "type": "array",
          "items": {
            "description": "Remote Support Node Session Details on the Node.",
            "type": "object",
            "properties": {
              "sessionStartTime": {
                "description": "Remote Support Session StartTime on the Node",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "sessionEndTime": {
                "description": "Remote Support Session EndTime on the Node",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "nodeName": {
                "description": "Name of the node",
                "type": "string",
                "readOnly": true
              },
              "duration": {
                "description": "Duration of Remote Support Enablement",
                "type": "integer",
                "format": "int64",
                "readOnly": true
              },
              "accessLevel": {
                "readOnly": true,
                "description": "Remote Support Access Level",
                "type": "string",
                "enum": [
                  "Diagnostics",
                  "DiagnosticsAndRepair"
                ],
                "x-ms-enum": {
                  "name": "AccessLevel",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Diagnostics",
                      "value": "Diagnostics",
                      "description": "Allows remote diagnostics operations only."
                    },
                    {
                      "name": "DiagnosticsAndRepair",
                      "value": "DiagnosticsAndRepair",
                      "description": "Allows both remote diagnostics and repair operations."
                    }
                  ]
                }
              }
            }
          },
          "readOnly": true
        }
      }
    },
    "RemoteSupportNodeSettings": {
      "description": "Remote Support Node Settings of the cluster.",
      "type": "object",
      "properties": {
        "arcResourceId": {
          "description": "Arc ResourceId of the Node",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "description": "Remote Support Access Connection State on the Node",
          "type": "string",
          "readOnly": true
        },
        "createdAt": {
          "description": "Remote Support Enablement Request Created TimeStamp on the Node",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "updatedAt": {
          "description": "Remote Support Enablement Request Updated TimeStamp on the Node",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "connectionStatus": {
          "description": "Remote Support Access Connection Status on the Node",
          "type": "string",
          "readOnly": true
        },
        "connectionErrorMessage": {
          "description": "Remote Support Access Connection Error Message on the Node",
          "type": "string",
          "readOnly": true
        },
        "transcriptLocation": {
          "description": "Remote Support Transcript location on the node",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "PerNodeRemoteSupportSession": {
      "description": "Remote Support Node Session Details on the Node.",
      "type": "object",
      "properties": {
        "sessionStartTime": {
          "description": "Remote Support Session StartTime on the Node",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "sessionEndTime": {
          "description": "Remote Support Session EndTime on the Node",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "nodeName": {
          "description": "Name of the node",
          "type": "string",
          "readOnly": true
        },
        "duration": {
          "description": "Duration of Remote Support Enablement",
          "type": "integer",
          "format": "int64",
          "readOnly": true
        },
        "accessLevel": {
          "readOnly": true,
          "description": "Remote Support Access Level",
          "type": "string",
          "enum": [
            "Diagnostics",
            "DiagnosticsAndRepair"
          ],
          "x-ms-enum": {
            "name": "AccessLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "Diagnostics",
                "value": "Diagnostics",
                "description": "Allows remote diagnostics operations only."
              },
              {
                "name": "DiagnosticsAndRepair",
                "value": "DiagnosticsAndRepair",
                "description": "Allows both remote diagnostics and repair operations."
              }
            ]
          }
        }
      }
    },
    "SoftwareAssuranceProperties": {
      "description": "Software Assurance properties of the cluster.",
      "type": "object",
      "properties": {
        "softwareAssuranceStatus": {
          "description": "Status of the Software Assurance for the cluster.",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "x-ms-enum": {
            "name": "SoftwareAssuranceStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Software Assurance is enabled for the cluster."
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Software Assurance is disabled for the cluster."
              }
            ]
          },
          "readOnly": true
        },
        "softwareAssuranceIntent": {
          "description": "Customer Intent for Software Assurance Benefit.",
          "type": "string",
          "enum": [
            "Enable",
            "Disable"
          ],
          "x-ms-enum": {
            "name": "SoftwareAssuranceIntent",
            "modelAsString": true,
            "values": [
              {
                "name": "Enable",
                "value": "Enable",
                "description": "Customer intends to enable the Software Assurance benefit."
              },
              {
                "name": "Disable",
                "value": "Disable",
                "description": "Customer intends to disable the Software Assurance benefit."
              }
            ]
          }
        },
        "lastUpdated": {
          "description": "TimeStamp denoting the latest SA benefit applicability is validated.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "IsolatedVmAttestationConfiguration": {
      "description": "Attestation configurations for isolated VM (e.g. TVM, CVM) of the cluster.",
      "type": "object",
      "properties": {
        "attestationResourceId": {
          "description": "Fully qualified Azure resource id of the Microsoft Azure attestation resource associated with this cluster.",
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Attestation/attestationProviders",
                "scopes": [
                  "Tenant"
                ]
              }
            ]
          },
          "readOnly": true
        },
        "relyingPartyServiceEndpoint": {
          "description": "Region specific endpoint for relying party service.",
          "type": "string",
          "readOnly": true
        },
        "attestationServiceEndpoint": {
          "description": "Region specific endpoint for Microsoft Azure Attestation service for the cluster",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ClusterDesiredProperties": {
      "description": "Desired properties of the cluster.",
      "type": "object",
      "properties": {
        "windowsServerSubscription": {
          "description": "Desired state of Windows Server Subscription.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "WindowsServerSubscription",
            "modelAsString": true,
            "values": [
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Windows Server Subscription is disabled."
              },
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Windows Server Subscription is enabled."
              }
            ]
          }
        },
        "diagnosticLevel": {
          "description": "Desired level of diagnostic data emitted by the cluster.",
          "type": "string",
          "enum": [
            "Off",
            "Basic",
            "Enhanced"
          ],
          "x-ms-enum": {
            "name": "DiagnosticLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "Off",
                "value": "Off",
                "description": "No diagnostic data will be emitted."
              },
              {
                "name": "Basic",
                "value": "Basic",
                "description": "Basic diagnostic data will be emitted, including essential health metrics."
              },
              {
                "name": "Enhanced",
                "value": "Enhanced",
                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
              }
            ]
          }
        }
      }
    },
    "ClusterReportedProperties": {
      "description": "Properties reported by cluster agent.",
      "type": "object",
      "properties": {
        "clusterName": {
          "description": "Name of the on-prem cluster connected to this resource.",
          "type": "string",
          "readOnly": true
        },
        "clusterId": {
          "description": "Unique id generated by the on-prem cluster.",
          "type": "string",
          "readOnly": true
        },
        "clusterVersion": {
          "description": "Version of the cluster software.",
          "type": "string",
          "readOnly": true
        },
        "nodes": {
          "description": "List of nodes reported by the cluster.",
          "type": "array",
          "items": {
            "description": "Cluster node details.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the cluster node.",
                "type": "string",
                "readOnly": true
              },
              "id": {
                "description": "Id of the node in the cluster.",
                "type": "number",
                "readOnly": true
              },
              "windowsServerSubscription": {
                "description": "State of Windows Server Subscription.",
                "type": "string",
                "enum": [
                  "Disabled",
                  "Enabled"
                ],
                "x-ms-enum": {
                  "name": "WindowsServerSubscription",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Disabled",
                      "value": "Disabled",
                      "description": "Windows Server Subscription is disabled."
                    },
                    {
                      "name": "Enabled",
                      "value": "Enabled",
                      "description": "Windows Server Subscription is enabled."
                    }
                  ]
                },
                "readOnly": true
              },
              "nodeType": {
                "description": "Type of the cluster node hardware.",
                "type": "string",
                "enum": [
                  "FirstParty",
                  "ThirdParty"
                ],
                "x-ms-enum": {
                  "name": "ClusterNodeType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "FirstParty",
                      "value": "FirstParty",
                      "description": "Cluster nodes are provided and managed by Microsoft."
                    },
                    {
                      "name": "ThirdParty",
                      "value": "ThirdParty",
                      "description": "Cluster nodes are provided and managed by a third-party vendor."
                    }
                  ]
                },
                "readOnly": true
              },
              "ehcResourceId": {
                "description": "Edge Hardware Center Resource Id",
                "type": "string",
                "readOnly": true
              },
              "manufacturer": {
                "description": "Manufacturer of the cluster node hardware.",
                "type": "string",
                "readOnly": true
              },
              "model": {
                "description": "Model name of the cluster node hardware.",
                "type": "string",
                "readOnly": true
              },
              "osName": {
                "description": "Operating system running on the cluster node.",
                "type": "string",
                "readOnly": true
              },
              "osVersion": {
                "description": "Version of the operating system running on the cluster node.",
                "type": "string",
                "readOnly": true
              },
              "osDisplayVersion": {
                "description": "Display version of the operating system running on the cluster node.",
                "type": "string",
                "readOnly": true
              },
              "serialNumber": {
                "description": "Immutable id of the cluster node.",
                "type": "string",
                "readOnly": true
              },
              "coreCount": {
                "description": "Number of physical cores on the cluster node.",
                "type": "number",
                "readOnly": true
              },
              "memoryInGiB": {
                "description": "Total available memory on the cluster node (in GiB).",
                "type": "number",
                "readOnly": true
              },
              "lastLicensingTimestamp": {
                "description": "Most recent licensing timestamp.",
                "type": "string",
                "format": "date-time",
                "readOnly": true
              },
              "oemActivation": {
                "description": "OEM activation status of the node.",
                "type": "string",
                "enum": [
                  "Disabled",
                  "Enabled"
                ],
                "x-ms-enum": {
                  "name": "OemActivation",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Disabled",
                      "value": "Disabled",
                      "description": "OEM activation is disabled for the node."
                    },
                    {
                      "name": "Enabled",
                      "value": "Enabled",
                      "description": "OEM activation is enabled for the node."
                    }
                  ]
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true
        },
        "lastUpdated": {
          "description": "Last time the cluster reported the data.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "imdsAttestation": {
          "description": "IMDS attestation status of the cluster.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "ImdsAttestation",
            "modelAsString": true,
            "values": [
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "IMDS attestation is disabled for the cluster."
              },
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "IMDS attestation is enabled for the cluster."
              }
            ]
          },
          "readOnly": true
        },
        "diagnosticLevel": {
          "description": "Level of diagnostic data emitted by the cluster.",
          "type": "string",
          "enum": [
            "Off",
            "Basic",
            "Enhanced"
          ],
          "x-ms-enum": {
            "name": "DiagnosticLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "Off",
                "value": "Off",
                "description": "No diagnostic data will be emitted."
              },
              {
                "name": "Basic",
                "value": "Basic",
                "description": "Basic diagnostic data will be emitted, including essential health metrics."
              },
              {
                "name": "Enhanced",
                "value": "Enhanced",
                "description": "Enhanced diagnostic data will be emitted, including detailed performance and usage metrics."
              }
            ]
          }
        },
        "supportedCapabilities": {
          "description": "Capabilities supported by the cluster.",
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "string"
          }
        },
        "clusterType": {
          "description": "Specifies the type of hardware vendor for all nodes in the cluster. Indicates whether the nodes are provided by Microsoft or a third-party vendor.",
          "type": "string",
          "enum": [
            "FirstParty",
            "ThirdParty"
          ],
          "x-ms-enum": {
            "name": "ClusterNodeType",
            "modelAsString": true,
            "values": [
              {
                "name": "FirstParty",
                "value": "FirstParty",
                "description": "All nodes in the cluster are provided and managed by Microsoft."
              },
              {
                "name": "ThirdParty",
                "value": "ThirdParty",
                "description": "All nodes in the cluster are provided and managed by a third-party vendor."
              }
            ]
          },
          "readOnly": true
        },
        "manufacturer": {
          "description": "The manufacturer of all the nodes of the cluster.",
          "type": "string",
          "readOnly": true
        },
        "oemActivation": {
          "description": "OEM activation status of the cluster.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "OemActivation",
            "modelAsString": true,
            "values": [
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "OEM activation is disabled for the cluster."
              },
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "OEM activation is enabled for the cluster."
              }
            ]
          },
          "readOnly": true
        },
        "hardwareClass": {
          "description": "Hardware class of the cluster.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Small",
            "Medium",
            "Large"
          ],
          "default": "Medium",
          "x-ms-enum": {
            "name": "HardwareClass",
            "modelAsString": true,
            "values": [
              {
                "name": "Small",
                "value": "Small",
                "description": "The hardware class is small."
              },
              {
                "name": "Medium",
                "value": "Medium",
                "description": "The hardware class is medium. This corresponds to the default"
              },
              {
                "name": "Large",
                "value": "Large",
                "description": "The hardware class is large."
              }
            ]
          }
        }
      }
    },
    "ClusterNode": {
      "description": "Cluster node details.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the cluster node.",
          "type": "string",
          "readOnly": true
        },
        "id": {
          "description": "Id of the node in the cluster.",
          "type": "number",
          "readOnly": true
        },
        "windowsServerSubscription": {
          "description": "State of Windows Server Subscription.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "WindowsServerSubscription",
            "modelAsString": true,
            "values": [
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Windows Server Subscription is disabled."
              },
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Windows Server Subscription is enabled."
              }
            ]
          },
          "readOnly": true
        },
        "nodeType": {
          "description": "Type of the cluster node hardware.",
          "type": "string",
          "enum": [
            "FirstParty",
            "ThirdParty"
          ],
          "x-ms-enum": {
            "name": "ClusterNodeType",
            "modelAsString": true,
            "values": [
              {
                "name": "FirstParty",
                "value": "FirstParty",
                "description": "Cluster nodes are provided and managed by Microsoft."
              },
              {
                "name": "ThirdParty",
                "value": "ThirdParty",
                "description": "Cluster nodes are provided and managed by a third-party vendor."
              }
            ]
          },
          "readOnly": true
        },
        "ehcResourceId": {
          "description": "Edge Hardware Center Resource Id",
          "type": "string",
          "readOnly": true
        },
        "manufacturer": {
          "description": "Manufacturer of the cluster node hardware.",
          "type": "string",
          "readOnly": true
        },
        "model": {
          "description": "Model name of the cluster node hardware.",
          "type": "string",
          "readOnly": true
        },
        "osName": {
          "description": "Operating system running on the cluster node.",
          "type": "string",
          "readOnly": true
        },
        "osVersion": {
          "description": "Version of the operating system running on the cluster node.",
          "type": "string",
          "readOnly": true
        },
        "osDisplayVersion": {
          "description": "Display version of the operating system running on the cluster node.",
          "type": "string",
          "readOnly": true
        },
        "serialNumber": {
          "description": "Immutable id of the cluster node.",
          "type": "string",
          "readOnly": true
        },
        "coreCount": {
          "description": "Number of physical cores on the cluster node.",
          "type": "number",
          "readOnly": true
        },
        "memoryInGiB": {
          "description": "Total available memory on the cluster node (in GiB).",
          "type": "number",
          "readOnly": true
        },
        "lastLicensingTimestamp": {
          "description": "Most recent licensing timestamp.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "oemActivation": {
          "description": "OEM activation status of the node.",
          "type": "string",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "x-ms-enum": {
            "name": "OemActivation",
            "modelAsString": true,
            "values": [
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "OEM activation is disabled for the node."
              },
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "OEM activation is enabled for the node."
              }
            ]
          },
          "readOnly": true
        }
      }
    },
    "RawCertificateData": {
      "type": "object",
      "properties": {
        "certificates": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "UploadCertificateRequest": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "certificates": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "LogCollectionRequestProperties": {
      "description": "Properties for Log Collection Request",
      "type": "object",
      "properties": {
        "fromDate": {
          "description": "From DateTimeStamp from when logs need to be connected",
          "type": "string",
          "format": "date-time"
        },
        "toDate": {
          "description": "To DateTimeStamp till when logs need to be connected",
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "fromDate",
        "toDate"
      ],
      "additionalProperties": false
    },
    "RemoteSupportRequestProperties": {
      "description": "Properties for Remote Support Request",
      "type": "object",
      "properties": {
        "accessLevel": {
          "readOnly": true,
          "description": "Remote Support Access Level",
          "type": "string",
          "enum": [
            "Diagnostics",
            "DiagnosticsAndRepair"
          ],
          "x-ms-enum": {
            "name": "AccessLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "Diagnostics",
                "value": "Diagnostics",
                "description": "Allows remote diagnostics operations only."
              },
              {
                "name": "DiagnosticsAndRepair",
                "value": "DiagnosticsAndRepair",
                "description": "Allows both remote diagnostics and repair operations."
              }
            ]
          }
        },
        "expirationTimeStamp": {
          "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
          "type": "string",
          "format": "date-time"
        },
        "remoteSupportType": {
          "description": "Remote Support Type for cluster",
          "type": "string",
          "enum": [
            "Enable",
            "Revoke"
          ],
          "x-ms-enum": {
            "name": "RemoteSupportType",
            "modelAsString": true,
            "values": [
              {
                "name": "Enable",
                "value": "Enable",
                "description": "Enable remote support for the cluster."
              },
              {
                "name": "Revoke",
                "value": "Revoke",
                "description": "Revoke previously enabled remote support for the cluster."
              }
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "SecretsLocationDetails": {
      "type": "object",
      "description": "Secrets location details",
      "properties": {
        "secretsType": {
          "description": "Type of secrets to store",
          "type": "string",
          "enum": [
            "BackupSecrets"
          ],
          "x-ms-enum": {
            "name": "SecretsType",
            "modelAsString": true,
            "values": [
              {
                "name": "BackupSecrets",
                "value": "BackupSecrets",
                "description": "Backup secrets type"
              }
            ]
          }
        },
        "secretsLocation": {
          "type": "string",
          "description": "secrets location"
        }
      },
      "required": [
        "secretsType",
        "secretsLocation"
      ]
    },
    "SecretsLocationsChangeRequest": {
      "type": "object",
      "description": "Update secrets locations change  Request.",
      "properties": {
        "properties": {
          "type": "array",
          "description": "List of secret locations",
          "items": {
            "type": "object",
            "description": "Secrets location details",
            "properties": {
              "secretsType": {
                "description": "Type of secrets to store",
                "type": "string",
                "enum": [
                  "BackupSecrets"
                ],
                "x-ms-enum": {
                  "name": "SecretsType",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "BackupSecrets",
                      "value": "BackupSecrets",
                      "description": "Backup secrets type"
                    }
                  ]
                }
              },
              "secretsLocation": {
                "type": "string",
                "description": "secrets location"
              }
            },
            "required": [
              "secretsType",
              "secretsLocation"
            ]
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SecretsType": {
      "type": "string",
      "description": "Type of secrets to store",
      "enum": [
        "BackupSecrets"
      ],
      "x-ms-enum": {
        "name": "SecretsType",
        "modelAsString": true,
        "values": [
          {
            "name": "BackupSecrets",
            "value": "BackupSecrets",
            "description": "Backup secrets type"
          }
        ]
      }
    },
    "SoftwareAssuranceChangeRequestProperties": {
      "type": "object",
      "properties": {
        "softwareAssuranceIntent": {
          "type": "string",
          "description": "Customer Intent for Software Assurance Benefit. This indicates whether the customer wishes to opt in or out of the Software Assurance program, which provides licensing and support benefits.",
          "enum": [
            "Enable",
            "Disable"
          ],
          "x-ms-enum": {
            "name": "SoftwareAssuranceIntent",
            "modelAsString": true,
            "values": [
              {
                "name": "Enable",
                "value": "Enable",
                "description": "Customer intends to enable the Software Assurance benefit."
              },
              {
                "name": "Disable",
                "value": "Disable",
                "description": "Customer intends to disable the Software Assurance benefit."
              }
            ]
          }
        }
      },
      "additionalProperties": false
    },
    "SoftwareAssuranceChangeRequest": {
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "properties": {
            "softwareAssuranceIntent": {
              "type": "string",
              "description": "Customer Intent for Software Assurance Benefit. This indicates whether the customer wishes to opt in or out of the Software Assurance program, which provides licensing and support benefits.",
              "enum": [
                "Enable",
                "Disable"
              ],
              "x-ms-enum": {
                "name": "SoftwareAssuranceIntent",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enable",
                    "value": "Enable",
                    "description": "Customer intends to enable the Software Assurance benefit."
                  },
                  {
                    "name": "Disable",
                    "value": "Disable",
                    "description": "Customer intends to disable the Software Assurance benefit."
                  }
                ]
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "LogCollectionRequest": {
      "description": "Log Collection Request",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties for Log Collection Request",
          "type": "object",
          "properties": {
            "fromDate": {
              "description": "From DateTimeStamp from when logs need to be connected",
              "type": "string",
              "format": "date-time"
            },
            "toDate": {
              "description": "To DateTimeStamp till when logs need to be connected",
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "fromDate",
            "toDate"
          ],
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "RemoteSupportRequest": {
      "description": "Remote Support Request",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties for Remote Support Request",
          "type": "object",
          "properties": {
            "accessLevel": {
              "readOnly": true,
              "description": "Remote Support Access Level",
              "type": "string",
              "enum": [
                "Diagnostics",
                "DiagnosticsAndRepair"
              ],
              "x-ms-enum": {
                "name": "AccessLevel",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Diagnostics",
                    "value": "Diagnostics",
                    "description": "Allows remote diagnostics operations only."
                  },
                  {
                    "name": "DiagnosticsAndRepair",
                    "value": "DiagnosticsAndRepair",
                    "description": "Allows both remote diagnostics and repair operations."
                  }
                ]
              }
            },
            "expirationTimeStamp": {
              "description": "Expiration DateTimeStamp when Remote Support Access will be expired",
              "type": "string",
              "format": "date-time"
            },
            "remoteSupportType": {
              "description": "Remote Support Type for cluster",
              "type": "string",
              "enum": [
                "Enable",
                "Revoke"
              ],
              "x-ms-enum": {
                "name": "RemoteSupportType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Enable",
                    "value": "Enable",
                    "description": "Enable remote support for the cluster."
                  },
                  {
                    "name": "Revoke",
                    "value": "Revoke",
                    "description": "Revoke previously enabled remote support for the cluster."
                  }
                ]
              }
            }
          },
          "additionalProperties": false
        }
      },
      "additionalProperties": false
    },
    "ClusterIdentityResponse": {
      "description": "Cluster Identity details.",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Cluster identity properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "aadClientId": {
              "type": "string"
            },
            "aadTenantId": {
              "type": "string"
            },
            "aadServicePrincipalObjectId": {
              "type": "string"
            },
            "aadApplicationObjectId": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "readOnly": true
        }
      }
    },
    "ClusterIdentityResponseProperties": {
      "type": "object",
      "properties": {
        "aadClientId": {
          "type": "string"
        },
        "aadTenantId": {
          "type": "string"
        },
        "aadServicePrincipalObjectId": {
          "type": "string"
        },
        "aadApplicationObjectId": {
          "type": "string"
        }
      },
      "additionalProperties": false,
      "readOnly": true
    },
    "AdapterPropertyOverrides": {
      "type": "object",
      "description": "The AdapterPropertyOverrides of a cluster.",
      "properties": {
        "jumboPacket": {
          "type": "string",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
          "readOnly": true
        },
        "networkDirect": {
          "type": "string",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
          "readOnly": true
        },
        "networkDirectTechnology": {
          "type": "string",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'",
          "readOnly": true
        }
      }
    },
    "DeploymentCluster": {
      "type": "object",
      "description": "AzureStackHCI Cluster deployment properties.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The cluster name provided when preparing Active Directory."
        },
        "witnessType": {
          "type": "string",
          "description": "Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'. "
        },
        "witnessPath": {
          "type": "string",
          "description": "Specify the fileshare path for the local witness for your Azure Stack HCI cluster."
        },
        "cloudAccountName": {
          "type": "string",
          "description": "Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster."
        },
        "azureServiceEndpoint": {
          "type": "string",
          "description": "For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net."
        },
        "hardwareClass": {
          "description": "Hardware class of the cluster.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Small",
            "Medium",
            "Large"
          ],
          "default": "Medium",
          "x-ms-enum": {
            "name": "HardwareClass",
            "modelAsString": true,
            "values": [
              {
                "name": "Small",
                "value": "Small",
                "description": "The hardware class is small."
              },
              {
                "name": "Medium",
                "value": "Medium",
                "description": "The hardware class is medium. This corresponds to the default"
              },
              {
                "name": "Large",
                "value": "Large",
                "description": "The hardware class is large."
              }
            ]
          }
        },
        "clusterPattern": {
          "description": "Cluster Pattern supported.",
          "type": "string",
          "enum": [
            "Standard",
            "RackAware"
          ],
          "x-ms-enum": {
            "name": "ClusterPattern",
            "modelAsString": true,
            "values": [
              {
                "name": "Standard",
                "value": "Standard",
                "description": "Standard cluster."
              },
              {
                "name": "RackAware",
                "value": "RackAware",
                "description": "RackAware cluster."
              }
            ]
          }
        }
      }
    },
    "DeploymentConfiguration": {
      "type": "object",
      "description": "Deployment Configuration",
      "properties": {
        "version": {
          "type": "string",
          "description": "deployment template version "
        },
        "scaleUnits": {
          "type": "array",
          "description": "Scale units will contains list of deployment data",
          "items": {
            "type": "object",
            "description": "Scale units will contains list of deployment data",
            "properties": {
              "deploymentData": {
                "description": "Deployment Data to deploy AzureStackHCI Cluster.",
                "type": "object",
                "properties": {
                  "securitySettings": {
                    "description": "SecuritySettings to deploy AzureStackHCI Cluster.",
                    "type": "object",
                    "properties": {
                      "hvciProtection": {
                        "type": "boolean",
                        "description": "By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.",
                        "default": true
                      },
                      "drtmProtection": {
                        "type": "boolean",
                        "description": "By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.",
                        "default": true
                      },
                      "driftControlEnforced": {
                        "type": "boolean",
                        "description": "When set to true, the security baseline is re-applied regularly.",
                        "default": true
                      },
                      "credentialGuardEnforced": {
                        "type": "boolean",
                        "description": "When set to true, Credential Guard is enabled.",
                        "default": false
                      },
                      "smbSigningEnforced": {
                        "type": "boolean",
                        "description": "When set to true, the SMB default instance requires sign in for the client and server services.",
                        "default": true
                      },
                      "smbClusterEncryption": {
                        "type": "boolean",
                        "description": "When set to true, cluster east-west traffic is encrypted.",
                        "default": false
                      },
                      "sideChannelMitigationEnforced": {
                        "type": "boolean",
                        "description": "When set to true, all the side channel mitigations are enabled",
                        "default": true
                      },
                      "bitlockerBootVolume": {
                        "type": "boolean",
                        "description": "When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent. ",
                        "default": true
                      },
                      "bitlockerDataVolumes": {
                        "type": "boolean",
                        "description": "When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.",
                        "default": true
                      },
                      "wdacEnforced": {
                        "type": "boolean",
                        "description": "WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.",
                        "default": true
                      }
                    }
                  },
                  "observability": {
                    "description": "Observability config to deploy AzureStackHCI Cluster.",
                    "type": "object",
                    "properties": {
                      "streamingDataClient": {
                        "type": "boolean",
                        "description": "Enables telemetry data to be sent to Microsoft",
                        "default": true
                      },
                      "euLocation": {
                        "type": "boolean",
                        "description": "Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.",
                        "default": false
                      },
                      "episodicDataUpload": {
                        "type": "boolean",
                        "description": "When set to true, collects log data to facilitate quicker issue resolution.",
                        "default": true
                      }
                    }
                  },
                  "cluster": {
                    "description": "Observability config to deploy AzureStackHCI Cluster.",
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The cluster name provided when preparing Active Directory."
                      },
                      "witnessType": {
                        "type": "string",
                        "description": "Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'. "
                      },
                      "witnessPath": {
                        "type": "string",
                        "description": "Specify the fileshare path for the local witness for your Azure Stack HCI cluster."
                      },
                      "cloudAccountName": {
                        "type": "string",
                        "description": "Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster."
                      },
                      "azureServiceEndpoint": {
                        "type": "string",
                        "description": "For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net."
                      },
                      "hardwareClass": {
                        "description": "Hardware class of the cluster.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Small",
                          "Medium",
                          "Large"
                        ],
                        "default": "Medium",
                        "x-ms-enum": {
                          "name": "HardwareClass",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Small",
                              "value": "Small",
                              "description": "The hardware class is small."
                            },
                            {
                              "name": "Medium",
                              "value": "Medium",
                              "description": "The hardware class is medium. This corresponds to the default"
                            },
                            {
                              "name": "Large",
                              "value": "Large",
                              "description": "The hardware class is large."
                            }
                          ]
                        }
                      },
                      "clusterPattern": {
                        "description": "Cluster Pattern supported.",
                        "type": "string",
                        "enum": [
                          "Standard",
                          "RackAware"
                        ],
                        "x-ms-enum": {
                          "name": "ClusterPattern",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Standard",
                              "value": "Standard",
                              "description": "Standard cluster."
                            },
                            {
                              "name": "RackAware",
                              "value": "RackAware",
                              "description": "RackAware cluster."
                            }
                          ]
                        }
                      }
                    }
                  },
                  "storage": {
                    "description": "Storage config to deploy AzureStackHCI Cluster.",
                    "type": "object",
                    "properties": {
                      "configurationMode": {
                        "type": "string",
                        "description": "By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'",
                        "default": "Express"
                      }
                    }
                  },
                  "namingPrefix": {
                    "type": "string",
                    "description": "naming prefix to deploy cluster.",
                    "pattern": "^[a-zA-Z0-9-]{1,8}$"
                  },
                  "domainFqdn": {
                    "type": "string",
                    "description": "FQDN to deploy cluster"
                  },
                  "infrastructureNetwork": {
                    "type": "array",
                    "description": "InfrastructureNetwork config to deploy AzureStackHCI Cluster.",
                    "items": {
                      "type": "object",
                      "description": "The InfrastructureNetwork of a AzureStackHCI Cluster.",
                      "properties": {
                        "subnetMask": {
                          "type": "string",
                          "description": "Subnet mask that matches the provided IP address space."
                        },
                        "gateway": {
                          "type": "string",
                          "description": "Default gateway that should be used for the provided IP address space."
                        },
                        "ipPools": {
                          "type": "array",
                          "description": "Range of IP addresses from which addresses are allocated for nodes within a subnet.",
                          "items": {
                            "type": "object",
                            "description": "The dnsServers of a device.",
                            "properties": {
                              "startingAddress": {
                                "type": "string",
                                "description": "Starting IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
                              },
                              "endingAddress": {
                                "type": "string",
                                "description": "Ending IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
                              }
                            }
                          },
                          "x-ms-identifiers": []
                        },
                        "dnsServers": {
                          "type": "array",
                          "description": "IPv4 address of the DNS servers in your environment.",
                          "items": {
                            "type": "string"
                          }
                        },
                        "useDhcp": {
                          "type": "boolean",
                          "description": "Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required"
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "physicalNodes": {
                    "type": "array",
                    "description": "list of physical nodes config to deploy AzureStackHCI Cluster.",
                    "items": {
                      "type": "object",
                      "description": "The PhysicalNodes of a cluster.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "NETBIOS name of each physical server on your Azure Stack HCI cluster."
                        },
                        "ipv4Address": {
                          "type": "string",
                          "description": "The IPv4 address assigned to each physical server on your Azure Stack HCI cluster."
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "hostNetwork": {
                    "description": "HostNetwork config to deploy AzureStackHCI Cluster.",
                    "type": "object",
                    "properties": {
                      "intents": {
                        "type": "array",
                        "description": "The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.",
                        "items": {
                          "type": "object",
                          "description": "The Intents of a cluster.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the network intent you wish to create."
                            },
                            "trafficType": {
                              "type": "array",
                              "description": "List of network traffic types. Only allowed values are 'Compute', 'Storage', 'Management'.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "adapter": {
                              "type": "array",
                              "description": "Array of network interfaces used for the network intent.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "overrideVirtualSwitchConfiguration": {
                              "type": "boolean",
                              "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                              "default": false
                            },
                            "virtualSwitchConfigurationOverrides": {
                              "description": "Set virtualSwitch ConfigurationOverrides for cluster.",
                              "type": "object",
                              "properties": {
                                "enableIov": {
                                  "type": "string",
                                  "description": "Enable IoV for Virtual Switch"
                                },
                                "loadBalancingAlgorithm": {
                                  "type": "string",
                                  "description": "Load Balancing Algorithm for Virtual Switch"
                                }
                              }
                            },
                            "overrideQosPolicy": {
                              "type": "boolean",
                              "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                              "default": false
                            },
                            "qosPolicyOverrides": {
                              "description": "Set QoS PolicyOverrides for cluster.",
                              "type": "object",
                              "properties": {
                                "priorityValue8021Action_Cluster": {
                                  "type": "string",
                                  "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                                },
                                "priorityValue8021Action_SMB": {
                                  "type": "string",
                                  "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                                },
                                "bandwidthPercentage_SMB": {
                                  "type": "string",
                                  "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                                }
                              }
                            },
                            "overrideAdapterProperty": {
                              "type": "boolean",
                              "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                              "default": false
                            },
                            "adapterPropertyOverrides": {
                              "description": "Set Adapter PropertyOverrides for cluster.",
                              "type": "object",
                              "properties": {
                                "jumboPacket": {
                                  "type": "string",
                                  "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                                },
                                "networkDirect": {
                                  "type": "string",
                                  "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                                },
                                "networkDirectTechnology": {
                                  "type": "string",
                                  "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'"
                                }
                              }
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "storageNetworks": {
                        "type": "array",
                        "description": "List of StorageNetworks config to deploy AzureStackHCI Cluster.",
                        "items": {
                          "type": "object",
                          "description": "The StorageNetworks of a cluster.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Name of the storage network."
                            },
                            "networkAdapterName": {
                              "type": "string",
                              "description": "Name of the storage network adapter."
                            },
                            "vlanId": {
                              "type": "string",
                              "description": "ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic. "
                            },
                            "storageAdapterIPInfo": {
                              "type": "array",
                              "description": "List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.",
                              "items": {
                                "type": "object",
                                "description": "The StorageAdapter physical nodes of a cluster.",
                                "properties": {
                                  "physicalNode": {
                                    "type": "string",
                                    "description": "storage adapter physical node name."
                                  },
                                  "ipv4Address": {
                                    "type": "string",
                                    "description": "The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster."
                                  },
                                  "subnetMask": {
                                    "type": "string",
                                    "description": "The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster."
                                  }
                                }
                              },
                              "x-ms-identifiers": [
                                "physicalNode"
                              ]
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "storageConnectivitySwitchless": {
                        "type": "boolean",
                        "description": "Defines how the storage adapters between nodes are connected either switch or switch less..",
                        "default": false
                      },
                      "enableStorageAutoIp": {
                        "type": "boolean",
                        "description": "Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.",
                        "default": false
                      }
                    }
                  },
                  "sdnIntegration": {
                    "description": "SDN Integration config to deploy AzureStackHCI Cluster.",
                    "type": "object",
                    "properties": {
                      "networkController": {
                        "description": "network controller config for SDN Integration to deploy AzureStackHCI Cluster.",
                        "type": "object",
                        "properties": {
                          "macAddressPoolStart": {
                            "type": "string",
                            "description": "macAddressPoolStart of network controller used for SDN Integration."
                          },
                          "macAddressPoolStop": {
                            "type": "string",
                            "description": "macAddressPoolStop of network controller used for SDN Integration."
                          },
                          "networkVirtualizationEnabled": {
                            "type": "boolean",
                            "description": "NetworkVirtualizationEnabled of network controller used for SDN Integration."
                          }
                        }
                      }
                    }
                  },
                  "adouPath": {
                    "type": "string",
                    "description": "The path to the Active Directory Organizational Unit container object prepared for the deployment. "
                  },
                  "secretsLocation": {
                    "type": "string",
                    "description": "Azure key vault endpoint. This property is deprecated from 2023-12-01-preview. Please use secrets property instead."
                  },
                  "secrets": {
                    "type": "array",
                    "description": "secrets used for cloud deployment.",
                    "items": {
                      "type": "object",
                      "description": "Protected parameters list stored in keyvault.",
                      "properties": {
                        "secretName": {
                          "type": "string",
                          "description": "Secret name stored in keyvault."
                        },
                        "eceSecretName": {
                          "description": "Secret name expected for Enterprise Cloud Engine (ECE) deployment.",
                          "type": "string",
                          "enum": [
                            "AzureStackLCMUserCredential",
                            "DefaultARBApplication",
                            "LocalAdminCredential",
                            "WitnessStorageKey"
                          ],
                          "x-ms-enum": {
                            "name": "EceSecrets",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "AzureStackLCMUserCredential",
                                "value": "AzureStackLCMUserCredential",
                                "description": "AzureStackLCMUserCredential used for LCM operations for AzureStackHCI cluster."
                              },
                              {
                                "name": "DefaultARBApplication",
                                "value": "DefaultARBApplication",
                                "description": "DefaultARBApplication used to manage Azure Arc resource bridge (ARB) for AzureStackHCI cluster."
                              },
                              {
                                "name": "LocalAdminCredential",
                                "value": "LocalAdminCredential",
                                "description": "LocalAdminCredential used for admin operations for AzureStackHCI cluster."
                              },
                              {
                                "name": "WitnessStorageKey",
                                "value": "WitnessStorageKey",
                                "description": "WitnessStorageKey used for setting up a cloud witness for AzureStackHCI cluster."
                              }
                            ]
                          }
                        },
                        "secretLocation": {
                          "type": "string",
                          "format": "uri",
                          "description": "Secret URI stored in keyvault."
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "secretName"
                    ]
                  },
                  "optionalServices": {
                    "description": "OptionalServices config to deploy AzureStackHCI Cluster.",
                    "type": "object",
                    "properties": {
                      "customLocation": {
                        "type": "string",
                        "description": "The name of custom location."
                      }
                    }
                  },
                  "localAvailabilityZones": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "Local Availability Zone information for HCI cluster",
                      "properties": {
                        "localAvailabilityZoneName": {
                          "type": "string",
                          "description": "Local Availability Zone name for HCI cluster"
                        },
                        "nodes": {
                          "type": "array",
                          "description": "Nodes belonging to a particular zone",
                          "items": {
                            "type": "string"
                          },
                          "x-ms-identifiers": []
                        }
                      }
                    },
                    "description": "Local Availability Zone information for HCI cluster",
                    "x-ms-identifiers": [
                      "localAvailabilityZoneName"
                    ]
                  },
                  "assemblyInfo": {
                    "description": "Assembly Package details for Validated Solution Recipe for AzureStackHCI Cluster",
                    "type": "object",
                    "properties": {
                      "packageVersion": {
                        "type": "string",
                        "description": "Assembly Package version for Validated Solution Recipe for AzureStackHCI Cluster",
                        "readOnly": true
                      },
                      "payload": {
                        "type": "array",
                        "description": "Payload properties for Validated Solution Recipe for AzureStackHCI Cluster",
                        "items": {
                          "type": "object",
                          "description": "Payload properties for Validated Solution Recipe for AzureStackHCI Cluster",
                          "properties": {
                            "identifier": {
                              "type": "string",
                              "description": "assembly identifier for Validated Solution Recipe for AzureStackHCI Cluster",
                              "readOnly": true
                            },
                            "hash": {
                              "type": "string",
                              "description": "Hash of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                              "readOnly": true
                            },
                            "fileName": {
                              "type": "string",
                              "description": "File name of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                              "readOnly": true
                            },
                            "url": {
                              "type": "string",
                              "description": "Url of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                              "readOnly": true
                            }
                          }
                        },
                        "readOnly": true,
                        "x-ms-identifiers": []
                      }
                    }
                  }
                }
              },
              "sbePartnerInfo": {
                "description": "Solution builder extension (SBE) partner properties",
                "type": "object",
                "properties": {
                  "sbeDeploymentInfo": {
                    "description": "SBE package and manifest information for the solution Builder Extension staged for AzureStackHCI cluster deployment.",
                    "type": "object",
                    "properties": {
                      "version": {
                        "type": "string",
                        "description": "SBE package version."
                      },
                      "family": {
                        "type": "string",
                        "description": "SBE family name."
                      },
                      "publisher": {
                        "type": "string",
                        "description": "SBE manifest publisher."
                      },
                      "sbeManifestSource": {
                        "type": "string",
                        "description": "SBE Manifest Source."
                      },
                      "sbeManifestCreationDate": {
                        "type": "string",
                        "format": "date-time",
                        "description": "SBE Manifest Creation Date."
                      }
                    }
                  },
                  "partnerProperties": {
                    "type": "array",
                    "description": "List of SBE partner properties for AzureStackHCI cluster deployment.",
                    "items": {
                      "type": "object",
                      "description": "Solution builder extension (SBE) partner properties object.",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "SBE partner property name."
                        },
                        "value": {
                          "type": "string",
                          "description": "SBE partner property value."
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "credentialList": {
                    "type": "array",
                    "description": "SBE credentials list for AzureStackHCI cluster deployment.",
                    "items": {
                      "type": "object",
                      "description": "secrets used for solution builder extension (SBE) partner extensibility.",
                      "properties": {
                        "secretName": {
                          "type": "string",
                          "description": "secret name stored in keyvault."
                        },
                        "eceSecretName": {
                          "type": "string",
                          "description": "secret name expected for Enterprise Cloud Engine (ECE)."
                        },
                        "secretLocation": {
                          "type": "string",
                          "format": "uri",
                          "description": "secret URI stored in keyvault."
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "secretName"
                    ]
                  }
                }
              }
            },
            "required": [
              "deploymentData"
            ],
            "externalDocs": {
              "description": "Deploy Azure Stack HCI using an existing configuration file",
              "url": "https://learn.microsoft.com/en-us/azure-stack/hci/deploy/deployment-tool-existing-file"
            }
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "scaleUnits"
      ]
    },
    "DeploymentData": {
      "type": "object",
      "description": "The Deployment data of AzureStackHCI Cluster.",
      "properties": {
        "securitySettings": {
          "description": "SecuritySettings to deploy AzureStackHCI Cluster.",
          "type": "object",
          "properties": {
            "hvciProtection": {
              "type": "boolean",
              "description": "By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.",
              "default": true
            },
            "drtmProtection": {
              "type": "boolean",
              "description": "By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.",
              "default": true
            },
            "driftControlEnforced": {
              "type": "boolean",
              "description": "When set to true, the security baseline is re-applied regularly.",
              "default": true
            },
            "credentialGuardEnforced": {
              "type": "boolean",
              "description": "When set to true, Credential Guard is enabled.",
              "default": false
            },
            "smbSigningEnforced": {
              "type": "boolean",
              "description": "When set to true, the SMB default instance requires sign in for the client and server services.",
              "default": true
            },
            "smbClusterEncryption": {
              "type": "boolean",
              "description": "When set to true, cluster east-west traffic is encrypted.",
              "default": false
            },
            "sideChannelMitigationEnforced": {
              "type": "boolean",
              "description": "When set to true, all the side channel mitigations are enabled",
              "default": true
            },
            "bitlockerBootVolume": {
              "type": "boolean",
              "description": "When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent. ",
              "default": true
            },
            "bitlockerDataVolumes": {
              "type": "boolean",
              "description": "When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.",
              "default": true
            },
            "wdacEnforced": {
              "type": "boolean",
              "description": "WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.",
              "default": true
            }
          }
        },
        "observability": {
          "description": "Observability config to deploy AzureStackHCI Cluster.",
          "type": "object",
          "properties": {
            "streamingDataClient": {
              "type": "boolean",
              "description": "Enables telemetry data to be sent to Microsoft",
              "default": true
            },
            "euLocation": {
              "type": "boolean",
              "description": "Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.",
              "default": false
            },
            "episodicDataUpload": {
              "type": "boolean",
              "description": "When set to true, collects log data to facilitate quicker issue resolution.",
              "default": true
            }
          }
        },
        "cluster": {
          "description": "Observability config to deploy AzureStackHCI Cluster.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The cluster name provided when preparing Active Directory."
            },
            "witnessType": {
              "type": "string",
              "description": "Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'. "
            },
            "witnessPath": {
              "type": "string",
              "description": "Specify the fileshare path for the local witness for your Azure Stack HCI cluster."
            },
            "cloudAccountName": {
              "type": "string",
              "description": "Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster."
            },
            "azureServiceEndpoint": {
              "type": "string",
              "description": "For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net."
            },
            "hardwareClass": {
              "description": "Hardware class of the cluster.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Small",
                "Medium",
                "Large"
              ],
              "default": "Medium",
              "x-ms-enum": {
                "name": "HardwareClass",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Small",
                    "value": "Small",
                    "description": "The hardware class is small."
                  },
                  {
                    "name": "Medium",
                    "value": "Medium",
                    "description": "The hardware class is medium. This corresponds to the default"
                  },
                  {
                    "name": "Large",
                    "value": "Large",
                    "description": "The hardware class is large."
                  }
                ]
              }
            },
            "clusterPattern": {
              "description": "Cluster Pattern supported.",
              "type": "string",
              "enum": [
                "Standard",
                "RackAware"
              ],
              "x-ms-enum": {
                "name": "ClusterPattern",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Standard",
                    "value": "Standard",
                    "description": "Standard cluster."
                  },
                  {
                    "name": "RackAware",
                    "value": "RackAware",
                    "description": "RackAware cluster."
                  }
                ]
              }
            }
          }
        },
        "storage": {
          "description": "Storage config to deploy AzureStackHCI Cluster.",
          "type": "object",
          "properties": {
            "configurationMode": {
              "type": "string",
              "description": "By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'",
              "default": "Express"
            }
          }
        },
        "namingPrefix": {
          "type": "string",
          "description": "naming prefix to deploy cluster.",
          "pattern": "^[a-zA-Z0-9-]{1,8}$"
        },
        "domainFqdn": {
          "type": "string",
          "description": "FQDN to deploy cluster"
        },
        "infrastructureNetwork": {
          "type": "array",
          "description": "InfrastructureNetwork config to deploy AzureStackHCI Cluster.",
          "items": {
            "type": "object",
            "description": "The InfrastructureNetwork of a AzureStackHCI Cluster.",
            "properties": {
              "subnetMask": {
                "type": "string",
                "description": "Subnet mask that matches the provided IP address space."
              },
              "gateway": {
                "type": "string",
                "description": "Default gateway that should be used for the provided IP address space."
              },
              "ipPools": {
                "type": "array",
                "description": "Range of IP addresses from which addresses are allocated for nodes within a subnet.",
                "items": {
                  "type": "object",
                  "description": "The dnsServers of a device.",
                  "properties": {
                    "startingAddress": {
                      "type": "string",
                      "description": "Starting IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
                    },
                    "endingAddress": {
                      "type": "string",
                      "description": "Ending IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
                    }
                  }
                },
                "x-ms-identifiers": []
              },
              "dnsServers": {
                "type": "array",
                "description": "IPv4 address of the DNS servers in your environment.",
                "items": {
                  "type": "string"
                }
              },
              "useDhcp": {
                "type": "boolean",
                "description": "Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required"
              }
            }
          },
          "x-ms-identifiers": []
        },
        "physicalNodes": {
          "type": "array",
          "description": "list of physical nodes config to deploy AzureStackHCI Cluster.",
          "items": {
            "type": "object",
            "description": "The PhysicalNodes of a cluster.",
            "properties": {
              "name": {
                "type": "string",
                "description": "NETBIOS name of each physical server on your Azure Stack HCI cluster."
              },
              "ipv4Address": {
                "type": "string",
                "description": "The IPv4 address assigned to each physical server on your Azure Stack HCI cluster."
              }
            }
          },
          "x-ms-identifiers": [
            "name"
          ]
        },
        "hostNetwork": {
          "description": "HostNetwork config to deploy AzureStackHCI Cluster.",
          "type": "object",
          "properties": {
            "intents": {
              "type": "array",
              "description": "The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.",
              "items": {
                "type": "object",
                "description": "The Intents of a cluster.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the network intent you wish to create."
                  },
                  "trafficType": {
                    "type": "array",
                    "description": "List of network traffic types. Only allowed values are 'Compute', 'Storage', 'Management'.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "adapter": {
                    "type": "array",
                    "description": "Array of network interfaces used for the network intent.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "overrideVirtualSwitchConfiguration": {
                    "type": "boolean",
                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                    "default": false
                  },
                  "virtualSwitchConfigurationOverrides": {
                    "description": "Set virtualSwitch ConfigurationOverrides for cluster.",
                    "type": "object",
                    "properties": {
                      "enableIov": {
                        "type": "string",
                        "description": "Enable IoV for Virtual Switch"
                      },
                      "loadBalancingAlgorithm": {
                        "type": "string",
                        "description": "Load Balancing Algorithm for Virtual Switch"
                      }
                    }
                  },
                  "overrideQosPolicy": {
                    "type": "boolean",
                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                    "default": false
                  },
                  "qosPolicyOverrides": {
                    "description": "Set QoS PolicyOverrides for cluster.",
                    "type": "object",
                    "properties": {
                      "priorityValue8021Action_Cluster": {
                        "type": "string",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                      },
                      "priorityValue8021Action_SMB": {
                        "type": "string",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                      },
                      "bandwidthPercentage_SMB": {
                        "type": "string",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                      }
                    }
                  },
                  "overrideAdapterProperty": {
                    "type": "boolean",
                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                    "default": false
                  },
                  "adapterPropertyOverrides": {
                    "description": "Set Adapter PropertyOverrides for cluster.",
                    "type": "object",
                    "properties": {
                      "jumboPacket": {
                        "type": "string",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                      },
                      "networkDirect": {
                        "type": "string",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                      },
                      "networkDirectTechnology": {
                        "type": "string",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'"
                      }
                    }
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "storageNetworks": {
              "type": "array",
              "description": "List of StorageNetworks config to deploy AzureStackHCI Cluster.",
              "items": {
                "type": "object",
                "description": "The StorageNetworks of a cluster.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the storage network."
                  },
                  "networkAdapterName": {
                    "type": "string",
                    "description": "Name of the storage network adapter."
                  },
                  "vlanId": {
                    "type": "string",
                    "description": "ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic. "
                  },
                  "storageAdapterIPInfo": {
                    "type": "array",
                    "description": "List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.",
                    "items": {
                      "type": "object",
                      "description": "The StorageAdapter physical nodes of a cluster.",
                      "properties": {
                        "physicalNode": {
                          "type": "string",
                          "description": "storage adapter physical node name."
                        },
                        "ipv4Address": {
                          "type": "string",
                          "description": "The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster."
                        },
                        "subnetMask": {
                          "type": "string",
                          "description": "The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster."
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "physicalNode"
                    ]
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "storageConnectivitySwitchless": {
              "type": "boolean",
              "description": "Defines how the storage adapters between nodes are connected either switch or switch less..",
              "default": false
            },
            "enableStorageAutoIp": {
              "type": "boolean",
              "description": "Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.",
              "default": false
            }
          }
        },
        "sdnIntegration": {
          "description": "SDN Integration config to deploy AzureStackHCI Cluster.",
          "type": "object",
          "properties": {
            "networkController": {
              "description": "network controller config for SDN Integration to deploy AzureStackHCI Cluster.",
              "type": "object",
              "properties": {
                "macAddressPoolStart": {
                  "type": "string",
                  "description": "macAddressPoolStart of network controller used for SDN Integration."
                },
                "macAddressPoolStop": {
                  "type": "string",
                  "description": "macAddressPoolStop of network controller used for SDN Integration."
                },
                "networkVirtualizationEnabled": {
                  "type": "boolean",
                  "description": "NetworkVirtualizationEnabled of network controller used for SDN Integration."
                }
              }
            }
          }
        },
        "adouPath": {
          "type": "string",
          "description": "The path to the Active Directory Organizational Unit container object prepared for the deployment. "
        },
        "secretsLocation": {
          "type": "string",
          "description": "Azure key vault endpoint. This property is deprecated from 2023-12-01-preview. Please use secrets property instead."
        },
        "secrets": {
          "type": "array",
          "description": "secrets used for cloud deployment.",
          "items": {
            "type": "object",
            "description": "Protected parameters list stored in keyvault.",
            "properties": {
              "secretName": {
                "type": "string",
                "description": "Secret name stored in keyvault."
              },
              "eceSecretName": {
                "description": "Secret name expected for Enterprise Cloud Engine (ECE) deployment.",
                "type": "string",
                "enum": [
                  "AzureStackLCMUserCredential",
                  "DefaultARBApplication",
                  "LocalAdminCredential",
                  "WitnessStorageKey"
                ],
                "x-ms-enum": {
                  "name": "EceSecrets",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "AzureStackLCMUserCredential",
                      "value": "AzureStackLCMUserCredential",
                      "description": "AzureStackLCMUserCredential used for LCM operations for AzureStackHCI cluster."
                    },
                    {
                      "name": "DefaultARBApplication",
                      "value": "DefaultARBApplication",
                      "description": "DefaultARBApplication used to manage Azure Arc resource bridge (ARB) for AzureStackHCI cluster."
                    },
                    {
                      "name": "LocalAdminCredential",
                      "value": "LocalAdminCredential",
                      "description": "LocalAdminCredential used for admin operations for AzureStackHCI cluster."
                    },
                    {
                      "name": "WitnessStorageKey",
                      "value": "WitnessStorageKey",
                      "description": "WitnessStorageKey used for setting up a cloud witness for AzureStackHCI cluster."
                    }
                  ]
                }
              },
              "secretLocation": {
                "type": "string",
                "format": "uri",
                "description": "Secret URI stored in keyvault."
              }
            }
          },
          "x-ms-identifiers": [
            "secretName"
          ]
        },
        "optionalServices": {
          "description": "OptionalServices config to deploy AzureStackHCI Cluster.",
          "type": "object",
          "properties": {
            "customLocation": {
              "type": "string",
              "description": "The name of custom location."
            }
          }
        },
        "localAvailabilityZones": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Local Availability Zone information for HCI cluster",
            "properties": {
              "localAvailabilityZoneName": {
                "type": "string",
                "description": "Local Availability Zone name for HCI cluster"
              },
              "nodes": {
                "type": "array",
                "description": "Nodes belonging to a particular zone",
                "items": {
                  "type": "string"
                },
                "x-ms-identifiers": []
              }
            }
          },
          "description": "Local Availability Zone information for HCI cluster",
          "x-ms-identifiers": [
            "localAvailabilityZoneName"
          ]
        },
        "assemblyInfo": {
          "description": "Assembly Package details for Validated Solution Recipe for AzureStackHCI Cluster",
          "type": "object",
          "properties": {
            "packageVersion": {
              "type": "string",
              "description": "Assembly Package version for Validated Solution Recipe for AzureStackHCI Cluster",
              "readOnly": true
            },
            "payload": {
              "type": "array",
              "description": "Payload properties for Validated Solution Recipe for AzureStackHCI Cluster",
              "items": {
                "type": "object",
                "description": "Payload properties for Validated Solution Recipe for AzureStackHCI Cluster",
                "properties": {
                  "identifier": {
                    "type": "string",
                    "description": "assembly identifier for Validated Solution Recipe for AzureStackHCI Cluster",
                    "readOnly": true
                  },
                  "hash": {
                    "type": "string",
                    "description": "Hash of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                    "readOnly": true
                  },
                  "fileName": {
                    "type": "string",
                    "description": "File name of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                    "readOnly": true
                  },
                  "url": {
                    "type": "string",
                    "description": "Url of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                    "readOnly": true
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "DeploymentSetting": {
      "type": "object",
      "description": "Edge device resource",
      "properties": {
        "properties": {
          "$ref": "#/definitions/DeploymentSettingsProperties",
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ]
        }
      },
      "allOf": [
        {
          "type": "object",
          "title": "Proxy Resource",
          "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            }
          }
        }
      ]
    },
    "DeploymentSettingListResult": {
      "type": "object",
      "description": "The response of a DeploymentSetting list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The DeploymentSetting items on this page",
          "items": {
            "$ref": "#/definitions/DeploymentSetting"
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "DeploymentSettingsProperties": {
      "type": "object",
      "description": "DeploymentSetting properties",
      "properties": {
        "provisioningState": {
          "description": "DeploymentSetting provisioning state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "NotSpecified",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The resource provision state is not specified"
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is being provisioned"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted"
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource create request has been accepted"
              }
            ]
          }
        },
        "arcNodeResourceIds": {
          "type": "array",
          "description": "Azure resource ids of Arc machines to be part of cluster.",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "deploymentMode": {
          "description": "The deployment mode for cluster deployment.",
          "type": "string",
          "enum": [
            "Validate",
            "Deploy"
          ],
          "default": "Deploy",
          "x-ms-enum": {
            "name": "DeploymentMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Validate",
                "value": "Validate",
                "description": "Validate ECE action deployment for a cluster."
              },
              {
                "name": "Deploy",
                "value": "Deploy",
                "description": "Deploy ECE action deployment for a cluster."
              }
            ]
          }
        },
        "operationType": {
          "type": "string",
          "description": "The intended operation for a cluster.",
          "enum": [
            "ClusterProvisioning",
            "ClusterUpgrade"
          ],
          "default": "ClusterProvisioning",
          "x-ms-enum": {
            "name": "OperationType",
            "modelAsString": true,
            "values": [
              {
                "name": "ClusterProvisioning",
                "value": "ClusterProvisioning",
                "description": "Cluster provisioning operation."
              },
              {
                "name": "ClusterUpgrade",
                "value": "ClusterUpgrade",
                "description": "Cluster upgrade operation."
              }
            ]
          }
        },
        "deploymentConfiguration": {
          "description": "Scale units will contains list of deployment data",
          "x-ms-identifiers": [],
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "description": "deployment template version "
            },
            "scaleUnits": {
              "type": "array",
              "description": "Scale units will contains list of deployment data",
              "items": {
                "type": "object",
                "description": "Scale units will contains list of deployment data",
                "properties": {
                  "deploymentData": {
                    "description": "Deployment Data to deploy AzureStackHCI Cluster.",
                    "type": "object",
                    "properties": {
                      "securitySettings": {
                        "description": "SecuritySettings to deploy AzureStackHCI Cluster.",
                        "type": "object",
                        "properties": {
                          "hvciProtection": {
                            "type": "boolean",
                            "description": "By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.",
                            "default": true
                          },
                          "drtmProtection": {
                            "type": "boolean",
                            "description": "By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.",
                            "default": true
                          },
                          "driftControlEnforced": {
                            "type": "boolean",
                            "description": "When set to true, the security baseline is re-applied regularly.",
                            "default": true
                          },
                          "credentialGuardEnforced": {
                            "type": "boolean",
                            "description": "When set to true, Credential Guard is enabled.",
                            "default": false
                          },
                          "smbSigningEnforced": {
                            "type": "boolean",
                            "description": "When set to true, the SMB default instance requires sign in for the client and server services.",
                            "default": true
                          },
                          "smbClusterEncryption": {
                            "type": "boolean",
                            "description": "When set to true, cluster east-west traffic is encrypted.",
                            "default": false
                          },
                          "sideChannelMitigationEnforced": {
                            "type": "boolean",
                            "description": "When set to true, all the side channel mitigations are enabled",
                            "default": true
                          },
                          "bitlockerBootVolume": {
                            "type": "boolean",
                            "description": "When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent. ",
                            "default": true
                          },
                          "bitlockerDataVolumes": {
                            "type": "boolean",
                            "description": "When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.",
                            "default": true
                          },
                          "wdacEnforced": {
                            "type": "boolean",
                            "description": "WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.",
                            "default": true
                          }
                        }
                      },
                      "observability": {
                        "description": "Observability config to deploy AzureStackHCI Cluster.",
                        "type": "object",
                        "properties": {
                          "streamingDataClient": {
                            "type": "boolean",
                            "description": "Enables telemetry data to be sent to Microsoft",
                            "default": true
                          },
                          "euLocation": {
                            "type": "boolean",
                            "description": "Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.",
                            "default": false
                          },
                          "episodicDataUpload": {
                            "type": "boolean",
                            "description": "When set to true, collects log data to facilitate quicker issue resolution.",
                            "default": true
                          }
                        }
                      },
                      "cluster": {
                        "description": "Observability config to deploy AzureStackHCI Cluster.",
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The cluster name provided when preparing Active Directory."
                          },
                          "witnessType": {
                            "type": "string",
                            "description": "Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'. "
                          },
                          "witnessPath": {
                            "type": "string",
                            "description": "Specify the fileshare path for the local witness for your Azure Stack HCI cluster."
                          },
                          "cloudAccountName": {
                            "type": "string",
                            "description": "Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster."
                          },
                          "azureServiceEndpoint": {
                            "type": "string",
                            "description": "For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net."
                          },
                          "hardwareClass": {
                            "description": "Hardware class of the cluster.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Small",
                              "Medium",
                              "Large"
                            ],
                            "default": "Medium",
                            "x-ms-enum": {
                              "name": "HardwareClass",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Small",
                                  "value": "Small",
                                  "description": "The hardware class is small."
                                },
                                {
                                  "name": "Medium",
                                  "value": "Medium",
                                  "description": "The hardware class is medium. This corresponds to the default"
                                },
                                {
                                  "name": "Large",
                                  "value": "Large",
                                  "description": "The hardware class is large."
                                }
                              ]
                            }
                          },
                          "clusterPattern": {
                            "description": "Cluster Pattern supported.",
                            "type": "string",
                            "enum": [
                              "Standard",
                              "RackAware"
                            ],
                            "x-ms-enum": {
                              "name": "ClusterPattern",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Standard",
                                  "value": "Standard",
                                  "description": "Standard cluster."
                                },
                                {
                                  "name": "RackAware",
                                  "value": "RackAware",
                                  "description": "RackAware cluster."
                                }
                              ]
                            }
                          }
                        }
                      },
                      "storage": {
                        "description": "Storage config to deploy AzureStackHCI Cluster.",
                        "type": "object",
                        "properties": {
                          "configurationMode": {
                            "type": "string",
                            "description": "By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'",
                            "default": "Express"
                          }
                        }
                      },
                      "namingPrefix": {
                        "type": "string",
                        "description": "naming prefix to deploy cluster.",
                        "pattern": "^[a-zA-Z0-9-]{1,8}$"
                      },
                      "domainFqdn": {
                        "type": "string",
                        "description": "FQDN to deploy cluster"
                      },
                      "infrastructureNetwork": {
                        "type": "array",
                        "description": "InfrastructureNetwork config to deploy AzureStackHCI Cluster.",
                        "items": {
                          "type": "object",
                          "description": "The InfrastructureNetwork of a AzureStackHCI Cluster.",
                          "properties": {
                            "subnetMask": {
                              "type": "string",
                              "description": "Subnet mask that matches the provided IP address space."
                            },
                            "gateway": {
                              "type": "string",
                              "description": "Default gateway that should be used for the provided IP address space."
                            },
                            "ipPools": {
                              "type": "array",
                              "description": "Range of IP addresses from which addresses are allocated for nodes within a subnet.",
                              "items": {
                                "type": "object",
                                "description": "The dnsServers of a device.",
                                "properties": {
                                  "startingAddress": {
                                    "type": "string",
                                    "description": "Starting IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
                                  },
                                  "endingAddress": {
                                    "type": "string",
                                    "description": "Ending IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
                                  }
                                }
                              },
                              "x-ms-identifiers": []
                            },
                            "dnsServers": {
                              "type": "array",
                              "description": "IPv4 address of the DNS servers in your environment.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "useDhcp": {
                              "type": "boolean",
                              "description": "Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required"
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      },
                      "physicalNodes": {
                        "type": "array",
                        "description": "list of physical nodes config to deploy AzureStackHCI Cluster.",
                        "items": {
                          "type": "object",
                          "description": "The PhysicalNodes of a cluster.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "NETBIOS name of each physical server on your Azure Stack HCI cluster."
                            },
                            "ipv4Address": {
                              "type": "string",
                              "description": "The IPv4 address assigned to each physical server on your Azure Stack HCI cluster."
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "name"
                        ]
                      },
                      "hostNetwork": {
                        "description": "HostNetwork config to deploy AzureStackHCI Cluster.",
                        "type": "object",
                        "properties": {
                          "intents": {
                            "type": "array",
                            "description": "The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.",
                            "items": {
                              "type": "object",
                              "description": "The Intents of a cluster.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the network intent you wish to create."
                                },
                                "trafficType": {
                                  "type": "array",
                                  "description": "List of network traffic types. Only allowed values are 'Compute', 'Storage', 'Management'.",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "adapter": {
                                  "type": "array",
                                  "description": "Array of network interfaces used for the network intent.",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "overrideVirtualSwitchConfiguration": {
                                  "type": "boolean",
                                  "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                                  "default": false
                                },
                                "virtualSwitchConfigurationOverrides": {
                                  "description": "Set virtualSwitch ConfigurationOverrides for cluster.",
                                  "type": "object",
                                  "properties": {
                                    "enableIov": {
                                      "type": "string",
                                      "description": "Enable IoV for Virtual Switch"
                                    },
                                    "loadBalancingAlgorithm": {
                                      "type": "string",
                                      "description": "Load Balancing Algorithm for Virtual Switch"
                                    }
                                  }
                                },
                                "overrideQosPolicy": {
                                  "type": "boolean",
                                  "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                                  "default": false
                                },
                                "qosPolicyOverrides": {
                                  "description": "Set QoS PolicyOverrides for cluster.",
                                  "type": "object",
                                  "properties": {
                                    "priorityValue8021Action_Cluster": {
                                      "type": "string",
                                      "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                                    },
                                    "priorityValue8021Action_SMB": {
                                      "type": "string",
                                      "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                                    },
                                    "bandwidthPercentage_SMB": {
                                      "type": "string",
                                      "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                                    }
                                  }
                                },
                                "overrideAdapterProperty": {
                                  "type": "boolean",
                                  "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                                  "default": false
                                },
                                "adapterPropertyOverrides": {
                                  "description": "Set Adapter PropertyOverrides for cluster.",
                                  "type": "object",
                                  "properties": {
                                    "jumboPacket": {
                                      "type": "string",
                                      "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                                    },
                                    "networkDirect": {
                                      "type": "string",
                                      "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                                    },
                                    "networkDirectTechnology": {
                                      "type": "string",
                                      "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'"
                                    }
                                  }
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "storageNetworks": {
                            "type": "array",
                            "description": "List of StorageNetworks config to deploy AzureStackHCI Cluster.",
                            "items": {
                              "type": "object",
                              "description": "The StorageNetworks of a cluster.",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the storage network."
                                },
                                "networkAdapterName": {
                                  "type": "string",
                                  "description": "Name of the storage network adapter."
                                },
                                "vlanId": {
                                  "type": "string",
                                  "description": "ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic. "
                                },
                                "storageAdapterIPInfo": {
                                  "type": "array",
                                  "description": "List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.",
                                  "items": {
                                    "type": "object",
                                    "description": "The StorageAdapter physical nodes of a cluster.",
                                    "properties": {
                                      "physicalNode": {
                                        "type": "string",
                                        "description": "storage adapter physical node name."
                                      },
                                      "ipv4Address": {
                                        "type": "string",
                                        "description": "The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster."
                                      },
                                      "subnetMask": {
                                        "type": "string",
                                        "description": "The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster."
                                      }
                                    }
                                  },
                                  "x-ms-identifiers": [
                                    "physicalNode"
                                  ]
                                }
                              }
                            },
                            "x-ms-identifiers": [
                              "name"
                            ]
                          },
                          "storageConnectivitySwitchless": {
                            "type": "boolean",
                            "description": "Defines how the storage adapters between nodes are connected either switch or switch less..",
                            "default": false
                          },
                          "enableStorageAutoIp": {
                            "type": "boolean",
                            "description": "Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.",
                            "default": false
                          }
                        }
                      },
                      "sdnIntegration": {
                        "description": "SDN Integration config to deploy AzureStackHCI Cluster.",
                        "type": "object",
                        "properties": {
                          "networkController": {
                            "description": "network controller config for SDN Integration to deploy AzureStackHCI Cluster.",
                            "type": "object",
                            "properties": {
                              "macAddressPoolStart": {
                                "type": "string",
                                "description": "macAddressPoolStart of network controller used for SDN Integration."
                              },
                              "macAddressPoolStop": {
                                "type": "string",
                                "description": "macAddressPoolStop of network controller used for SDN Integration."
                              },
                              "networkVirtualizationEnabled": {
                                "type": "boolean",
                                "description": "NetworkVirtualizationEnabled of network controller used for SDN Integration."
                              }
                            }
                          }
                        }
                      },
                      "adouPath": {
                        "type": "string",
                        "description": "The path to the Active Directory Organizational Unit container object prepared for the deployment. "
                      },
                      "secretsLocation": {
                        "type": "string",
                        "description": "Azure key vault endpoint. This property is deprecated from 2023-12-01-preview. Please use secrets property instead."
                      },
                      "secrets": {
                        "type": "array",
                        "description": "secrets used for cloud deployment.",
                        "items": {
                          "type": "object",
                          "description": "Protected parameters list stored in keyvault.",
                          "properties": {
                            "secretName": {
                              "type": "string",
                              "description": "Secret name stored in keyvault."
                            },
                            "eceSecretName": {
                              "description": "Secret name expected for Enterprise Cloud Engine (ECE) deployment.",
                              "type": "string",
                              "enum": [
                                "AzureStackLCMUserCredential",
                                "DefaultARBApplication",
                                "LocalAdminCredential",
                                "WitnessStorageKey"
                              ],
                              "x-ms-enum": {
                                "name": "EceSecrets",
                                "modelAsString": true,
                                "values": [
                                  {
                                    "name": "AzureStackLCMUserCredential",
                                    "value": "AzureStackLCMUserCredential",
                                    "description": "AzureStackLCMUserCredential used for LCM operations for AzureStackHCI cluster."
                                  },
                                  {
                                    "name": "DefaultARBApplication",
                                    "value": "DefaultARBApplication",
                                    "description": "DefaultARBApplication used to manage Azure Arc resource bridge (ARB) for AzureStackHCI cluster."
                                  },
                                  {
                                    "name": "LocalAdminCredential",
                                    "value": "LocalAdminCredential",
                                    "description": "LocalAdminCredential used for admin operations for AzureStackHCI cluster."
                                  },
                                  {
                                    "name": "WitnessStorageKey",
                                    "value": "WitnessStorageKey",
                                    "description": "WitnessStorageKey used for setting up a cloud witness for AzureStackHCI cluster."
                                  }
                                ]
                              }
                            },
                            "secretLocation": {
                              "type": "string",
                              "format": "uri",
                              "description": "Secret URI stored in keyvault."
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "secretName"
                        ]
                      },
                      "optionalServices": {
                        "description": "OptionalServices config to deploy AzureStackHCI Cluster.",
                        "type": "object",
                        "properties": {
                          "customLocation": {
                            "type": "string",
                            "description": "The name of custom location."
                          }
                        }
                      },
                      "localAvailabilityZones": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "Local Availability Zone information for HCI cluster",
                          "properties": {
                            "localAvailabilityZoneName": {
                              "type": "string",
                              "description": "Local Availability Zone name for HCI cluster"
                            },
                            "nodes": {
                              "type": "array",
                              "description": "Nodes belonging to a particular zone",
                              "items": {
                                "type": "string"
                              },
                              "x-ms-identifiers": []
                            }
                          }
                        },
                        "description": "Local Availability Zone information for HCI cluster",
                        "x-ms-identifiers": [
                          "localAvailabilityZoneName"
                        ]
                      },
                      "assemblyInfo": {
                        "description": "Assembly Package details for Validated Solution Recipe for AzureStackHCI Cluster",
                        "type": "object",
                        "properties": {
                          "packageVersion": {
                            "type": "string",
                            "description": "Assembly Package version for Validated Solution Recipe for AzureStackHCI Cluster",
                            "readOnly": true
                          },
                          "payload": {
                            "type": "array",
                            "description": "Payload properties for Validated Solution Recipe for AzureStackHCI Cluster",
                            "items": {
                              "type": "object",
                              "description": "Payload properties for Validated Solution Recipe for AzureStackHCI Cluster",
                              "properties": {
                                "identifier": {
                                  "type": "string",
                                  "description": "assembly identifier for Validated Solution Recipe for AzureStackHCI Cluster",
                                  "readOnly": true
                                },
                                "hash": {
                                  "type": "string",
                                  "description": "Hash of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                                  "readOnly": true
                                },
                                "fileName": {
                                  "type": "string",
                                  "description": "File name of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                                  "readOnly": true
                                },
                                "url": {
                                  "type": "string",
                                  "description": "Url of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          }
                        }
                      }
                    }
                  },
                  "sbePartnerInfo": {
                    "description": "Solution builder extension (SBE) partner properties",
                    "type": "object",
                    "properties": {
                      "sbeDeploymentInfo": {
                        "description": "SBE package and manifest information for the solution Builder Extension staged for AzureStackHCI cluster deployment.",
                        "type": "object",
                        "properties": {
                          "version": {
                            "type": "string",
                            "description": "SBE package version."
                          },
                          "family": {
                            "type": "string",
                            "description": "SBE family name."
                          },
                          "publisher": {
                            "type": "string",
                            "description": "SBE manifest publisher."
                          },
                          "sbeManifestSource": {
                            "type": "string",
                            "description": "SBE Manifest Source."
                          },
                          "sbeManifestCreationDate": {
                            "type": "string",
                            "format": "date-time",
                            "description": "SBE Manifest Creation Date."
                          }
                        }
                      },
                      "partnerProperties": {
                        "type": "array",
                        "description": "List of SBE partner properties for AzureStackHCI cluster deployment.",
                        "items": {
                          "type": "object",
                          "description": "Solution builder extension (SBE) partner properties object.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "SBE partner property name."
                            },
                            "value": {
                              "type": "string",
                              "description": "SBE partner property value."
                            }
                          }
                        },
                        "x-ms-identifiers": []
                      },
                      "credentialList": {
                        "type": "array",
                        "description": "SBE credentials list for AzureStackHCI cluster deployment.",
                        "items": {
                          "type": "object",
                          "description": "secrets used for solution builder extension (SBE) partner extensibility.",
                          "properties": {
                            "secretName": {
                              "type": "string",
                              "description": "secret name stored in keyvault."
                            },
                            "eceSecretName": {
                              "type": "string",
                              "description": "secret name expected for Enterprise Cloud Engine (ECE)."
                            },
                            "secretLocation": {
                              "type": "string",
                              "format": "uri",
                              "description": "secret URI stored in keyvault."
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "secretName"
                        ]
                      }
                    }
                  }
                },
                "required": [
                  "deploymentData"
                ],
                "externalDocs": {
                  "description": "Deploy Azure Stack HCI using an existing configuration file",
                  "url": "https://learn.microsoft.com/en-us/azure-stack/hci/deploy/deployment-tool-existing-file"
                }
              },
              "x-ms-identifiers": []
            }
          },
          "required": [
            "scaleUnits"
          ]
        },
        "reportedProperties": {
          "$ref": "./hciCommon.json#/definitions/EceReportedProperties",
          "description": "Deployment Status reported from cluster.",
          "readOnly": true
        }
      },
      "required": [
        "arcNodeResourceIds",
        "deploymentMode",
        "deploymentConfiguration"
      ]
    },
    "HostNetwork": {
      "type": "object",
      "description": "The HostNetwork of a cluster.",
      "properties": {
        "intents": {
          "type": "array",
          "description": "The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.",
          "items": {
            "type": "object",
            "description": "The Intents of a cluster.",
            "properties": {
              "scope": {
                "type": "integer",
                "format": "int64",
                "description": "Scope for host network intent.",
                "readOnly": true
              },
              "intentType": {
                "type": "integer",
                "format": "int64",
                "description": "IntentType for host network intent.",
                "readOnly": true
              },
              "isComputeIntentSet": {
                "type": "boolean",
                "description": "IsComputeIntentSet for host network intent.",
                "readOnly": true
              },
              "isStorageIntentSet": {
                "type": "boolean",
                "description": "IsStorageIntentSet for host network intent.",
                "readOnly": true
              },
              "isOnlyStorage": {
                "type": "boolean",
                "description": "IntentType for host network intent.",
                "readOnly": true
              },
              "isManagementIntentSet": {
                "type": "boolean",
                "description": "IsManagementIntentSet for host network intent.",
                "readOnly": true
              },
              "isStretchIntentSet": {
                "type": "boolean",
                "description": "IsStretchIntentSet for host network intent.",
                "readOnly": true
              },
              "isOnlyStretch": {
                "type": "boolean",
                "description": "IsOnlyStretch for host network intent.",
                "readOnly": true
              },
              "isNetworkIntentType": {
                "type": "boolean",
                "description": "IsNetworkIntentType for host network intent.",
                "readOnly": true
              },
              "intentName": {
                "type": "string",
                "description": "Name of the network intent you wish to create.",
                "readOnly": true
              },
              "intentAdapters": {
                "type": "array",
                "description": "Array of adapters used for the network intent.",
                "items": {
                  "type": "string"
                },
                "readOnly": true
              },
              "overrideVirtualSwitchConfiguration": {
                "type": "boolean",
                "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                "readOnly": true
              },
              "virtualSwitchConfigurationOverrides": {
                "description": "Set virtualSwitch ConfigurationOverrides for cluster.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "enableIov": {
                    "type": "string",
                    "description": "Enable IoV for Virtual Switch",
                    "readOnly": true
                  },
                  "loadBalancingAlgorithm": {
                    "type": "string",
                    "description": "Load Balancing Algorithm for Virtual Switch",
                    "readOnly": true
                  }
                }
              },
              "overrideQosPolicy": {
                "type": "boolean",
                "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                "readOnly": true
              },
              "qosPolicyOverrides": {
                "description": "Set QoS PolicyOverrides for cluster.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "priorityValue8021Action_Cluster": {
                    "type": "string",
                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                  },
                  "priorityValue8021Action_SMB": {
                    "type": "string",
                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                  },
                  "bandwidthPercentage_SMB": {
                    "type": "string",
                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                  }
                }
              },
              "overrideAdapterProperty": {
                "type": "boolean",
                "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                "readOnly": true
              },
              "adapterPropertyOverrides": {
                "description": "Set Adapter PropertyOverrides for cluster.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "jumboPacket": {
                    "type": "string",
                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                    "readOnly": true
                  },
                  "networkDirect": {
                    "type": "string",
                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                    "readOnly": true
                  },
                  "networkDirectTechnology": {
                    "type": "string",
                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "intentName"
          ]
        },
        "storageNetworks": {
          "type": "array",
          "description": "List of StorageNetworks config to deploy AzureStackHCI Cluster.",
          "items": {
            "type": "object",
            "description": "The StorageNetworks of a cluster.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the storage network.",
                "readOnly": true
              },
              "networkAdapterName": {
                "type": "string",
                "description": "Name of the storage network adapter.",
                "readOnly": true
              },
              "storageVlanId": {
                "type": "string",
                "description": "ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic. ",
                "readOnly": true
              },
              "storageAdapterIPInfo": {
                "type": "array",
                "description": "List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.",
                "items": {
                  "type": "object",
                  "description": "The StorageAdapter physical nodes of a cluster.",
                  "properties": {
                    "physicalNode": {
                      "type": "string",
                      "description": "storage adapter physical node name.",
                      "readOnly": true
                    },
                    "ipv4Address": {
                      "type": "string",
                      "description": "The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
                      "readOnly": true
                    },
                    "subnetMask": {
                      "type": "string",
                      "description": "The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": [
                  "physicalNode"
                ]
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "networkAdapterName"
          ]
        },
        "storageConnectivitySwitchless": {
          "type": "boolean",
          "description": "Defines how the storage adapters between nodes are connected either switch or switch less.",
          "readOnly": true
        },
        "enableStorageAutoIp": {
          "type": "boolean",
          "description": "Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.",
          "readOnly": true
        }
      }
    },
    "InfrastructureNetwork": {
      "type": "object",
      "description": "The InfrastructureNetwork of a AzureStackHCI Cluster.",
      "properties": {
        "subnetMask": {
          "type": "string",
          "description": "Subnet mask that matches the provided IP address space."
        },
        "gateway": {
          "type": "string",
          "description": "Default gateway that should be used for the provided IP address space."
        },
        "ipPools": {
          "type": "array",
          "description": "Range of IP addresses from which addresses are allocated for nodes within a subnet.",
          "items": {
            "type": "object",
            "description": "The dnsServers of a device.",
            "properties": {
              "startingAddress": {
                "type": "string",
                "description": "Starting IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
              },
              "endingAddress": {
                "type": "string",
                "description": "Ending IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
              }
            }
          },
          "x-ms-identifiers": []
        },
        "dnsServers": {
          "type": "array",
          "description": "IPv4 address of the DNS servers in your environment.",
          "items": {
            "type": "string"
          }
        },
        "useDhcp": {
          "type": "boolean",
          "description": "Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required"
        }
      }
    },
    "Intents": {
      "type": "object",
      "description": "The Intents of a cluster.",
      "properties": {
        "scope": {
          "type": "integer",
          "format": "int64",
          "description": "Scope for host network intent.",
          "readOnly": true
        },
        "intentType": {
          "type": "integer",
          "format": "int64",
          "description": "IntentType for host network intent.",
          "readOnly": true
        },
        "isComputeIntentSet": {
          "type": "boolean",
          "description": "IsComputeIntentSet for host network intent.",
          "readOnly": true
        },
        "isStorageIntentSet": {
          "type": "boolean",
          "description": "IsStorageIntentSet for host network intent.",
          "readOnly": true
        },
        "isOnlyStorage": {
          "type": "boolean",
          "description": "IntentType for host network intent.",
          "readOnly": true
        },
        "isManagementIntentSet": {
          "type": "boolean",
          "description": "IsManagementIntentSet for host network intent.",
          "readOnly": true
        },
        "isStretchIntentSet": {
          "type": "boolean",
          "description": "IsStretchIntentSet for host network intent.",
          "readOnly": true
        },
        "isOnlyStretch": {
          "type": "boolean",
          "description": "IsOnlyStretch for host network intent.",
          "readOnly": true
        },
        "isNetworkIntentType": {
          "type": "boolean",
          "description": "IsNetworkIntentType for host network intent.",
          "readOnly": true
        },
        "intentName": {
          "type": "string",
          "description": "Name of the network intent you wish to create.",
          "readOnly": true
        },
        "intentAdapters": {
          "type": "array",
          "description": "Array of adapters used for the network intent.",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "overrideVirtualSwitchConfiguration": {
          "type": "boolean",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
          "readOnly": true
        },
        "virtualSwitchConfigurationOverrides": {
          "description": "Set virtualSwitch ConfigurationOverrides for cluster.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "enableIov": {
              "type": "string",
              "description": "Enable IoV for Virtual Switch",
              "readOnly": true
            },
            "loadBalancingAlgorithm": {
              "type": "string",
              "description": "Load Balancing Algorithm for Virtual Switch",
              "readOnly": true
            }
          }
        },
        "overrideQosPolicy": {
          "type": "boolean",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
          "readOnly": true
        },
        "qosPolicyOverrides": {
          "description": "Set QoS PolicyOverrides for cluster.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "priorityValue8021Action_Cluster": {
              "type": "string",
              "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
            },
            "priorityValue8021Action_SMB": {
              "type": "string",
              "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
            },
            "bandwidthPercentage_SMB": {
              "type": "string",
              "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
            }
          }
        },
        "overrideAdapterProperty": {
          "type": "boolean",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
          "readOnly": true
        },
        "adapterPropertyOverrides": {
          "description": "Set Adapter PropertyOverrides for cluster.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "jumboPacket": {
              "type": "string",
              "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
              "readOnly": true
            },
            "networkDirect": {
              "type": "string",
              "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
              "readOnly": true
            },
            "networkDirectTechnology": {
              "type": "string",
              "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'",
              "readOnly": true
            }
          }
        }
      }
    },
    "IpPools": {
      "type": "object",
      "description": "The dnsServers of a device.",
      "properties": {
        "startingAddress": {
          "type": "string",
          "description": "Starting IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
        },
        "endingAddress": {
          "type": "string",
          "description": "Ending IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
        }
      }
    },
    "NetworkController": {
      "type": "object",
      "description": "network controller config for SDN Integration to deploy AzureStackHCI Cluster.",
      "properties": {
        "macAddressPoolStart": {
          "type": "string",
          "description": "macAddressPoolStart of network controller used for SDN Integration."
        },
        "macAddressPoolStop": {
          "type": "string",
          "description": "macAddressPoolStop of network controller used for SDN Integration."
        },
        "networkVirtualizationEnabled": {
          "type": "boolean",
          "description": "NetworkVirtualizationEnabled of network controller used for SDN Integration."
        }
      }
    },
    "Observability": {
      "type": "object",
      "description": "The Observability of AzureStackHCI Cluster.",
      "properties": {
        "streamingDataClient": {
          "type": "boolean",
          "description": "Enables telemetry data to be sent to Microsoft",
          "default": true
        },
        "euLocation": {
          "type": "boolean",
          "description": "Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.",
          "default": false
        },
        "episodicDataUpload": {
          "type": "boolean",
          "description": "When set to true, collects log data to facilitate quicker issue resolution.",
          "default": true
        }
      }
    },
    "OptionalServices": {
      "type": "object",
      "description": "The OptionalServices of AzureStackHCI Cluster.",
      "properties": {
        "customLocation": {
          "type": "string",
          "description": "The name of custom location."
        }
      }
    },
    "AssemblyInfo": {
      "type": "object",
      "description": "Assembly Package details for Validated Solution Recipe for AzureStackHCI Cluster",
      "properties": {
        "packageVersion": {
          "type": "string",
          "description": "Assembly Package version for Validated Solution Recipe for AzureStackHCI Cluster",
          "readOnly": true
        },
        "payload": {
          "type": "array",
          "description": "Payload properties for Validated Solution Recipe for AzureStackHCI Cluster",
          "items": {
            "type": "object",
            "description": "Payload properties for Validated Solution Recipe for AzureStackHCI Cluster",
            "properties": {
              "identifier": {
                "type": "string",
                "description": "assembly identifier for Validated Solution Recipe for AzureStackHCI Cluster",
                "readOnly": true
              },
              "hash": {
                "type": "string",
                "description": "Hash of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                "readOnly": true
              },
              "fileName": {
                "type": "string",
                "description": "File name of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                "readOnly": true
              },
              "url": {
                "type": "string",
                "description": "Url of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": []
        }
      }
    },
    "AssemblyInfoPayload": {
      "type": "object",
      "description": "Payload properties for Validated Solution Recipe for AzureStackHCI Cluster",
      "properties": {
        "identifier": {
          "type": "string",
          "description": "assembly identifier for Validated Solution Recipe for AzureStackHCI Cluster",
          "readOnly": true
        },
        "hash": {
          "type": "string",
          "description": "Hash of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
          "readOnly": true
        },
        "fileName": {
          "type": "string",
          "description": "File name of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
          "readOnly": true
        },
        "url": {
          "type": "string",
          "description": "Url of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
          "readOnly": true
        }
      }
    },
    "PhysicalNodes": {
      "type": "object",
      "description": "The PhysicalNodes of a cluster.",
      "properties": {
        "name": {
          "type": "string",
          "description": "NETBIOS name of each physical server on your Azure Stack HCI cluster."
        },
        "ipv4Address": {
          "type": "string",
          "description": "The IPv4 address assigned to each physical server on your Azure Stack HCI cluster."
        }
      }
    },
    "QosPolicyOverrides": {
      "type": "object",
      "description": "The QoSPolicyOverrides of a cluster.",
      "properties": {
        "priorityValue8021Action_Cluster": {
          "type": "string",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
        },
        "priorityValue8021Action_SMB": {
          "type": "string",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
        },
        "bandwidthPercentage_SMB": {
          "type": "string",
          "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
        }
      }
    },
    "SbePartnerInfo": {
      "type": "object",
      "description": "The solution builder extension (SBE) partner deployment info for cluster.",
      "properties": {
        "sbeDeploymentInfo": {
          "description": "SBE package and manifest information for the solution Builder Extension staged for AzureStackHCI cluster deployment.",
          "type": "object",
          "properties": {
            "version": {
              "type": "string",
              "description": "SBE package version."
            },
            "family": {
              "type": "string",
              "description": "SBE family name."
            },
            "publisher": {
              "type": "string",
              "description": "SBE manifest publisher."
            },
            "sbeManifestSource": {
              "type": "string",
              "description": "SBE Manifest Source."
            },
            "sbeManifestCreationDate": {
              "type": "string",
              "format": "date-time",
              "description": "SBE Manifest Creation Date."
            }
          }
        },
        "partnerProperties": {
          "type": "array",
          "description": "List of SBE partner properties for AzureStackHCI cluster deployment.",
          "items": {
            "type": "object",
            "description": "Solution builder extension (SBE) partner properties object.",
            "properties": {
              "name": {
                "type": "string",
                "description": "SBE partner property name."
              },
              "value": {
                "type": "string",
                "description": "SBE partner property value."
              }
            }
          },
          "x-ms-identifiers": []
        },
        "credentialList": {
          "type": "array",
          "description": "SBE credentials list for AzureStackHCI cluster deployment.",
          "items": {
            "type": "object",
            "description": "secrets used for solution builder extension (SBE) partner extensibility.",
            "properties": {
              "secretName": {
                "type": "string",
                "description": "secret name stored in keyvault."
              },
              "eceSecretName": {
                "type": "string",
                "description": "secret name expected for Enterprise Cloud Engine (ECE)."
              },
              "secretLocation": {
                "type": "string",
                "format": "uri",
                "description": "secret URI stored in keyvault."
              }
            }
          },
          "x-ms-identifiers": [
            "secretName"
          ]
        }
      }
    },
    "SbeDeploymentInfo": {
      "type": "object",
      "description": "Solution builder extension (SBE) package and manifest information for the solution builder extension staged for AzureStackHCI cluster deployment.",
      "properties": {
        "version": {
          "type": "string",
          "description": "SBE package version."
        },
        "family": {
          "type": "string",
          "description": "SBE family name."
        },
        "publisher": {
          "type": "string",
          "description": "SBE manifest publisher."
        },
        "sbeManifestSource": {
          "type": "string",
          "description": "SBE Manifest Source."
        },
        "sbeManifestCreationDate": {
          "type": "string",
          "format": "date-time",
          "description": "SBE Manifest Creation Date."
        }
      }
    },
    "SbePartnerProperties": {
      "type": "object",
      "description": "Solution builder extension (SBE) partner properties object.",
      "properties": {
        "name": {
          "type": "string",
          "description": "SBE partner property name."
        },
        "value": {
          "type": "string",
          "description": "SBE partner property value."
        }
      }
    },
    "SbeCredentials": {
      "type": "object",
      "description": "secrets used for solution builder extension (SBE) partner extensibility.",
      "properties": {
        "secretName": {
          "type": "string",
          "description": "secret name stored in keyvault."
        },
        "eceSecretName": {
          "type": "string",
          "description": "secret name expected for Enterprise Cloud Engine (ECE)."
        },
        "secretLocation": {
          "type": "string",
          "format": "uri",
          "description": "secret URI stored in keyvault."
        }
      }
    },
    "ScaleUnits": {
      "type": "object",
      "description": "Scale units will contains list of deployment data",
      "properties": {
        "deploymentData": {
          "description": "Deployment Data to deploy AzureStackHCI Cluster.",
          "type": "object",
          "properties": {
            "securitySettings": {
              "description": "SecuritySettings to deploy AzureStackHCI Cluster.",
              "type": "object",
              "properties": {
                "hvciProtection": {
                  "type": "boolean",
                  "description": "By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.",
                  "default": true
                },
                "drtmProtection": {
                  "type": "boolean",
                  "description": "By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.",
                  "default": true
                },
                "driftControlEnforced": {
                  "type": "boolean",
                  "description": "When set to true, the security baseline is re-applied regularly.",
                  "default": true
                },
                "credentialGuardEnforced": {
                  "type": "boolean",
                  "description": "When set to true, Credential Guard is enabled.",
                  "default": false
                },
                "smbSigningEnforced": {
                  "type": "boolean",
                  "description": "When set to true, the SMB default instance requires sign in for the client and server services.",
                  "default": true
                },
                "smbClusterEncryption": {
                  "type": "boolean",
                  "description": "When set to true, cluster east-west traffic is encrypted.",
                  "default": false
                },
                "sideChannelMitigationEnforced": {
                  "type": "boolean",
                  "description": "When set to true, all the side channel mitigations are enabled",
                  "default": true
                },
                "bitlockerBootVolume": {
                  "type": "boolean",
                  "description": "When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent. ",
                  "default": true
                },
                "bitlockerDataVolumes": {
                  "type": "boolean",
                  "description": "When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.",
                  "default": true
                },
                "wdacEnforced": {
                  "type": "boolean",
                  "description": "WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.",
                  "default": true
                }
              }
            },
            "observability": {
              "description": "Observability config to deploy AzureStackHCI Cluster.",
              "type": "object",
              "properties": {
                "streamingDataClient": {
                  "type": "boolean",
                  "description": "Enables telemetry data to be sent to Microsoft",
                  "default": true
                },
                "euLocation": {
                  "type": "boolean",
                  "description": "Location of your cluster. The log and diagnostic data is sent to the appropriate diagnostics servers depending upon where your cluster resides. Setting this to false results in all data sent to Microsoft to be stored outside of the EU.",
                  "default": false
                },
                "episodicDataUpload": {
                  "type": "boolean",
                  "description": "When set to true, collects log data to facilitate quicker issue resolution.",
                  "default": true
                }
              }
            },
            "cluster": {
              "description": "Observability config to deploy AzureStackHCI Cluster.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The cluster name provided when preparing Active Directory."
                },
                "witnessType": {
                  "type": "string",
                  "description": "Use a cloud witness if you have internet access and if you use an Azure Storage account to provide a vote on cluster quorum. A cloud witness uses Azure Blob Storage to read or write a blob file and then uses it to arbitrate in split-brain resolution. Only allowed values are 'Cloud', 'FileShare'. "
                },
                "witnessPath": {
                  "type": "string",
                  "description": "Specify the fileshare path for the local witness for your Azure Stack HCI cluster."
                },
                "cloudAccountName": {
                  "type": "string",
                  "description": "Specify the Azure Storage account name for cloud witness for your Azure Stack HCI cluster."
                },
                "azureServiceEndpoint": {
                  "type": "string",
                  "description": "For Azure blob service endpoint type, select either Default or Custom domain. If you selected **Custom domain, enter the domain for the blob service in this format core.windows.net."
                },
                "hardwareClass": {
                  "description": "Hardware class of the cluster.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Small",
                    "Medium",
                    "Large"
                  ],
                  "default": "Medium",
                  "x-ms-enum": {
                    "name": "HardwareClass",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Small",
                        "value": "Small",
                        "description": "The hardware class is small."
                      },
                      {
                        "name": "Medium",
                        "value": "Medium",
                        "description": "The hardware class is medium. This corresponds to the default"
                      },
                      {
                        "name": "Large",
                        "value": "Large",
                        "description": "The hardware class is large."
                      }
                    ]
                  }
                },
                "clusterPattern": {
                  "description": "Cluster Pattern supported.",
                  "type": "string",
                  "enum": [
                    "Standard",
                    "RackAware"
                  ],
                  "x-ms-enum": {
                    "name": "ClusterPattern",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Standard",
                        "value": "Standard",
                        "description": "Standard cluster."
                      },
                      {
                        "name": "RackAware",
                        "value": "RackAware",
                        "description": "RackAware cluster."
                      }
                    ]
                  }
                }
              }
            },
            "storage": {
              "description": "Storage config to deploy AzureStackHCI Cluster.",
              "type": "object",
              "properties": {
                "configurationMode": {
                  "type": "string",
                  "description": "By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'",
                  "default": "Express"
                }
              }
            },
            "namingPrefix": {
              "type": "string",
              "description": "naming prefix to deploy cluster.",
              "pattern": "^[a-zA-Z0-9-]{1,8}$"
            },
            "domainFqdn": {
              "type": "string",
              "description": "FQDN to deploy cluster"
            },
            "infrastructureNetwork": {
              "type": "array",
              "description": "InfrastructureNetwork config to deploy AzureStackHCI Cluster.",
              "items": {
                "type": "object",
                "description": "The InfrastructureNetwork of a AzureStackHCI Cluster.",
                "properties": {
                  "subnetMask": {
                    "type": "string",
                    "description": "Subnet mask that matches the provided IP address space."
                  },
                  "gateway": {
                    "type": "string",
                    "description": "Default gateway that should be used for the provided IP address space."
                  },
                  "ipPools": {
                    "type": "array",
                    "description": "Range of IP addresses from which addresses are allocated for nodes within a subnet.",
                    "items": {
                      "type": "object",
                      "description": "The dnsServers of a device.",
                      "properties": {
                        "startingAddress": {
                          "type": "string",
                          "description": "Starting IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
                        },
                        "endingAddress": {
                          "type": "string",
                          "description": "Ending IP address for the management network. A minimum of six free, contiguous IPv4 addresses (excluding your host IPs) are needed for infrastructure services such as clustering."
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  },
                  "dnsServers": {
                    "type": "array",
                    "description": "IPv4 address of the DNS servers in your environment.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "useDhcp": {
                    "type": "boolean",
                    "description": "Allows customers to use DHCP for Hosts and Cluster IPs. If not declared, the deployment will default to static IPs. When true, GW and DNS servers are not required"
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "physicalNodes": {
              "type": "array",
              "description": "list of physical nodes config to deploy AzureStackHCI Cluster.",
              "items": {
                "type": "object",
                "description": "The PhysicalNodes of a cluster.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "NETBIOS name of each physical server on your Azure Stack HCI cluster."
                  },
                  "ipv4Address": {
                    "type": "string",
                    "description": "The IPv4 address assigned to each physical server on your Azure Stack HCI cluster."
                  }
                }
              },
              "x-ms-identifiers": [
                "name"
              ]
            },
            "hostNetwork": {
              "description": "HostNetwork config to deploy AzureStackHCI Cluster.",
              "type": "object",
              "properties": {
                "intents": {
                  "type": "array",
                  "description": "The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.",
                  "items": {
                    "type": "object",
                    "description": "The Intents of a cluster.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the network intent you wish to create."
                      },
                      "trafficType": {
                        "type": "array",
                        "description": "List of network traffic types. Only allowed values are 'Compute', 'Storage', 'Management'.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "adapter": {
                        "type": "array",
                        "description": "Array of network interfaces used for the network intent.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "overrideVirtualSwitchConfiguration": {
                        "type": "boolean",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                        "default": false
                      },
                      "virtualSwitchConfigurationOverrides": {
                        "description": "Set virtualSwitch ConfigurationOverrides for cluster.",
                        "type": "object",
                        "properties": {
                          "enableIov": {
                            "type": "string",
                            "description": "Enable IoV for Virtual Switch"
                          },
                          "loadBalancingAlgorithm": {
                            "type": "string",
                            "description": "Load Balancing Algorithm for Virtual Switch"
                          }
                        }
                      },
                      "overrideQosPolicy": {
                        "type": "boolean",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                        "default": false
                      },
                      "qosPolicyOverrides": {
                        "description": "Set QoS PolicyOverrides for cluster.",
                        "type": "object",
                        "properties": {
                          "priorityValue8021Action_Cluster": {
                            "type": "string",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                          },
                          "priorityValue8021Action_SMB": {
                            "type": "string",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                          },
                          "bandwidthPercentage_SMB": {
                            "type": "string",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                          }
                        }
                      },
                      "overrideAdapterProperty": {
                        "type": "boolean",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                        "default": false
                      },
                      "adapterPropertyOverrides": {
                        "description": "Set Adapter PropertyOverrides for cluster.",
                        "type": "object",
                        "properties": {
                          "jumboPacket": {
                            "type": "string",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                          },
                          "networkDirect": {
                            "type": "string",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                          },
                          "networkDirectTechnology": {
                            "type": "string",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'"
                          }
                        }
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "storageNetworks": {
                  "type": "array",
                  "description": "List of StorageNetworks config to deploy AzureStackHCI Cluster.",
                  "items": {
                    "type": "object",
                    "description": "The StorageNetworks of a cluster.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the storage network."
                      },
                      "networkAdapterName": {
                        "type": "string",
                        "description": "Name of the storage network adapter."
                      },
                      "vlanId": {
                        "type": "string",
                        "description": "ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic. "
                      },
                      "storageAdapterIPInfo": {
                        "type": "array",
                        "description": "List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.",
                        "items": {
                          "type": "object",
                          "description": "The StorageAdapter physical nodes of a cluster.",
                          "properties": {
                            "physicalNode": {
                              "type": "string",
                              "description": "storage adapter physical node name."
                            },
                            "ipv4Address": {
                              "type": "string",
                              "description": "The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster."
                            },
                            "subnetMask": {
                              "type": "string",
                              "description": "The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster."
                            }
                          }
                        },
                        "x-ms-identifiers": [
                          "physicalNode"
                        ]
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "name"
                  ]
                },
                "storageConnectivitySwitchless": {
                  "type": "boolean",
                  "description": "Defines how the storage adapters between nodes are connected either switch or switch less..",
                  "default": false
                },
                "enableStorageAutoIp": {
                  "type": "boolean",
                  "description": "Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.",
                  "default": false
                }
              }
            },
            "sdnIntegration": {
              "description": "SDN Integration config to deploy AzureStackHCI Cluster.",
              "type": "object",
              "properties": {
                "networkController": {
                  "description": "network controller config for SDN Integration to deploy AzureStackHCI Cluster.",
                  "type": "object",
                  "properties": {
                    "macAddressPoolStart": {
                      "type": "string",
                      "description": "macAddressPoolStart of network controller used for SDN Integration."
                    },
                    "macAddressPoolStop": {
                      "type": "string",
                      "description": "macAddressPoolStop of network controller used for SDN Integration."
                    },
                    "networkVirtualizationEnabled": {
                      "type": "boolean",
                      "description": "NetworkVirtualizationEnabled of network controller used for SDN Integration."
                    }
                  }
                }
              }
            },
            "adouPath": {
              "type": "string",
              "description": "The path to the Active Directory Organizational Unit container object prepared for the deployment. "
            },
            "secretsLocation": {
              "type": "string",
              "description": "Azure key vault endpoint. This property is deprecated from 2023-12-01-preview. Please use secrets property instead."
            },
            "secrets": {
              "type": "array",
              "description": "secrets used for cloud deployment.",
              "items": {
                "type": "object",
                "description": "Protected parameters list stored in keyvault.",
                "properties": {
                  "secretName": {
                    "type": "string",
                    "description": "Secret name stored in keyvault."
                  },
                  "eceSecretName": {
                    "description": "Secret name expected for Enterprise Cloud Engine (ECE) deployment.",
                    "type": "string",
                    "enum": [
                      "AzureStackLCMUserCredential",
                      "DefaultARBApplication",
                      "LocalAdminCredential",
                      "WitnessStorageKey"
                    ],
                    "x-ms-enum": {
                      "name": "EceSecrets",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "AzureStackLCMUserCredential",
                          "value": "AzureStackLCMUserCredential",
                          "description": "AzureStackLCMUserCredential used for LCM operations for AzureStackHCI cluster."
                        },
                        {
                          "name": "DefaultARBApplication",
                          "value": "DefaultARBApplication",
                          "description": "DefaultARBApplication used to manage Azure Arc resource bridge (ARB) for AzureStackHCI cluster."
                        },
                        {
                          "name": "LocalAdminCredential",
                          "value": "LocalAdminCredential",
                          "description": "LocalAdminCredential used for admin operations for AzureStackHCI cluster."
                        },
                        {
                          "name": "WitnessStorageKey",
                          "value": "WitnessStorageKey",
                          "description": "WitnessStorageKey used for setting up a cloud witness for AzureStackHCI cluster."
                        }
                      ]
                    }
                  },
                  "secretLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "Secret URI stored in keyvault."
                  }
                }
              },
              "x-ms-identifiers": [
                "secretName"
              ]
            },
            "optionalServices": {
              "description": "OptionalServices config to deploy AzureStackHCI Cluster.",
              "type": "object",
              "properties": {
                "customLocation": {
                  "type": "string",
                  "description": "The name of custom location."
                }
              }
            },
            "localAvailabilityZones": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Local Availability Zone information for HCI cluster",
                "properties": {
                  "localAvailabilityZoneName": {
                    "type": "string",
                    "description": "Local Availability Zone name for HCI cluster"
                  },
                  "nodes": {
                    "type": "array",
                    "description": "Nodes belonging to a particular zone",
                    "items": {
                      "type": "string"
                    },
                    "x-ms-identifiers": []
                  }
                }
              },
              "description": "Local Availability Zone information for HCI cluster",
              "x-ms-identifiers": [
                "localAvailabilityZoneName"
              ]
            },
            "assemblyInfo": {
              "description": "Assembly Package details for Validated Solution Recipe for AzureStackHCI Cluster",
              "type": "object",
              "properties": {
                "packageVersion": {
                  "type": "string",
                  "description": "Assembly Package version for Validated Solution Recipe for AzureStackHCI Cluster",
                  "readOnly": true
                },
                "payload": {
                  "type": "array",
                  "description": "Payload properties for Validated Solution Recipe for AzureStackHCI Cluster",
                  "items": {
                    "type": "object",
                    "description": "Payload properties for Validated Solution Recipe for AzureStackHCI Cluster",
                    "properties": {
                      "identifier": {
                        "type": "string",
                        "description": "assembly identifier for Validated Solution Recipe for AzureStackHCI Cluster",
                        "readOnly": true
                      },
                      "hash": {
                        "type": "string",
                        "description": "Hash of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                        "readOnly": true
                      },
                      "fileName": {
                        "type": "string",
                        "description": "File name of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                        "readOnly": true
                      },
                      "url": {
                        "type": "string",
                        "description": "Url of assembly package for Validated Solution Recipe for AzureStackHCI Cluster",
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": []
                }
              }
            }
          }
        },
        "sbePartnerInfo": {
          "description": "Solution builder extension (SBE) partner properties",
          "type": "object",
          "properties": {
            "sbeDeploymentInfo": {
              "description": "SBE package and manifest information for the solution Builder Extension staged for AzureStackHCI cluster deployment.",
              "type": "object",
              "properties": {
                "version": {
                  "type": "string",
                  "description": "SBE package version."
                },
                "family": {
                  "type": "string",
                  "description": "SBE family name."
                },
                "publisher": {
                  "type": "string",
                  "description": "SBE manifest publisher."
                },
                "sbeManifestSource": {
                  "type": "string",
                  "description": "SBE Manifest Source."
                },
                "sbeManifestCreationDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "SBE Manifest Creation Date."
                }
              }
            },
            "partnerProperties": {
              "type": "array",
              "description": "List of SBE partner properties for AzureStackHCI cluster deployment.",
              "items": {
                "type": "object",
                "description": "Solution builder extension (SBE) partner properties object.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "SBE partner property name."
                  },
                  "value": {
                    "type": "string",
                    "description": "SBE partner property value."
                  }
                }
              },
              "x-ms-identifiers": []
            },
            "credentialList": {
              "type": "array",
              "description": "SBE credentials list for AzureStackHCI cluster deployment.",
              "items": {
                "type": "object",
                "description": "secrets used for solution builder extension (SBE) partner extensibility.",
                "properties": {
                  "secretName": {
                    "type": "string",
                    "description": "secret name stored in keyvault."
                  },
                  "eceSecretName": {
                    "type": "string",
                    "description": "secret name expected for Enterprise Cloud Engine (ECE)."
                  },
                  "secretLocation": {
                    "type": "string",
                    "format": "uri",
                    "description": "secret URI stored in keyvault."
                  }
                }
              },
              "x-ms-identifiers": [
                "secretName"
              ]
            }
          }
        }
      },
      "required": [
        "deploymentData"
      ],
      "externalDocs": {
        "description": "Deploy Azure Stack HCI using an existing configuration file",
        "url": "https://learn.microsoft.com/en-us/azure-stack/hci/deploy/deployment-tool-existing-file"
      }
    },
    "SdnIntegration": {
      "type": "object",
      "description": "SDN Integration config to deploy AzureStackHCI Cluster.",
      "properties": {
        "networkController": {
          "description": "network controller config for SDN Integration to deploy AzureStackHCI Cluster.",
          "type": "object",
          "properties": {
            "macAddressPoolStart": {
              "type": "string",
              "description": "macAddressPoolStart of network controller used for SDN Integration."
            },
            "macAddressPoolStop": {
              "type": "string",
              "description": "macAddressPoolStop of network controller used for SDN Integration."
            },
            "networkVirtualizationEnabled": {
              "type": "boolean",
              "description": "NetworkVirtualizationEnabled of network controller used for SDN Integration."
            }
          }
        }
      }
    },
    "DeploymentSecuritySettings": {
      "type": "object",
      "description": "The SecuritySettings of AzureStackHCI Cluster.",
      "properties": {
        "hvciProtection": {
          "type": "boolean",
          "description": "By default, Hypervisor-protected Code Integrity is enabled on your Azure HCI cluster.",
          "default": true
        },
        "drtmProtection": {
          "type": "boolean",
          "description": "By default, Secure Boot is enabled on your Azure HCI cluster. This setting is hardware dependent.",
          "default": true
        },
        "driftControlEnforced": {
          "type": "boolean",
          "description": "When set to true, the security baseline is re-applied regularly.",
          "default": true
        },
        "credentialGuardEnforced": {
          "type": "boolean",
          "description": "When set to true, Credential Guard is enabled.",
          "default": false
        },
        "smbSigningEnforced": {
          "type": "boolean",
          "description": "When set to true, the SMB default instance requires sign in for the client and server services.",
          "default": true
        },
        "smbClusterEncryption": {
          "type": "boolean",
          "description": "When set to true, cluster east-west traffic is encrypted.",
          "default": false
        },
        "sideChannelMitigationEnforced": {
          "type": "boolean",
          "description": "When set to true, all the side channel mitigations are enabled",
          "default": true
        },
        "bitlockerBootVolume": {
          "type": "boolean",
          "description": "When set to true, BitLocker XTS_AES 256-bit encryption is enabled for all data-at-rest on the OS volume of your Azure Stack HCI cluster. This setting is TPM-hardware dependent. ",
          "default": true
        },
        "bitlockerDataVolumes": {
          "type": "boolean",
          "description": "When set to true, BitLocker XTS-AES 256-bit encryption is enabled for all data-at-rest on your Azure Stack HCI cluster shared volumes.",
          "default": true
        },
        "wdacEnforced": {
          "type": "boolean",
          "description": "WDAC is enabled by default and limits the applications and the code that you can run on your Azure Stack HCI cluster.",
          "default": true
        }
      }
    },
    "Storage": {
      "type": "object",
      "description": "The Storage config of AzureStackHCI Cluster.",
      "properties": {
        "configurationMode": {
          "type": "string",
          "description": "By default, this mode is set to Express and your storage is configured as per best practices based on the number of nodes in the cluster. Allowed values are 'Express','InfraOnly', 'KeepStorage'",
          "default": "Express"
        }
      }
    },
    "StorageAdapterIPInfo": {
      "type": "object",
      "description": "The StorageAdapter physical nodes of a cluster.",
      "properties": {
        "physicalNode": {
          "type": "string",
          "description": "storage adapter physical node name.",
          "readOnly": true
        },
        "ipv4Address": {
          "type": "string",
          "description": "The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
          "readOnly": true
        },
        "subnetMask": {
          "type": "string",
          "description": "The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
          "readOnly": true
        }
      }
    },
    "StorageNetworks": {
      "type": "object",
      "description": "The StorageNetworks of a cluster.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the storage network.",
          "readOnly": true
        },
        "networkAdapterName": {
          "type": "string",
          "description": "Name of the storage network adapter.",
          "readOnly": true
        },
        "storageVlanId": {
          "type": "string",
          "description": "ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic. ",
          "readOnly": true
        },
        "storageAdapterIPInfo": {
          "type": "array",
          "description": "List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.",
          "items": {
            "type": "object",
            "description": "The StorageAdapter physical nodes of a cluster.",
            "properties": {
              "physicalNode": {
                "type": "string",
                "description": "storage adapter physical node name.",
                "readOnly": true
              },
              "ipv4Address": {
                "type": "string",
                "description": "The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
                "readOnly": true
              },
              "subnetMask": {
                "type": "string",
                "description": "The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "physicalNode"
          ]
        }
      }
    },
    "VirtualSwitchConfigurationOverrides": {
      "type": "object",
      "description": "The VirtualSwitchConfigurationOverrides of a cluster.",
      "properties": {
        "enableIov": {
          "type": "string",
          "description": "Enable IoV for Virtual Switch",
          "readOnly": true
        },
        "loadBalancingAlgorithm": {
          "type": "string",
          "description": "Load Balancing Algorithm for Virtual Switch",
          "readOnly": true
        }
      }
    },
    "CollectLogJobProperties": {
      "type": "object",
      "description": "Represents the properties of a log collection job.",
      "properties": {
        "fromDate": {
          "type": "string",
          "format": "date-time",
          "description": "From date for log collection."
        },
        "toDate": {
          "type": "string",
          "format": "date-time",
          "description": "To date for log collection."
        },
        "lastLogGenerated": {
          "type": "string",
          "format": "date-time",
          "description": "To date for log collection.",
          "readOnly": true
        },
        "reportedProperties": {
          "$ref": "#/definitions/LogCollectionReportedProperties",
          "description": "log collection job reported properties.",
          "readOnly": true
        }
      },
      "required": [
        "fromDate",
        "toDate"
      ]
    },
    "DeploymentMode": {
      "type": "string",
      "description": "Deployment mode to trigger job.",
      "enum": [
        "Validate",
        "Deploy"
      ],
      "x-ms-enum": {
        "name": "DeploymentMode",
        "modelAsString": true,
        "values": [
          {
            "name": "Validate",
            "value": "Validate",
            "description": "Validate ECE action deployment for a cluster."
          },
          {
            "name": "Deploy",
            "value": "Deploy",
            "description": "Deploy ECE action deployment for a cluster."
          }
        ]
      }
    },
    "DeviceLogCollectionStatus": {
      "type": "string",
      "description": "Represents the status of a log collection operation.",
      "enum": [
        "NotStarted",
        "Running",
        "Failed",
        "Succeeded",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "DeviceLogCollectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "NotStarted",
            "value": "NotStarted",
            "description": "Log collection operation has not been initiated."
          },
          {
            "name": "Running",
            "value": "Running",
            "description": "Indicates that the log collection operation is currently running."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Indicates that the log collection operation has failed."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Indicates that the log collection operation has completed successfully."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Indicates that the log collection operation has completed successfully."
          }
        ]
      },
      "readOnly": true
    },
    "EdgeDeviceJob": {
      "type": "object",
      "description": "EdgeDevice Jobs resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "kind": {
          "description": "Edge Solution type to support polymorphic resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "HCI"
          ],
          "default": "HCI",
          "x-ms-enum": {
            "name": "EdgeDeviceKind",
            "modelAsString": true,
            "values": [
              {
                "name": "HCI",
                "value": "HCI",
                "description": "Arc-enabled edge device with HCI OS."
              }
            ]
          }
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "EdgeDeviceJobListResult": {
      "type": "object",
      "description": "The response of a EdgeDeviceJob list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EdgeDeviceJob items on this page",
          "items": {
            "type": "object",
            "description": "EdgeDevice Jobs resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "kind": {
                "description": "Edge Solution type to support polymorphic resource.",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "string",
                "enum": [
                  "HCI"
                ],
                "default": "HCI",
                "x-ms-enum": {
                  "name": "EdgeDeviceKind",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "HCI",
                      "value": "HCI",
                      "description": "Arc-enabled edge device with HCI OS."
                    }
                  ]
                }
              }
            },
            "discriminator": "kind",
            "required": [
              "kind"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EdgeDeviceJobProperties": {
      "type": "object",
      "description": "Edge device job properties",
      "properties": {
        "deploymentMode": {
          "description": "Deployment mode to trigger job.",
          "type": "string",
          "enum": [
            "Validate",
            "Deploy"
          ],
          "x-ms-enum": {
            "name": "DeploymentMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Validate",
                "value": "Validate",
                "description": "Validate ECE action deployment for a cluster."
              },
              {
                "name": "Deploy",
                "value": "Deploy",
                "description": "Deploy ECE action deployment for a cluster."
              }
            ]
          }
        },
        "provisioningState": {
          "description": "Job provisioning state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "NotSpecified",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The resource provision state is not specified"
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is being provisioned"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted"
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource create request has been accepted"
              }
            ]
          }
        },
        "jobId": {
          "type": "string",
          "description": "Unique, immutable job id.",
          "readOnly": true
        },
        "startTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time at which the job started.",
          "readOnly": true
        },
        "endTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time at which the job completed.",
          "readOnly": true
        },
        "status": {
          "description": "Status of Edge device job.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "NotSpecified",
            "ValidationInProgress",
            "ValidationSuccess",
            "ValidationFailed",
            "DeploymentInProgress",
            "DeploymentFailed",
            "DeploymentSuccess",
            "Succeeded",
            "Failed",
            "Canceled",
            "Paused",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The job status has not been specified."
              },
              {
                "name": "ValidationInProgress",
                "value": "ValidationInProgress",
                "description": "The job is currently undergoing validation."
              },
              {
                "name": "ValidationSuccess",
                "value": "ValidationSuccess",
                "description": "The job has successfully passed validation."
              },
              {
                "name": "ValidationFailed",
                "value": "ValidationFailed",
                "description": "The job has failed validation."
              },
              {
                "name": "DeploymentInProgress",
                "value": "DeploymentInProgress",
                "description": "The job's deployment is currently in progress."
              },
              {
                "name": "DeploymentFailed",
                "value": "DeploymentFailed",
                "description": "The job's deployment has failed."
              },
              {
                "name": "DeploymentSuccess",
                "value": "DeploymentSuccess",
                "description": "The job has been successfully deployed."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The job has succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The job has failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The job has been canceled."
              },
              {
                "name": "Paused",
                "value": "Paused",
                "description": "The job is paused."
              },
              {
                "name": "Scheduled",
                "value": "Scheduled",
                "description": "The job is scheduled to run."
              }
            ]
          }
        }
      }
    },
    "EdgeDeviceJobType": {
      "type": "string",
      "description": "Common Job Types supported.",
      "enum": [
        "CollectLog",
        "RemoteSupport"
      ],
      "x-ms-enum": {
        "name": "EdgeDeviceJobType",
        "modelAsString": true,
        "values": [
          {
            "name": "CollectLog",
            "value": "CollectLog",
            "description": "Job to collect logs from the device."
          },
          {
            "name": "RemoteSupport",
            "value": "RemoteSupport",
            "description": "Job to provide remote support to the device."
          }
        ]
      }
    },
    "EdgeSolutionType": {
      "type": "string",
      "description": "Edge solution type.",
      "enum": [
        "WindowsServer"
      ],
      "x-ms-enum": {
        "name": "EdgeSolutionType",
        "modelAsString": true,
        "values": [
          {
            "name": "WindowsServer",
            "value": "WindowsServer",
            "description": "Edge solution for Windows based edge devices."
          }
        ]
      }
    },
    "HciCollectLogJobProperties": {
      "type": "object",
      "description": "Represents the properties of an HCI Collect Log job.",
      "properties": {
        "fromDate": {
          "type": "string",
          "format": "date-time",
          "description": "From date for log collection."
        },
        "toDate": {
          "type": "string",
          "format": "date-time",
          "description": "To date for log collection."
        },
        "lastLogGenerated": {
          "type": "string",
          "format": "date-time",
          "description": "To date for log collection.",
          "readOnly": true
        },
        "reportedProperties": {
          "$ref": "#/definitions/LogCollectionReportedProperties",
          "description": "log collection job reported properties.",
          "readOnly": true
        }
      },
      "required": [
        "fromDate",
        "toDate"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "HCI Edge device job properties",
          "properties": {
            "deploymentMode": {
              "description": "Deployment mode to trigger job.",
              "type": "string",
              "enum": [
                "Validate",
                "Deploy"
              ],
              "x-ms-enum": {
                "name": "DeploymentMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Validate",
                    "value": "Validate",
                    "description": "Validate ECE action deployment for a cluster."
                  },
                  {
                    "name": "Deploy",
                    "value": "Deploy",
                    "description": "Deploy ECE action deployment for a cluster."
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "Job provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "NotSpecified",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The resource provision state is not specified"
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is being provisioned"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource create request has been accepted"
                  }
                ]
              }
            },
            "jobId": {
              "type": "string",
              "description": "Unique, immutable job id.",
              "readOnly": true
            },
            "startTimeUtc": {
              "type": "string",
              "format": "date-time",
              "description": "The UTC date and time at which the job started.",
              "readOnly": true
            },
            "endTimeUtc": {
              "type": "string",
              "format": "date-time",
              "description": "The UTC date and time at which the job completed.",
              "readOnly": true
            },
            "status": {
              "description": "Status of Edge device job.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "NotSpecified",
                "ValidationInProgress",
                "ValidationSuccess",
                "ValidationFailed",
                "DeploymentInProgress",
                "DeploymentFailed",
                "DeploymentSuccess",
                "Succeeded",
                "Failed",
                "Canceled",
                "Paused",
                "Scheduled"
              ],
              "x-ms-enum": {
                "name": "JobStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The job status has not been specified."
                  },
                  {
                    "name": "ValidationInProgress",
                    "value": "ValidationInProgress",
                    "description": "The job is currently undergoing validation."
                  },
                  {
                    "name": "ValidationSuccess",
                    "value": "ValidationSuccess",
                    "description": "The job has successfully passed validation."
                  },
                  {
                    "name": "ValidationFailed",
                    "value": "ValidationFailed",
                    "description": "The job has failed validation."
                  },
                  {
                    "name": "DeploymentInProgress",
                    "value": "DeploymentInProgress",
                    "description": "The job's deployment is currently in progress."
                  },
                  {
                    "name": "DeploymentFailed",
                    "value": "DeploymentFailed",
                    "description": "The job's deployment has failed."
                  },
                  {
                    "name": "DeploymentSuccess",
                    "value": "DeploymentSuccess",
                    "description": "The job has been successfully deployed."
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The job has succeeded."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The job has failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The job has been canceled."
                  },
                  {
                    "name": "Paused",
                    "value": "Paused",
                    "description": "The job is paused."
                  },
                  {
                    "name": "Scheduled",
                    "value": "Scheduled",
                    "description": "The job is scheduled to run."
                  }
                ]
              }
            },
            "jobType": {
              "description": "Job Type to support polymorphic resource.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "CollectLog",
                "RemoteSupport"
              ],
              "x-ms-enum": {
                "name": "HciEdgeDeviceJobType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CollectLog",
                    "value": "CollectLog",
                    "description": "Job to collect logs from the device."
                  },
                  {
                    "name": "RemoteSupport",
                    "value": "RemoteSupport",
                    "description": "Job to provide remote support to the device."
                  }
                ]
              }
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        }
      ],
      "x-ms-discriminator-value": "CollectLog"
    },
    "HciEdgeDeviceJob": {
      "type": "object",
      "description": "Edge device job for Azure Stack HCI solution.",
      "properties": {
        "properties": {
          "type": "object",
          "description": "HCI Edge device job properties",
          "properties": {
            "deploymentMode": {
              "description": "Deployment mode to trigger job.",
              "type": "string",
              "enum": [
                "Validate",
                "Deploy"
              ],
              "x-ms-enum": {
                "name": "DeploymentMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Validate",
                    "value": "Validate",
                    "description": "Validate ECE action deployment for a cluster."
                  },
                  {
                    "name": "Deploy",
                    "value": "Deploy",
                    "description": "Deploy ECE action deployment for a cluster."
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "Job provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "NotSpecified",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The resource provision state is not specified"
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is being provisioned"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource create request has been accepted"
                  }
                ]
              }
            },
            "jobId": {
              "type": "string",
              "description": "Unique, immutable job id.",
              "readOnly": true
            },
            "startTimeUtc": {
              "type": "string",
              "format": "date-time",
              "description": "The UTC date and time at which the job started.",
              "readOnly": true
            },
            "endTimeUtc": {
              "type": "string",
              "format": "date-time",
              "description": "The UTC date and time at which the job completed.",
              "readOnly": true
            },
            "status": {
              "description": "Status of Edge device job.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "NotSpecified",
                "ValidationInProgress",
                "ValidationSuccess",
                "ValidationFailed",
                "DeploymentInProgress",
                "DeploymentFailed",
                "DeploymentSuccess",
                "Succeeded",
                "Failed",
                "Canceled",
                "Paused",
                "Scheduled"
              ],
              "x-ms-enum": {
                "name": "JobStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The job status has not been specified."
                  },
                  {
                    "name": "ValidationInProgress",
                    "value": "ValidationInProgress",
                    "description": "The job is currently undergoing validation."
                  },
                  {
                    "name": "ValidationSuccess",
                    "value": "ValidationSuccess",
                    "description": "The job has successfully passed validation."
                  },
                  {
                    "name": "ValidationFailed",
                    "value": "ValidationFailed",
                    "description": "The job has failed validation."
                  },
                  {
                    "name": "DeploymentInProgress",
                    "value": "DeploymentInProgress",
                    "description": "The job's deployment is currently in progress."
                  },
                  {
                    "name": "DeploymentFailed",
                    "value": "DeploymentFailed",
                    "description": "The job's deployment has failed."
                  },
                  {
                    "name": "DeploymentSuccess",
                    "value": "DeploymentSuccess",
                    "description": "The job has been successfully deployed."
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The job has succeeded."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The job has failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The job has been canceled."
                  },
                  {
                    "name": "Paused",
                    "value": "Paused",
                    "description": "The job is paused."
                  },
                  {
                    "name": "Scheduled",
                    "value": "Scheduled",
                    "description": "The job is scheduled to run."
                  }
                ]
              }
            },
            "jobType": {
              "description": "Job Type to support polymorphic resource.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "CollectLog",
                "RemoteSupport"
              ],
              "x-ms-enum": {
                "name": "HciEdgeDeviceJobType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CollectLog",
                    "value": "CollectLog",
                    "description": "Job to collect logs from the device."
                  },
                  {
                    "name": "RemoteSupport",
                    "value": "RemoteSupport",
                    "description": "Job to provide remote support to the device."
                  }
                ]
              }
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        }
      },
      "required": [
        "properties"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "EdgeDevice Jobs resource",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            },
            "kind": {
              "description": "Edge Solution type to support polymorphic resource.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "HCI"
              ],
              "default": "HCI",
              "x-ms-enum": {
                "name": "EdgeDeviceKind",
                "modelAsString": true,
                "values": [
                  {
                    "name": "HCI",
                    "value": "HCI",
                    "description": "Arc-enabled edge device with HCI OS."
                  }
                ]
              }
            }
          },
          "discriminator": "kind",
          "required": [
            "kind"
          ]
        }
      ],
      "x-ms-discriminator-value": "HCI"
    },
    "HciEdgeDeviceJobProperties": {
      "type": "object",
      "description": "HCI Edge device job properties",
      "properties": {
        "deploymentMode": {
          "description": "Deployment mode to trigger job.",
          "type": "string",
          "enum": [
            "Validate",
            "Deploy"
          ],
          "x-ms-enum": {
            "name": "DeploymentMode",
            "modelAsString": true,
            "values": [
              {
                "name": "Validate",
                "value": "Validate",
                "description": "Validate ECE action deployment for a cluster."
              },
              {
                "name": "Deploy",
                "value": "Deploy",
                "description": "Deploy ECE action deployment for a cluster."
              }
            ]
          }
        },
        "provisioningState": {
          "description": "Job provisioning state",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "NotSpecified",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The resource provision state is not specified"
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is being provisioned"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted"
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource create request has been accepted"
              }
            ]
          }
        },
        "jobId": {
          "type": "string",
          "description": "Unique, immutable job id.",
          "readOnly": true
        },
        "startTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time at which the job started.",
          "readOnly": true
        },
        "endTimeUtc": {
          "type": "string",
          "format": "date-time",
          "description": "The UTC date and time at which the job completed.",
          "readOnly": true
        },
        "status": {
          "description": "Status of Edge device job.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "NotSpecified",
            "ValidationInProgress",
            "ValidationSuccess",
            "ValidationFailed",
            "DeploymentInProgress",
            "DeploymentFailed",
            "DeploymentSuccess",
            "Succeeded",
            "Failed",
            "Canceled",
            "Paused",
            "Scheduled"
          ],
          "x-ms-enum": {
            "name": "JobStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The job status has not been specified."
              },
              {
                "name": "ValidationInProgress",
                "value": "ValidationInProgress",
                "description": "The job is currently undergoing validation."
              },
              {
                "name": "ValidationSuccess",
                "value": "ValidationSuccess",
                "description": "The job has successfully passed validation."
              },
              {
                "name": "ValidationFailed",
                "value": "ValidationFailed",
                "description": "The job has failed validation."
              },
              {
                "name": "DeploymentInProgress",
                "value": "DeploymentInProgress",
                "description": "The job's deployment is currently in progress."
              },
              {
                "name": "DeploymentFailed",
                "value": "DeploymentFailed",
                "description": "The job's deployment has failed."
              },
              {
                "name": "DeploymentSuccess",
                "value": "DeploymentSuccess",
                "description": "The job has been successfully deployed."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The job has succeeded."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The job has failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The job has been canceled."
              },
              {
                "name": "Paused",
                "value": "Paused",
                "description": "The job is paused."
              },
              {
                "name": "Scheduled",
                "value": "Scheduled",
                "description": "The job is scheduled to run."
              }
            ]
          }
        },
        "jobType": {
          "description": "Job Type to support polymorphic resource.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "string",
          "enum": [
            "CollectLog",
            "RemoteSupport"
          ],
          "x-ms-enum": {
            "name": "HciEdgeDeviceJobType",
            "modelAsString": true,
            "values": [
              {
                "name": "CollectLog",
                "value": "CollectLog",
                "description": "Job to collect logs from the device."
              },
              {
                "name": "RemoteSupport",
                "value": "RemoteSupport",
                "description": "Job to provide remote support to the device."
              }
            ]
          }
        }
      },
      "discriminator": "jobType",
      "required": [
        "jobType"
      ]
    },
    "HciEdgeDeviceJobType": {
      "type": "string",
      "description": "Job Type supported.",
      "enum": [
        "CollectLog",
        "RemoteSupport"
      ],
      "x-ms-enum": {
        "name": "HciEdgeDeviceJobType",
        "modelAsString": true,
        "values": [
          {
            "name": "CollectLog",
            "value": "CollectLog",
            "description": "Job to collect logs from the device."
          },
          {
            "name": "RemoteSupport",
            "value": "RemoteSupport",
            "description": "Job to provide remote support to the device."
          }
        ]
      }
    },
    "HciRemoteSupportJobProperties": {
      "type": "object",
      "description": "Represents the properties of a remote support job for HCI.",
      "properties": {
        "accessLevel": {
          "description": "Remote support access level.",
          "type": "string",
          "enum": [
            "None",
            "Diagnostics",
            "DiagnosticsAndRepair"
          ],
          "x-ms-enum": {
            "name": "RemoteSupportAccessLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No remote support access is granted."
              },
              {
                "name": "Diagnostics",
                "value": "Diagnostics",
                "description": "Access is limited to diagnostics information only."
              },
              {
                "name": "DiagnosticsAndRepair",
                "value": "DiagnosticsAndRepair",
                "description": "Access includes diagnostics information and the ability to perform repairs."
              }
            ]
          }
        },
        "expirationTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Remote support expiration timestamp."
        },
        "type": {
          "description": "Remote support type.",
          "type": "string",
          "enum": [
            "Enable",
            "Revoke"
          ],
          "x-ms-enum": {
            "name": "RemoteSupportType",
            "modelAsString": true,
            "values": [
              {
                "name": "Enable",
                "value": "Enable",
                "description": "Enables remote support for the edge device."
              },
              {
                "name": "Revoke",
                "value": "Revoke",
                "description": "Revokes previously granted remote support access for the edge device."
              }
            ]
          }
        },
        "reportedProperties": {
          "$ref": "#/definitions/RemoteSupportJobReportedProperties",
          "description": "log collection job reported properties.",
          "readOnly": true
        }
      },
      "required": [
        "accessLevel",
        "expirationTimestamp",
        "type"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "HCI Edge device job properties",
          "properties": {
            "deploymentMode": {
              "description": "Deployment mode to trigger job.",
              "type": "string",
              "enum": [
                "Validate",
                "Deploy"
              ],
              "x-ms-enum": {
                "name": "DeploymentMode",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Validate",
                    "value": "Validate",
                    "description": "Validate ECE action deployment for a cluster."
                  },
                  {
                    "name": "Deploy",
                    "value": "Deploy",
                    "description": "Deploy ECE action deployment for a cluster."
                  }
                ]
              }
            },
            "provisioningState": {
              "description": "Job provisioning state",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "NotSpecified",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The resource provision state is not specified"
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is being provisioned"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource create request has been accepted"
                  }
                ]
              }
            },
            "jobId": {
              "type": "string",
              "description": "Unique, immutable job id.",
              "readOnly": true
            },
            "startTimeUtc": {
              "type": "string",
              "format": "date-time",
              "description": "The UTC date and time at which the job started.",
              "readOnly": true
            },
            "endTimeUtc": {
              "type": "string",
              "format": "date-time",
              "description": "The UTC date and time at which the job completed.",
              "readOnly": true
            },
            "status": {
              "description": "Status of Edge device job.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "NotSpecified",
                "ValidationInProgress",
                "ValidationSuccess",
                "ValidationFailed",
                "DeploymentInProgress",
                "DeploymentFailed",
                "DeploymentSuccess",
                "Succeeded",
                "Failed",
                "Canceled",
                "Paused",
                "Scheduled"
              ],
              "x-ms-enum": {
                "name": "JobStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The job status has not been specified."
                  },
                  {
                    "name": "ValidationInProgress",
                    "value": "ValidationInProgress",
                    "description": "The job is currently undergoing validation."
                  },
                  {
                    "name": "ValidationSuccess",
                    "value": "ValidationSuccess",
                    "description": "The job has successfully passed validation."
                  },
                  {
                    "name": "ValidationFailed",
                    "value": "ValidationFailed",
                    "description": "The job has failed validation."
                  },
                  {
                    "name": "DeploymentInProgress",
                    "value": "DeploymentInProgress",
                    "description": "The job's deployment is currently in progress."
                  },
                  {
                    "name": "DeploymentFailed",
                    "value": "DeploymentFailed",
                    "description": "The job's deployment has failed."
                  },
                  {
                    "name": "DeploymentSuccess",
                    "value": "DeploymentSuccess",
                    "description": "The job has been successfully deployed."
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The job has succeeded."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The job has failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The job has been canceled."
                  },
                  {
                    "name": "Paused",
                    "value": "Paused",
                    "description": "The job is paused."
                  },
                  {
                    "name": "Scheduled",
                    "value": "Scheduled",
                    "description": "The job is scheduled to run."
                  }
                ]
              }
            },
            "jobType": {
              "description": "Job Type to support polymorphic resource.",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "type": "string",
              "enum": [
                "CollectLog",
                "RemoteSupport"
              ],
              "x-ms-enum": {
                "name": "HciEdgeDeviceJobType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "CollectLog",
                    "value": "CollectLog",
                    "description": "Job to collect logs from the device."
                  },
                  {
                    "name": "RemoteSupport",
                    "value": "RemoteSupport",
                    "description": "Job to provide remote support to the device."
                  }
                ]
              }
            }
          },
          "discriminator": "jobType",
          "required": [
            "jobType"
          ]
        }
      ],
      "x-ms-discriminator-value": "RemoteSupport"
    },
    "JobReportedProperties": {
      "type": "object",
      "description": "Reported Properties for job triggered from cloud.",
      "properties": {
        "percentComplete": {
          "type": "integer",
          "format": "int32",
          "description": "The percentage of the job that is complete.",
          "readOnly": true
        },
        "validationStatus": {
          "$ref": "./hciCommon.json#/definitions/EceActionStatus",
          "description": "Validation status of job.",
          "readOnly": true
        },
        "deploymentStatus": {
          "$ref": "./hciCommon.json#/definitions/EceActionStatus",
          "description": "Deployment status of job.",
          "readOnly": true
        }
      }
    },
    "JobStatus": {
      "type": "string",
      "description": "Represents the various statuses a job can have throughout its lifecycle.",
      "enum": [
        "NotSpecified",
        "ValidationInProgress",
        "ValidationSuccess",
        "ValidationFailed",
        "DeploymentInProgress",
        "DeploymentFailed",
        "DeploymentSuccess",
        "Succeeded",
        "Failed",
        "Canceled",
        "Paused",
        "Scheduled"
      ],
      "x-ms-enum": {
        "name": "JobStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "The job status has not been specified."
          },
          {
            "name": "ValidationInProgress",
            "value": "ValidationInProgress",
            "description": "The job is currently undergoing validation."
          },
          {
            "name": "ValidationSuccess",
            "value": "ValidationSuccess",
            "description": "The job has successfully passed validation."
          },
          {
            "name": "ValidationFailed",
            "value": "ValidationFailed",
            "description": "The job has failed validation."
          },
          {
            "name": "DeploymentInProgress",
            "value": "DeploymentInProgress",
            "description": "The job's deployment is currently in progress."
          },
          {
            "name": "DeploymentFailed",
            "value": "DeploymentFailed",
            "description": "The job's deployment has failed."
          },
          {
            "name": "DeploymentSuccess",
            "value": "DeploymentSuccess",
            "description": "The job has been successfully deployed."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "The job has succeeded."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "The job has failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "The job has been canceled."
          },
          {
            "name": "Paused",
            "value": "Paused",
            "description": "The job is paused."
          },
          {
            "name": "Scheduled",
            "value": "Scheduled",
            "description": "The job is scheduled to run."
          }
        ]
      },
      "readOnly": true
    },
    "LogCollectionReportedProperties": {
      "type": "object",
      "description": "Represents the reported properties of a log collection job.",
      "properties": {
        "percentComplete": {
          "type": "integer",
          "format": "int32",
          "description": "The percentage of the job that is complete.",
          "readOnly": true
        },
        "validationStatus": {
          "$ref": "./hciCommon.json#/definitions/EceActionStatus",
          "description": "Validation status of job.",
          "readOnly": true
        },
        "deploymentStatus": {
          "$ref": "./hciCommon.json#/definitions/EceActionStatus",
          "description": "Deployment status of job.",
          "readOnly": true
        },
        "logCollectionSessionDetails": {
          "type": "array",
          "description": "Details of the log collection session.",
          "items": {
            "type": "object",
            "description": "Represents a session for collecting logs from an edge device.",
            "properties": {
              "startTime": {
                "type": "string",
                "description": "The timestamp when log collection started, in ISO 8601 format.",
                "readOnly": true
              },
              "endTime": {
                "type": "string",
                "description": "The timestamp when log collection ended, in ISO 8601 format.",
                "readOnly": true
              },
              "timeCollected": {
                "type": "string",
                "description": "The total time logs were collected for, in ISO 8601 duration format.",
                "readOnly": true
              },
              "logSize": {
                "type": "integer",
                "format": "int32",
                "description": "The size of the collected logs in bytes.",
                "readOnly": true
              },
              "status": {
                "description": "The status of the log collection session.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "NotStarted",
                  "Running",
                  "Failed",
                  "Succeeded",
                  "Canceled"
                ],
                "x-ms-enum": {
                  "name": "DeviceLogCollectionStatus",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "NotStarted",
                      "value": "NotStarted",
                      "description": "Log collection operation has not been initiated."
                    },
                    {
                      "name": "Running",
                      "value": "Running",
                      "description": "Indicates that the log collection operation is currently running."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "Indicates that the log collection operation has failed."
                    },
                    {
                      "name": "Succeeded",
                      "value": "Succeeded",
                      "description": "Indicates that the log collection operation has completed successfully."
                    },
                    {
                      "name": "Canceled",
                      "value": "Canceled",
                      "description": "Indicates that the log collection operation has completed successfully."
                    }
                  ]
                }
              },
              "correlationId": {
                "type": "string",
                "description": "A unique identifier for correlating this log collection session with other operations or sessions.",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "correlationId"
          ]
        }
      }
    },
    "LogCollectionJobSession": {
      "type": "object",
      "description": "Represents a session for collecting logs from an edge device.",
      "properties": {
        "startTime": {
          "type": "string",
          "description": "The timestamp when log collection started, in ISO 8601 format.",
          "readOnly": true
        },
        "endTime": {
          "type": "string",
          "description": "The timestamp when log collection ended, in ISO 8601 format.",
          "readOnly": true
        },
        "timeCollected": {
          "type": "string",
          "description": "The total time logs were collected for, in ISO 8601 duration format.",
          "readOnly": true
        },
        "logSize": {
          "type": "integer",
          "format": "int32",
          "description": "The size of the collected logs in bytes.",
          "readOnly": true
        },
        "status": {
          "description": "The status of the log collection session.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "NotStarted",
            "Running",
            "Failed",
            "Succeeded",
            "Canceled"
          ],
          "x-ms-enum": {
            "name": "DeviceLogCollectionStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "NotStarted",
                "value": "NotStarted",
                "description": "Log collection operation has not been initiated."
              },
              {
                "name": "Running",
                "value": "Running",
                "description": "Indicates that the log collection operation is currently running."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Indicates that the log collection operation has failed."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Indicates that the log collection operation has completed successfully."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Indicates that the log collection operation has completed successfully."
              }
            ]
          }
        },
        "correlationId": {
          "type": "string",
          "description": "A unique identifier for correlating this log collection session with other operations or sessions.",
          "readOnly": true
        }
      }
    },
    "LogCollectionStatus": {
      "type": "string",
      "description": "Represents the status of a log collection operation.",
      "enum": [
        "None",
        "InProgress",
        "Failed",
        "Succeeded"
      ],
      "x-ms-enum": {
        "name": "LogCollectionStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "Indicates that no log collection operation has been initiated."
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "Indicates that the log collection operation is currently in progress."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Indicates that the log collection operation has failed."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Indicates that the log collection operation has completed successfully."
          }
        ]
      },
      "readOnly": true
    },
    "ProvisioningState": {
      "type": "string",
      "description": "The provisioning state of a resource.",
      "readOnly": true,
      "enum": [
        "Succeeded",
        "Failed",
        "Canceled",
        "Provisioning",
        "Updating",
        "Deleting",
        "Accepted"
      ],
      "x-ms-enum": {
        "name": "ProvisioningState",
        "modelAsString": true,
        "values": [
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Resource has been created."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Resource creation failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Resource creation was canceled."
          },
          {
            "name": "Provisioning",
            "value": "Provisioning",
            "description": "The resource is being provisioned"
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "The resource is updating"
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "The resource is being deleted"
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "The resource create request has been accepted"
          }
        ]
      }
    },
    "RemoteSupportAccessLevel": {
      "type": "string",
      "description": "Defines the level of remote support access granted.",
      "enum": [
        "None",
        "Diagnostics",
        "DiagnosticsAndRepair"
      ],
      "x-ms-enum": {
        "name": "RemoteSupportAccessLevel",
        "modelAsString": true,
        "values": [
          {
            "name": "None",
            "value": "None",
            "description": "No remote support access is granted."
          },
          {
            "name": "Diagnostics",
            "value": "Diagnostics",
            "description": "Access is limited to diagnostics information only."
          },
          {
            "name": "DiagnosticsAndRepair",
            "value": "DiagnosticsAndRepair",
            "description": "Access includes diagnostics information and the ability to perform repairs."
          }
        ]
      }
    },
    "RemoteSupportJobProperties": {
      "type": "object",
      "description": "Represents the properties of a remote support job.",
      "properties": {
        "accessLevel": {
          "description": "Remote support access level.",
          "type": "string",
          "enum": [
            "None",
            "Diagnostics",
            "DiagnosticsAndRepair"
          ],
          "x-ms-enum": {
            "name": "RemoteSupportAccessLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No remote support access is granted."
              },
              {
                "name": "Diagnostics",
                "value": "Diagnostics",
                "description": "Access is limited to diagnostics information only."
              },
              {
                "name": "DiagnosticsAndRepair",
                "value": "DiagnosticsAndRepair",
                "description": "Access includes diagnostics information and the ability to perform repairs."
              }
            ]
          }
        },
        "expirationTimestamp": {
          "type": "string",
          "format": "date-time",
          "description": "Remote support expiration timestamp."
        },
        "type": {
          "description": "Remote support type.",
          "type": "string",
          "enum": [
            "Enable",
            "Revoke"
          ],
          "x-ms-enum": {
            "name": "RemoteSupportType",
            "modelAsString": true,
            "values": [
              {
                "name": "Enable",
                "value": "Enable",
                "description": "Enables remote support for the edge device."
              },
              {
                "name": "Revoke",
                "value": "Revoke",
                "description": "Revokes previously granted remote support access for the edge device."
              }
            ]
          }
        },
        "reportedProperties": {
          "$ref": "#/definitions/RemoteSupportJobReportedProperties",
          "description": "log collection job reported properties.",
          "readOnly": true
        }
      },
      "required": [
        "accessLevel",
        "expirationTimestamp",
        "type"
      ]
    },
    "RemoteSupportJobNodeSettings": {
      "type": "object",
      "description": "Represents the settings of a remote support node.",
      "properties": {
        "state": {
          "type": "string",
          "description": "The state of the remote support node.",
          "readOnly": true
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the node settings were created, in UTC.",
          "readOnly": true
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "The timestamp when the node settings were last updated, in UTC.",
          "readOnly": true
        },
        "connectionStatus": {
          "type": "string",
          "description": "The current connection status of the remote support session.",
          "readOnly": true
        },
        "connectionErrorMessage": {
          "type": "string",
          "description": "The error message, if any, from the last connection attempt.",
          "readOnly": true
        }
      }
    },
    "RemoteSupportJobReportedProperties": {
      "type": "object",
      "description": "Represents the reported properties of a remote support job.",
      "properties": {
        "percentComplete": {
          "type": "integer",
          "format": "int32",
          "description": "The percentage of the job that is complete.",
          "readOnly": true
        },
        "validationStatus": {
          "$ref": "./hciCommon.json#/definitions/EceActionStatus",
          "description": "Validation status of job.",
          "readOnly": true
        },
        "deploymentStatus": {
          "$ref": "./hciCommon.json#/definitions/EceActionStatus",
          "description": "Deployment status of job.",
          "readOnly": true
        },
        "nodeSettings": {
          "description": "Optional settings for configuring the node for remote support.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "state": {
              "type": "string",
              "description": "The state of the remote support node.",
              "readOnly": true
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the node settings were created, in UTC.",
              "readOnly": true
            },
            "updatedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp when the node settings were last updated, in UTC.",
              "readOnly": true
            },
            "connectionStatus": {
              "type": "string",
              "description": "The current connection status of the remote support session.",
              "readOnly": true
            },
            "connectionErrorMessage": {
              "type": "string",
              "description": "The error message, if any, from the last connection attempt.",
              "readOnly": true
            }
          }
        },
        "sessionDetails": {
          "type": "array",
          "description": "Details of the remote support session.",
          "items": {
            "type": "object",
            "description": "Represents a remote support session.",
            "properties": {
              "sessionId": {
                "type": "string",
                "description": "Unique session Id.",
                "readOnly": true
              },
              "sessionStartTime": {
                "type": "string",
                "format": "date-time",
                "description": "The start time of the remote support session, in UTC.",
                "readOnly": true
              },
              "sessionEndTime": {
                "type": "string",
                "format": "date-time",
                "description": "The end time of the remote support session, in UTC.",
                "readOnly": true
              },
              "accessLevel": {
                "description": "The level of access granted during the remote support session.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "None",
                  "Diagnostics",
                  "DiagnosticsAndRepair"
                ],
                "x-ms-enum": {
                  "name": "RemoteSupportAccessLevel",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "None",
                      "value": "None",
                      "description": "No remote support access is granted."
                    },
                    {
                      "name": "Diagnostics",
                      "value": "Diagnostics",
                      "description": "Access is limited to diagnostics information only."
                    },
                    {
                      "name": "DiagnosticsAndRepair",
                      "value": "DiagnosticsAndRepair",
                      "description": "Access includes diagnostics information and the ability to perform repairs."
                    }
                  ]
                }
              },
              "transcriptLocation": {
                "type": "string",
                "description": "The location where the session transcript is stored.",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "sessionId"
          ]
        }
      }
    },
    "RemoteSupportSession": {
      "type": "object",
      "description": "Represents a remote support session.",
      "properties": {
        "sessionId": {
          "type": "string",
          "description": "Unique session Id.",
          "readOnly": true
        },
        "sessionStartTime": {
          "type": "string",
          "format": "date-time",
          "description": "The start time of the remote support session, in UTC.",
          "readOnly": true
        },
        "sessionEndTime": {
          "type": "string",
          "format": "date-time",
          "description": "The end time of the remote support session, in UTC.",
          "readOnly": true
        },
        "accessLevel": {
          "description": "The level of access granted during the remote support session.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "None",
            "Diagnostics",
            "DiagnosticsAndRepair"
          ],
          "x-ms-enum": {
            "name": "RemoteSupportAccessLevel",
            "modelAsString": true,
            "values": [
              {
                "name": "None",
                "value": "None",
                "description": "No remote support access is granted."
              },
              {
                "name": "Diagnostics",
                "value": "Diagnostics",
                "description": "Access is limited to diagnostics information only."
              },
              {
                "name": "DiagnosticsAndRepair",
                "value": "DiagnosticsAndRepair",
                "description": "Access includes diagnostics information and the ability to perform repairs."
              }
            ]
          }
        },
        "transcriptLocation": {
          "type": "string",
          "description": "The location where the session transcript is stored.",
          "readOnly": true
        }
      }
    },
    "RemoteSupportType": {
      "type": "string",
      "description": "Defines the type of remote support action to be performed on an edge device.",
      "enum": [
        "Enable",
        "Revoke"
      ],
      "x-ms-enum": {
        "name": "RemoteSupportType",
        "modelAsString": true,
        "values": [
          {
            "name": "Enable",
            "value": "Enable",
            "description": "Enables remote support for the edge device."
          },
          {
            "name": "Revoke",
            "value": "Revoke",
            "description": "Revokes previously granted remote support access for the edge device."
          }
        ]
      }
    },
    "ArcExtensionState": {
      "type": "string",
      "description": "Arc extension installation state.",
      "enum": [
        "NotSpecified",
        "Succeeded",
        "Failed",
        "Canceled",
        "Accepted",
        "Creating",
        "Updating",
        "Moving",
        "Deleting",
        "Deleted"
      ],
      "x-ms-enum": {
        "name": "ArcExtensionState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "Arc extension state is not specified."
          },
          {
            "name": "Succeeded",
            "value": "Succeeded",
            "description": "Arc extension state is Succeeded."
          },
          {
            "name": "Failed",
            "value": "Failed",
            "description": "Arc extension state is Failed."
          },
          {
            "name": "Canceled",
            "value": "Canceled",
            "description": "Arc extension state is Canceled."
          },
          {
            "name": "Accepted",
            "value": "Accepted",
            "description": "Arc extension state is Accepted when extension installation triggered."
          },
          {
            "name": "Creating",
            "value": "Creating",
            "description": "Arc extension is in Creating State."
          },
          {
            "name": "Updating",
            "value": "Updating",
            "description": "Arc extension is in Updating State."
          },
          {
            "name": "Moving",
            "value": "Moving",
            "description": "Arc extension is in Moving State."
          },
          {
            "name": "Deleting",
            "value": "Deleting",
            "description": "Arc extension is in Deleting State."
          },
          {
            "name": "Deleted",
            "value": "Deleted",
            "description": "Arc extension is in Deleted State."
          }
        ]
      }
    },
    "DeviceConfiguration": {
      "type": "object",
      "description": "The device Configuration for edge device.",
      "properties": {
        "nicDetails": {
          "type": "array",
          "description": "NIC Details of device",
          "items": {
            "type": "object",
            "description": "The NIC Detail of a device.",
            "properties": {
              "adapterName": {
                "type": "string",
                "description": "Adapter Name of NIC"
              },
              "interfaceDescription": {
                "type": "string",
                "description": "Interface Description of NIC"
              },
              "componentId": {
                "type": "string",
                "description": "Component Id of NIC"
              },
              "driverVersion": {
                "type": "string",
                "description": "Driver Version of NIC"
              },
              "ip4Address": {
                "type": "string",
                "description": "Subnet Mask of NIC"
              },
              "subnetMask": {
                "type": "string",
                "description": "Subnet Mask of NIC"
              },
              "defaultGateway": {
                "type": "string",
                "description": "Default Gateway of NIC"
              },
              "dnsServers": {
                "type": "array",
                "description": "DNS Servers for NIC",
                "items": {
                  "type": "string"
                },
                "x-ms-identifiers": []
              },
              "defaultIsolationId": {
                "type": "string",
                "description": "Default Isolation of Management NIC"
              }
            }
          },
          "x-ms-identifiers": [
            "adapterName"
          ]
        },
        "deviceMetadata": {
          "type": "string",
          "description": "Device metadata details."
        }
      }
    },
    "DeviceKind": {
      "type": "string",
      "description": "Edge device kind.",
      "enum": [
        "HCI"
      ],
      "default": "HCI",
      "x-ms-enum": {
        "name": "DeviceKind",
        "modelAsString": true,
        "values": [
          {
            "name": "HCI",
            "value": "HCI",
            "description": "Arc-enabled edge device with HCI OS."
          }
        ]
      }
    },
    "DeviceState": {
      "type": "string",
      "description": "The edge device state.",
      "enum": [
        "NotSpecified",
        "Connected",
        "Disconnected",
        "Repairing",
        "Draining",
        "InMaintenance",
        "Resuming",
        "Processing"
      ],
      "x-ms-enum": {
        "name": "DeviceState",
        "modelAsString": true,
        "values": [
          {
            "name": "NotSpecified",
            "value": "NotSpecified",
            "description": "The edge device state is not specified."
          },
          {
            "name": "Connected",
            "value": "Connected",
            "description": "The edge device state is in connected state."
          },
          {
            "name": "Disconnected",
            "value": "Disconnected",
            "description": "The edge device state is in disconnected state."
          },
          {
            "name": "Repairing",
            "value": "Repairing",
            "description": "The edge device state is in repairing state."
          },
          {
            "name": "Draining",
            "value": "Draining",
            "description": "The edge device state is in draining state."
          },
          {
            "name": "InMaintenance",
            "value": "InMaintenance",
            "description": "The edge device state is in maintenance state."
          },
          {
            "name": "Resuming",
            "value": "Resuming",
            "description": "The edge device state is in resuming state."
          },
          {
            "name": "Processing",
            "value": "Processing",
            "description": "The edge device state is in processing state."
          }
        ]
      }
    },
    "EdgeDevice": {
      "type": "object",
      "description": "Edge device resource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "kind": {
          "description": "Device kind to support polymorphic resource.",
          "x-ms-mutability": [
            "create",
            "read"
          ],
          "type": "string",
          "enum": [
            "HCI"
          ],
          "default": "HCI",
          "x-ms-enum": {
            "name": "DeviceKind",
            "modelAsString": true,
            "values": [
              {
                "name": "HCI",
                "value": "HCI",
                "description": "Arc-enabled edge device with HCI OS."
              }
            ]
          }
        }
      },
      "discriminator": "kind",
      "required": [
        "kind"
      ]
    },
    "EdgeDeviceListResult": {
      "type": "object",
      "description": "The response of a EdgeDevice list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The EdgeDevice items on this page",
          "items": {
            "type": "object",
            "description": "Edge device resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "kind": {
                "description": "Device kind to support polymorphic resource.",
                "x-ms-mutability": [
                  "create",
                  "read"
                ],
                "type": "string",
                "enum": [
                  "HCI"
                ],
                "default": "HCI",
                "x-ms-enum": {
                  "name": "DeviceKind",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "HCI",
                      "value": "HCI",
                      "description": "Arc-enabled edge device with HCI OS."
                    }
                  ]
                }
              }
            },
            "discriminator": "kind",
            "required": [
              "kind"
            ]
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "EdgeDeviceProperties": {
      "type": "object",
      "description": "Edge Device properties",
      "properties": {
        "deviceConfiguration": {
          "description": "Device Configuration",
          "type": "object",
          "properties": {
            "nicDetails": {
              "type": "array",
              "description": "NIC Details of device",
              "items": {
                "type": "object",
                "description": "The NIC Detail of a device.",
                "properties": {
                  "adapterName": {
                    "type": "string",
                    "description": "Adapter Name of NIC"
                  },
                  "interfaceDescription": {
                    "type": "string",
                    "description": "Interface Description of NIC"
                  },
                  "componentId": {
                    "type": "string",
                    "description": "Component Id of NIC"
                  },
                  "driverVersion": {
                    "type": "string",
                    "description": "Driver Version of NIC"
                  },
                  "ip4Address": {
                    "type": "string",
                    "description": "Subnet Mask of NIC"
                  },
                  "subnetMask": {
                    "type": "string",
                    "description": "Subnet Mask of NIC"
                  },
                  "defaultGateway": {
                    "type": "string",
                    "description": "Default Gateway of NIC"
                  },
                  "dnsServers": {
                    "type": "array",
                    "description": "DNS Servers for NIC",
                    "items": {
                      "type": "string"
                    },
                    "x-ms-identifiers": []
                  },
                  "defaultIsolationId": {
                    "type": "string",
                    "description": "Default Isolation of Management NIC"
                  }
                }
              },
              "x-ms-identifiers": [
                "adapterName"
              ]
            },
            "deviceMetadata": {
              "type": "string",
              "description": "Device metadata details."
            }
          }
        },
        "provisioningState": {
          "description": "Provisioning state of edgeDevice resource",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "NotSpecified",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The resource provision state is not specified"
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is being provisioned"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted"
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource create request has been accepted"
              }
            ]
          }
        }
      }
    },
    "ErrorDetail": {
      "type": "object",
      "description": "details of validation failure",
      "properties": {
        "exception": {
          "type": "string",
          "description": "Exception details while installing extension.",
          "readOnly": true
        }
      }
    },
    "Extension": {
      "description": "Details of a particular extension in HCI Cluster.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Describes Machine Extension Properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Extension proxy resource. Indicates the current lifecycle status of the resource, such as whether it's being created, updated, deleted, or has encountered an error.",
              "type": "string",
              "enum": [
                "NotSpecified",
                "Error",
                "Succeeded",
                "Failed",
                "Canceled",
                "Connected",
                "Disconnected",
                "Deleted",
                "Creating",
                "Updating",
                "Deleting",
                "Moving",
                "PartiallySucceeded",
                "PartiallyConnected",
                "InProgress",
                "Accepted",
                "Provisioning"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The provisioning state is not specified."
                  },
                  {
                    "name": "Error",
                    "value": "Error",
                    "description": "An error occurred during provisioning."
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Provisioning completed successfully."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Provisioning failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Provisioning was canceled."
                  },
                  {
                    "name": "Connected",
                    "value": "Connected",
                    "description": "The resource is connected."
                  },
                  {
                    "name": "Disconnected",
                    "value": "Disconnected",
                    "description": "The resource is disconnected."
                  },
                  {
                    "name": "Deleted",
                    "value": "Deleted",
                    "description": "The resource has been deleted."
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "The resource is being created."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is being updated."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted."
                  },
                  {
                    "name": "Moving",
                    "value": "Moving",
                    "description": "The resource is being moved."
                  },
                  {
                    "name": "PartiallySucceeded",
                    "value": "PartiallySucceeded",
                    "description": "Provisioning partially succeeded."
                  },
                  {
                    "name": "PartiallyConnected",
                    "value": "PartiallyConnected",
                    "description": "The resource is partially connected."
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress",
                    "description": "Provisioning is in progress."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "Provisioning request has been accepted."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is currently provisioning."
                  }
                ]
              },
              "readOnly": true
            },
            "extensionParameters": {
              "description": "Parameters specific to this extension type.",
              "x-ms-client-flatten": true,
              "type": "object",
              "properties": {
                "forceUpdateTag": {
                  "type": "string",
                  "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                },
                "publisher": {
                  "type": "string",
                  "description": "The name of the extension handler publisher."
                },
                "type": {
                  "type": "string",
                  "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                },
                "typeHandlerVersion": {
                  "type": "string",
                  "description": "Specifies the version of the script handler. Latest version would be used if not specified."
                },
                "autoUpgradeMinorVersion": {
                  "type": "boolean",
                  "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                },
                "settings": {
                  "type": "object",
                  "description": "Json formatted public settings for the extension."
                },
                "protectedSettings": {
                  "type": "object",
                  "description": "Protected settings (may contain secrets).",
                  "x-ms-secret": true
                },
                "enableAutomaticUpgrade": {
                  "type": "boolean",
                  "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                }
              }
            },
            "aggregateState": {
              "description": "Aggregate state of Arc Extensions across the nodes in this HCI cluster. This reflects the overall status of the extension deployment and operation across all nodes.",
              "type": "string",
              "enum": [
                "NotSpecified",
                "Error",
                "Succeeded",
                "Canceled",
                "Failed",
                "Connected",
                "Disconnected",
                "Deleted",
                "Creating",
                "Updating",
                "Deleting",
                "Moving",
                "PartiallySucceeded",
                "PartiallyConnected",
                "InProgress",
                "Accepted",
                "Provisioning",
                "UpgradeFailedRollbackSucceeded"
              ],
              "x-ms-enum": {
                "name": "ExtensionAggregateState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The aggregate state is not specified."
                  },
                  {
                    "name": "Error",
                    "value": "Error",
                    "description": "An error occurred in the aggregate state."
                  },
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The operation succeeded across all nodes."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The operation was canceled across the nodes."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The operation failed on all or most nodes."
                  },
                  {
                    "name": "Connected",
                    "value": "Connected",
                    "description": "All nodes are connected."
                  },
                  {
                    "name": "Disconnected",
                    "value": "Disconnected",
                    "description": "All nodes are disconnected."
                  },
                  {
                    "name": "Deleted",
                    "value": "Deleted",
                    "description": "The extension has been deleted from all nodes."
                  },
                  {
                    "name": "Creating",
                    "value": "Creating",
                    "description": "The extension is being created across the nodes."
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The extension is being updated across the nodes."
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The extension is being deleted across the nodes."
                  },
                  {
                    "name": "Moving",
                    "value": "Moving",
                    "description": "The extension is being moved across the nodes."
                  },
                  {
                    "name": "PartiallySucceeded",
                    "value": "PartiallySucceeded",
                    "description": "The operation succeeded on some nodes."
                  },
                  {
                    "name": "PartiallyConnected",
                    "value": "PartiallyConnected",
                    "description": "Some nodes are connected, others are not."
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress",
                    "description": "The operation is currently in progress across the nodes."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The operation has been accepted and is pending execution."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The extension is currently being provisioned across the nodes."
                  },
                  {
                    "name": "UpgradeFailedRollbackSucceeded",
                    "value": "UpgradeFailedRollbackSucceeded",
                    "description": "Extension upgrade failed, but rollback succeeded across the nodes."
                  }
                ]
              },
              "readOnly": true
            },
            "perNodeExtensionDetails": {
              "description": "State of Arc Extension in each of the nodes.",
              "type": "array",
              "items": {
                "description": "Status of Arc Extension for a particular node in HCI Cluster.",
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the node in HCI Cluster.",
                    "type": "string",
                    "readOnly": true
                  },
                  "extension": {
                    "description": "Fully qualified resource ID for the particular Arc Extension on this node.",
                    "type": "string",
                    "readOnly": true
                  },
                  "typeHandlerVersion": {
                    "type": "string",
                    "description": "Specifies the version of the script handler.",
                    "readOnly": true
                  },
                  "state": {
                    "description": "State of Arc Extension in this node. Reflects the current lifecycle status of the extension on the individual node, such as whether it's being created, updated, deleted, or has encountered an error.",
                    "type": "string",
                    "enum": [
                      "NotSpecified",
                      "Error",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "Connected",
                      "Disconnected",
                      "Deleted",
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Moving",
                      "PartiallySucceeded",
                      "PartiallyConnected",
                      "InProgress",
                      "Accepted",
                      "Provisioning"
                    ],
                    "x-ms-enum": {
                      "name": "NodeExtensionState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "The state is not specified."
                        },
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "An error occurred during the extension lifecycle."
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The extension operation completed successfully."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The extension operation was canceled."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The extension operation failed."
                        },
                        {
                          "name": "Connected",
                          "value": "Connected",
                          "description": "The extension is connected on the node."
                        },
                        {
                          "name": "Disconnected",
                          "value": "Disconnected",
                          "description": "The extension is disconnected on the node."
                        },
                        {
                          "name": "Deleted",
                          "value": "Deleted",
                          "description": "The extension has been deleted from the node."
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "The extension is being created on the node."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The extension is being updated on the node."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The extension is being deleted from the node."
                        },
                        {
                          "name": "Moving",
                          "value": "Moving",
                          "description": "The extension is being moved on the node."
                        },
                        {
                          "name": "PartiallySucceeded",
                          "value": "PartiallySucceeded",
                          "description": "The extension operation partially succeeded."
                        },
                        {
                          "name": "PartiallyConnected",
                          "value": "PartiallyConnected",
                          "description": "The extension is partially connected on the node."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "The extension operation is currently in progress."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The extension operation has been accepted and is pending execution."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The extension is currently being provisioned on the node."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "instanceView": {
                    "description": "The extension instance view.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The extension name."
                      },
                      "type": {
                        "type": "string",
                        "description": "Specifies the type of the extension; an example is \"MicrosoftMonitoringAgent\"."
                      },
                      "typeHandlerVersion": {
                        "type": "string",
                        "description": "Specifies the version of the script handler."
                      },
                      "status": {
                        "type": "object",
                        "description": "Instance view status.",
                        "properties": {
                          "code": {
                            "type": "string",
                            "description": "The status code."
                          },
                          "level": {
                            "type": "string",
                            "description": "The level code. Indicates the severity or importance of the status message.",
                            "enum": [
                              "Info",
                              "Warning",
                              "Error"
                            ],
                            "x-ms-enum": {
                              "name": "StatusLevelTypes",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Info",
                                  "value": "Info",
                                  "description": "Informational message indicating normal operation."
                                },
                                {
                                  "name": "Warning",
                                  "value": "Warning",
                                  "description": "Warning message indicating a potential issue or non-critical problem."
                                },
                                {
                                  "name": "Error",
                                  "value": "Error",
                                  "description": "Error message indicating a failure or critical issue."
                                }
                              ]
                            }
                          },
                          "displayStatus": {
                            "type": "string",
                            "description": "The short localizable label for the status."
                          },
                          "message": {
                            "type": "string",
                            "description": "The detailed status message, including for alerts and error messages."
                          },
                          "time": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time of the status."
                          }
                        }
                      }
                    }
                  }
                }
              },
              "readOnly": true
            },
            "managedBy": {
              "description": "Indicates if the extension is managed by Azure or the user. This determines who controls the deployment and lifecycle of the extension.",
              "type": "string",
              "enum": [
                "Azure",
                "User"
              ],
              "x-ms-enum": {
                "name": "ExtensionManagedBy",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Azure",
                    "value": "Azure",
                    "description": "The extension is managed by Azure."
                  },
                  {
                    "name": "User",
                    "value": "User",
                    "description": "The extension is managed by the user."
                  }
                ]
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "ExtensionManagedBy": {
      "type": "string",
      "description": "Arc extension managed by Azure or User.",
      "enum": [
        "User",
        "Azure"
      ],
      "x-ms-enum": {
        "name": "ExtensionManagedBy",
        "modelAsString": true,
        "values": [
          {
            "name": "User",
            "value": "User",
            "description": "The extension is managed by the user."
          },
          {
            "name": "Azure",
            "value": "Azure",
            "description": "The extension is managed by Azure."
          }
        ]
      }
    },
    "ExtensionProfile": {
      "type": "object",
      "description": "Extensions details for edge device.",
      "properties": {
        "extensions": {
          "type": "array",
          "description": "List of Arc extensions installed on edge device.",
          "items": {
            "type": "object",
            "description": "Arc extension installed on edge device.",
            "properties": {
              "extensionName": {
                "type": "string",
                "description": "Arc extension name installed on edge device.",
                "readOnly": true
              },
              "state": {
                "description": "Arc extension state from arc machine extension.",
                "readOnly": true,
                "type": "string",
                "enum": [
                  "NotSpecified",
                  "Succeeded",
                  "Failed",
                  "Canceled",
                  "Accepted",
                  "Creating",
                  "Updating",
                  "Moving",
                  "Deleting",
                  "Deleted"
                ],
                "x-ms-enum": {
                  "name": "ArcExtensionState",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "NotSpecified",
                      "value": "NotSpecified",
                      "description": "Arc extension state is not specified."
                    },
                    {
                      "name": "Succeeded",
                      "value": "Succeeded",
                      "description": "Arc extension state is Succeeded."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "Arc extension state is Failed."
                    },
                    {
                      "name": "Canceled",
                      "value": "Canceled",
                      "description": "Arc extension state is Canceled."
                    },
                    {
                      "name": "Accepted",
                      "value": "Accepted",
                      "description": "Arc extension state is Accepted when extension installation triggered."
                    },
                    {
                      "name": "Creating",
                      "value": "Creating",
                      "description": "Arc extension is in Creating State."
                    },
                    {
                      "name": "Updating",
                      "value": "Updating",
                      "description": "Arc extension is in Updating State."
                    },
                    {
                      "name": "Moving",
                      "value": "Moving",
                      "description": "Arc extension is in Moving State."
                    },
                    {
                      "name": "Deleting",
                      "value": "Deleting",
                      "description": "Arc extension is in Deleting State."
                    },
                    {
                      "name": "Deleted",
                      "value": "Deleted",
                      "description": "Arc extension is in Deleted State."
                    }
                  ]
                }
              },
              "errorDetails": {
                "type": "array",
                "description": "Error details while installing Arc extension.",
                "items": {
                  "type": "object",
                  "description": "details of validation failure",
                  "properties": {
                    "exception": {
                      "type": "string",
                      "description": "Exception details while installing extension.",
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": []
              },
              "extensionResourceId": {
                "type": "string",
                "format": "arm-id",
                "description": "Arc Extension Azure resource id.",
                "readOnly": true
              },
              "typeHandlerVersion": {
                "type": "string",
                "description": "Extension version installed.",
                "readOnly": true
              },
              "managedBy": {
                "type": "string",
                "description": "Indicates whether the extension is managed by the user or by Azure.",
                "default": "Azure",
                "enum": [
                  "User",
                  "Azure"
                ],
                "x-ms-enum": {
                  "name": "ExtensionManagedBy",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "User",
                      "value": "User",
                      "description": "The extension is managed by the user."
                    },
                    {
                      "name": "Azure",
                      "value": "Azure",
                      "description": "The extension is managed by Azure."
                    }
                  ]
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "extensionName"
          ]
        }
      }
    },
    "HciEdgeDevice": {
      "type": "object",
      "description": "Arc-enabled edge device with HCI OS.",
      "properties": {
        "properties": {
          "description": "properties for Arc-enabled edge device with HCI OS.",
          "type": "object",
          "properties": {
            "deviceConfiguration": {
              "description": "Device Configuration",
              "type": "object",
              "properties": {
                "nicDetails": {
                  "type": "array",
                  "description": "NIC Details of device",
                  "items": {
                    "type": "object",
                    "description": "The NIC Detail of a device.",
                    "properties": {
                      "adapterName": {
                        "type": "string",
                        "description": "Adapter Name of NIC"
                      },
                      "interfaceDescription": {
                        "type": "string",
                        "description": "Interface Description of NIC"
                      },
                      "componentId": {
                        "type": "string",
                        "description": "Component Id of NIC"
                      },
                      "driverVersion": {
                        "type": "string",
                        "description": "Driver Version of NIC"
                      },
                      "ip4Address": {
                        "type": "string",
                        "description": "Subnet Mask of NIC"
                      },
                      "subnetMask": {
                        "type": "string",
                        "description": "Subnet Mask of NIC"
                      },
                      "defaultGateway": {
                        "type": "string",
                        "description": "Default Gateway of NIC"
                      },
                      "dnsServers": {
                        "type": "array",
                        "description": "DNS Servers for NIC",
                        "items": {
                          "type": "string"
                        },
                        "x-ms-identifiers": []
                      },
                      "defaultIsolationId": {
                        "type": "string",
                        "description": "Default Isolation of Management NIC"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "adapterName"
                  ]
                },
                "deviceMetadata": {
                  "type": "string",
                  "description": "Device metadata details."
                }
              }
            },
            "provisioningState": {
              "description": "Provisioning state of edgeDevice resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "NotSpecified",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The resource provision state is not specified"
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is being provisioned"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource create request has been accepted"
                  }
                ]
              }
            },
            "reportedProperties": {
              "description": "The instance view of all current configurations on HCI device.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "deviceState": {
                  "description": "edge device state.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "NotSpecified",
                    "Connected",
                    "Disconnected",
                    "Repairing",
                    "Draining",
                    "InMaintenance",
                    "Resuming",
                    "Processing"
                  ],
                  "x-ms-enum": {
                    "name": "DeviceState",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "NotSpecified",
                        "value": "NotSpecified",
                        "description": "The edge device state is not specified."
                      },
                      {
                        "name": "Connected",
                        "value": "Connected",
                        "description": "The edge device state is in connected state."
                      },
                      {
                        "name": "Disconnected",
                        "value": "Disconnected",
                        "description": "The edge device state is in disconnected state."
                      },
                      {
                        "name": "Repairing",
                        "value": "Repairing",
                        "description": "The edge device state is in repairing state."
                      },
                      {
                        "name": "Draining",
                        "value": "Draining",
                        "description": "The edge device state is in draining state."
                      },
                      {
                        "name": "InMaintenance",
                        "value": "InMaintenance",
                        "description": "The edge device state is in maintenance state."
                      },
                      {
                        "name": "Resuming",
                        "value": "Resuming",
                        "description": "The edge device state is in resuming state."
                      },
                      {
                        "name": "Processing",
                        "value": "Processing",
                        "description": "The edge device state is in processing state."
                      }
                    ]
                  }
                },
                "extensionProfile": {
                  "description": "Extensions details for edge device.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "extensions": {
                      "type": "array",
                      "description": "List of Arc extensions installed on edge device.",
                      "items": {
                        "type": "object",
                        "description": "Arc extension installed on edge device.",
                        "properties": {
                          "extensionName": {
                            "type": "string",
                            "description": "Arc extension name installed on edge device.",
                            "readOnly": true
                          },
                          "state": {
                            "description": "Arc extension state from arc machine extension.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "NotSpecified",
                              "Succeeded",
                              "Failed",
                              "Canceled",
                              "Accepted",
                              "Creating",
                              "Updating",
                              "Moving",
                              "Deleting",
                              "Deleted"
                            ],
                            "x-ms-enum": {
                              "name": "ArcExtensionState",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "NotSpecified",
                                  "value": "NotSpecified",
                                  "description": "Arc extension state is not specified."
                                },
                                {
                                  "name": "Succeeded",
                                  "value": "Succeeded",
                                  "description": "Arc extension state is Succeeded."
                                },
                                {
                                  "name": "Failed",
                                  "value": "Failed",
                                  "description": "Arc extension state is Failed."
                                },
                                {
                                  "name": "Canceled",
                                  "value": "Canceled",
                                  "description": "Arc extension state is Canceled."
                                },
                                {
                                  "name": "Accepted",
                                  "value": "Accepted",
                                  "description": "Arc extension state is Accepted when extension installation triggered."
                                },
                                {
                                  "name": "Creating",
                                  "value": "Creating",
                                  "description": "Arc extension is in Creating State."
                                },
                                {
                                  "name": "Updating",
                                  "value": "Updating",
                                  "description": "Arc extension is in Updating State."
                                },
                                {
                                  "name": "Moving",
                                  "value": "Moving",
                                  "description": "Arc extension is in Moving State."
                                },
                                {
                                  "name": "Deleting",
                                  "value": "Deleting",
                                  "description": "Arc extension is in Deleting State."
                                },
                                {
                                  "name": "Deleted",
                                  "value": "Deleted",
                                  "description": "Arc extension is in Deleted State."
                                }
                              ]
                            }
                          },
                          "errorDetails": {
                            "type": "array",
                            "description": "Error details while installing Arc extension.",
                            "items": {
                              "type": "object",
                              "description": "details of validation failure",
                              "properties": {
                                "exception": {
                                  "type": "string",
                                  "description": "Exception details while installing extension.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          },
                          "extensionResourceId": {
                            "type": "string",
                            "format": "arm-id",
                            "description": "Arc Extension Azure resource id.",
                            "readOnly": true
                          },
                          "typeHandlerVersion": {
                            "type": "string",
                            "description": "Extension version installed.",
                            "readOnly": true
                          },
                          "managedBy": {
                            "type": "string",
                            "description": "Indicates whether the extension is managed by the user or by Azure.",
                            "default": "Azure",
                            "enum": [
                              "User",
                              "Azure"
                            ],
                            "x-ms-enum": {
                              "name": "ExtensionManagedBy",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "User",
                                  "value": "User",
                                  "description": "The extension is managed by the user."
                                },
                                {
                                  "name": "Azure",
                                  "value": "Azure",
                                  "description": "The extension is managed by Azure."
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "extensionName"
                      ]
                    }
                  }
                },
                "networkProfile": {
                  "description": "HCI device network information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "nicDetails": {
                      "type": "array",
                      "description": "List of NIC Details of device.",
                      "items": {
                        "type": "object",
                        "description": "The NIC Detail of a device.",
                        "properties": {
                          "adapterName": {
                            "type": "string",
                            "description": "Adapter Name of NIC",
                            "readOnly": true
                          },
                          "interfaceDescription": {
                            "type": "string",
                            "description": "Interface Description of NIC",
                            "readOnly": true
                          },
                          "componentId": {
                            "type": "string",
                            "description": "Component Id of NIC",
                            "readOnly": true
                          },
                          "driverVersion": {
                            "type": "string",
                            "description": "Driver Version of NIC",
                            "readOnly": true
                          },
                          "ip4Address": {
                            "type": "string",
                            "description": "Subnet Mask of NIC",
                            "readOnly": true
                          },
                          "subnetMask": {
                            "type": "string",
                            "description": "Subnet Mask of NIC",
                            "readOnly": true
                          },
                          "defaultGateway": {
                            "type": "string",
                            "description": "Default Gateway of NIC",
                            "readOnly": true
                          },
                          "dnsServers": {
                            "type": "array",
                            "description": "DNS Servers for NIC",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true,
                            "x-ms-identifiers": []
                          },
                          "defaultIsolationId": {
                            "type": "string",
                            "description": "Default Isolation of Management NIC",
                            "readOnly": true
                          },
                          "macAddress": {
                            "type": "string",
                            "description": "MAC address information of NIC.",
                            "readOnly": true
                          },
                          "slot": {
                            "type": "string",
                            "description": "The slot attached to the NIC.",
                            "readOnly": true
                          },
                          "switchName": {
                            "type": "string",
                            "description": "The switch attached to the NIC, if any.",
                            "readOnly": true
                          },
                          "nicType": {
                            "type": "string",
                            "description": "The type of NIC, physical, virtual, management.",
                            "readOnly": true
                          },
                          "vlanId": {
                            "type": "string",
                            "description": "The VLAN ID of the physical NIC.",
                            "readOnly": true
                          },
                          "nicStatus": {
                            "type": "string",
                            "description": "The status of NIC, up, disconnected.",
                            "readOnly": true
                          },
                          "rdmaCapability": {
                            "type": "string",
                            "description": "Describes the RDMA capability of the network adapter.",
                            "enum": [
                              "Enabled",
                              "Disabled"
                            ],
                            "default": "Disabled",
                            "x-ms-enum": {
                              "name": "RdmaCapability",
                              "modelAsString": true,
                              "values": [
                                {
                                  "name": "Enabled",
                                  "value": "Enabled",
                                  "description": "Network Adapter on the device is RDMA Capable"
                                },
                                {
                                  "name": "Disabled",
                                  "value": "Disabled",
                                  "description": "Network Adapter on the device is RDMA Capable"
                                }
                              ]
                            },
                            "readOnly": true
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "adapterName"
                      ]
                    },
                    "switchDetails": {
                      "type": "array",
                      "description": "List of switch details for edge device.",
                      "items": {
                        "type": "object",
                        "description": "List of switch details for edge device.",
                        "properties": {
                          "switchName": {
                            "type": "string",
                            "description": "The name of the switch.",
                            "readOnly": true
                          },
                          "switchType": {
                            "type": "string",
                            "description": "The type of the switch. e.g. external, internal.",
                            "readOnly": true
                          },
                          "extensions": {
                            "type": "array",
                            "description": "This represents extensions installed on virtualSwitch.",
                            "items": {
                              "type": "object",
                              "description": "This represents extensions installed on virtualSwitch.",
                              "properties": {
                                "switchId": {
                                  "type": "string",
                                  "description": "Unique identifier for virtualSwitch.",
                                  "readOnly": true
                                },
                                "extensionName": {
                                  "type": "string",
                                  "description": "This will show extension name for virtualSwitch.",
                                  "readOnly": true
                                },
                                "extensionEnabled": {
                                  "type": "boolean",
                                  "description": "This represents whether extension is enabled on virtualSwitch.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "extensionName"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "switchName"
                      ]
                    },
                    "hostNetwork": {
                      "description": "HostNetwork config to deploy AzureStackHCI Cluster.",
                      "readOnly": true,
                      "type": "object",
                      "properties": {
                        "intents": {
                          "type": "array",
                          "description": "The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.",
                          "items": {
                            "type": "object",
                            "description": "The Intents of a cluster.",
                            "properties": {
                              "scope": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Scope for host network intent.",
                                "readOnly": true
                              },
                              "intentType": {
                                "type": "integer",
                                "format": "int64",
                                "description": "IntentType for host network intent.",
                                "readOnly": true
                              },
                              "isComputeIntentSet": {
                                "type": "boolean",
                                "description": "IsComputeIntentSet for host network intent.",
                                "readOnly": true
                              },
                              "isStorageIntentSet": {
                                "type": "boolean",
                                "description": "IsStorageIntentSet for host network intent.",
                                "readOnly": true
                              },
                              "isOnlyStorage": {
                                "type": "boolean",
                                "description": "IntentType for host network intent.",
                                "readOnly": true
                              },
                              "isManagementIntentSet": {
                                "type": "boolean",
                                "description": "IsManagementIntentSet for host network intent.",
                                "readOnly": true
                              },
                              "isStretchIntentSet": {
                                "type": "boolean",
                                "description": "IsStretchIntentSet for host network intent.",
                                "readOnly": true
                              },
                              "isOnlyStretch": {
                                "type": "boolean",
                                "description": "IsOnlyStretch for host network intent.",
                                "readOnly": true
                              },
                              "isNetworkIntentType": {
                                "type": "boolean",
                                "description": "IsNetworkIntentType for host network intent.",
                                "readOnly": true
                              },
                              "intentName": {
                                "type": "string",
                                "description": "Name of the network intent you wish to create.",
                                "readOnly": true
                              },
                              "intentAdapters": {
                                "type": "array",
                                "description": "Array of adapters used for the network intent.",
                                "items": {
                                  "type": "string"
                                },
                                "readOnly": true
                              },
                              "overrideVirtualSwitchConfiguration": {
                                "type": "boolean",
                                "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                                "readOnly": true
                              },
                              "virtualSwitchConfigurationOverrides": {
                                "description": "Set virtualSwitch ConfigurationOverrides for cluster.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "enableIov": {
                                    "type": "string",
                                    "description": "Enable IoV for Virtual Switch",
                                    "readOnly": true
                                  },
                                  "loadBalancingAlgorithm": {
                                    "type": "string",
                                    "description": "Load Balancing Algorithm for Virtual Switch",
                                    "readOnly": true
                                  }
                                }
                              },
                              "overrideQosPolicy": {
                                "type": "boolean",
                                "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                                "readOnly": true
                              },
                              "qosPolicyOverrides": {
                                "description": "Set QoS PolicyOverrides for cluster.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "priorityValue8021Action_Cluster": {
                                    "type": "string",
                                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                                  },
                                  "priorityValue8021Action_SMB": {
                                    "type": "string",
                                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                                  },
                                  "bandwidthPercentage_SMB": {
                                    "type": "string",
                                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                                  }
                                }
                              },
                              "overrideAdapterProperty": {
                                "type": "boolean",
                                "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                                "readOnly": true
                              },
                              "adapterPropertyOverrides": {
                                "description": "Set Adapter PropertyOverrides for cluster.",
                                "readOnly": true,
                                "type": "object",
                                "properties": {
                                  "jumboPacket": {
                                    "type": "string",
                                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                                    "readOnly": true
                                  },
                                  "networkDirect": {
                                    "type": "string",
                                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                                    "readOnly": true
                                  },
                                  "networkDirectTechnology": {
                                    "type": "string",
                                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'",
                                    "readOnly": true
                                  }
                                }
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "intentName"
                          ]
                        },
                        "storageNetworks": {
                          "type": "array",
                          "description": "List of StorageNetworks config to deploy AzureStackHCI Cluster.",
                          "items": {
                            "type": "object",
                            "description": "The StorageNetworks of a cluster.",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the storage network.",
                                "readOnly": true
                              },
                              "networkAdapterName": {
                                "type": "string",
                                "description": "Name of the storage network adapter.",
                                "readOnly": true
                              },
                              "storageVlanId": {
                                "type": "string",
                                "description": "ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic. ",
                                "readOnly": true
                              },
                              "storageAdapterIPInfo": {
                                "type": "array",
                                "description": "List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.",
                                "items": {
                                  "type": "object",
                                  "description": "The StorageAdapter physical nodes of a cluster.",
                                  "properties": {
                                    "physicalNode": {
                                      "type": "string",
                                      "description": "storage adapter physical node name.",
                                      "readOnly": true
                                    },
                                    "ipv4Address": {
                                      "type": "string",
                                      "description": "The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
                                      "readOnly": true
                                    },
                                    "subnetMask": {
                                      "type": "string",
                                      "description": "The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
                                      "readOnly": true
                                    }
                                  }
                                },
                                "readOnly": true,
                                "x-ms-identifiers": [
                                  "physicalNode"
                                ]
                              }
                            }
                          },
                          "readOnly": true,
                          "x-ms-identifiers": [
                            "networkAdapterName"
                          ]
                        },
                        "storageConnectivitySwitchless": {
                          "type": "boolean",
                          "description": "Defines how the storage adapters between nodes are connected either switch or switch less.",
                          "readOnly": true
                        },
                        "enableStorageAutoIp": {
                          "type": "boolean",
                          "description": "Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.",
                          "readOnly": true
                        }
                      }
                    }
                  }
                },
                "osProfile": {
                  "description": "HCI device OS specific information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "bootType": {
                      "type": "string",
                      "description": "The boot type of the device. e.g. UEFI, Legacy etc",
                      "readOnly": true
                    },
                    "assemblyVersion": {
                      "type": "string",
                      "description": "Version of assembly present on device",
                      "readOnly": true
                    }
                  }
                },
                "sbeDeploymentPackageInfo": {
                  "description": "Solution builder extension (SBE) deployment package information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "string",
                      "description": "SBE deployment validation code.",
                      "readOnly": true
                    },
                    "message": {
                      "type": "string",
                      "description": "A detailed message that explains the SBE package validation result.",
                      "readOnly": true
                    },
                    "sbeManifest": {
                      "type": "string",
                      "description": "This represents discovered update results for matching updates and store it as SBE manifest.",
                      "readOnly": true
                    }
                  }
                },
                "storageProfile": {
                  "description": "Hci device storage specific information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "poolableDisksCount": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Number of storage disks in the device with $CanPool as true.",
                      "readOnly": true
                    }
                  }
                },
                "hardwareProfile": {
                  "description": "Hci device hardware specific information.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "processorType": {
                      "type": "string",
                      "description": "Process type of the device",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Edge device resource.",
          "properties": {
            "id": {
              "type": "string",
              "format": "arm-id",
              "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            },
            "kind": {
              "description": "Device kind to support polymorphic resource.",
              "x-ms-mutability": [
                "create",
                "read"
              ],
              "type": "string",
              "enum": [
                "HCI"
              ],
              "default": "HCI",
              "x-ms-enum": {
                "name": "DeviceKind",
                "modelAsString": true,
                "values": [
                  {
                    "name": "HCI",
                    "value": "HCI",
                    "description": "Arc-enabled edge device with HCI OS."
                  }
                ]
              }
            }
          },
          "discriminator": "kind",
          "required": [
            "kind"
          ]
        }
      ],
      "x-ms-discriminator-value": "HCI"
    },
    "HciEdgeDeviceProperties": {
      "type": "object",
      "description": "properties for Arc-enabled edge device with HCI OS.",
      "properties": {
        "reportedProperties": {
          "description": "The instance view of all current configurations on HCI device.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "deviceState": {
              "description": "edge device state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "NotSpecified",
                "Connected",
                "Disconnected",
                "Repairing",
                "Draining",
                "InMaintenance",
                "Resuming",
                "Processing"
              ],
              "x-ms-enum": {
                "name": "DeviceState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The edge device state is not specified."
                  },
                  {
                    "name": "Connected",
                    "value": "Connected",
                    "description": "The edge device state is in connected state."
                  },
                  {
                    "name": "Disconnected",
                    "value": "Disconnected",
                    "description": "The edge device state is in disconnected state."
                  },
                  {
                    "name": "Repairing",
                    "value": "Repairing",
                    "description": "The edge device state is in repairing state."
                  },
                  {
                    "name": "Draining",
                    "value": "Draining",
                    "description": "The edge device state is in draining state."
                  },
                  {
                    "name": "InMaintenance",
                    "value": "InMaintenance",
                    "description": "The edge device state is in maintenance state."
                  },
                  {
                    "name": "Resuming",
                    "value": "Resuming",
                    "description": "The edge device state is in resuming state."
                  },
                  {
                    "name": "Processing",
                    "value": "Processing",
                    "description": "The edge device state is in processing state."
                  }
                ]
              }
            },
            "extensionProfile": {
              "description": "Extensions details for edge device.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "extensions": {
                  "type": "array",
                  "description": "List of Arc extensions installed on edge device.",
                  "items": {
                    "type": "object",
                    "description": "Arc extension installed on edge device.",
                    "properties": {
                      "extensionName": {
                        "type": "string",
                        "description": "Arc extension name installed on edge device.",
                        "readOnly": true
                      },
                      "state": {
                        "description": "Arc extension state from arc machine extension.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "NotSpecified",
                          "Succeeded",
                          "Failed",
                          "Canceled",
                          "Accepted",
                          "Creating",
                          "Updating",
                          "Moving",
                          "Deleting",
                          "Deleted"
                        ],
                        "x-ms-enum": {
                          "name": "ArcExtensionState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "NotSpecified",
                              "value": "NotSpecified",
                              "description": "Arc extension state is not specified."
                            },
                            {
                              "name": "Succeeded",
                              "value": "Succeeded",
                              "description": "Arc extension state is Succeeded."
                            },
                            {
                              "name": "Failed",
                              "value": "Failed",
                              "description": "Arc extension state is Failed."
                            },
                            {
                              "name": "Canceled",
                              "value": "Canceled",
                              "description": "Arc extension state is Canceled."
                            },
                            {
                              "name": "Accepted",
                              "value": "Accepted",
                              "description": "Arc extension state is Accepted when extension installation triggered."
                            },
                            {
                              "name": "Creating",
                              "value": "Creating",
                              "description": "Arc extension is in Creating State."
                            },
                            {
                              "name": "Updating",
                              "value": "Updating",
                              "description": "Arc extension is in Updating State."
                            },
                            {
                              "name": "Moving",
                              "value": "Moving",
                              "description": "Arc extension is in Moving State."
                            },
                            {
                              "name": "Deleting",
                              "value": "Deleting",
                              "description": "Arc extension is in Deleting State."
                            },
                            {
                              "name": "Deleted",
                              "value": "Deleted",
                              "description": "Arc extension is in Deleted State."
                            }
                          ]
                        }
                      },
                      "errorDetails": {
                        "type": "array",
                        "description": "Error details while installing Arc extension.",
                        "items": {
                          "type": "object",
                          "description": "details of validation failure",
                          "properties": {
                            "exception": {
                              "type": "string",
                              "description": "Exception details while installing extension.",
                              "readOnly": true
                            }
                          }
                        },
                        "readOnly": true,
                        "x-ms-identifiers": []
                      },
                      "extensionResourceId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Arc Extension Azure resource id.",
                        "readOnly": true
                      },
                      "typeHandlerVersion": {
                        "type": "string",
                        "description": "Extension version installed.",
                        "readOnly": true
                      },
                      "managedBy": {
                        "type": "string",
                        "description": "Indicates whether the extension is managed by the user or by Azure.",
                        "default": "Azure",
                        "enum": [
                          "User",
                          "Azure"
                        ],
                        "x-ms-enum": {
                          "name": "ExtensionManagedBy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "User",
                              "value": "User",
                              "description": "The extension is managed by the user."
                            },
                            {
                              "name": "Azure",
                              "value": "Azure",
                              "description": "The extension is managed by Azure."
                            }
                          ]
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "extensionName"
                  ]
                }
              }
            },
            "networkProfile": {
              "description": "HCI device network information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "nicDetails": {
                  "type": "array",
                  "description": "List of NIC Details of device.",
                  "items": {
                    "type": "object",
                    "description": "The NIC Detail of a device.",
                    "properties": {
                      "adapterName": {
                        "type": "string",
                        "description": "Adapter Name of NIC",
                        "readOnly": true
                      },
                      "interfaceDescription": {
                        "type": "string",
                        "description": "Interface Description of NIC",
                        "readOnly": true
                      },
                      "componentId": {
                        "type": "string",
                        "description": "Component Id of NIC",
                        "readOnly": true
                      },
                      "driverVersion": {
                        "type": "string",
                        "description": "Driver Version of NIC",
                        "readOnly": true
                      },
                      "ip4Address": {
                        "type": "string",
                        "description": "Subnet Mask of NIC",
                        "readOnly": true
                      },
                      "subnetMask": {
                        "type": "string",
                        "description": "Subnet Mask of NIC",
                        "readOnly": true
                      },
                      "defaultGateway": {
                        "type": "string",
                        "description": "Default Gateway of NIC",
                        "readOnly": true
                      },
                      "dnsServers": {
                        "type": "array",
                        "description": "DNS Servers for NIC",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true,
                        "x-ms-identifiers": []
                      },
                      "defaultIsolationId": {
                        "type": "string",
                        "description": "Default Isolation of Management NIC",
                        "readOnly": true
                      },
                      "macAddress": {
                        "type": "string",
                        "description": "MAC address information of NIC.",
                        "readOnly": true
                      },
                      "slot": {
                        "type": "string",
                        "description": "The slot attached to the NIC.",
                        "readOnly": true
                      },
                      "switchName": {
                        "type": "string",
                        "description": "The switch attached to the NIC, if any.",
                        "readOnly": true
                      },
                      "nicType": {
                        "type": "string",
                        "description": "The type of NIC, physical, virtual, management.",
                        "readOnly": true
                      },
                      "vlanId": {
                        "type": "string",
                        "description": "The VLAN ID of the physical NIC.",
                        "readOnly": true
                      },
                      "nicStatus": {
                        "type": "string",
                        "description": "The status of NIC, up, disconnected.",
                        "readOnly": true
                      },
                      "rdmaCapability": {
                        "type": "string",
                        "description": "Describes the RDMA capability of the network adapter.",
                        "enum": [
                          "Enabled",
                          "Disabled"
                        ],
                        "default": "Disabled",
                        "x-ms-enum": {
                          "name": "RdmaCapability",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Enabled",
                              "value": "Enabled",
                              "description": "Network Adapter on the device is RDMA Capable"
                            },
                            {
                              "name": "Disabled",
                              "value": "Disabled",
                              "description": "Network Adapter on the device is RDMA Capable"
                            }
                          ]
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "adapterName"
                  ]
                },
                "switchDetails": {
                  "type": "array",
                  "description": "List of switch details for edge device.",
                  "items": {
                    "type": "object",
                    "description": "List of switch details for edge device.",
                    "properties": {
                      "switchName": {
                        "type": "string",
                        "description": "The name of the switch.",
                        "readOnly": true
                      },
                      "switchType": {
                        "type": "string",
                        "description": "The type of the switch. e.g. external, internal.",
                        "readOnly": true
                      },
                      "extensions": {
                        "type": "array",
                        "description": "This represents extensions installed on virtualSwitch.",
                        "items": {
                          "type": "object",
                          "description": "This represents extensions installed on virtualSwitch.",
                          "properties": {
                            "switchId": {
                              "type": "string",
                              "description": "Unique identifier for virtualSwitch.",
                              "readOnly": true
                            },
                            "extensionName": {
                              "type": "string",
                              "description": "This will show extension name for virtualSwitch.",
                              "readOnly": true
                            },
                            "extensionEnabled": {
                              "type": "boolean",
                              "description": "This represents whether extension is enabled on virtualSwitch.",
                              "readOnly": true
                            }
                          }
                        },
                        "readOnly": true,
                        "x-ms-identifiers": [
                          "extensionName"
                        ]
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "switchName"
                  ]
                },
                "hostNetwork": {
                  "description": "HostNetwork config to deploy AzureStackHCI Cluster.",
                  "readOnly": true,
                  "type": "object",
                  "properties": {
                    "intents": {
                      "type": "array",
                      "description": "The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.",
                      "items": {
                        "type": "object",
                        "description": "The Intents of a cluster.",
                        "properties": {
                          "scope": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Scope for host network intent.",
                            "readOnly": true
                          },
                          "intentType": {
                            "type": "integer",
                            "format": "int64",
                            "description": "IntentType for host network intent.",
                            "readOnly": true
                          },
                          "isComputeIntentSet": {
                            "type": "boolean",
                            "description": "IsComputeIntentSet for host network intent.",
                            "readOnly": true
                          },
                          "isStorageIntentSet": {
                            "type": "boolean",
                            "description": "IsStorageIntentSet for host network intent.",
                            "readOnly": true
                          },
                          "isOnlyStorage": {
                            "type": "boolean",
                            "description": "IntentType for host network intent.",
                            "readOnly": true
                          },
                          "isManagementIntentSet": {
                            "type": "boolean",
                            "description": "IsManagementIntentSet for host network intent.",
                            "readOnly": true
                          },
                          "isStretchIntentSet": {
                            "type": "boolean",
                            "description": "IsStretchIntentSet for host network intent.",
                            "readOnly": true
                          },
                          "isOnlyStretch": {
                            "type": "boolean",
                            "description": "IsOnlyStretch for host network intent.",
                            "readOnly": true
                          },
                          "isNetworkIntentType": {
                            "type": "boolean",
                            "description": "IsNetworkIntentType for host network intent.",
                            "readOnly": true
                          },
                          "intentName": {
                            "type": "string",
                            "description": "Name of the network intent you wish to create.",
                            "readOnly": true
                          },
                          "intentAdapters": {
                            "type": "array",
                            "description": "Array of adapters used for the network intent.",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "overrideVirtualSwitchConfiguration": {
                            "type": "boolean",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                            "readOnly": true
                          },
                          "virtualSwitchConfigurationOverrides": {
                            "description": "Set virtualSwitch ConfigurationOverrides for cluster.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "enableIov": {
                                "type": "string",
                                "description": "Enable IoV for Virtual Switch",
                                "readOnly": true
                              },
                              "loadBalancingAlgorithm": {
                                "type": "string",
                                "description": "Load Balancing Algorithm for Virtual Switch",
                                "readOnly": true
                              }
                            }
                          },
                          "overrideQosPolicy": {
                            "type": "boolean",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                            "readOnly": true
                          },
                          "qosPolicyOverrides": {
                            "description": "Set QoS PolicyOverrides for cluster.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "priorityValue8021Action_Cluster": {
                                "type": "string",
                                "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                              },
                              "priorityValue8021Action_SMB": {
                                "type": "string",
                                "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                              },
                              "bandwidthPercentage_SMB": {
                                "type": "string",
                                "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                              }
                            }
                          },
                          "overrideAdapterProperty": {
                            "type": "boolean",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                            "readOnly": true
                          },
                          "adapterPropertyOverrides": {
                            "description": "Set Adapter PropertyOverrides for cluster.",
                            "readOnly": true,
                            "type": "object",
                            "properties": {
                              "jumboPacket": {
                                "type": "string",
                                "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                                "readOnly": true
                              },
                              "networkDirect": {
                                "type": "string",
                                "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                                "readOnly": true
                              },
                              "networkDirectTechnology": {
                                "type": "string",
                                "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'",
                                "readOnly": true
                              }
                            }
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "intentName"
                      ]
                    },
                    "storageNetworks": {
                      "type": "array",
                      "description": "List of StorageNetworks config to deploy AzureStackHCI Cluster.",
                      "items": {
                        "type": "object",
                        "description": "The StorageNetworks of a cluster.",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the storage network.",
                            "readOnly": true
                          },
                          "networkAdapterName": {
                            "type": "string",
                            "description": "Name of the storage network adapter.",
                            "readOnly": true
                          },
                          "storageVlanId": {
                            "type": "string",
                            "description": "ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic. ",
                            "readOnly": true
                          },
                          "storageAdapterIPInfo": {
                            "type": "array",
                            "description": "List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.",
                            "items": {
                              "type": "object",
                              "description": "The StorageAdapter physical nodes of a cluster.",
                              "properties": {
                                "physicalNode": {
                                  "type": "string",
                                  "description": "storage adapter physical node name.",
                                  "readOnly": true
                                },
                                "ipv4Address": {
                                  "type": "string",
                                  "description": "The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
                                  "readOnly": true
                                },
                                "subnetMask": {
                                  "type": "string",
                                  "description": "The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
                                  "readOnly": true
                                }
                              }
                            },
                            "readOnly": true,
                            "x-ms-identifiers": [
                              "physicalNode"
                            ]
                          }
                        }
                      },
                      "readOnly": true,
                      "x-ms-identifiers": [
                        "networkAdapterName"
                      ]
                    },
                    "storageConnectivitySwitchless": {
                      "type": "boolean",
                      "description": "Defines how the storage adapters between nodes are connected either switch or switch less.",
                      "readOnly": true
                    },
                    "enableStorageAutoIp": {
                      "type": "boolean",
                      "description": "Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.",
                      "readOnly": true
                    }
                  }
                }
              }
            },
            "osProfile": {
              "description": "HCI device OS specific information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "bootType": {
                  "type": "string",
                  "description": "The boot type of the device. e.g. UEFI, Legacy etc",
                  "readOnly": true
                },
                "assemblyVersion": {
                  "type": "string",
                  "description": "Version of assembly present on device",
                  "readOnly": true
                }
              }
            },
            "sbeDeploymentPackageInfo": {
              "description": "Solution builder extension (SBE) deployment package information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "SBE deployment validation code.",
                  "readOnly": true
                },
                "message": {
                  "type": "string",
                  "description": "A detailed message that explains the SBE package validation result.",
                  "readOnly": true
                },
                "sbeManifest": {
                  "type": "string",
                  "description": "This represents discovered update results for matching updates and store it as SBE manifest.",
                  "readOnly": true
                }
              }
            },
            "storageProfile": {
              "description": "Hci device storage specific information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "poolableDisksCount": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Number of storage disks in the device with $CanPool as true.",
                  "readOnly": true
                }
              }
            },
            "hardwareProfile": {
              "description": "Hci device hardware specific information.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "processorType": {
                  "type": "string",
                  "description": "Process type of the device",
                  "readOnly": true
                }
              }
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Edge Device properties",
          "properties": {
            "deviceConfiguration": {
              "description": "Device Configuration",
              "type": "object",
              "properties": {
                "nicDetails": {
                  "type": "array",
                  "description": "NIC Details of device",
                  "items": {
                    "type": "object",
                    "description": "The NIC Detail of a device.",
                    "properties": {
                      "adapterName": {
                        "type": "string",
                        "description": "Adapter Name of NIC"
                      },
                      "interfaceDescription": {
                        "type": "string",
                        "description": "Interface Description of NIC"
                      },
                      "componentId": {
                        "type": "string",
                        "description": "Component Id of NIC"
                      },
                      "driverVersion": {
                        "type": "string",
                        "description": "Driver Version of NIC"
                      },
                      "ip4Address": {
                        "type": "string",
                        "description": "Subnet Mask of NIC"
                      },
                      "subnetMask": {
                        "type": "string",
                        "description": "Subnet Mask of NIC"
                      },
                      "defaultGateway": {
                        "type": "string",
                        "description": "Default Gateway of NIC"
                      },
                      "dnsServers": {
                        "type": "array",
                        "description": "DNS Servers for NIC",
                        "items": {
                          "type": "string"
                        },
                        "x-ms-identifiers": []
                      },
                      "defaultIsolationId": {
                        "type": "string",
                        "description": "Default Isolation of Management NIC"
                      }
                    }
                  },
                  "x-ms-identifiers": [
                    "adapterName"
                  ]
                },
                "deviceMetadata": {
                  "type": "string",
                  "description": "Device metadata details."
                }
              }
            },
            "provisioningState": {
              "description": "Provisioning state of edgeDevice resource",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "NotSpecified",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The resource provision state is not specified"
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is being provisioned"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource create request has been accepted"
                  }
                ]
              }
            }
          }
        }
      ]
    },
    "HciNetworkProfile": {
      "type": "object",
      "description": "The network profile of a device.",
      "properties": {
        "nicDetails": {
          "type": "array",
          "description": "List of NIC Details of device.",
          "items": {
            "type": "object",
            "description": "The NIC Detail of a device.",
            "properties": {
              "adapterName": {
                "type": "string",
                "description": "Adapter Name of NIC",
                "readOnly": true
              },
              "interfaceDescription": {
                "type": "string",
                "description": "Interface Description of NIC",
                "readOnly": true
              },
              "componentId": {
                "type": "string",
                "description": "Component Id of NIC",
                "readOnly": true
              },
              "driverVersion": {
                "type": "string",
                "description": "Driver Version of NIC",
                "readOnly": true
              },
              "ip4Address": {
                "type": "string",
                "description": "Subnet Mask of NIC",
                "readOnly": true
              },
              "subnetMask": {
                "type": "string",
                "description": "Subnet Mask of NIC",
                "readOnly": true
              },
              "defaultGateway": {
                "type": "string",
                "description": "Default Gateway of NIC",
                "readOnly": true
              },
              "dnsServers": {
                "type": "array",
                "description": "DNS Servers for NIC",
                "items": {
                  "type": "string"
                },
                "readOnly": true,
                "x-ms-identifiers": []
              },
              "defaultIsolationId": {
                "type": "string",
                "description": "Default Isolation of Management NIC",
                "readOnly": true
              },
              "macAddress": {
                "type": "string",
                "description": "MAC address information of NIC.",
                "readOnly": true
              },
              "slot": {
                "type": "string",
                "description": "The slot attached to the NIC.",
                "readOnly": true
              },
              "switchName": {
                "type": "string",
                "description": "The switch attached to the NIC, if any.",
                "readOnly": true
              },
              "nicType": {
                "type": "string",
                "description": "The type of NIC, physical, virtual, management.",
                "readOnly": true
              },
              "vlanId": {
                "type": "string",
                "description": "The VLAN ID of the physical NIC.",
                "readOnly": true
              },
              "nicStatus": {
                "type": "string",
                "description": "The status of NIC, up, disconnected.",
                "readOnly": true
              },
              "rdmaCapability": {
                "type": "string",
                "description": "Describes the RDMA capability of the network adapter.",
                "enum": [
                  "Enabled",
                  "Disabled"
                ],
                "default": "Disabled",
                "x-ms-enum": {
                  "name": "RdmaCapability",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Enabled",
                      "value": "Enabled",
                      "description": "Network Adapter on the device is RDMA Capable"
                    },
                    {
                      "name": "Disabled",
                      "value": "Disabled",
                      "description": "Network Adapter on the device is RDMA Capable"
                    }
                  ]
                },
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "adapterName"
          ]
        },
        "switchDetails": {
          "type": "array",
          "description": "List of switch details for edge device.",
          "items": {
            "type": "object",
            "description": "List of switch details for edge device.",
            "properties": {
              "switchName": {
                "type": "string",
                "description": "The name of the switch.",
                "readOnly": true
              },
              "switchType": {
                "type": "string",
                "description": "The type of the switch. e.g. external, internal.",
                "readOnly": true
              },
              "extensions": {
                "type": "array",
                "description": "This represents extensions installed on virtualSwitch.",
                "items": {
                  "type": "object",
                  "description": "This represents extensions installed on virtualSwitch.",
                  "properties": {
                    "switchId": {
                      "type": "string",
                      "description": "Unique identifier for virtualSwitch.",
                      "readOnly": true
                    },
                    "extensionName": {
                      "type": "string",
                      "description": "This will show extension name for virtualSwitch.",
                      "readOnly": true
                    },
                    "extensionEnabled": {
                      "type": "boolean",
                      "description": "This represents whether extension is enabled on virtualSwitch.",
                      "readOnly": true
                    }
                  }
                },
                "readOnly": true,
                "x-ms-identifiers": [
                  "extensionName"
                ]
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "switchName"
          ]
        },
        "hostNetwork": {
          "description": "HostNetwork config to deploy AzureStackHCI Cluster.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "intents": {
              "type": "array",
              "description": "The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.",
              "items": {
                "type": "object",
                "description": "The Intents of a cluster.",
                "properties": {
                  "scope": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Scope for host network intent.",
                    "readOnly": true
                  },
                  "intentType": {
                    "type": "integer",
                    "format": "int64",
                    "description": "IntentType for host network intent.",
                    "readOnly": true
                  },
                  "isComputeIntentSet": {
                    "type": "boolean",
                    "description": "IsComputeIntentSet for host network intent.",
                    "readOnly": true
                  },
                  "isStorageIntentSet": {
                    "type": "boolean",
                    "description": "IsStorageIntentSet for host network intent.",
                    "readOnly": true
                  },
                  "isOnlyStorage": {
                    "type": "boolean",
                    "description": "IntentType for host network intent.",
                    "readOnly": true
                  },
                  "isManagementIntentSet": {
                    "type": "boolean",
                    "description": "IsManagementIntentSet for host network intent.",
                    "readOnly": true
                  },
                  "isStretchIntentSet": {
                    "type": "boolean",
                    "description": "IsStretchIntentSet for host network intent.",
                    "readOnly": true
                  },
                  "isOnlyStretch": {
                    "type": "boolean",
                    "description": "IsOnlyStretch for host network intent.",
                    "readOnly": true
                  },
                  "isNetworkIntentType": {
                    "type": "boolean",
                    "description": "IsNetworkIntentType for host network intent.",
                    "readOnly": true
                  },
                  "intentName": {
                    "type": "string",
                    "description": "Name of the network intent you wish to create.",
                    "readOnly": true
                  },
                  "intentAdapters": {
                    "type": "array",
                    "description": "Array of adapters used for the network intent.",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "overrideVirtualSwitchConfiguration": {
                    "type": "boolean",
                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                    "readOnly": true
                  },
                  "virtualSwitchConfigurationOverrides": {
                    "description": "Set virtualSwitch ConfigurationOverrides for cluster.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "enableIov": {
                        "type": "string",
                        "description": "Enable IoV for Virtual Switch",
                        "readOnly": true
                      },
                      "loadBalancingAlgorithm": {
                        "type": "string",
                        "description": "Load Balancing Algorithm for Virtual Switch",
                        "readOnly": true
                      }
                    }
                  },
                  "overrideQosPolicy": {
                    "type": "boolean",
                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                    "readOnly": true
                  },
                  "qosPolicyOverrides": {
                    "description": "Set QoS PolicyOverrides for cluster.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "priorityValue8021Action_Cluster": {
                        "type": "string",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                      },
                      "priorityValue8021Action_SMB": {
                        "type": "string",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                      },
                      "bandwidthPercentage_SMB": {
                        "type": "string",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                      }
                    }
                  },
                  "overrideAdapterProperty": {
                    "type": "boolean",
                    "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                    "readOnly": true
                  },
                  "adapterPropertyOverrides": {
                    "description": "Set Adapter PropertyOverrides for cluster.",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "jumboPacket": {
                        "type": "string",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                        "readOnly": true
                      },
                      "networkDirect": {
                        "type": "string",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                        "readOnly": true
                      },
                      "networkDirectTechnology": {
                        "type": "string",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'",
                        "readOnly": true
                      }
                    }
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "intentName"
              ]
            },
            "storageNetworks": {
              "type": "array",
              "description": "List of StorageNetworks config to deploy AzureStackHCI Cluster.",
              "items": {
                "type": "object",
                "description": "The StorageNetworks of a cluster.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the storage network.",
                    "readOnly": true
                  },
                  "networkAdapterName": {
                    "type": "string",
                    "description": "Name of the storage network adapter.",
                    "readOnly": true
                  },
                  "storageVlanId": {
                    "type": "string",
                    "description": "ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic. ",
                    "readOnly": true
                  },
                  "storageAdapterIPInfo": {
                    "type": "array",
                    "description": "List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.",
                    "items": {
                      "type": "object",
                      "description": "The StorageAdapter physical nodes of a cluster.",
                      "properties": {
                        "physicalNode": {
                          "type": "string",
                          "description": "storage adapter physical node name.",
                          "readOnly": true
                        },
                        "ipv4Address": {
                          "type": "string",
                          "description": "The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
                          "readOnly": true
                        },
                        "subnetMask": {
                          "type": "string",
                          "description": "The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": [
                      "physicalNode"
                    ]
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "networkAdapterName"
              ]
            },
            "storageConnectivitySwitchless": {
              "type": "boolean",
              "description": "Defines how the storage adapters between nodes are connected either switch or switch less.",
              "readOnly": true
            },
            "enableStorageAutoIp": {
              "type": "boolean",
              "description": "Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.",
              "readOnly": true
            }
          }
        }
      }
    },
    "HciNicDetail": {
      "type": "object",
      "description": "The NIC Detail of a device.",
      "properties": {
        "adapterName": {
          "type": "string",
          "description": "Adapter Name of NIC",
          "readOnly": true
        },
        "interfaceDescription": {
          "type": "string",
          "description": "Interface Description of NIC",
          "readOnly": true
        },
        "componentId": {
          "type": "string",
          "description": "Component Id of NIC",
          "readOnly": true
        },
        "driverVersion": {
          "type": "string",
          "description": "Driver Version of NIC",
          "readOnly": true
        },
        "ip4Address": {
          "type": "string",
          "description": "Subnet Mask of NIC",
          "readOnly": true
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnet Mask of NIC",
          "readOnly": true
        },
        "defaultGateway": {
          "type": "string",
          "description": "Default Gateway of NIC",
          "readOnly": true
        },
        "dnsServers": {
          "type": "array",
          "description": "DNS Servers for NIC",
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "x-ms-identifiers": []
        },
        "defaultIsolationId": {
          "type": "string",
          "description": "Default Isolation of Management NIC",
          "readOnly": true
        },
        "macAddress": {
          "type": "string",
          "description": "MAC address information of NIC.",
          "readOnly": true
        },
        "slot": {
          "type": "string",
          "description": "The slot attached to the NIC.",
          "readOnly": true
        },
        "switchName": {
          "type": "string",
          "description": "The switch attached to the NIC, if any.",
          "readOnly": true
        },
        "nicType": {
          "type": "string",
          "description": "The type of NIC, physical, virtual, management.",
          "readOnly": true
        },
        "vlanId": {
          "type": "string",
          "description": "The VLAN ID of the physical NIC.",
          "readOnly": true
        },
        "nicStatus": {
          "type": "string",
          "description": "The status of NIC, up, disconnected.",
          "readOnly": true
        },
        "rdmaCapability": {
          "type": "string",
          "description": "Describes the RDMA capability of the network adapter.",
          "enum": [
            "Enabled",
            "Disabled"
          ],
          "default": "Disabled",
          "x-ms-enum": {
            "name": "RdmaCapability",
            "modelAsString": true,
            "values": [
              {
                "name": "Enabled",
                "value": "Enabled",
                "description": "Network Adapter on the device is RDMA Capable"
              },
              {
                "name": "Disabled",
                "value": "Disabled",
                "description": "Network Adapter on the device is RDMA Capable"
              }
            ]
          },
          "readOnly": true
        }
      }
    },
    "HciOsProfile": {
      "type": "object",
      "description": "OS configurations for HCI device.",
      "properties": {
        "bootType": {
          "type": "string",
          "description": "The boot type of the device. e.g. UEFI, Legacy etc",
          "readOnly": true
        },
        "assemblyVersion": {
          "type": "string",
          "description": "Version of assembly present on device",
          "readOnly": true
        }
      }
    },
    "HciStorageProfile": {
      "type": "object",
      "description": "Storage configurations for HCI device.",
      "properties": {
        "poolableDisksCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of storage disks in the device with $CanPool as true.",
          "readOnly": true
        }
      }
    },
    "HciHardwareProfile": {
      "type": "object",
      "description": "Hardware configurations for HCI device.",
      "properties": {
        "processorType": {
          "type": "string",
          "description": "Process type of the device",
          "readOnly": true
        }
      }
    },
    "HciReportedProperties": {
      "type": "object",
      "description": "The device Configuration for HCI device.",
      "properties": {
        "networkProfile": {
          "description": "HCI device network information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "nicDetails": {
              "type": "array",
              "description": "List of NIC Details of device.",
              "items": {
                "type": "object",
                "description": "The NIC Detail of a device.",
                "properties": {
                  "adapterName": {
                    "type": "string",
                    "description": "Adapter Name of NIC",
                    "readOnly": true
                  },
                  "interfaceDescription": {
                    "type": "string",
                    "description": "Interface Description of NIC",
                    "readOnly": true
                  },
                  "componentId": {
                    "type": "string",
                    "description": "Component Id of NIC",
                    "readOnly": true
                  },
                  "driverVersion": {
                    "type": "string",
                    "description": "Driver Version of NIC",
                    "readOnly": true
                  },
                  "ip4Address": {
                    "type": "string",
                    "description": "Subnet Mask of NIC",
                    "readOnly": true
                  },
                  "subnetMask": {
                    "type": "string",
                    "description": "Subnet Mask of NIC",
                    "readOnly": true
                  },
                  "defaultGateway": {
                    "type": "string",
                    "description": "Default Gateway of NIC",
                    "readOnly": true
                  },
                  "dnsServers": {
                    "type": "array",
                    "description": "DNS Servers for NIC",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  },
                  "defaultIsolationId": {
                    "type": "string",
                    "description": "Default Isolation of Management NIC",
                    "readOnly": true
                  },
                  "macAddress": {
                    "type": "string",
                    "description": "MAC address information of NIC.",
                    "readOnly": true
                  },
                  "slot": {
                    "type": "string",
                    "description": "The slot attached to the NIC.",
                    "readOnly": true
                  },
                  "switchName": {
                    "type": "string",
                    "description": "The switch attached to the NIC, if any.",
                    "readOnly": true
                  },
                  "nicType": {
                    "type": "string",
                    "description": "The type of NIC, physical, virtual, management.",
                    "readOnly": true
                  },
                  "vlanId": {
                    "type": "string",
                    "description": "The VLAN ID of the physical NIC.",
                    "readOnly": true
                  },
                  "nicStatus": {
                    "type": "string",
                    "description": "The status of NIC, up, disconnected.",
                    "readOnly": true
                  },
                  "rdmaCapability": {
                    "type": "string",
                    "description": "Describes the RDMA capability of the network adapter.",
                    "enum": [
                      "Enabled",
                      "Disabled"
                    ],
                    "default": "Disabled",
                    "x-ms-enum": {
                      "name": "RdmaCapability",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Enabled",
                          "value": "Enabled",
                          "description": "Network Adapter on the device is RDMA Capable"
                        },
                        {
                          "name": "Disabled",
                          "value": "Disabled",
                          "description": "Network Adapter on the device is RDMA Capable"
                        }
                      ]
                    },
                    "readOnly": true
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "adapterName"
              ]
            },
            "switchDetails": {
              "type": "array",
              "description": "List of switch details for edge device.",
              "items": {
                "type": "object",
                "description": "List of switch details for edge device.",
                "properties": {
                  "switchName": {
                    "type": "string",
                    "description": "The name of the switch.",
                    "readOnly": true
                  },
                  "switchType": {
                    "type": "string",
                    "description": "The type of the switch. e.g. external, internal.",
                    "readOnly": true
                  },
                  "extensions": {
                    "type": "array",
                    "description": "This represents extensions installed on virtualSwitch.",
                    "items": {
                      "type": "object",
                      "description": "This represents extensions installed on virtualSwitch.",
                      "properties": {
                        "switchId": {
                          "type": "string",
                          "description": "Unique identifier for virtualSwitch.",
                          "readOnly": true
                        },
                        "extensionName": {
                          "type": "string",
                          "description": "This will show extension name for virtualSwitch.",
                          "readOnly": true
                        },
                        "extensionEnabled": {
                          "type": "boolean",
                          "description": "This represents whether extension is enabled on virtualSwitch.",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": [
                      "extensionName"
                    ]
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "switchName"
              ]
            },
            "hostNetwork": {
              "description": "HostNetwork config to deploy AzureStackHCI Cluster.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "intents": {
                  "type": "array",
                  "description": "The network intents assigned to the network reference pattern used for the deployment. Each intent will define its own name, traffic type, adapter names, and overrides as recommended by your OEM.",
                  "items": {
                    "type": "object",
                    "description": "The Intents of a cluster.",
                    "properties": {
                      "scope": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Scope for host network intent.",
                        "readOnly": true
                      },
                      "intentType": {
                        "type": "integer",
                        "format": "int64",
                        "description": "IntentType for host network intent.",
                        "readOnly": true
                      },
                      "isComputeIntentSet": {
                        "type": "boolean",
                        "description": "IsComputeIntentSet for host network intent.",
                        "readOnly": true
                      },
                      "isStorageIntentSet": {
                        "type": "boolean",
                        "description": "IsStorageIntentSet for host network intent.",
                        "readOnly": true
                      },
                      "isOnlyStorage": {
                        "type": "boolean",
                        "description": "IntentType for host network intent.",
                        "readOnly": true
                      },
                      "isManagementIntentSet": {
                        "type": "boolean",
                        "description": "IsManagementIntentSet for host network intent.",
                        "readOnly": true
                      },
                      "isStretchIntentSet": {
                        "type": "boolean",
                        "description": "IsStretchIntentSet for host network intent.",
                        "readOnly": true
                      },
                      "isOnlyStretch": {
                        "type": "boolean",
                        "description": "IsOnlyStretch for host network intent.",
                        "readOnly": true
                      },
                      "isNetworkIntentType": {
                        "type": "boolean",
                        "description": "IsNetworkIntentType for host network intent.",
                        "readOnly": true
                      },
                      "intentName": {
                        "type": "string",
                        "description": "Name of the network intent you wish to create.",
                        "readOnly": true
                      },
                      "intentAdapters": {
                        "type": "array",
                        "description": "Array of adapters used for the network intent.",
                        "items": {
                          "type": "string"
                        },
                        "readOnly": true
                      },
                      "overrideVirtualSwitchConfiguration": {
                        "type": "boolean",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                        "readOnly": true
                      },
                      "virtualSwitchConfigurationOverrides": {
                        "description": "Set virtualSwitch ConfigurationOverrides for cluster.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "enableIov": {
                            "type": "string",
                            "description": "Enable IoV for Virtual Switch",
                            "readOnly": true
                          },
                          "loadBalancingAlgorithm": {
                            "type": "string",
                            "description": "Load Balancing Algorithm for Virtual Switch",
                            "readOnly": true
                          }
                        }
                      },
                      "overrideQosPolicy": {
                        "type": "boolean",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                        "readOnly": true
                      },
                      "qosPolicyOverrides": {
                        "description": "Set QoS PolicyOverrides for cluster.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "priorityValue8021Action_Cluster": {
                            "type": "string",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                          },
                          "priorityValue8021Action_SMB": {
                            "type": "string",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                          },
                          "bandwidthPercentage_SMB": {
                            "type": "string",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation."
                          }
                        }
                      },
                      "overrideAdapterProperty": {
                        "type": "boolean",
                        "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                        "readOnly": true
                      },
                      "adapterPropertyOverrides": {
                        "description": "Set Adapter PropertyOverrides for cluster.",
                        "readOnly": true,
                        "type": "object",
                        "properties": {
                          "jumboPacket": {
                            "type": "string",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                            "readOnly": true
                          },
                          "networkDirect": {
                            "type": "string",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation.",
                            "readOnly": true
                          },
                          "networkDirectTechnology": {
                            "type": "string",
                            "description": "This parameter should only be modified based on your OEM guidance. Do not modify this parameter without OEM validation. Expected values are 'iWARP', 'RoCEv2', 'RoCE'",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "intentName"
                  ]
                },
                "storageNetworks": {
                  "type": "array",
                  "description": "List of StorageNetworks config to deploy AzureStackHCI Cluster.",
                  "items": {
                    "type": "object",
                    "description": "The StorageNetworks of a cluster.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the storage network.",
                        "readOnly": true
                      },
                      "networkAdapterName": {
                        "type": "string",
                        "description": "Name of the storage network adapter.",
                        "readOnly": true
                      },
                      "storageVlanId": {
                        "type": "string",
                        "description": "ID specified for the VLAN storage network. This setting is applied to the network interfaces that route the storage and VM migration traffic. ",
                        "readOnly": true
                      },
                      "storageAdapterIPInfo": {
                        "type": "array",
                        "description": "List of Storage adapter physical nodes config to deploy AzureStackHCI Cluster.",
                        "items": {
                          "type": "object",
                          "description": "The StorageAdapter physical nodes of a cluster.",
                          "properties": {
                            "physicalNode": {
                              "type": "string",
                              "description": "storage adapter physical node name.",
                              "readOnly": true
                            },
                            "ipv4Address": {
                              "type": "string",
                              "description": "The IPv4 address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
                              "readOnly": true
                            },
                            "subnetMask": {
                              "type": "string",
                              "description": "The SubnetMask address assigned to each storage adapter physical node on your Azure Stack HCI cluster.",
                              "readOnly": true
                            }
                          }
                        },
                        "readOnly": true,
                        "x-ms-identifiers": [
                          "physicalNode"
                        ]
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "networkAdapterName"
                  ]
                },
                "storageConnectivitySwitchless": {
                  "type": "boolean",
                  "description": "Defines how the storage adapters between nodes are connected either switch or switch less.",
                  "readOnly": true
                },
                "enableStorageAutoIp": {
                  "type": "boolean",
                  "description": "Optional parameter required only for 3 Nodes Switchless deployments. This allows users to specify IPs and Mask for Storage NICs when Network ATC is not assigning the IPs for storage automatically.",
                  "readOnly": true
                }
              }
            }
          }
        },
        "osProfile": {
          "description": "HCI device OS specific information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "bootType": {
              "type": "string",
              "description": "The boot type of the device. e.g. UEFI, Legacy etc",
              "readOnly": true
            },
            "assemblyVersion": {
              "type": "string",
              "description": "Version of assembly present on device",
              "readOnly": true
            }
          }
        },
        "sbeDeploymentPackageInfo": {
          "description": "Solution builder extension (SBE) deployment package information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "code": {
              "type": "string",
              "description": "SBE deployment validation code.",
              "readOnly": true
            },
            "message": {
              "type": "string",
              "description": "A detailed message that explains the SBE package validation result.",
              "readOnly": true
            },
            "sbeManifest": {
              "type": "string",
              "description": "This represents discovered update results for matching updates and store it as SBE manifest.",
              "readOnly": true
            }
          }
        },
        "storageProfile": {
          "description": "Hci device storage specific information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "poolableDisksCount": {
              "type": "integer",
              "format": "int64",
              "description": "Number of storage disks in the device with $CanPool as true.",
              "readOnly": true
            }
          }
        },
        "hardwareProfile": {
          "description": "Hci device hardware specific information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "processorType": {
              "type": "string",
              "description": "Process type of the device",
              "readOnly": true
            }
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Reported properties pushed from edge device.",
          "properties": {
            "deviceState": {
              "description": "edge device state.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "NotSpecified",
                "Connected",
                "Disconnected",
                "Repairing",
                "Draining",
                "InMaintenance",
                "Resuming",
                "Processing"
              ],
              "x-ms-enum": {
                "name": "DeviceState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "NotSpecified",
                    "value": "NotSpecified",
                    "description": "The edge device state is not specified."
                  },
                  {
                    "name": "Connected",
                    "value": "Connected",
                    "description": "The edge device state is in connected state."
                  },
                  {
                    "name": "Disconnected",
                    "value": "Disconnected",
                    "description": "The edge device state is in disconnected state."
                  },
                  {
                    "name": "Repairing",
                    "value": "Repairing",
                    "description": "The edge device state is in repairing state."
                  },
                  {
                    "name": "Draining",
                    "value": "Draining",
                    "description": "The edge device state is in draining state."
                  },
                  {
                    "name": "InMaintenance",
                    "value": "InMaintenance",
                    "description": "The edge device state is in maintenance state."
                  },
                  {
                    "name": "Resuming",
                    "value": "Resuming",
                    "description": "The edge device state is in resuming state."
                  },
                  {
                    "name": "Processing",
                    "value": "Processing",
                    "description": "The edge device state is in processing state."
                  }
                ]
              }
            },
            "extensionProfile": {
              "description": "Extensions details for edge device.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "extensions": {
                  "type": "array",
                  "description": "List of Arc extensions installed on edge device.",
                  "items": {
                    "type": "object",
                    "description": "Arc extension installed on edge device.",
                    "properties": {
                      "extensionName": {
                        "type": "string",
                        "description": "Arc extension name installed on edge device.",
                        "readOnly": true
                      },
                      "state": {
                        "description": "Arc extension state from arc machine extension.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "NotSpecified",
                          "Succeeded",
                          "Failed",
                          "Canceled",
                          "Accepted",
                          "Creating",
                          "Updating",
                          "Moving",
                          "Deleting",
                          "Deleted"
                        ],
                        "x-ms-enum": {
                          "name": "ArcExtensionState",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "NotSpecified",
                              "value": "NotSpecified",
                              "description": "Arc extension state is not specified."
                            },
                            {
                              "name": "Succeeded",
                              "value": "Succeeded",
                              "description": "Arc extension state is Succeeded."
                            },
                            {
                              "name": "Failed",
                              "value": "Failed",
                              "description": "Arc extension state is Failed."
                            },
                            {
                              "name": "Canceled",
                              "value": "Canceled",
                              "description": "Arc extension state is Canceled."
                            },
                            {
                              "name": "Accepted",
                              "value": "Accepted",
                              "description": "Arc extension state is Accepted when extension installation triggered."
                            },
                            {
                              "name": "Creating",
                              "value": "Creating",
                              "description": "Arc extension is in Creating State."
                            },
                            {
                              "name": "Updating",
                              "value": "Updating",
                              "description": "Arc extension is in Updating State."
                            },
                            {
                              "name": "Moving",
                              "value": "Moving",
                              "description": "Arc extension is in Moving State."
                            },
                            {
                              "name": "Deleting",
                              "value": "Deleting",
                              "description": "Arc extension is in Deleting State."
                            },
                            {
                              "name": "Deleted",
                              "value": "Deleted",
                              "description": "Arc extension is in Deleted State."
                            }
                          ]
                        }
                      },
                      "errorDetails": {
                        "type": "array",
                        "description": "Error details while installing Arc extension.",
                        "items": {
                          "type": "object",
                          "description": "details of validation failure",
                          "properties": {
                            "exception": {
                              "type": "string",
                              "description": "Exception details while installing extension.",
                              "readOnly": true
                            }
                          }
                        },
                        "readOnly": true,
                        "x-ms-identifiers": []
                      },
                      "extensionResourceId": {
                        "type": "string",
                        "format": "arm-id",
                        "description": "Arc Extension Azure resource id.",
                        "readOnly": true
                      },
                      "typeHandlerVersion": {
                        "type": "string",
                        "description": "Extension version installed.",
                        "readOnly": true
                      },
                      "managedBy": {
                        "type": "string",
                        "description": "Indicates whether the extension is managed by the user or by Azure.",
                        "default": "Azure",
                        "enum": [
                          "User",
                          "Azure"
                        ],
                        "x-ms-enum": {
                          "name": "ExtensionManagedBy",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "User",
                              "value": "User",
                              "description": "The extension is managed by the user."
                            },
                            {
                              "name": "Azure",
                              "value": "Azure",
                              "description": "The extension is managed by Azure."
                            }
                          ]
                        },
                        "readOnly": true
                      }
                    }
                  },
                  "readOnly": true,
                  "x-ms-identifiers": [
                    "extensionName"
                  ]
                }
              }
            }
          }
        }
      ]
    },
    "NicDetail": {
      "type": "object",
      "description": "The NIC Detail of a device.",
      "properties": {
        "adapterName": {
          "type": "string",
          "description": "Adapter Name of NIC"
        },
        "interfaceDescription": {
          "type": "string",
          "description": "Interface Description of NIC"
        },
        "componentId": {
          "type": "string",
          "description": "Component Id of NIC"
        },
        "driverVersion": {
          "type": "string",
          "description": "Driver Version of NIC"
        },
        "ip4Address": {
          "type": "string",
          "description": "Subnet Mask of NIC"
        },
        "subnetMask": {
          "type": "string",
          "description": "Subnet Mask of NIC"
        },
        "defaultGateway": {
          "type": "string",
          "description": "Default Gateway of NIC"
        },
        "dnsServers": {
          "type": "array",
          "description": "DNS Servers for NIC",
          "items": {
            "type": "string"
          },
          "x-ms-identifiers": []
        },
        "defaultIsolationId": {
          "type": "string",
          "description": "Default Isolation of Management NIC"
        }
      }
    },
    "ReportedProperties": {
      "type": "object",
      "description": "Reported properties pushed from edge device.",
      "properties": {
        "deviceState": {
          "description": "edge device state.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "NotSpecified",
            "Connected",
            "Disconnected",
            "Repairing",
            "Draining",
            "InMaintenance",
            "Resuming",
            "Processing"
          ],
          "x-ms-enum": {
            "name": "DeviceState",
            "modelAsString": true,
            "values": [
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The edge device state is not specified."
              },
              {
                "name": "Connected",
                "value": "Connected",
                "description": "The edge device state is in connected state."
              },
              {
                "name": "Disconnected",
                "value": "Disconnected",
                "description": "The edge device state is in disconnected state."
              },
              {
                "name": "Repairing",
                "value": "Repairing",
                "description": "The edge device state is in repairing state."
              },
              {
                "name": "Draining",
                "value": "Draining",
                "description": "The edge device state is in draining state."
              },
              {
                "name": "InMaintenance",
                "value": "InMaintenance",
                "description": "The edge device state is in maintenance state."
              },
              {
                "name": "Resuming",
                "value": "Resuming",
                "description": "The edge device state is in resuming state."
              },
              {
                "name": "Processing",
                "value": "Processing",
                "description": "The edge device state is in processing state."
              }
            ]
          }
        },
        "extensionProfile": {
          "description": "Extensions details for edge device.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "extensions": {
              "type": "array",
              "description": "List of Arc extensions installed on edge device.",
              "items": {
                "type": "object",
                "description": "Arc extension installed on edge device.",
                "properties": {
                  "extensionName": {
                    "type": "string",
                    "description": "Arc extension name installed on edge device.",
                    "readOnly": true
                  },
                  "state": {
                    "description": "Arc extension state from arc machine extension.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "NotSpecified",
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted",
                      "Creating",
                      "Updating",
                      "Moving",
                      "Deleting",
                      "Deleted"
                    ],
                    "x-ms-enum": {
                      "name": "ArcExtensionState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "Arc extension state is not specified."
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Arc extension state is Succeeded."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Arc extension state is Failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Arc extension state is Canceled."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Arc extension state is Accepted when extension installation triggered."
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "Arc extension is in Creating State."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "Arc extension is in Updating State."
                        },
                        {
                          "name": "Moving",
                          "value": "Moving",
                          "description": "Arc extension is in Moving State."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "Arc extension is in Deleting State."
                        },
                        {
                          "name": "Deleted",
                          "value": "Deleted",
                          "description": "Arc extension is in Deleted State."
                        }
                      ]
                    }
                  },
                  "errorDetails": {
                    "type": "array",
                    "description": "Error details while installing Arc extension.",
                    "items": {
                      "type": "object",
                      "description": "details of validation failure",
                      "properties": {
                        "exception": {
                          "type": "string",
                          "description": "Exception details while installing extension.",
                          "readOnly": true
                        }
                      }
                    },
                    "readOnly": true,
                    "x-ms-identifiers": []
                  },
                  "extensionResourceId": {
                    "type": "string",
                    "format": "arm-id",
                    "description": "Arc Extension Azure resource id.",
                    "readOnly": true
                  },
                  "typeHandlerVersion": {
                    "type": "string",
                    "description": "Extension version installed.",
                    "readOnly": true
                  },
                  "managedBy": {
                    "type": "string",
                    "description": "Indicates whether the extension is managed by the user or by Azure.",
                    "default": "Azure",
                    "enum": [
                      "User",
                      "Azure"
                    ],
                    "x-ms-enum": {
                      "name": "ExtensionManagedBy",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "User",
                          "value": "User",
                          "description": "The extension is managed by the user."
                        },
                        {
                          "name": "Azure",
                          "value": "Azure",
                          "description": "The extension is managed by Azure."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                }
              },
              "readOnly": true,
              "x-ms-identifiers": [
                "extensionName"
              ]
            }
          }
        }
      }
    },
    "SbeDeploymentPackageInfo": {
      "type": "object",
      "description": "Solution builder extension (SBE) deployment package information.",
      "properties": {
        "code": {
          "type": "string",
          "description": "SBE deployment validation code.",
          "readOnly": true
        },
        "message": {
          "type": "string",
          "description": "A detailed message that explains the SBE package validation result.",
          "readOnly": true
        },
        "sbeManifest": {
          "type": "string",
          "description": "This represents discovered update results for matching updates and store it as SBE manifest.",
          "readOnly": true
        }
      }
    },
    "SwitchDetail": {
      "type": "object",
      "description": "List of switch details for edge device.",
      "properties": {
        "switchName": {
          "type": "string",
          "description": "The name of the switch.",
          "readOnly": true
        },
        "switchType": {
          "type": "string",
          "description": "The type of the switch. e.g. external, internal.",
          "readOnly": true
        },
        "extensions": {
          "type": "array",
          "description": "This represents extensions installed on virtualSwitch.",
          "items": {
            "type": "object",
            "description": "This represents extensions installed on virtualSwitch.",
            "properties": {
              "switchId": {
                "type": "string",
                "description": "Unique identifier for virtualSwitch.",
                "readOnly": true
              },
              "extensionName": {
                "type": "string",
                "description": "This will show extension name for virtualSwitch.",
                "readOnly": true
              },
              "extensionEnabled": {
                "type": "boolean",
                "description": "This represents whether extension is enabled on virtualSwitch.",
                "readOnly": true
              }
            }
          },
          "readOnly": true,
          "x-ms-identifiers": [
            "extensionName"
          ]
        }
      }
    },
    "SwitchExtension": {
      "type": "object",
      "description": "This represents extensions installed on virtualSwitch.",
      "properties": {
        "switchId": {
          "type": "string",
          "description": "Unique identifier for virtualSwitch.",
          "readOnly": true
        },
        "extensionName": {
          "type": "string",
          "description": "This will show extension name for virtualSwitch.",
          "readOnly": true
        },
        "extensionEnabled": {
          "type": "boolean",
          "description": "This represents whether extension is enabled on virtualSwitch.",
          "readOnly": true
        }
      }
    },
    "ValidateRequest": {
      "type": "object",
      "description": "The validate request for Edge Device.",
      "properties": {
        "edgeDeviceIds": {
          "type": "array",
          "description": "Node Ids against which, current node has to be validated.",
          "items": {
            "type": "string"
          }
        },
        "additionalInfo": {
          "type": "string",
          "description": "Additional info required for validation."
        }
      },
      "required": [
        "edgeDeviceIds"
      ]
    },
    "ValidateResponse": {
      "type": "object",
      "description": "An Accepted response with an Operation-Location header.",
      "properties": {
        "status": {
          "type": "string",
          "description": "edge device validation status",
          "readOnly": true
        }
      }
    },
    "ExtensionPatch": {
      "description": "Extension Details to update",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Describes Machine Extension Properties that can be updated.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "extensionParameters": {
              "description": "Describes the properties of a Machine Extension that can be updated.",
              "type": "object",
              "properties": {
                "typeHandlerVersion": {
                  "type": "string",
                  "description": "Specifies the version of the script handler. Latest version would be used if not specified."
                },
                "enableAutomaticUpgrade": {
                  "type": "boolean",
                  "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                },
                "settings": {
                  "type": "object",
                  "description": "Json formatted public settings for the extension."
                },
                "protectedSettings": {
                  "type": "object",
                  "description": "Protected settings (may contain secrets).",
                  "x-ms-secret": true
                }
              }
            }
          }
        }
      }
    },
    "ExtensionProperties": {
      "description": "Status of Arc Extension for a particular node in HCI Cluster.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the Extension proxy resource. Indicates the current lifecycle status of the resource, such as whether it's being created, updated, deleted, or has encountered an error.",
          "type": "string",
          "enum": [
            "NotSpecified",
            "Error",
            "Succeeded",
            "Failed",
            "Canceled",
            "Connected",
            "Disconnected",
            "Deleted",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "PartiallySucceeded",
            "PartiallyConnected",
            "InProgress",
            "Accepted",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The provisioning state is not specified."
              },
              {
                "name": "Error",
                "value": "Error",
                "description": "An error occurred during provisioning."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Provisioning completed successfully."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Provisioning failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Provisioning was canceled."
              },
              {
                "name": "Connected",
                "value": "Connected",
                "description": "The resource is connected."
              },
              {
                "name": "Disconnected",
                "value": "Disconnected",
                "description": "The resource is disconnected."
              },
              {
                "name": "Deleted",
                "value": "Deleted",
                "description": "The resource has been deleted."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The resource is being created."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is being updated."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted."
              },
              {
                "name": "Moving",
                "value": "Moving",
                "description": "The resource is being moved."
              },
              {
                "name": "PartiallySucceeded",
                "value": "PartiallySucceeded",
                "description": "Provisioning partially succeeded."
              },
              {
                "name": "PartiallyConnected",
                "value": "PartiallyConnected",
                "description": "The resource is partially connected."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "Provisioning is in progress."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "Provisioning request has been accepted."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is currently provisioning."
              }
            ]
          },
          "readOnly": true
        },
        "extensionParameters": {
          "description": "Parameters specific to this extension type.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "forceUpdateTag": {
              "type": "string",
              "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
            },
            "publisher": {
              "type": "string",
              "description": "The name of the extension handler publisher."
            },
            "type": {
              "type": "string",
              "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
            },
            "typeHandlerVersion": {
              "type": "string",
              "description": "Specifies the version of the script handler. Latest version would be used if not specified."
            },
            "autoUpgradeMinorVersion": {
              "type": "boolean",
              "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
            },
            "settings": {
              "type": "object",
              "description": "Json formatted public settings for the extension."
            },
            "protectedSettings": {
              "type": "object",
              "description": "Protected settings (may contain secrets).",
              "x-ms-secret": true
            },
            "enableAutomaticUpgrade": {
              "type": "boolean",
              "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
            }
          }
        },
        "aggregateState": {
          "description": "Aggregate state of Arc Extensions across the nodes in this HCI cluster. This reflects the overall status of the extension deployment and operation across all nodes.",
          "type": "string",
          "enum": [
            "NotSpecified",
            "Error",
            "Succeeded",
            "Canceled",
            "Failed",
            "Connected",
            "Disconnected",
            "Deleted",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "PartiallySucceeded",
            "PartiallyConnected",
            "InProgress",
            "Accepted",
            "Provisioning",
            "UpgradeFailedRollbackSucceeded"
          ],
          "x-ms-enum": {
            "name": "ExtensionAggregateState",
            "modelAsString": true,
            "values": [
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The aggregate state is not specified."
              },
              {
                "name": "Error",
                "value": "Error",
                "description": "An error occurred in the aggregate state."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The operation succeeded across all nodes."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The operation was canceled across the nodes."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The operation failed on all or most nodes."
              },
              {
                "name": "Connected",
                "value": "Connected",
                "description": "All nodes are connected."
              },
              {
                "name": "Disconnected",
                "value": "Disconnected",
                "description": "All nodes are disconnected."
              },
              {
                "name": "Deleted",
                "value": "Deleted",
                "description": "The extension has been deleted from all nodes."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The extension is being created across the nodes."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The extension is being updated across the nodes."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The extension is being deleted across the nodes."
              },
              {
                "name": "Moving",
                "value": "Moving",
                "description": "The extension is being moved across the nodes."
              },
              {
                "name": "PartiallySucceeded",
                "value": "PartiallySucceeded",
                "description": "The operation succeeded on some nodes."
              },
              {
                "name": "PartiallyConnected",
                "value": "PartiallyConnected",
                "description": "Some nodes are connected, others are not."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "The operation is currently in progress across the nodes."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The operation has been accepted and is pending execution."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The extension is currently being provisioned across the nodes."
              },
              {
                "name": "UpgradeFailedRollbackSucceeded",
                "value": "UpgradeFailedRollbackSucceeded",
                "description": "Extension upgrade failed, but rollback succeeded across the nodes."
              }
            ]
          },
          "readOnly": true
        },
        "perNodeExtensionDetails": {
          "description": "State of Arc Extension in each of the nodes.",
          "type": "array",
          "items": {
            "description": "Status of Arc Extension for a particular node in HCI Cluster.",
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the node in HCI Cluster.",
                "type": "string",
                "readOnly": true
              },
              "extension": {
                "description": "Fully qualified resource ID for the particular Arc Extension on this node.",
                "type": "string",
                "readOnly": true
              },
              "typeHandlerVersion": {
                "type": "string",
                "description": "Specifies the version of the script handler.",
                "readOnly": true
              },
              "state": {
                "description": "State of Arc Extension in this node. Reflects the current lifecycle status of the extension on the individual node, such as whether it's being created, updated, deleted, or has encountered an error.",
                "type": "string",
                "enum": [
                  "NotSpecified",
                  "Error",
                  "Succeeded",
                  "Canceled",
                  "Failed",
                  "Connected",
                  "Disconnected",
                  "Deleted",
                  "Creating",
                  "Updating",
                  "Deleting",
                  "Moving",
                  "PartiallySucceeded",
                  "PartiallyConnected",
                  "InProgress",
                  "Accepted",
                  "Provisioning"
                ],
                "x-ms-enum": {
                  "name": "NodeExtensionState",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "NotSpecified",
                      "value": "NotSpecified",
                      "description": "The state is not specified."
                    },
                    {
                      "name": "Error",
                      "value": "Error",
                      "description": "An error occurred during the extension lifecycle."
                    },
                    {
                      "name": "Succeeded",
                      "value": "Succeeded",
                      "description": "The extension operation completed successfully."
                    },
                    {
                      "name": "Canceled",
                      "value": "Canceled",
                      "description": "The extension operation was canceled."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "The extension operation failed."
                    },
                    {
                      "name": "Connected",
                      "value": "Connected",
                      "description": "The extension is connected on the node."
                    },
                    {
                      "name": "Disconnected",
                      "value": "Disconnected",
                      "description": "The extension is disconnected on the node."
                    },
                    {
                      "name": "Deleted",
                      "value": "Deleted",
                      "description": "The extension has been deleted from the node."
                    },
                    {
                      "name": "Creating",
                      "value": "Creating",
                      "description": "The extension is being created on the node."
                    },
                    {
                      "name": "Updating",
                      "value": "Updating",
                      "description": "The extension is being updated on the node."
                    },
                    {
                      "name": "Deleting",
                      "value": "Deleting",
                      "description": "The extension is being deleted from the node."
                    },
                    {
                      "name": "Moving",
                      "value": "Moving",
                      "description": "The extension is being moved on the node."
                    },
                    {
                      "name": "PartiallySucceeded",
                      "value": "PartiallySucceeded",
                      "description": "The extension operation partially succeeded."
                    },
                    {
                      "name": "PartiallyConnected",
                      "value": "PartiallyConnected",
                      "description": "The extension is partially connected on the node."
                    },
                    {
                      "name": "InProgress",
                      "value": "InProgress",
                      "description": "The extension operation is currently in progress."
                    },
                    {
                      "name": "Accepted",
                      "value": "Accepted",
                      "description": "The extension operation has been accepted and is pending execution."
                    },
                    {
                      "name": "Provisioning",
                      "value": "Provisioning",
                      "description": "The extension is currently being provisioned on the node."
                    }
                  ]
                },
                "readOnly": true
              },
              "instanceView": {
                "description": "The extension instance view.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The extension name."
                  },
                  "type": {
                    "type": "string",
                    "description": "Specifies the type of the extension; an example is \"MicrosoftMonitoringAgent\"."
                  },
                  "typeHandlerVersion": {
                    "type": "string",
                    "description": "Specifies the version of the script handler."
                  },
                  "status": {
                    "type": "object",
                    "description": "Instance view status.",
                    "properties": {
                      "code": {
                        "type": "string",
                        "description": "The status code."
                      },
                      "level": {
                        "type": "string",
                        "description": "The level code. Indicates the severity or importance of the status message.",
                        "enum": [
                          "Info",
                          "Warning",
                          "Error"
                        ],
                        "x-ms-enum": {
                          "name": "StatusLevelTypes",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Info",
                              "value": "Info",
                              "description": "Informational message indicating normal operation."
                            },
                            {
                              "name": "Warning",
                              "value": "Warning",
                              "description": "Warning message indicating a potential issue or non-critical problem."
                            },
                            {
                              "name": "Error",
                              "value": "Error",
                              "description": "Error message indicating a failure or critical issue."
                            }
                          ]
                        }
                      },
                      "displayStatus": {
                        "type": "string",
                        "description": "The short localizable label for the status."
                      },
                      "message": {
                        "type": "string",
                        "description": "The detailed status message, including for alerts and error messages."
                      },
                      "time": {
                        "type": "string",
                        "format": "date-time",
                        "description": "The time of the status."
                      }
                    }
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "managedBy": {
          "description": "Indicates if the extension is managed by Azure or the user. This determines who controls the deployment and lifecycle of the extension.",
          "type": "string",
          "enum": [
            "Azure",
            "User"
          ],
          "x-ms-enum": {
            "name": "ExtensionManagedBy",
            "modelAsString": true,
            "values": [
              {
                "name": "Azure",
                "value": "Azure",
                "description": "The extension is managed by Azure."
              },
              {
                "name": "User",
                "value": "User",
                "description": "The extension is managed by the user."
              }
            ]
          },
          "readOnly": true
        }
      }
    },
    "ExtensionPatchProperties": {
      "description": "Describes Machine Extension Properties that can be updated.",
      "type": "object",
      "properties": {
        "extensionParameters": {
          "description": "Describes the properties of a Machine Extension that can be updated.",
          "type": "object",
          "properties": {
            "typeHandlerVersion": {
              "type": "string",
              "description": "Specifies the version of the script handler. Latest version would be used if not specified."
            },
            "enableAutomaticUpgrade": {
              "type": "boolean",
              "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
            },
            "settings": {
              "type": "object",
              "description": "Json formatted public settings for the extension."
            },
            "protectedSettings": {
              "type": "object",
              "description": "Protected settings (may contain secrets).",
              "x-ms-secret": true
            }
          }
        }
      }
    },
    "ExtensionPatchParameters": {
      "description": "Describes the properties of a Machine Extension that can be updated.",
      "type": "object",
      "properties": {
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler. Latest version would be used if not specified."
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
        },
        "settings": {
          "type": "object",
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "description": "Protected settings (may contain secrets).",
          "x-ms-secret": true
        }
      }
    },
    "PerNodeExtensionState": {
      "description": "Status of Arc Extension for a particular node in HCI Cluster.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the node in HCI Cluster.",
          "type": "string",
          "readOnly": true
        },
        "extension": {
          "description": "Fully qualified resource ID for the particular Arc Extension on this node.",
          "type": "string",
          "readOnly": true
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler.",
          "readOnly": true
        },
        "state": {
          "description": "State of Arc Extension in this node. Reflects the current lifecycle status of the extension on the individual node, such as whether it's being created, updated, deleted, or has encountered an error.",
          "type": "string",
          "enum": [
            "NotSpecified",
            "Error",
            "Succeeded",
            "Canceled",
            "Failed",
            "Connected",
            "Disconnected",
            "Deleted",
            "Creating",
            "Updating",
            "Deleting",
            "Moving",
            "PartiallySucceeded",
            "PartiallyConnected",
            "InProgress",
            "Accepted",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "NodeExtensionState",
            "modelAsString": true,
            "values": [
              {
                "name": "NotSpecified",
                "value": "NotSpecified",
                "description": "The state is not specified."
              },
              {
                "name": "Error",
                "value": "Error",
                "description": "An error occurred during the extension lifecycle."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The extension operation completed successfully."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The extension operation was canceled."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The extension operation failed."
              },
              {
                "name": "Connected",
                "value": "Connected",
                "description": "The extension is connected on the node."
              },
              {
                "name": "Disconnected",
                "value": "Disconnected",
                "description": "The extension is disconnected on the node."
              },
              {
                "name": "Deleted",
                "value": "Deleted",
                "description": "The extension has been deleted from the node."
              },
              {
                "name": "Creating",
                "value": "Creating",
                "description": "The extension is being created on the node."
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The extension is being updated on the node."
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The extension is being deleted from the node."
              },
              {
                "name": "Moving",
                "value": "Moving",
                "description": "The extension is being moved on the node."
              },
              {
                "name": "PartiallySucceeded",
                "value": "PartiallySucceeded",
                "description": "The extension operation partially succeeded."
              },
              {
                "name": "PartiallyConnected",
                "value": "PartiallyConnected",
                "description": "The extension is partially connected on the node."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "The extension operation is currently in progress."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The extension operation has been accepted and is pending execution."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The extension is currently being provisioned on the node."
              }
            ]
          },
          "readOnly": true
        },
        "instanceView": {
          "description": "The extension instance view.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The extension name."
            },
            "type": {
              "type": "string",
              "description": "Specifies the type of the extension; an example is \"MicrosoftMonitoringAgent\"."
            },
            "typeHandlerVersion": {
              "type": "string",
              "description": "Specifies the version of the script handler."
            },
            "status": {
              "type": "object",
              "description": "Instance view status.",
              "properties": {
                "code": {
                  "type": "string",
                  "description": "The status code."
                },
                "level": {
                  "type": "string",
                  "description": "The level code. Indicates the severity or importance of the status message.",
                  "enum": [
                    "Info",
                    "Warning",
                    "Error"
                  ],
                  "x-ms-enum": {
                    "name": "StatusLevelTypes",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Info",
                        "value": "Info",
                        "description": "Informational message indicating normal operation."
                      },
                      {
                        "name": "Warning",
                        "value": "Warning",
                        "description": "Warning message indicating a potential issue or non-critical problem."
                      },
                      {
                        "name": "Error",
                        "value": "Error",
                        "description": "Error message indicating a failure or critical issue."
                      }
                    ]
                  }
                },
                "displayStatus": {
                  "type": "string",
                  "description": "The short localizable label for the status."
                },
                "message": {
                  "type": "string",
                  "description": "The detailed status message, including for alerts and error messages."
                },
                "time": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The time of the status."
                }
              }
            }
          }
        }
      }
    },
    "ExtensionList": {
      "description": "List of Extensions in HCI cluster.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Extensions in HCI cluster.",
          "type": "array",
          "items": {
            "description": "Details of a particular extension in HCI Cluster.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Describes Machine Extension Properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the Extension proxy resource. Indicates the current lifecycle status of the resource, such as whether it's being created, updated, deleted, or has encountered an error.",
                    "type": "string",
                    "enum": [
                      "NotSpecified",
                      "Error",
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Connected",
                      "Disconnected",
                      "Deleted",
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Moving",
                      "PartiallySucceeded",
                      "PartiallyConnected",
                      "InProgress",
                      "Accepted",
                      "Provisioning"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "The provisioning state is not specified."
                        },
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "An error occurred during provisioning."
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Provisioning completed successfully."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Provisioning failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Provisioning was canceled."
                        },
                        {
                          "name": "Connected",
                          "value": "Connected",
                          "description": "The resource is connected."
                        },
                        {
                          "name": "Disconnected",
                          "value": "Disconnected",
                          "description": "The resource is disconnected."
                        },
                        {
                          "name": "Deleted",
                          "value": "Deleted",
                          "description": "The resource has been deleted."
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "The resource is being created."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is being updated."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted."
                        },
                        {
                          "name": "Moving",
                          "value": "Moving",
                          "description": "The resource is being moved."
                        },
                        {
                          "name": "PartiallySucceeded",
                          "value": "PartiallySucceeded",
                          "description": "Provisioning partially succeeded."
                        },
                        {
                          "name": "PartiallyConnected",
                          "value": "PartiallyConnected",
                          "description": "The resource is partially connected."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "Provisioning is in progress."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "Provisioning request has been accepted."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is currently provisioning."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "extensionParameters": {
                    "description": "Parameters specific to this extension type.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "forceUpdateTag": {
                        "type": "string",
                        "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
                      },
                      "publisher": {
                        "type": "string",
                        "description": "The name of the extension handler publisher."
                      },
                      "type": {
                        "type": "string",
                        "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
                      },
                      "typeHandlerVersion": {
                        "type": "string",
                        "description": "Specifies the version of the script handler. Latest version would be used if not specified."
                      },
                      "autoUpgradeMinorVersion": {
                        "type": "boolean",
                        "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
                      },
                      "settings": {
                        "type": "object",
                        "description": "Json formatted public settings for the extension."
                      },
                      "protectedSettings": {
                        "type": "object",
                        "description": "Protected settings (may contain secrets).",
                        "x-ms-secret": true
                      },
                      "enableAutomaticUpgrade": {
                        "type": "boolean",
                        "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
                      }
                    }
                  },
                  "aggregateState": {
                    "description": "Aggregate state of Arc Extensions across the nodes in this HCI cluster. This reflects the overall status of the extension deployment and operation across all nodes.",
                    "type": "string",
                    "enum": [
                      "NotSpecified",
                      "Error",
                      "Succeeded",
                      "Canceled",
                      "Failed",
                      "Connected",
                      "Disconnected",
                      "Deleted",
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Moving",
                      "PartiallySucceeded",
                      "PartiallyConnected",
                      "InProgress",
                      "Accepted",
                      "Provisioning",
                      "UpgradeFailedRollbackSucceeded"
                    ],
                    "x-ms-enum": {
                      "name": "ExtensionAggregateState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "NotSpecified",
                          "value": "NotSpecified",
                          "description": "The aggregate state is not specified."
                        },
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "An error occurred in the aggregate state."
                        },
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The operation succeeded across all nodes."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The operation was canceled across the nodes."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The operation failed on all or most nodes."
                        },
                        {
                          "name": "Connected",
                          "value": "Connected",
                          "description": "All nodes are connected."
                        },
                        {
                          "name": "Disconnected",
                          "value": "Disconnected",
                          "description": "All nodes are disconnected."
                        },
                        {
                          "name": "Deleted",
                          "value": "Deleted",
                          "description": "The extension has been deleted from all nodes."
                        },
                        {
                          "name": "Creating",
                          "value": "Creating",
                          "description": "The extension is being created across the nodes."
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The extension is being updated across the nodes."
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The extension is being deleted across the nodes."
                        },
                        {
                          "name": "Moving",
                          "value": "Moving",
                          "description": "The extension is being moved across the nodes."
                        },
                        {
                          "name": "PartiallySucceeded",
                          "value": "PartiallySucceeded",
                          "description": "The operation succeeded on some nodes."
                        },
                        {
                          "name": "PartiallyConnected",
                          "value": "PartiallyConnected",
                          "description": "Some nodes are connected, others are not."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "The operation is currently in progress across the nodes."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The operation has been accepted and is pending execution."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The extension is currently being provisioned across the nodes."
                        },
                        {
                          "name": "UpgradeFailedRollbackSucceeded",
                          "value": "UpgradeFailedRollbackSucceeded",
                          "description": "Extension upgrade failed, but rollback succeeded across the nodes."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "perNodeExtensionDetails": {
                    "description": "State of Arc Extension in each of the nodes.",
                    "type": "array",
                    "items": {
                      "description": "Status of Arc Extension for a particular node in HCI Cluster.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the node in HCI Cluster.",
                          "type": "string",
                          "readOnly": true
                        },
                        "extension": {
                          "description": "Fully qualified resource ID for the particular Arc Extension on this node.",
                          "type": "string",
                          "readOnly": true
                        },
                        "typeHandlerVersion": {
                          "type": "string",
                          "description": "Specifies the version of the script handler.",
                          "readOnly": true
                        },
                        "state": {
                          "description": "State of Arc Extension in this node. Reflects the current lifecycle status of the extension on the individual node, such as whether it's being created, updated, deleted, or has encountered an error.",
                          "type": "string",
                          "enum": [
                            "NotSpecified",
                            "Error",
                            "Succeeded",
                            "Canceled",
                            "Failed",
                            "Connected",
                            "Disconnected",
                            "Deleted",
                            "Creating",
                            "Updating",
                            "Deleting",
                            "Moving",
                            "PartiallySucceeded",
                            "PartiallyConnected",
                            "InProgress",
                            "Accepted",
                            "Provisioning"
                          ],
                          "x-ms-enum": {
                            "name": "NodeExtensionState",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "NotSpecified",
                                "value": "NotSpecified",
                                "description": "The state is not specified."
                              },
                              {
                                "name": "Error",
                                "value": "Error",
                                "description": "An error occurred during the extension lifecycle."
                              },
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "The extension operation completed successfully."
                              },
                              {
                                "name": "Canceled",
                                "value": "Canceled",
                                "description": "The extension operation was canceled."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "The extension operation failed."
                              },
                              {
                                "name": "Connected",
                                "value": "Connected",
                                "description": "The extension is connected on the node."
                              },
                              {
                                "name": "Disconnected",
                                "value": "Disconnected",
                                "description": "The extension is disconnected on the node."
                              },
                              {
                                "name": "Deleted",
                                "value": "Deleted",
                                "description": "The extension has been deleted from the node."
                              },
                              {
                                "name": "Creating",
                                "value": "Creating",
                                "description": "The extension is being created on the node."
                              },
                              {
                                "name": "Updating",
                                "value": "Updating",
                                "description": "The extension is being updated on the node."
                              },
                              {
                                "name": "Deleting",
                                "value": "Deleting",
                                "description": "The extension is being deleted from the node."
                              },
                              {
                                "name": "Moving",
                                "value": "Moving",
                                "description": "The extension is being moved on the node."
                              },
                              {
                                "name": "PartiallySucceeded",
                                "value": "PartiallySucceeded",
                                "description": "The extension operation partially succeeded."
                              },
                              {
                                "name": "PartiallyConnected",
                                "value": "PartiallyConnected",
                                "description": "The extension is partially connected on the node."
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress",
                                "description": "The extension operation is currently in progress."
                              },
                              {
                                "name": "Accepted",
                                "value": "Accepted",
                                "description": "The extension operation has been accepted and is pending execution."
                              },
                              {
                                "name": "Provisioning",
                                "value": "Provisioning",
                                "description": "The extension is currently being provisioned on the node."
                              }
                            ]
                          },
                          "readOnly": true
                        },
                        "instanceView": {
                          "description": "The extension instance view.",
                          "readOnly": true,
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The extension name."
                            },
                            "type": {
                              "type": "string",
                              "description": "Specifies the type of the extension; an example is \"MicrosoftMonitoringAgent\"."
                            },
                            "typeHandlerVersion": {
                              "type": "string",
                              "description": "Specifies the version of the script handler."
                            },
                            "status": {
                              "type": "object",
                              "description": "Instance view status.",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "description": "The status code."
                                },
                                "level": {
                                  "type": "string",
                                  "description": "The level code. Indicates the severity or importance of the status message.",
                                  "enum": [
                                    "Info",
                                    "Warning",
                                    "Error"
                                  ],
                                  "x-ms-enum": {
                                    "name": "StatusLevelTypes",
                                    "modelAsString": true,
                                    "values": [
                                      {
                                        "name": "Info",
                                        "value": "Info",
                                        "description": "Informational message indicating normal operation."
                                      },
                                      {
                                        "name": "Warning",
                                        "value": "Warning",
                                        "description": "Warning message indicating a potential issue or non-critical problem."
                                      },
                                      {
                                        "name": "Error",
                                        "value": "Error",
                                        "description": "Error message indicating a failure or critical issue."
                                      }
                                    ]
                                  }
                                },
                                "displayStatus": {
                                  "type": "string",
                                  "description": "The short localizable label for the status."
                                },
                                "message": {
                                  "type": "string",
                                  "description": "The detailed status message, including for alerts and error messages."
                                },
                                "time": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "The time of the status."
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "readOnly": true
                  },
                  "managedBy": {
                    "description": "Indicates if the extension is managed by Azure or the user. This determines who controls the deployment and lifecycle of the extension.",
                    "type": "string",
                    "enum": [
                      "Azure",
                      "User"
                    ],
                    "x-ms-enum": {
                      "name": "ExtensionManagedBy",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Azure",
                          "value": "Azure",
                          "description": "The extension is managed by Azure."
                        },
                        {
                          "name": "User",
                          "value": "User",
                          "description": "The extension is managed by the user."
                        }
                      ]
                    },
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ExtensionParameters": {
      "description": "Describes the properties of a Machine Extension. This object mirrors the definition in HybridCompute.",
      "type": "object",
      "properties": {
        "forceUpdateTag": {
          "type": "string",
          "description": "How the extension handler should be forced to update even if the extension configuration has not changed."
        },
        "publisher": {
          "type": "string",
          "description": "The name of the extension handler publisher."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"CustomScriptExtension\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler. Latest version would be used if not specified."
        },
        "autoUpgradeMinorVersion": {
          "type": "boolean",
          "description": "Indicates whether the extension should use a newer minor version if one is available at deployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this property set to true."
        },
        "settings": {
          "type": "object",
          "description": "Json formatted public settings for the extension."
        },
        "protectedSettings": {
          "type": "object",
          "description": "Protected settings (may contain secrets).",
          "x-ms-secret": true
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether the extension should be automatically upgraded by the platform if there is a newer version available."
        }
      }
    },
    "ExtensionInstanceView": {
      "type": "object",
      "description": "Describes the Extension Instance View.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The extension name."
        },
        "type": {
          "type": "string",
          "description": "Specifies the type of the extension; an example is \"MicrosoftMonitoringAgent\"."
        },
        "typeHandlerVersion": {
          "type": "string",
          "description": "Specifies the version of the script handler."
        },
        "status": {
          "type": "object",
          "description": "Instance view status.",
          "properties": {
            "code": {
              "type": "string",
              "description": "The status code."
            },
            "level": {
              "type": "string",
              "description": "The level code. Indicates the severity or importance of the status message.",
              "enum": [
                "Info",
                "Warning",
                "Error"
              ],
              "x-ms-enum": {
                "name": "StatusLevelTypes",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Info",
                    "value": "Info",
                    "description": "Informational message indicating normal operation."
                  },
                  {
                    "name": "Warning",
                    "value": "Warning",
                    "description": "Warning message indicating a potential issue or non-critical problem."
                  },
                  {
                    "name": "Error",
                    "value": "Error",
                    "description": "Error message indicating a failure or critical issue."
                  }
                ]
              }
            },
            "displayStatus": {
              "type": "string",
              "description": "The short localizable label for the status."
            },
            "message": {
              "type": "string",
              "description": "The detailed status message, including for alerts and error messages."
            },
            "time": {
              "type": "string",
              "format": "date-time",
              "description": "The time of the status."
            }
          }
        }
      }
    },
    "ExtensionUpgradeParameters": {
      "type": "object",
      "description": "Describes the parameters for Extension upgrade.",
      "properties": {
        "targetVersion": {
          "type": "string",
          "description": "Extension Upgrade Target Version."
        }
      }
    },
    "OfferList": {
      "description": "List of Offer proxy resources for the HCI cluster.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Offer proxy resources.",
          "type": "array",
          "items": {
            "description": "Offer details.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Offer properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning State",
                    "type": "string",
                    "readOnly": true
                  },
                  "publisherId": {
                    "type": "string",
                    "description": "Identifier of the Publisher for the offer"
                  },
                  "content": {
                    "type": "string",
                    "description": "JSON serialized catalog content of the offer"
                  },
                  "contentVersion": {
                    "type": "string",
                    "description": "The API version of the catalog service used to serve the catalog content"
                  },
                  "skuMappings": {
                    "type": "array",
                    "description": "Array of SKU mappings",
                    "items": {
                      "description": "SKU Mapping details.",
                      "type": "object",
                      "properties": {
                        "catalogPlanId": {
                          "type": "string",
                          "description": "Identifier of the CatalogPlan for the sku"
                        },
                        "marketplaceSkuId": {
                          "type": "string",
                          "description": "Identifier for the sku"
                        },
                        "marketplaceSkuVersions": {
                          "type": "array",
                          "description": "Array of SKU versions available",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Offer": {
      "description": "Offer details.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Offer properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning State",
              "type": "string",
              "readOnly": true
            },
            "publisherId": {
              "type": "string",
              "description": "Identifier of the Publisher for the offer"
            },
            "content": {
              "type": "string",
              "description": "JSON serialized catalog content of the offer"
            },
            "contentVersion": {
              "type": "string",
              "description": "The API version of the catalog service used to serve the catalog content"
            },
            "skuMappings": {
              "type": "array",
              "description": "Array of SKU mappings",
              "items": {
                "description": "SKU Mapping details.",
                "type": "object",
                "properties": {
                  "catalogPlanId": {
                    "type": "string",
                    "description": "Identifier of the CatalogPlan for the sku"
                  },
                  "marketplaceSkuId": {
                    "type": "string",
                    "description": "Identifier for the sku"
                  },
                  "marketplaceSkuVersions": {
                    "type": "array",
                    "description": "Array of SKU versions available",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "OfferProperties": {
      "description": "Publisher properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning State",
          "type": "string",
          "readOnly": true
        },
        "publisherId": {
          "type": "string",
          "description": "Identifier of the Publisher for the offer"
        },
        "content": {
          "type": "string",
          "description": "JSON serialized catalog content of the offer"
        },
        "contentVersion": {
          "type": "string",
          "description": "The API version of the catalog service used to serve the catalog content"
        },
        "skuMappings": {
          "type": "array",
          "description": "Array of SKU mappings",
          "items": {
            "description": "SKU Mapping details.",
            "type": "object",
            "properties": {
              "catalogPlanId": {
                "type": "string",
                "description": "Identifier of the CatalogPlan for the sku"
              },
              "marketplaceSkuId": {
                "type": "string",
                "description": "Identifier for the sku"
              },
              "marketplaceSkuVersions": {
                "type": "array",
                "description": "Array of SKU versions available",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "SkuMappings": {
      "description": "SKU Mapping details.",
      "type": "object",
      "properties": {
        "catalogPlanId": {
          "type": "string",
          "description": "Identifier of the CatalogPlan for the sku"
        },
        "marketplaceSkuId": {
          "type": "string",
          "description": "Identifier for the sku"
        },
        "marketplaceSkuVersions": {
          "type": "array",
          "description": "Array of SKU versions available",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "PublisherList": {
      "description": "List of Publisher proxy resources for the HCI cluster.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Publisher proxy resources.",
          "type": "array",
          "items": {
            "description": "Publisher details.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "Publisher properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning State",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Publisher": {
      "description": "Publisher details.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "Publisher properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning State",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "PublisherProperties": {
      "description": "Publisher properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning State",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "ComplianceAssignmentType": {
      "type": "string",
      "description": "Represents the compliance assignment type of a resource.",
      "enum": [
        "Audit",
        "ApplyAndAutoCorrect"
      ],
      "x-ms-enum": {
        "name": "ComplianceAssignmentType",
        "modelAsString": true,
        "values": [
          {
            "name": "Audit",
            "value": "Audit",
            "description": "Report on the state of the machine, but don't make changes."
          },
          {
            "name": "ApplyAndAutoCorrect",
            "value": "ApplyAndAutoCorrect",
            "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
          }
        ]
      }
    },
    "ComplianceStatus": {
      "type": "string",
      "description": "Represents the compliance status of a resource.",
      "enum": [
        "Compliant",
        "NonCompliant",
        "Pending"
      ],
      "x-ms-enum": {
        "name": "ComplianceStatus",
        "modelAsString": true,
        "values": [
          {
            "name": "Compliant",
            "value": "Compliant",
            "description": "The resource is compliant"
          },
          {
            "name": "NonCompliant",
            "value": "NonCompliant",
            "description": "The resource is non-compliant"
          },
          {
            "name": "Pending",
            "value": "Pending",
            "description": "The resource compliance status is pending"
          }
        ]
      }
    },
    "SecurityComplianceStatus": {
      "type": "object",
      "description": "Security compliance properties of the resource",
      "properties": {
        "securedCoreCompliance": {
          "description": "Indicates whether HCI hosts meets secured-core server requirements.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Compliant",
            "NonCompliant",
            "Pending"
          ],
          "x-ms-enum": {
            "name": "ComplianceStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Compliant",
                "value": "Compliant",
                "description": "The resource is compliant"
              },
              {
                "name": "NonCompliant",
                "value": "NonCompliant",
                "description": "The resource is non-compliant"
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The resource compliance status is pending"
              }
            ]
          }
        },
        "wdacCompliance": {
          "description": "Indicates whether HCI hosts have enforced consistent Windows Defender Application Control.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Compliant",
            "NonCompliant",
            "Pending"
          ],
          "x-ms-enum": {
            "name": "ComplianceStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Compliant",
                "value": "Compliant",
                "description": "The resource is compliant"
              },
              {
                "name": "NonCompliant",
                "value": "NonCompliant",
                "description": "The resource is non-compliant"
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The resource compliance status is pending"
              }
            ]
          }
        },
        "dataAtRestEncrypted": {
          "description": "Indicates whether data at-rest encryption is enabled on Azure Stack HCI clustered volumes.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Compliant",
            "NonCompliant",
            "Pending"
          ],
          "x-ms-enum": {
            "name": "ComplianceStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Compliant",
                "value": "Compliant",
                "description": "The resource is compliant"
              },
              {
                "name": "NonCompliant",
                "value": "NonCompliant",
                "description": "The resource is non-compliant"
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The resource compliance status is pending"
              }
            ]
          }
        },
        "dataInTransitProtected": {
          "description": "Indicates whether HCI cluster has data in-transit protection.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Compliant",
            "NonCompliant",
            "Pending"
          ],
          "x-ms-enum": {
            "name": "ComplianceStatus",
            "modelAsString": true,
            "values": [
              {
                "name": "Compliant",
                "value": "Compliant",
                "description": "The resource is compliant"
              },
              {
                "name": "NonCompliant",
                "value": "NonCompliant",
                "description": "The resource is non-compliant"
              },
              {
                "name": "Pending",
                "value": "Pending",
                "description": "The resource compliance status is pending"
              }
            ]
          }
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time",
          "description": "Time in UTC when compliance status was last updated.",
          "readOnly": true
        }
      }
    },
    "SecurityProperties": {
      "type": "object",
      "description": "Security properties of the resource",
      "properties": {
        "securedCoreComplianceAssignment": {
          "description": "Secured Core Compliance Assignment",
          "default": "Audit",
          "type": "string",
          "enum": [
            "Audit",
            "ApplyAndAutoCorrect"
          ],
          "x-ms-enum": {
            "name": "ComplianceAssignmentType",
            "modelAsString": true,
            "values": [
              {
                "name": "Audit",
                "value": "Audit",
                "description": "Report on the state of the machine, but don't make changes."
              },
              {
                "name": "ApplyAndAutoCorrect",
                "value": "ApplyAndAutoCorrect",
                "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
              }
            ]
          }
        },
        "wdacComplianceAssignment": {
          "description": "WDAC Compliance Assignment",
          "default": "Audit",
          "type": "string",
          "enum": [
            "Audit",
            "ApplyAndAutoCorrect"
          ],
          "x-ms-enum": {
            "name": "ComplianceAssignmentType",
            "modelAsString": true,
            "values": [
              {
                "name": "Audit",
                "value": "Audit",
                "description": "Report on the state of the machine, but don't make changes."
              },
              {
                "name": "ApplyAndAutoCorrect",
                "value": "ApplyAndAutoCorrect",
                "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
              }
            ]
          }
        },
        "smbEncryptionForIntraClusterTrafficComplianceAssignment": {
          "description": "SMB encryption for intra-cluster traffic Compliance Assignment",
          "default": "Audit",
          "type": "string",
          "enum": [
            "Audit",
            "ApplyAndAutoCorrect"
          ],
          "x-ms-enum": {
            "name": "ComplianceAssignmentType",
            "modelAsString": true,
            "values": [
              {
                "name": "Audit",
                "value": "Audit",
                "description": "Report on the state of the machine, but don't make changes."
              },
              {
                "name": "ApplyAndAutoCorrect",
                "value": "ApplyAndAutoCorrect",
                "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
              }
            ]
          }
        },
        "securityComplianceStatus": {
          "description": "Security Compliance Status",
          "readOnly": true,
          "type": "object",
          "properties": {
            "securedCoreCompliance": {
              "description": "Indicates whether HCI hosts meets secured-core server requirements.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Compliant",
                "NonCompliant",
                "Pending"
              ],
              "x-ms-enum": {
                "name": "ComplianceStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Compliant",
                    "value": "Compliant",
                    "description": "The resource is compliant"
                  },
                  {
                    "name": "NonCompliant",
                    "value": "NonCompliant",
                    "description": "The resource is non-compliant"
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The resource compliance status is pending"
                  }
                ]
              }
            },
            "wdacCompliance": {
              "description": "Indicates whether HCI hosts have enforced consistent Windows Defender Application Control.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Compliant",
                "NonCompliant",
                "Pending"
              ],
              "x-ms-enum": {
                "name": "ComplianceStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Compliant",
                    "value": "Compliant",
                    "description": "The resource is compliant"
                  },
                  {
                    "name": "NonCompliant",
                    "value": "NonCompliant",
                    "description": "The resource is non-compliant"
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The resource compliance status is pending"
                  }
                ]
              }
            },
            "dataAtRestEncrypted": {
              "description": "Indicates whether data at-rest encryption is enabled on Azure Stack HCI clustered volumes.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Compliant",
                "NonCompliant",
                "Pending"
              ],
              "x-ms-enum": {
                "name": "ComplianceStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Compliant",
                    "value": "Compliant",
                    "description": "The resource is compliant"
                  },
                  {
                    "name": "NonCompliant",
                    "value": "NonCompliant",
                    "description": "The resource is non-compliant"
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The resource compliance status is pending"
                  }
                ]
              }
            },
            "dataInTransitProtected": {
              "description": "Indicates whether HCI cluster has data in-transit protection.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Compliant",
                "NonCompliant",
                "Pending"
              ],
              "x-ms-enum": {
                "name": "ComplianceStatus",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Compliant",
                    "value": "Compliant",
                    "description": "The resource is compliant"
                  },
                  {
                    "name": "NonCompliant",
                    "value": "NonCompliant",
                    "description": "The resource is non-compliant"
                  },
                  {
                    "name": "Pending",
                    "value": "Pending",
                    "description": "The resource compliance status is pending"
                  }
                ]
              }
            },
            "lastUpdated": {
              "type": "string",
              "format": "date-time",
              "description": "Time in UTC when compliance status was last updated.",
              "readOnly": true
            }
          }
        },
        "provisioningState": {
          "description": "The status of the last operation.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Provisioning",
            "Updating",
            "Deleting",
            "Accepted"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "Resource has been created."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "Resource creation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "Resource creation was canceled."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The resource is being provisioned"
              },
              {
                "name": "Updating",
                "value": "Updating",
                "description": "The resource is updating"
              },
              {
                "name": "Deleting",
                "value": "Deleting",
                "description": "The resource is being deleted"
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The resource create request has been accepted"
              }
            ]
          }
        }
      }
    },
    "SecuritySetting": {
      "type": "object",
      "description": "Security settings proxy resource",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "x-ms-client-flatten": true,
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "type": "object",
          "properties": {
            "securedCoreComplianceAssignment": {
              "description": "Secured Core Compliance Assignment",
              "default": "Audit",
              "type": "string",
              "enum": [
                "Audit",
                "ApplyAndAutoCorrect"
              ],
              "x-ms-enum": {
                "name": "ComplianceAssignmentType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Audit",
                    "value": "Audit",
                    "description": "Report on the state of the machine, but don't make changes."
                  },
                  {
                    "name": "ApplyAndAutoCorrect",
                    "value": "ApplyAndAutoCorrect",
                    "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                  }
                ]
              }
            },
            "wdacComplianceAssignment": {
              "description": "WDAC Compliance Assignment",
              "default": "Audit",
              "type": "string",
              "enum": [
                "Audit",
                "ApplyAndAutoCorrect"
              ],
              "x-ms-enum": {
                "name": "ComplianceAssignmentType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Audit",
                    "value": "Audit",
                    "description": "Report on the state of the machine, but don't make changes."
                  },
                  {
                    "name": "ApplyAndAutoCorrect",
                    "value": "ApplyAndAutoCorrect",
                    "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                  }
                ]
              }
            },
            "smbEncryptionForIntraClusterTrafficComplianceAssignment": {
              "description": "SMB encryption for intra-cluster traffic Compliance Assignment",
              "default": "Audit",
              "type": "string",
              "enum": [
                "Audit",
                "ApplyAndAutoCorrect"
              ],
              "x-ms-enum": {
                "name": "ComplianceAssignmentType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Audit",
                    "value": "Audit",
                    "description": "Report on the state of the machine, but don't make changes."
                  },
                  {
                    "name": "ApplyAndAutoCorrect",
                    "value": "ApplyAndAutoCorrect",
                    "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                  }
                ]
              }
            },
            "securityComplianceStatus": {
              "description": "Security Compliance Status",
              "readOnly": true,
              "type": "object",
              "properties": {
                "securedCoreCompliance": {
                  "description": "Indicates whether HCI hosts meets secured-core server requirements.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Compliant",
                    "NonCompliant",
                    "Pending"
                  ],
                  "x-ms-enum": {
                    "name": "ComplianceStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Compliant",
                        "value": "Compliant",
                        "description": "The resource is compliant"
                      },
                      {
                        "name": "NonCompliant",
                        "value": "NonCompliant",
                        "description": "The resource is non-compliant"
                      },
                      {
                        "name": "Pending",
                        "value": "Pending",
                        "description": "The resource compliance status is pending"
                      }
                    ]
                  }
                },
                "wdacCompliance": {
                  "description": "Indicates whether HCI hosts have enforced consistent Windows Defender Application Control.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Compliant",
                    "NonCompliant",
                    "Pending"
                  ],
                  "x-ms-enum": {
                    "name": "ComplianceStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Compliant",
                        "value": "Compliant",
                        "description": "The resource is compliant"
                      },
                      {
                        "name": "NonCompliant",
                        "value": "NonCompliant",
                        "description": "The resource is non-compliant"
                      },
                      {
                        "name": "Pending",
                        "value": "Pending",
                        "description": "The resource compliance status is pending"
                      }
                    ]
                  }
                },
                "dataAtRestEncrypted": {
                  "description": "Indicates whether data at-rest encryption is enabled on Azure Stack HCI clustered volumes.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Compliant",
                    "NonCompliant",
                    "Pending"
                  ],
                  "x-ms-enum": {
                    "name": "ComplianceStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Compliant",
                        "value": "Compliant",
                        "description": "The resource is compliant"
                      },
                      {
                        "name": "NonCompliant",
                        "value": "NonCompliant",
                        "description": "The resource is non-compliant"
                      },
                      {
                        "name": "Pending",
                        "value": "Pending",
                        "description": "The resource compliance status is pending"
                      }
                    ]
                  }
                },
                "dataInTransitProtected": {
                  "description": "Indicates whether HCI cluster has data in-transit protection.",
                  "readOnly": true,
                  "type": "string",
                  "enum": [
                    "Compliant",
                    "NonCompliant",
                    "Pending"
                  ],
                  "x-ms-enum": {
                    "name": "ComplianceStatus",
                    "modelAsString": true,
                    "values": [
                      {
                        "name": "Compliant",
                        "value": "Compliant",
                        "description": "The resource is compliant"
                      },
                      {
                        "name": "NonCompliant",
                        "value": "NonCompliant",
                        "description": "The resource is non-compliant"
                      },
                      {
                        "name": "Pending",
                        "value": "Pending",
                        "description": "The resource compliance status is pending"
                      }
                    ]
                  }
                },
                "lastUpdated": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time in UTC when compliance status was last updated.",
                  "readOnly": true
                }
              }
            },
            "provisioningState": {
              "description": "The status of the last operation.",
              "type": "string",
              "readOnly": true,
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Provisioning",
                "Updating",
                "Deleting",
                "Accepted"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "Resource has been created."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "Resource creation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "Resource creation was canceled."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The resource is being provisioned"
                  },
                  {
                    "name": "Updating",
                    "value": "Updating",
                    "description": "The resource is updating"
                  },
                  {
                    "name": "Deleting",
                    "value": "Deleting",
                    "description": "The resource is being deleted"
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The resource create request has been accepted"
                  }
                ]
              }
            }
          }
        }
      }
    },
    "SecuritySettingListResult": {
      "type": "object",
      "description": "The response of a SecuritySetting list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The SecuritySetting items on this page",
          "items": {
            "type": "object",
            "description": "Security settings proxy resource",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "x-ms-client-flatten": true,
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "type": "object",
                "properties": {
                  "securedCoreComplianceAssignment": {
                    "description": "Secured Core Compliance Assignment",
                    "default": "Audit",
                    "type": "string",
                    "enum": [
                      "Audit",
                      "ApplyAndAutoCorrect"
                    ],
                    "x-ms-enum": {
                      "name": "ComplianceAssignmentType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Audit",
                          "value": "Audit",
                          "description": "Report on the state of the machine, but don't make changes."
                        },
                        {
                          "name": "ApplyAndAutoCorrect",
                          "value": "ApplyAndAutoCorrect",
                          "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                        }
                      ]
                    }
                  },
                  "wdacComplianceAssignment": {
                    "description": "WDAC Compliance Assignment",
                    "default": "Audit",
                    "type": "string",
                    "enum": [
                      "Audit",
                      "ApplyAndAutoCorrect"
                    ],
                    "x-ms-enum": {
                      "name": "ComplianceAssignmentType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Audit",
                          "value": "Audit",
                          "description": "Report on the state of the machine, but don't make changes."
                        },
                        {
                          "name": "ApplyAndAutoCorrect",
                          "value": "ApplyAndAutoCorrect",
                          "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                        }
                      ]
                    }
                  },
                  "smbEncryptionForIntraClusterTrafficComplianceAssignment": {
                    "description": "SMB encryption for intra-cluster traffic Compliance Assignment",
                    "default": "Audit",
                    "type": "string",
                    "enum": [
                      "Audit",
                      "ApplyAndAutoCorrect"
                    ],
                    "x-ms-enum": {
                      "name": "ComplianceAssignmentType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Audit",
                          "value": "Audit",
                          "description": "Report on the state of the machine, but don't make changes."
                        },
                        {
                          "name": "ApplyAndAutoCorrect",
                          "value": "ApplyAndAutoCorrect",
                          "description": "Applied to the machine. If it drifts, the local service inside the machine makes a correction at the next evaluation."
                        }
                      ]
                    }
                  },
                  "securityComplianceStatus": {
                    "description": "Security Compliance Status",
                    "readOnly": true,
                    "type": "object",
                    "properties": {
                      "securedCoreCompliance": {
                        "description": "Indicates whether HCI hosts meets secured-core server requirements.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Compliant",
                          "NonCompliant",
                          "Pending"
                        ],
                        "x-ms-enum": {
                          "name": "ComplianceStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Compliant",
                              "value": "Compliant",
                              "description": "The resource is compliant"
                            },
                            {
                              "name": "NonCompliant",
                              "value": "NonCompliant",
                              "description": "The resource is non-compliant"
                            },
                            {
                              "name": "Pending",
                              "value": "Pending",
                              "description": "The resource compliance status is pending"
                            }
                          ]
                        }
                      },
                      "wdacCompliance": {
                        "description": "Indicates whether HCI hosts have enforced consistent Windows Defender Application Control.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Compliant",
                          "NonCompliant",
                          "Pending"
                        ],
                        "x-ms-enum": {
                          "name": "ComplianceStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Compliant",
                              "value": "Compliant",
                              "description": "The resource is compliant"
                            },
                            {
                              "name": "NonCompliant",
                              "value": "NonCompliant",
                              "description": "The resource is non-compliant"
                            },
                            {
                              "name": "Pending",
                              "value": "Pending",
                              "description": "The resource compliance status is pending"
                            }
                          ]
                        }
                      },
                      "dataAtRestEncrypted": {
                        "description": "Indicates whether data at-rest encryption is enabled on Azure Stack HCI clustered volumes.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Compliant",
                          "NonCompliant",
                          "Pending"
                        ],
                        "x-ms-enum": {
                          "name": "ComplianceStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Compliant",
                              "value": "Compliant",
                              "description": "The resource is compliant"
                            },
                            {
                              "name": "NonCompliant",
                              "value": "NonCompliant",
                              "description": "The resource is non-compliant"
                            },
                            {
                              "name": "Pending",
                              "value": "Pending",
                              "description": "The resource compliance status is pending"
                            }
                          ]
                        }
                      },
                      "dataInTransitProtected": {
                        "description": "Indicates whether HCI cluster has data in-transit protection.",
                        "readOnly": true,
                        "type": "string",
                        "enum": [
                          "Compliant",
                          "NonCompliant",
                          "Pending"
                        ],
                        "x-ms-enum": {
                          "name": "ComplianceStatus",
                          "modelAsString": true,
                          "values": [
                            {
                              "name": "Compliant",
                              "value": "Compliant",
                              "description": "The resource is compliant"
                            },
                            {
                              "name": "NonCompliant",
                              "value": "NonCompliant",
                              "description": "The resource is non-compliant"
                            },
                            {
                              "name": "Pending",
                              "value": "Pending",
                              "description": "The resource compliance status is pending"
                            }
                          ]
                        }
                      },
                      "lastUpdated": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time in UTC when compliance status was last updated.",
                        "readOnly": true
                      }
                    }
                  },
                  "provisioningState": {
                    "description": "The status of the last operation.",
                    "type": "string",
                    "readOnly": true,
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Provisioning",
                      "Updating",
                      "Deleting",
                      "Accepted"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "Resource has been created."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "Resource creation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "Resource creation was canceled."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The resource is being provisioned"
                        },
                        {
                          "name": "Updating",
                          "value": "Updating",
                          "description": "The resource is updating"
                        },
                        {
                          "name": "Deleting",
                          "value": "Deleting",
                          "description": "The resource is being deleted"
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The resource create request has been accepted"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "SkuList": {
      "description": "List of SKU proxy resources for the HCI cluster.",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of SKU proxy resources.",
          "type": "array",
          "items": {
            "description": "Sku details.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "SKU properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning State",
                    "type": "string",
                    "readOnly": true
                  },
                  "publisherId": {
                    "type": "string",
                    "description": "Identifier of the Publisher for the offer"
                  },
                  "offerId": {
                    "type": "string",
                    "description": "Identifier of the Offer for the sku"
                  },
                  "content": {
                    "type": "string",
                    "description": "JSON serialized catalog content of the sku offer"
                  },
                  "contentVersion": {
                    "type": "string",
                    "description": "The API version of the catalog service used to serve the catalog content"
                  },
                  "skuMappings": {
                    "type": "array",
                    "description": "Array of SKU mappings",
                    "items": {
                      "description": "SKU Mapping details.",
                      "type": "object",
                      "properties": {
                        "catalogPlanId": {
                          "type": "string",
                          "description": "Identifier of the CatalogPlan for the sku"
                        },
                        "marketplaceSkuId": {
                          "type": "string",
                          "description": "Identifier for the sku"
                        },
                        "marketplaceSkuVersions": {
                          "type": "array",
                          "description": "Array of SKU versions available",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "x-ms-identifiers": []
                  }
                }
              }
            }
          },
          "readOnly": true
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Sku": {
      "description": "Sku details.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "SKU properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "Provisioning State",
              "type": "string",
              "readOnly": true
            },
            "publisherId": {
              "type": "string",
              "description": "Identifier of the Publisher for the offer"
            },
            "offerId": {
              "type": "string",
              "description": "Identifier of the Offer for the sku"
            },
            "content": {
              "type": "string",
              "description": "JSON serialized catalog content of the sku offer"
            },
            "contentVersion": {
              "type": "string",
              "description": "The API version of the catalog service used to serve the catalog content"
            },
            "skuMappings": {
              "type": "array",
              "description": "Array of SKU mappings",
              "items": {
                "description": "SKU Mapping details.",
                "type": "object",
                "properties": {
                  "catalogPlanId": {
                    "type": "string",
                    "description": "Identifier of the CatalogPlan for the sku"
                  },
                  "marketplaceSkuId": {
                    "type": "string",
                    "description": "Identifier for the sku"
                  },
                  "marketplaceSkuVersions": {
                    "type": "array",
                    "description": "Array of SKU versions available",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              },
              "x-ms-identifiers": []
            }
          }
        }
      }
    },
    "SkuProperties": {
      "description": "SKU properties.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning State",
          "type": "string",
          "readOnly": true
        },
        "publisherId": {
          "type": "string",
          "description": "Identifier of the Publisher for the offer"
        },
        "offerId": {
          "type": "string",
          "description": "Identifier of the Offer for the sku"
        },
        "content": {
          "type": "string",
          "description": "JSON serialized catalog content of the sku offer"
        },
        "contentVersion": {
          "type": "string",
          "description": "The API version of the catalog service used to serve the catalog content"
        },
        "skuMappings": {
          "type": "array",
          "description": "Array of SKU mappings",
          "items": {
            "description": "SKU Mapping details.",
            "type": "object",
            "properties": {
              "catalogPlanId": {
                "type": "string",
                "description": "Identifier of the CatalogPlan for the sku"
              },
              "marketplaceSkuId": {
                "type": "string",
                "description": "Identifier for the sku"
              },
              "marketplaceSkuVersions": {
                "type": "array",
                "description": "Array of SKU versions available",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          "x-ms-identifiers": []
        }
      }
    },
    "UpdateRunList": {
      "description": "List of Update runs",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Update runs",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UpdateRun"
          }
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UpdateRun": {
      "description": "Details of an Update run",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "title": "Proxy Resource",
          "description": "The resource model definition for a Azure Resource Manager proxy resource. It will not have tags and a location",
          "properties": {
            "id": {
              "type": "string",
              "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
              "readOnly": true
            },
            "name": {
              "type": "string",
              "description": "The name of the resource",
              "readOnly": true
            },
            "type": {
              "type": "string",
              "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
              "readOnly": true
            },
            "systemData": {
              "type": "object",
              "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
              "readOnly": true,
              "properties": {
                "createdBy": {
                  "type": "string",
                  "description": "The identity that created the resource."
                },
                "createdByType": {
                  "type": "string",
                  "description": "The type of identity that created the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource creation (UTC)."
                },
                "lastModifiedBy": {
                  "type": "string",
                  "description": "The identity that last modified the resource."
                },
                "lastModifiedByType": {
                  "type": "string",
                  "description": "The type of identity that last modified the resource.",
                  "enum": [
                    "User",
                    "Application",
                    "ManagedIdentity",
                    "Key"
                  ],
                  "x-ms-enum": {
                    "name": "createdByType",
                    "modelAsString": true
                  }
                },
                "lastModifiedAt": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp of resource last modification (UTC)"
                }
              }
            }
          }
        }
      ],
      "properties": {
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "Describes Update Run Properties.",
          "$ref": "#/definitions/UpdateRunProperties",
          "x-ms-client-flatten": true
        }
      }
    },
    "UpdateRunProperties": {
      "description": "Details of an Update run",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the UpdateRuns proxy resource. Indicates the current lifecycle status of the update operation, such as whether it has been accepted, is in progress, or has completed.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The update operation completed successfully."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The update operation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The update operation was canceled before completion."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The update operation has been accepted and is pending execution."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The update operation is currently being provisioned."
              }
            ]
          },
          "readOnly": true
        },
        "timeStarted": {
          "description": "Timestamp of the update run was started.",
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedTime": {
          "description": "Timestamp of the most recently completed step in the update run.",
          "type": "string",
          "format": "date-time"
        },
        "duration": {
          "description": "Duration of the update run.",
          "type": "string"
        },
        "state": {
          "description": "Represents the current state of the update run. Indicates whether the update is in progress, has completed successfully, failed, or is in an unknown state.",
          "type": "string",
          "enum": [
            "Unknown",
            "Succeeded",
            "InProgress",
            "Failed"
          ],
          "x-ms-enum": {
            "name": "updateRunPropertiesState",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "The state of the update run is not known."
              },
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The update run completed successfully."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "The update run is currently in progress."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The update run failed to complete successfully."
              }
            ]
          }
        },
        "progress": {
          "description": "Progress representation of the update run steps.",
          "$ref": "#/definitions/Step",
          "x-ms-client-flatten": true
        }
      }
    },
    "Step": {
      "description": "Progress representation of the update run steps.",
      "type": "object",
      "properties": {
        "name": {
          "description": "Name of the step.",
          "type": "string"
        },
        "description": {
          "description": "More detailed description of the step.",
          "type": "string"
        },
        "errorMessage": {
          "description": "Error message, specified if the step is in a failed state.",
          "type": "string"
        },
        "status": {
          "description": "Status of the step, bubbled up from the ECE action plan for installation attempts. Values are: 'Success', 'Error', 'InProgress', and 'Unknown status'.",
          "type": "string"
        },
        "startTimeUtc": {
          "description": "When the step started, or empty if it has not started executing.",
          "type": "string",
          "format": "date-time"
        },
        "endTimeUtc": {
          "description": "When the step reached a terminal state.",
          "type": "string",
          "format": "date-time"
        },
        "lastUpdatedTimeUtc": {
          "description": "Completion time of this step or the last completed sub-step.",
          "type": "string",
          "format": "date-time"
        },
        "expectedExecutionTime": {
          "description": "Expected execution time of a given step. This is optionally authored in the update action plan and can be empty.",
          "type": "string"
        },
        "steps": {
          "description": "Recursive model for child steps of this step.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Step"
          },
          "x-ms-identifiers": [
            "name"
          ]
        }
      }
    },
    "UpdateSummariesList": {
      "description": "List of Update Summaries",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Update Summaries",
          "type": "array",
          "items": {
            "description": "Get the update summaries for the cluster",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "location": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "description": "Update summaries properties",
                "type": "object",
                "x-ms-client-flatten": true,
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the UpdateSummaries proxy resource. Indicates the current lifecycle status of the update summary operation, such as whether it has been accepted, is in progress, or has completed.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted",
                      "Provisioning"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The update summary operation completed successfully."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The update summary operation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The update summary operation was canceled before completion."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The update summary operation has been accepted and is pending execution."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The update summary operation is currently being provisioned."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "oemFamily": {
                    "description": "OEM family name.",
                    "type": "string"
                  },
                  "currentOemVersion": {
                    "description": "Current OEM Version.",
                    "type": "string"
                  },
                  "hardwareModel": {
                    "description": "Name of the hardware model.",
                    "type": "string"
                  },
                  "packageVersions": {
                    "description": "Current version of each updatable component.",
                    "type": "array",
                    "items": {
                      "description": "Current version of each updatable component.",
                      "type": "object",
                      "properties": {
                        "packageType": {
                          "description": "Package type",
                          "type": "string"
                        },
                        "version": {
                          "description": "Package version",
                          "type": "string"
                        },
                        "lastUpdated": {
                          "description": "Last time this component was updated.",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "x-ms-client-flatten": true,
                    "x-ms-identifiers": [
                      "version"
                    ]
                  },
                  "currentVersion": {
                    "description": "Current Solution Bundle version of the stamp.",
                    "type": "string"
                  },
                  "currentSbeVersion": {
                    "description": "Current Sbe version of the stamp.",
                    "type": "string"
                  },
                  "lastUpdated": {
                    "description": "Last time an update installation completed successfully.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "lastChecked": {
                    "description": "Last time the update service successfully checked for updates",
                    "type": "string",
                    "format": "date-time"
                  },
                  "healthState": {
                    "description": "Overall health state for update-specific health checks.",
                    "type": "object",
                    "x-ms-client-flatten": true,
                    "enum": [
                      "Unknown",
                      "Success",
                      "Failure",
                      "Warning",
                      "Error",
                      "InProgress"
                    ],
                    "x-ms-enum": {
                      "name": "HealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "The health state is not known or cannot be determined."
                        },
                        {
                          "name": "Success",
                          "value": "Success",
                          "description": "The component is healthy and operating as expected."
                        },
                        {
                          "name": "Failure",
                          "value": "Failure",
                          "description": "The component has failed and is not functioning properly."
                        },
                        {
                          "name": "Warning",
                          "value": "Warning",
                          "description": "The component has a warning that may require attention but is still operational."
                        },
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "The component has encountered an error affecting its functionality."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "The health evaluation or operation is currently in progress."
                        }
                      ]
                    }
                  },
                  "healthCheckResult": {
                    "description": "An array of pre-check result objects.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                          "type": "string"
                        },
                        "displayName": {
                          "description": "The health check DisplayName localized of the individual test executed.",
                          "type": "string"
                        },
                        "tags": {
                          "description": "Key-value pairs that allow grouping/filtering individual tests.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "Key that allow grouping/filtering individual tests.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value of the key that allow grouping/filtering individual tests.",
                              "type": "string"
                            }
                          }
                        },
                        "healthCheckTags": {
                          "description": "Key-value pairs that allow grouping/filtering individual tests.",
                          "type": "object"
                        },
                        "title": {
                          "description": "User-facing name; one or more sentences indicating the direct issue.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "InProgress"
                          ],
                          "x-ms-enum": {
                            "name": "status",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "The check completed successfully."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "The check completed but failed."
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress",
                                "description": "The check is currently in progress."
                              }
                            ]
                          }
                        },
                        "severity": {
                          "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                          "type": "string",
                          "enum": [
                            "Critical",
                            "Warning",
                            "Informational",
                            "Hidden"
                          ],
                          "x-ms-enum": {
                            "name": "severity",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Critical",
                                "value": "Critical",
                                "description": "A critical issue that blocks updates and requires immediate attention."
                              },
                              {
                                "name": "Warning",
                                "value": "Warning",
                                "description": "A warning that may indicate a potential issue but does not block updates."
                              },
                              {
                                "name": "Informational",
                                "value": "Informational",
                                "description": "General information that does not indicate any issue."
                              },
                              {
                                "name": "Hidden",
                                "value": "Hidden",
                                "description": "The result is hidden and not shown in the output."
                              }
                            ]
                          }
                        },
                        "description": {
                          "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                          "type": "string"
                        },
                        "remediation": {
                          "description": "Set of steps that can be taken to resolve the issue found.",
                          "type": "string"
                        },
                        "targetResourceID": {
                          "description": "The unique identifier for the affected resource (such as a node or drive).",
                          "type": "string"
                        },
                        "targetResourceName": {
                          "description": "The name of the affected resource.",
                          "type": "string"
                        },
                        "targetResourceType": {
                          "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                          "type": "string"
                        },
                        "timestamp": {
                          "description": "The time in which the HealthCheck was called.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "additionalData": {
                          "description": "Property bag of key value pairs for additional information.",
                          "type": "string"
                        },
                        "healthCheckSource": {
                          "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                          "type": "string"
                        }
                      }
                    },
                    "x-ms-client-flatten": true,
                    "x-ms-identifiers": [
                      "name"
                    ]
                  },
                  "healthCheckDate": {
                    "description": "Last time the package-specific checks were run.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "state": {
                    "description": "Overall update state of the stamp. Indicates the current status of update deployment across the stamp, including preparation, application, and any issues encountered.",
                    "type": "string",
                    "enum": [
                      "Unknown",
                      "AppliedSuccessfully",
                      "UpdateAvailable",
                      "UpdateInProgress",
                      "UpdateFailed",
                      "NeedsAttention",
                      "PreparationInProgress",
                      "PreparationFailed"
                    ],
                    "x-ms-enum": {
                      "name": "updateSummariesPropertiesState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "The update state is not known."
                        },
                        {
                          "name": "AppliedSuccessfully",
                          "value": "AppliedSuccessfully",
                          "description": "Updates have been successfully applied to the stamp."
                        },
                        {
                          "name": "UpdateAvailable",
                          "value": "UpdateAvailable",
                          "description": "Updates are available but have not yet been applied."
                        },
                        {
                          "name": "UpdateInProgress",
                          "value": "UpdateInProgress",
                          "description": "Updates are currently being applied to the stamp."
                        },
                        {
                          "name": "UpdateFailed",
                          "value": "UpdateFailed",
                          "description": "The update process failed."
                        },
                        {
                          "name": "NeedsAttention",
                          "value": "NeedsAttention",
                          "description": "The update process requires user intervention or has encountered issues needing attention."
                        },
                        {
                          "name": "PreparationInProgress",
                          "value": "PreparationInProgress",
                          "description": "Preparation for the update is currently in progress."
                        },
                        {
                          "name": "PreparationFailed",
                          "value": "PreparationFailed",
                          "description": "Preparation for the update failed."
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "x-ms-identifiers": []
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UpdateSummaries": {
      "description": "Get the update summaries for the cluster",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "Update summaries properties",
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the UpdateSummaries proxy resource. Indicates the current lifecycle status of the update summary operation, such as whether it has been accepted, is in progress, or has completed.",
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted",
                "Provisioning"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The update summary operation completed successfully."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The update summary operation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The update summary operation was canceled before completion."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The update summary operation has been accepted and is pending execution."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The update summary operation is currently being provisioned."
                  }
                ]
              },
              "readOnly": true
            },
            "oemFamily": {
              "description": "OEM family name.",
              "type": "string"
            },
            "currentOemVersion": {
              "description": "Current OEM Version.",
              "type": "string"
            },
            "hardwareModel": {
              "description": "Name of the hardware model.",
              "type": "string"
            },
            "packageVersions": {
              "description": "Current version of each updatable component.",
              "type": "array",
              "items": {
                "description": "Current version of each updatable component.",
                "type": "object",
                "properties": {
                  "packageType": {
                    "description": "Package type",
                    "type": "string"
                  },
                  "version": {
                    "description": "Package version",
                    "type": "string"
                  },
                  "lastUpdated": {
                    "description": "Last time this component was updated.",
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "x-ms-client-flatten": true,
              "x-ms-identifiers": [
                "version"
              ]
            },
            "currentVersion": {
              "description": "Current Solution Bundle version of the stamp.",
              "type": "string"
            },
            "currentSbeVersion": {
              "description": "Current Sbe version of the stamp.",
              "type": "string"
            },
            "lastUpdated": {
              "description": "Last time an update installation completed successfully.",
              "type": "string",
              "format": "date-time"
            },
            "lastChecked": {
              "description": "Last time the update service successfully checked for updates",
              "type": "string",
              "format": "date-time"
            },
            "healthState": {
              "description": "Overall health state for update-specific health checks.",
              "type": "object",
              "x-ms-client-flatten": true,
              "enum": [
                "Unknown",
                "Success",
                "Failure",
                "Warning",
                "Error",
                "InProgress"
              ],
              "x-ms-enum": {
                "name": "HealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "The health state is not known or cannot be determined."
                  },
                  {
                    "name": "Success",
                    "value": "Success",
                    "description": "The component is healthy and operating as expected."
                  },
                  {
                    "name": "Failure",
                    "value": "Failure",
                    "description": "The component has failed and is not functioning properly."
                  },
                  {
                    "name": "Warning",
                    "value": "Warning",
                    "description": "The component has a warning that may require attention but is still operational."
                  },
                  {
                    "name": "Error",
                    "value": "Error",
                    "description": "The component has encountered an error affecting its functionality."
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress",
                    "description": "The health evaluation or operation is currently in progress."
                  }
                ]
              }
            },
            "healthCheckResult": {
              "description": "An array of pre-check result objects.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "The health check DisplayName localized of the individual test executed.",
                    "type": "string"
                  },
                  "tags": {
                    "description": "Key-value pairs that allow grouping/filtering individual tests.",
                    "type": "object",
                    "properties": {
                      "key": {
                        "description": "Key that allow grouping/filtering individual tests.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Value of the key that allow grouping/filtering individual tests.",
                        "type": "string"
                      }
                    }
                  },
                  "healthCheckTags": {
                    "description": "Key-value pairs that allow grouping/filtering individual tests.",
                    "type": "object"
                  },
                  "title": {
                    "description": "User-facing name; one or more sentences indicating the direct issue.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "InProgress"
                    ],
                    "x-ms-enum": {
                      "name": "status",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The check completed successfully."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The check completed but failed."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "The check is currently in progress."
                        }
                      ]
                    }
                  },
                  "severity": {
                    "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                    "type": "string",
                    "enum": [
                      "Critical",
                      "Warning",
                      "Informational",
                      "Hidden"
                    ],
                    "x-ms-enum": {
                      "name": "severity",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Critical",
                          "value": "Critical",
                          "description": "A critical issue that blocks updates and requires immediate attention."
                        },
                        {
                          "name": "Warning",
                          "value": "Warning",
                          "description": "A warning that may indicate a potential issue but does not block updates."
                        },
                        {
                          "name": "Informational",
                          "value": "Informational",
                          "description": "General information that does not indicate any issue."
                        },
                        {
                          "name": "Hidden",
                          "value": "Hidden",
                          "description": "The result is hidden and not shown in the output."
                        }
                      ]
                    }
                  },
                  "description": {
                    "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                    "type": "string"
                  },
                  "remediation": {
                    "description": "Set of steps that can be taken to resolve the issue found.",
                    "type": "string"
                  },
                  "targetResourceID": {
                    "description": "The unique identifier for the affected resource (such as a node or drive).",
                    "type": "string"
                  },
                  "targetResourceName": {
                    "description": "The name of the affected resource.",
                    "type": "string"
                  },
                  "targetResourceType": {
                    "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                    "type": "string"
                  },
                  "timestamp": {
                    "description": "The time in which the HealthCheck was called.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "additionalData": {
                    "description": "Property bag of key value pairs for additional information.",
                    "type": "string"
                  },
                  "healthCheckSource": {
                    "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                    "type": "string"
                  }
                }
              },
              "x-ms-client-flatten": true,
              "x-ms-identifiers": [
                "name"
              ]
            },
            "healthCheckDate": {
              "description": "Last time the package-specific checks were run.",
              "type": "string",
              "format": "date-time"
            },
            "state": {
              "description": "Overall update state of the stamp. Indicates the current status of update deployment across the stamp, including preparation, application, and any issues encountered.",
              "type": "string",
              "enum": [
                "Unknown",
                "AppliedSuccessfully",
                "UpdateAvailable",
                "UpdateInProgress",
                "UpdateFailed",
                "NeedsAttention",
                "PreparationInProgress",
                "PreparationFailed"
              ],
              "x-ms-enum": {
                "name": "updateSummariesPropertiesState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "The update state is not known."
                  },
                  {
                    "name": "AppliedSuccessfully",
                    "value": "AppliedSuccessfully",
                    "description": "Updates have been successfully applied to the stamp."
                  },
                  {
                    "name": "UpdateAvailable",
                    "value": "UpdateAvailable",
                    "description": "Updates are available but have not yet been applied."
                  },
                  {
                    "name": "UpdateInProgress",
                    "value": "UpdateInProgress",
                    "description": "Updates are currently being applied to the stamp."
                  },
                  {
                    "name": "UpdateFailed",
                    "value": "UpdateFailed",
                    "description": "The update process failed."
                  },
                  {
                    "name": "NeedsAttention",
                    "value": "NeedsAttention",
                    "description": "The update process requires user intervention or has encountered issues needing attention."
                  },
                  {
                    "name": "PreparationInProgress",
                    "value": "PreparationInProgress",
                    "description": "Preparation for the update is currently in progress."
                  },
                  {
                    "name": "PreparationFailed",
                    "value": "PreparationFailed",
                    "description": "Preparation for the update failed."
                  }
                ]
              }
            }
          }
        }
      }
    },
    "UpdateSummariesProperties": {
      "description": "Properties of Update summaries",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the UpdateSummaries proxy resource. Indicates the current lifecycle status of the update summary operation, such as whether it has been accepted, is in progress, or has completed.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The update summary operation completed successfully."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The update summary operation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The update summary operation was canceled before completion."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The update summary operation has been accepted and is pending execution."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The update summary operation is currently being provisioned."
              }
            ]
          },
          "readOnly": true
        },
        "oemFamily": {
          "description": "OEM family name.",
          "type": "string"
        },
        "currentOemVersion": {
          "description": "Current OEM Version.",
          "type": "string"
        },
        "hardwareModel": {
          "description": "Name of the hardware model.",
          "type": "string"
        },
        "packageVersions": {
          "description": "Current version of each updatable component.",
          "type": "array",
          "items": {
            "description": "Current version of each updatable component.",
            "type": "object",
            "properties": {
              "packageType": {
                "description": "Package type",
                "type": "string"
              },
              "version": {
                "description": "Package version",
                "type": "string"
              },
              "lastUpdated": {
                "description": "Last time this component was updated.",
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "x-ms-client-flatten": true,
          "x-ms-identifiers": [
            "version"
          ]
        },
        "currentVersion": {
          "description": "Current Solution Bundle version of the stamp.",
          "type": "string"
        },
        "currentSbeVersion": {
          "description": "Current Sbe version of the stamp.",
          "type": "string"
        },
        "lastUpdated": {
          "description": "Last time an update installation completed successfully.",
          "type": "string",
          "format": "date-time"
        },
        "lastChecked": {
          "description": "Last time the update service successfully checked for updates",
          "type": "string",
          "format": "date-time"
        },
        "healthState": {
          "description": "Overall health state for update-specific health checks.",
          "type": "object",
          "x-ms-client-flatten": true,
          "enum": [
            "Unknown",
            "Success",
            "Failure",
            "Warning",
            "Error",
            "InProgress"
          ],
          "x-ms-enum": {
            "name": "HealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "The health state is not known or cannot be determined."
              },
              {
                "name": "Success",
                "value": "Success",
                "description": "The component is healthy and operating as expected."
              },
              {
                "name": "Failure",
                "value": "Failure",
                "description": "The component has failed and is not functioning properly."
              },
              {
                "name": "Warning",
                "value": "Warning",
                "description": "The component has a warning that may require attention but is still operational."
              },
              {
                "name": "Error",
                "value": "Error",
                "description": "The component has encountered an error affecting its functionality."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "The health evaluation or operation is currently in progress."
              }
            ]
          }
        },
        "healthCheckResult": {
          "description": "An array of pre-check result objects.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                "type": "string"
              },
              "displayName": {
                "description": "The health check DisplayName localized of the individual test executed.",
                "type": "string"
              },
              "tags": {
                "description": "Key-value pairs that allow grouping/filtering individual tests.",
                "type": "object",
                "properties": {
                  "key": {
                    "description": "Key that allow grouping/filtering individual tests.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of the key that allow grouping/filtering individual tests.",
                    "type": "string"
                  }
                }
              },
              "healthCheckTags": {
                "description": "Key-value pairs that allow grouping/filtering individual tests.",
                "type": "object"
              },
              "title": {
                "description": "User-facing name; one or more sentences indicating the direct issue.",
                "type": "string"
              },
              "status": {
                "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                "type": "string",
                "enum": [
                  "Succeeded",
                  "Failed",
                  "InProgress"
                ],
                "x-ms-enum": {
                  "name": "status",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Succeeded",
                      "value": "Succeeded",
                      "description": "The check completed successfully."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "The check completed but failed."
                    },
                    {
                      "name": "InProgress",
                      "value": "InProgress",
                      "description": "The check is currently in progress."
                    }
                  ]
                }
              },
              "severity": {
                "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                "type": "string",
                "enum": [
                  "Critical",
                  "Warning",
                  "Informational",
                  "Hidden"
                ],
                "x-ms-enum": {
                  "name": "severity",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Critical",
                      "value": "Critical",
                      "description": "A critical issue that blocks updates and requires immediate attention."
                    },
                    {
                      "name": "Warning",
                      "value": "Warning",
                      "description": "A warning that may indicate a potential issue but does not block updates."
                    },
                    {
                      "name": "Informational",
                      "value": "Informational",
                      "description": "General information that does not indicate any issue."
                    },
                    {
                      "name": "Hidden",
                      "value": "Hidden",
                      "description": "The result is hidden and not shown in the output."
                    }
                  ]
                }
              },
              "description": {
                "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                "type": "string"
              },
              "remediation": {
                "description": "Set of steps that can be taken to resolve the issue found.",
                "type": "string"
              },
              "targetResourceID": {
                "description": "The unique identifier for the affected resource (such as a node or drive).",
                "type": "string"
              },
              "targetResourceName": {
                "description": "The name of the affected resource.",
                "type": "string"
              },
              "targetResourceType": {
                "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                "type": "string"
              },
              "timestamp": {
                "description": "The time in which the HealthCheck was called.",
                "type": "string",
                "format": "date-time"
              },
              "additionalData": {
                "description": "Property bag of key value pairs for additional information.",
                "type": "string"
              },
              "healthCheckSource": {
                "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true,
          "x-ms-identifiers": [
            "name"
          ]
        },
        "healthCheckDate": {
          "description": "Last time the package-specific checks were run.",
          "type": "string",
          "format": "date-time"
        },
        "state": {
          "description": "Overall update state of the stamp. Indicates the current status of update deployment across the stamp, including preparation, application, and any issues encountered.",
          "type": "string",
          "enum": [
            "Unknown",
            "AppliedSuccessfully",
            "UpdateAvailable",
            "UpdateInProgress",
            "UpdateFailed",
            "NeedsAttention",
            "PreparationInProgress",
            "PreparationFailed"
          ],
          "x-ms-enum": {
            "name": "updateSummariesPropertiesState",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "The update state is not known."
              },
              {
                "name": "AppliedSuccessfully",
                "value": "AppliedSuccessfully",
                "description": "Updates have been successfully applied to the stamp."
              },
              {
                "name": "UpdateAvailable",
                "value": "UpdateAvailable",
                "description": "Updates are available but have not yet been applied."
              },
              {
                "name": "UpdateInProgress",
                "value": "UpdateInProgress",
                "description": "Updates are currently being applied to the stamp."
              },
              {
                "name": "UpdateFailed",
                "value": "UpdateFailed",
                "description": "The update process failed."
              },
              {
                "name": "NeedsAttention",
                "value": "NeedsAttention",
                "description": "The update process requires user intervention or has encountered issues needing attention."
              },
              {
                "name": "PreparationInProgress",
                "value": "PreparationInProgress",
                "description": "Preparation for the update is currently in progress."
              },
              {
                "name": "PreparationFailed",
                "value": "PreparationFailed",
                "description": "Preparation for the update failed."
              }
            ]
          }
        }
      }
    },
    "PackageVersionInfo": {
      "description": "Current version of each updatable component.",
      "type": "object",
      "properties": {
        "packageType": {
          "description": "Package type",
          "type": "string"
        },
        "version": {
          "description": "Package version",
          "type": "string"
        },
        "lastUpdated": {
          "description": "Last time this component was updated.",
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "HealthState": {
      "type": "string",
      "description": "Overall health state for update-specific health checks. Indicates whether the system is functioning correctly, has warnings or errors, or is undergoing a health evaluation.",
      "enum": [
        "Unknown",
        "Success",
        "Failure",
        "Warning",
        "Error",
        "InProgress"
      ],
      "x-ms-enum": {
        "name": "HealthState",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "The health state is not known or cannot be determined."
          },
          {
            "name": "Success",
            "value": "Success",
            "description": "The health check completed successfully and the system is healthy."
          },
          {
            "name": "Failure",
            "value": "Failure",
            "description": "The health check failed, indicating a critical issue."
          },
          {
            "name": "Warning",
            "value": "Warning",
            "description": "The health check detected a non-critical issue that may require attention."
          },
          {
            "name": "Error",
            "value": "Error",
            "description": "An error occurred during the health check process."
          },
          {
            "name": "InProgress",
            "value": "InProgress",
            "description": "The health check is currently in progress."
          }
        ]
      }
    },
    "UpdateList": {
      "description": "List of Updates",
      "type": "object",
      "properties": {
        "value": {
          "description": "List of Updates",
          "type": "array",
          "items": {
            "description": "Update details",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "type": "object",
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "location": {
                "type": "string",
                "x-ms-mutability": [
                  "read",
                  "create"
                ],
                "description": "The geo-location where the resource lives"
              },
              "properties": {
                "description": "Update properties",
                "type": "object",
                "x-ms-client-flatten": true,
                "properties": {
                  "provisioningState": {
                    "description": "Provisioning state of the Updates proxy resource. Indicates the current lifecycle status of the update operation, such as whether it has been accepted, is in progress, or has completed.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "Canceled",
                      "Accepted",
                      "Provisioning"
                    ],
                    "x-ms-enum": {
                      "name": "ProvisioningState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The update operation completed successfully."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The update operation failed."
                        },
                        {
                          "name": "Canceled",
                          "value": "Canceled",
                          "description": "The update operation was canceled before completion."
                        },
                        {
                          "name": "Accepted",
                          "value": "Accepted",
                          "description": "The update operation has been accepted and is pending execution."
                        },
                        {
                          "name": "Provisioning",
                          "value": "Provisioning",
                          "description": "The update operation is currently being provisioned."
                        }
                      ]
                    },
                    "readOnly": true
                  },
                  "installedDate": {
                    "description": "Date that the update was installed.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "description": {
                    "description": "Description of the update.",
                    "type": "string"
                  },
                  "minSbeVersionRequired": {
                    "description": "Minimum Sbe Version of the update.",
                    "type": "string"
                  },
                  "state": {
                    "description": "Represents the current state of the update as it relates to this stamp. This includes phases such as preparation, installation, scanning, and error handling, providing insight into the update's progress and any issues encountered.",
                    "type": "string",
                    "enum": [
                      "HasPrerequisite",
                      "Obsolete",
                      "Ready",
                      "NotApplicableBecauseAnotherUpdateIsInProgress",
                      "Preparing",
                      "Installing",
                      "Installed",
                      "PreparationFailed",
                      "InstallationFailed",
                      "Invalid",
                      "Recalled",
                      "Downloading",
                      "DownloadFailed",
                      "HealthChecking",
                      "HealthCheckFailed",
                      "ReadyToInstall",
                      "ScanInProgress",
                      "ScanFailed",
                      "AdditionalContentRequired"
                    ],
                    "x-ms-enum": {
                      "name": "state",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "HasPrerequisite",
                          "value": "HasPrerequisite",
                          "description": "The update has prerequisites that must be fulfilled before it can proceed."
                        },
                        {
                          "name": "Obsolete",
                          "value": "Obsolete",
                          "description": "The update is obsolete and no longer applicable."
                        },
                        {
                          "name": "Ready",
                          "value": "Ready",
                          "description": "The update is ready to be installed."
                        },
                        {
                          "name": "NotApplicableBecauseAnotherUpdateIsInProgress",
                          "value": "NotApplicableBecauseAnotherUpdateIsInProgress",
                          "description": "The update cannot be applied because another update is currently in progress."
                        },
                        {
                          "name": "Preparing",
                          "value": "Preparing",
                          "description": "The update is currently in the preparation phase."
                        },
                        {
                          "name": "Installing",
                          "value": "Installing",
                          "description": "The update is currently being installed."
                        },
                        {
                          "name": "Installed",
                          "value": "Installed",
                          "description": "The update has been successfully installed."
                        },
                        {
                          "name": "PreparationFailed",
                          "value": "PreparationFailed",
                          "description": "The update preparation phase failed."
                        },
                        {
                          "name": "InstallationFailed",
                          "value": "InstallationFailed",
                          "description": "The update installation failed."
                        },
                        {
                          "name": "Invalid",
                          "value": "Invalid",
                          "description": "The update is invalid and cannot be applied."
                        },
                        {
                          "name": "Recalled",
                          "value": "Recalled",
                          "description": "The update has been recalled and should not be applied."
                        },
                        {
                          "name": "Downloading",
                          "value": "Downloading",
                          "description": "The update is currently being downloaded."
                        },
                        {
                          "name": "DownloadFailed",
                          "value": "DownloadFailed",
                          "description": "The update download failed."
                        },
                        {
                          "name": "HealthChecking",
                          "value": "HealthChecking",
                          "description": "A health check is being performed before applying the update."
                        },
                        {
                          "name": "HealthCheckFailed",
                          "value": "HealthCheckFailed",
                          "description": "The health check failed, preventing the update from proceeding."
                        },
                        {
                          "name": "ReadyToInstall",
                          "value": "ReadyToInstall",
                          "description": "The update is ready to be installed after successful preparation and checks."
                        },
                        {
                          "name": "ScanInProgress",
                          "value": "ScanInProgress",
                          "description": "The system is scanning for updates."
                        },
                        {
                          "name": "ScanFailed",
                          "value": "ScanFailed",
                          "description": "The scan for updates failed."
                        },
                        {
                          "name": "AdditionalContentRequired",
                          "value": "AdditionalContentRequired",
                          "description": "Additional content is required to proceed with the update."
                        }
                      ]
                    }
                  },
                  "prerequisites": {
                    "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
                    "type": "array",
                    "items": {
                      "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
                      "type": "object",
                      "properties": {
                        "updateType": {
                          "description": "Updatable component type.",
                          "type": "string"
                        },
                        "version": {
                          "description": "Version of the prerequisite.",
                          "type": "string"
                        },
                        "packageName": {
                          "description": "Friendly name of the prerequisite.",
                          "type": "string"
                        }
                      }
                    },
                    "x-ms-identifiers": [
                      "packageName"
                    ]
                  },
                  "componentVersions": {
                    "description": "An array of component versions for a Solution Bundle update, and an empty array otherwise.  ",
                    "type": "array",
                    "items": {
                      "description": "Current version of each updatable component.",
                      "type": "object",
                      "properties": {
                        "packageType": {
                          "description": "Package type",
                          "type": "string"
                        },
                        "version": {
                          "description": "Package version",
                          "type": "string"
                        },
                        "lastUpdated": {
                          "description": "Last time this component was updated.",
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "x-ms-client-flatten": true,
                    "x-ms-identifiers": [
                      "version"
                    ]
                  },
                  "rebootRequired": {
                    "type": "object",
                    "x-ms-client-flatten": true,
                    "description": "Indicates whether a reboot is required after the update or operation. Helps determine if a system restart is necessary to complete the process.",
                    "enum": [
                      "Unknown",
                      "True",
                      "False"
                    ],
                    "x-ms-enum": {
                      "name": "RebootRequirement",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "It is not known whether a reboot is required."
                        },
                        {
                          "name": "True",
                          "value": "True",
                          "description": "A reboot is required to complete the operation."
                        },
                        {
                          "name": "False",
                          "value": "False",
                          "description": "No reboot is required after the operation."
                        }
                      ]
                    }
                  },
                  "healthState": {
                    "description": "Overall health state for update-specific health checks.",
                    "type": "object",
                    "x-ms-client-flatten": true,
                    "enum": [
                      "Unknown",
                      "Success",
                      "Failure",
                      "Warning",
                      "Error",
                      "InProgress"
                    ],
                    "x-ms-enum": {
                      "name": "HealthState",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Unknown",
                          "value": "Unknown",
                          "description": "The health state is not known or cannot be determined."
                        },
                        {
                          "name": "Success",
                          "value": "Success",
                          "description": "The health check completed successfully and the system is healthy."
                        },
                        {
                          "name": "Failure",
                          "value": "Failure",
                          "description": "The health check failed, indicating a critical issue."
                        },
                        {
                          "name": "Warning",
                          "value": "Warning",
                          "description": "The health check detected a non-critical issue that may require attention."
                        },
                        {
                          "name": "Error",
                          "value": "Error",
                          "description": "An error occurred during the health check process."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "The health check is currently in progress."
                        }
                      ]
                    }
                  },
                  "healthCheckResult": {
                    "description": "An array of PrecheckResult objects.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                          "type": "string"
                        },
                        "displayName": {
                          "description": "The health check DisplayName localized of the individual test executed.",
                          "type": "string"
                        },
                        "tags": {
                          "description": "Key-value pairs that allow grouping/filtering individual tests.",
                          "type": "object",
                          "properties": {
                            "key": {
                              "description": "Key that allow grouping/filtering individual tests.",
                              "type": "string"
                            },
                            "value": {
                              "description": "Value of the key that allow grouping/filtering individual tests.",
                              "type": "string"
                            }
                          }
                        },
                        "healthCheckTags": {
                          "description": "Key-value pairs that allow grouping/filtering individual tests.",
                          "type": "object"
                        },
                        "title": {
                          "description": "User-facing name; one or more sentences indicating the direct issue.",
                          "type": "string"
                        },
                        "status": {
                          "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                          "type": "string",
                          "enum": [
                            "Succeeded",
                            "Failed",
                            "InProgress"
                          ],
                          "x-ms-enum": {
                            "name": "status",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Succeeded",
                                "value": "Succeeded",
                                "description": "The check completed successfully."
                              },
                              {
                                "name": "Failed",
                                "value": "Failed",
                                "description": "The check completed but failed."
                              },
                              {
                                "name": "InProgress",
                                "value": "InProgress",
                                "description": "The check is currently in progress."
                              }
                            ]
                          }
                        },
                        "severity": {
                          "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                          "type": "string",
                          "enum": [
                            "Critical",
                            "Warning",
                            "Informational",
                            "Hidden"
                          ],
                          "x-ms-enum": {
                            "name": "severity",
                            "modelAsString": true,
                            "values": [
                              {
                                "name": "Critical",
                                "value": "Critical",
                                "description": "A critical issue that blocks updates and requires immediate attention."
                              },
                              {
                                "name": "Warning",
                                "value": "Warning",
                                "description": "A warning that may indicate a potential issue but does not block updates."
                              },
                              {
                                "name": "Informational",
                                "value": "Informational",
                                "description": "General information that does not indicate any issue."
                              },
                              {
                                "name": "Hidden",
                                "value": "Hidden",
                                "description": "The result is hidden and not shown in the output."
                              }
                            ]
                          }
                        },
                        "description": {
                          "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                          "type": "string"
                        },
                        "remediation": {
                          "description": "Set of steps that can be taken to resolve the issue found.",
                          "type": "string"
                        },
                        "targetResourceID": {
                          "description": "The unique identifier for the affected resource (such as a node or drive).",
                          "type": "string"
                        },
                        "targetResourceName": {
                          "description": "The name of the affected resource.",
                          "type": "string"
                        },
                        "targetResourceType": {
                          "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                          "type": "string"
                        },
                        "timestamp": {
                          "description": "The time in which the HealthCheck was called.",
                          "type": "string",
                          "format": "date-time"
                        },
                        "additionalData": {
                          "description": "Property bag of key value pairs for additional information.",
                          "type": "string"
                        },
                        "healthCheckSource": {
                          "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                          "type": "string"
                        }
                      }
                    },
                    "x-ms-client-flatten": true
                  },
                  "healthCheckDate": {
                    "description": "Last time the package-specific checks were run.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "packagePath": {
                    "description": "Path where the update package is available.",
                    "type": "string"
                  },
                  "packageSizeInMb": {
                    "description": "Size of the package. This value is a combination of the size from update metadata and size of the payload that results from the live scan operation for OS update content.",
                    "type": "number"
                  },
                  "displayName": {
                    "description": "Display name of the Update",
                    "type": "string"
                  },
                  "version": {
                    "description": "Version of the update.",
                    "type": "string"
                  },
                  "publisher": {
                    "description": "Publisher of the update package.",
                    "type": "string"
                  },
                  "releaseLink": {
                    "description": "Link to release notes for the update.",
                    "type": "string"
                  },
                  "availabilityType": {
                    "description": "Indicates how the update content is made available for download. This determines whether the update is sourced locally, from an online repository, or requires user notification.",
                    "type": "string",
                    "enum": [
                      "Local",
                      "Online",
                      "Notify"
                    ],
                    "x-ms-enum": {
                      "name": "availabilityType",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Local",
                          "value": "Local",
                          "description": "The update content is available locally within the environment."
                        },
                        {
                          "name": "Online",
                          "value": "Online",
                          "description": "The update content is available from an online source."
                        },
                        {
                          "name": "Notify",
                          "value": "Notify",
                          "description": "The system will notify the user when update content becomes available."
                        }
                      ]
                    }
                  },
                  "packageType": {
                    "description": "Customer-visible type of the update.",
                    "type": "string"
                  },
                  "additionalProperties": {
                    "description": "Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information when an update is flagged as Invalid for the stamp based on OEM type.",
                    "type": "string"
                  },
                  "updateStateProperties": {
                    "description": "Additional information regarding the state of the update. See definition of UpdateStateProperties type below for more details on this property.",
                    "type": "object",
                    "x-ms-client-flatten": true,
                    "properties": {
                      "progressPercentage": {
                        "description": "Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded.",
                        "type": "number"
                      },
                      "notifyMessage": {
                        "description": "Brief message with instructions for updates of AvailabilityType Notify.",
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "nextLink": {
          "description": "Link to the next set of results.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "UpdatePrerequisite": {
      "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
      "type": "object",
      "properties": {
        "updateType": {
          "description": "Updatable component type.",
          "type": "string"
        },
        "version": {
          "description": "Version of the prerequisite.",
          "type": "string"
        },
        "packageName": {
          "description": "Friendly name of the prerequisite.",
          "type": "string"
        }
      }
    },
    "Update": {
      "description": "Update details",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "type": "object",
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "location": {
          "type": "string",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "description": "The geo-location where the resource lives"
        },
        "properties": {
          "description": "Update properties",
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "provisioningState": {
              "description": "Provisioning state of the Updates proxy resource. Indicates the current lifecycle status of the update operation, such as whether it has been accepted, is in progress, or has completed.",
              "type": "string",
              "enum": [
                "Succeeded",
                "Failed",
                "Canceled",
                "Accepted",
                "Provisioning"
              ],
              "x-ms-enum": {
                "name": "ProvisioningState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Succeeded",
                    "value": "Succeeded",
                    "description": "The update operation completed successfully."
                  },
                  {
                    "name": "Failed",
                    "value": "Failed",
                    "description": "The update operation failed."
                  },
                  {
                    "name": "Canceled",
                    "value": "Canceled",
                    "description": "The update operation was canceled before completion."
                  },
                  {
                    "name": "Accepted",
                    "value": "Accepted",
                    "description": "The update operation has been accepted and is pending execution."
                  },
                  {
                    "name": "Provisioning",
                    "value": "Provisioning",
                    "description": "The update operation is currently being provisioned."
                  }
                ]
              },
              "readOnly": true
            },
            "installedDate": {
              "description": "Date that the update was installed.",
              "type": "string",
              "format": "date-time"
            },
            "description": {
              "description": "Description of the update.",
              "type": "string"
            },
            "minSbeVersionRequired": {
              "description": "Minimum Sbe Version of the update.",
              "type": "string"
            },
            "state": {
              "description": "Represents the current state of the update as it relates to this stamp. This includes phases such as preparation, installation, scanning, and error handling, providing insight into the update's progress and any issues encountered.",
              "type": "string",
              "enum": [
                "HasPrerequisite",
                "Obsolete",
                "Ready",
                "NotApplicableBecauseAnotherUpdateIsInProgress",
                "Preparing",
                "Installing",
                "Installed",
                "PreparationFailed",
                "InstallationFailed",
                "Invalid",
                "Recalled",
                "Downloading",
                "DownloadFailed",
                "HealthChecking",
                "HealthCheckFailed",
                "ReadyToInstall",
                "ScanInProgress",
                "ScanFailed",
                "AdditionalContentRequired"
              ],
              "x-ms-enum": {
                "name": "state",
                "modelAsString": true,
                "values": [
                  {
                    "name": "HasPrerequisite",
                    "value": "HasPrerequisite",
                    "description": "The update has prerequisites that must be fulfilled before it can proceed."
                  },
                  {
                    "name": "Obsolete",
                    "value": "Obsolete",
                    "description": "The update is obsolete and no longer applicable."
                  },
                  {
                    "name": "Ready",
                    "value": "Ready",
                    "description": "The update is ready to be installed."
                  },
                  {
                    "name": "NotApplicableBecauseAnotherUpdateIsInProgress",
                    "value": "NotApplicableBecauseAnotherUpdateIsInProgress",
                    "description": "The update cannot be applied because another update is currently in progress."
                  },
                  {
                    "name": "Preparing",
                    "value": "Preparing",
                    "description": "The update is currently in the preparation phase."
                  },
                  {
                    "name": "Installing",
                    "value": "Installing",
                    "description": "The update is currently being installed."
                  },
                  {
                    "name": "Installed",
                    "value": "Installed",
                    "description": "The update has been successfully installed."
                  },
                  {
                    "name": "PreparationFailed",
                    "value": "PreparationFailed",
                    "description": "The update preparation phase failed."
                  },
                  {
                    "name": "InstallationFailed",
                    "value": "InstallationFailed",
                    "description": "The update installation failed."
                  },
                  {
                    "name": "Invalid",
                    "value": "Invalid",
                    "description": "The update is invalid and cannot be applied."
                  },
                  {
                    "name": "Recalled",
                    "value": "Recalled",
                    "description": "The update has been recalled and should not be applied."
                  },
                  {
                    "name": "Downloading",
                    "value": "Downloading",
                    "description": "The update is currently being downloaded."
                  },
                  {
                    "name": "DownloadFailed",
                    "value": "DownloadFailed",
                    "description": "The update download failed."
                  },
                  {
                    "name": "HealthChecking",
                    "value": "HealthChecking",
                    "description": "A health check is being performed before applying the update."
                  },
                  {
                    "name": "HealthCheckFailed",
                    "value": "HealthCheckFailed",
                    "description": "The health check failed, preventing the update from proceeding."
                  },
                  {
                    "name": "ReadyToInstall",
                    "value": "ReadyToInstall",
                    "description": "The update is ready to be installed after successful preparation and checks."
                  },
                  {
                    "name": "ScanInProgress",
                    "value": "ScanInProgress",
                    "description": "The system is scanning for updates."
                  },
                  {
                    "name": "ScanFailed",
                    "value": "ScanFailed",
                    "description": "The scan for updates failed."
                  },
                  {
                    "name": "AdditionalContentRequired",
                    "value": "AdditionalContentRequired",
                    "description": "Additional content is required to proceed with the update."
                  }
                ]
              }
            },
            "prerequisites": {
              "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
              "type": "array",
              "items": {
                "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
                "type": "object",
                "properties": {
                  "updateType": {
                    "description": "Updatable component type.",
                    "type": "string"
                  },
                  "version": {
                    "description": "Version of the prerequisite.",
                    "type": "string"
                  },
                  "packageName": {
                    "description": "Friendly name of the prerequisite.",
                    "type": "string"
                  }
                }
              },
              "x-ms-identifiers": [
                "packageName"
              ]
            },
            "componentVersions": {
              "description": "An array of component versions for a Solution Bundle update, and an empty array otherwise.  ",
              "type": "array",
              "items": {
                "description": "Current version of each updatable component.",
                "type": "object",
                "properties": {
                  "packageType": {
                    "description": "Package type",
                    "type": "string"
                  },
                  "version": {
                    "description": "Package version",
                    "type": "string"
                  },
                  "lastUpdated": {
                    "description": "Last time this component was updated.",
                    "type": "string",
                    "format": "date-time"
                  }
                }
              },
              "x-ms-client-flatten": true,
              "x-ms-identifiers": [
                "version"
              ]
            },
            "rebootRequired": {
              "type": "object",
              "x-ms-client-flatten": true,
              "description": "Indicates whether a reboot is required after the update or operation. Helps determine if a system restart is necessary to complete the process.",
              "enum": [
                "Unknown",
                "True",
                "False"
              ],
              "x-ms-enum": {
                "name": "RebootRequirement",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "It is not known whether a reboot is required."
                  },
                  {
                    "name": "True",
                    "value": "True",
                    "description": "A reboot is required to complete the operation."
                  },
                  {
                    "name": "False",
                    "value": "False",
                    "description": "No reboot is required after the operation."
                  }
                ]
              }
            },
            "healthState": {
              "description": "Overall health state for update-specific health checks.",
              "type": "object",
              "x-ms-client-flatten": true,
              "enum": [
                "Unknown",
                "Success",
                "Failure",
                "Warning",
                "Error",
                "InProgress"
              ],
              "x-ms-enum": {
                "name": "HealthState",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Unknown",
                    "value": "Unknown",
                    "description": "The health state is not known or cannot be determined."
                  },
                  {
                    "name": "Success",
                    "value": "Success",
                    "description": "The health check completed successfully and the system is healthy."
                  },
                  {
                    "name": "Failure",
                    "value": "Failure",
                    "description": "The health check failed, indicating a critical issue."
                  },
                  {
                    "name": "Warning",
                    "value": "Warning",
                    "description": "The health check detected a non-critical issue that may require attention."
                  },
                  {
                    "name": "Error",
                    "value": "Error",
                    "description": "An error occurred during the health check process."
                  },
                  {
                    "name": "InProgress",
                    "value": "InProgress",
                    "description": "The health check is currently in progress."
                  }
                ]
              }
            },
            "healthCheckResult": {
              "description": "An array of PrecheckResult objects.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                    "type": "string"
                  },
                  "displayName": {
                    "description": "The health check DisplayName localized of the individual test executed.",
                    "type": "string"
                  },
                  "tags": {
                    "description": "Key-value pairs that allow grouping/filtering individual tests.",
                    "type": "object",
                    "properties": {
                      "key": {
                        "description": "Key that allow grouping/filtering individual tests.",
                        "type": "string"
                      },
                      "value": {
                        "description": "Value of the key that allow grouping/filtering individual tests.",
                        "type": "string"
                      }
                    }
                  },
                  "healthCheckTags": {
                    "description": "Key-value pairs that allow grouping/filtering individual tests.",
                    "type": "object"
                  },
                  "title": {
                    "description": "User-facing name; one or more sentences indicating the direct issue.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                    "type": "string",
                    "enum": [
                      "Succeeded",
                      "Failed",
                      "InProgress"
                    ],
                    "x-ms-enum": {
                      "name": "status",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Succeeded",
                          "value": "Succeeded",
                          "description": "The check completed successfully."
                        },
                        {
                          "name": "Failed",
                          "value": "Failed",
                          "description": "The check completed but failed."
                        },
                        {
                          "name": "InProgress",
                          "value": "InProgress",
                          "description": "The check is currently in progress."
                        }
                      ]
                    }
                  },
                  "severity": {
                    "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                    "type": "string",
                    "enum": [
                      "Critical",
                      "Warning",
                      "Informational",
                      "Hidden"
                    ],
                    "x-ms-enum": {
                      "name": "severity",
                      "modelAsString": true,
                      "values": [
                        {
                          "name": "Critical",
                          "value": "Critical",
                          "description": "A critical issue that blocks updates and requires immediate attention."
                        },
                        {
                          "name": "Warning",
                          "value": "Warning",
                          "description": "A warning that may indicate a potential issue but does not block updates."
                        },
                        {
                          "name": "Informational",
                          "value": "Informational",
                          "description": "General information that does not indicate any issue."
                        },
                        {
                          "name": "Hidden",
                          "value": "Hidden",
                          "description": "The result is hidden and not shown in the output."
                        }
                      ]
                    }
                  },
                  "description": {
                    "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                    "type": "string"
                  },
                  "remediation": {
                    "description": "Set of steps that can be taken to resolve the issue found.",
                    "type": "string"
                  },
                  "targetResourceID": {
                    "description": "The unique identifier for the affected resource (such as a node or drive).",
                    "type": "string"
                  },
                  "targetResourceName": {
                    "description": "The name of the affected resource.",
                    "type": "string"
                  },
                  "targetResourceType": {
                    "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                    "type": "string"
                  },
                  "timestamp": {
                    "description": "The time in which the HealthCheck was called.",
                    "type": "string",
                    "format": "date-time"
                  },
                  "additionalData": {
                    "description": "Property bag of key value pairs for additional information.",
                    "type": "string"
                  },
                  "healthCheckSource": {
                    "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                    "type": "string"
                  }
                }
              },
              "x-ms-client-flatten": true
            },
            "healthCheckDate": {
              "description": "Last time the package-specific checks were run.",
              "type": "string",
              "format": "date-time"
            },
            "packagePath": {
              "description": "Path where the update package is available.",
              "type": "string"
            },
            "packageSizeInMb": {
              "description": "Size of the package. This value is a combination of the size from update metadata and size of the payload that results from the live scan operation for OS update content.",
              "type": "number"
            },
            "displayName": {
              "description": "Display name of the Update",
              "type": "string"
            },
            "version": {
              "description": "Version of the update.",
              "type": "string"
            },
            "publisher": {
              "description": "Publisher of the update package.",
              "type": "string"
            },
            "releaseLink": {
              "description": "Link to release notes for the update.",
              "type": "string"
            },
            "availabilityType": {
              "description": "Indicates how the update content is made available for download. This determines whether the update is sourced locally, from an online repository, or requires user notification.",
              "type": "string",
              "enum": [
                "Local",
                "Online",
                "Notify"
              ],
              "x-ms-enum": {
                "name": "availabilityType",
                "modelAsString": true,
                "values": [
                  {
                    "name": "Local",
                    "value": "Local",
                    "description": "The update content is available locally within the environment."
                  },
                  {
                    "name": "Online",
                    "value": "Online",
                    "description": "The update content is available from an online source."
                  },
                  {
                    "name": "Notify",
                    "value": "Notify",
                    "description": "The system will notify the user when update content becomes available."
                  }
                ]
              }
            },
            "packageType": {
              "description": "Customer-visible type of the update.",
              "type": "string"
            },
            "additionalProperties": {
              "description": "Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information when an update is flagged as Invalid for the stamp based on OEM type.",
              "type": "string"
            },
            "updateStateProperties": {
              "description": "Additional information regarding the state of the update. See definition of UpdateStateProperties type below for more details on this property.",
              "type": "object",
              "x-ms-client-flatten": true,
              "properties": {
                "progressPercentage": {
                  "description": "Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded.",
                  "type": "number"
                },
                "notifyMessage": {
                  "description": "Brief message with instructions for updates of AvailabilityType Notify.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "UpdateProperties": {
      "description": "Details of a singular Update in HCI Cluster",
      "type": "object",
      "properties": {
        "provisioningState": {
          "description": "Provisioning state of the Updates proxy resource. Indicates the current lifecycle status of the update operation, such as whether it has been accepted, is in progress, or has completed.",
          "type": "string",
          "enum": [
            "Succeeded",
            "Failed",
            "Canceled",
            "Accepted",
            "Provisioning"
          ],
          "x-ms-enum": {
            "name": "ProvisioningState",
            "modelAsString": true,
            "values": [
              {
                "name": "Succeeded",
                "value": "Succeeded",
                "description": "The update operation completed successfully."
              },
              {
                "name": "Failed",
                "value": "Failed",
                "description": "The update operation failed."
              },
              {
                "name": "Canceled",
                "value": "Canceled",
                "description": "The update operation was canceled before completion."
              },
              {
                "name": "Accepted",
                "value": "Accepted",
                "description": "The update operation has been accepted and is pending execution."
              },
              {
                "name": "Provisioning",
                "value": "Provisioning",
                "description": "The update operation is currently being provisioned."
              }
            ]
          },
          "readOnly": true
        },
        "installedDate": {
          "description": "Date that the update was installed.",
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "description": "Description of the update.",
          "type": "string"
        },
        "minSbeVersionRequired": {
          "description": "Minimum Sbe Version of the update.",
          "type": "string"
        },
        "state": {
          "description": "Represents the current state of the update as it relates to this stamp. This includes phases such as preparation, installation, scanning, and error handling, providing insight into the update's progress and any issues encountered.",
          "type": "string",
          "enum": [
            "HasPrerequisite",
            "Obsolete",
            "Ready",
            "NotApplicableBecauseAnotherUpdateIsInProgress",
            "Preparing",
            "Installing",
            "Installed",
            "PreparationFailed",
            "InstallationFailed",
            "Invalid",
            "Recalled",
            "Downloading",
            "DownloadFailed",
            "HealthChecking",
            "HealthCheckFailed",
            "ReadyToInstall",
            "ScanInProgress",
            "ScanFailed",
            "AdditionalContentRequired"
          ],
          "x-ms-enum": {
            "name": "state",
            "modelAsString": true,
            "values": [
              {
                "name": "HasPrerequisite",
                "value": "HasPrerequisite",
                "description": "The update has prerequisites that must be fulfilled before it can proceed."
              },
              {
                "name": "Obsolete",
                "value": "Obsolete",
                "description": "The update is obsolete and no longer applicable."
              },
              {
                "name": "Ready",
                "value": "Ready",
                "description": "The update is ready to be installed."
              },
              {
                "name": "NotApplicableBecauseAnotherUpdateIsInProgress",
                "value": "NotApplicableBecauseAnotherUpdateIsInProgress",
                "description": "The update cannot be applied because another update is currently in progress."
              },
              {
                "name": "Preparing",
                "value": "Preparing",
                "description": "The update is currently in the preparation phase."
              },
              {
                "name": "Installing",
                "value": "Installing",
                "description": "The update is currently being installed."
              },
              {
                "name": "Installed",
                "value": "Installed",
                "description": "The update has been successfully installed."
              },
              {
                "name": "PreparationFailed",
                "value": "PreparationFailed",
                "description": "The update preparation phase failed."
              },
              {
                "name": "InstallationFailed",
                "value": "InstallationFailed",
                "description": "The update installation failed."
              },
              {
                "name": "Invalid",
                "value": "Invalid",
                "description": "The update is invalid and cannot be applied."
              },
              {
                "name": "Recalled",
                "value": "Recalled",
                "description": "The update has been recalled and should not be applied."
              },
              {
                "name": "Downloading",
                "value": "Downloading",
                "description": "The update is currently being downloaded."
              },
              {
                "name": "DownloadFailed",
                "value": "DownloadFailed",
                "description": "The update download failed."
              },
              {
                "name": "HealthChecking",
                "value": "HealthChecking",
                "description": "A health check is being performed before applying the update."
              },
              {
                "name": "HealthCheckFailed",
                "value": "HealthCheckFailed",
                "description": "The health check failed, preventing the update from proceeding."
              },
              {
                "name": "ReadyToInstall",
                "value": "ReadyToInstall",
                "description": "The update is ready to be installed after successful preparation and checks."
              },
              {
                "name": "ScanInProgress",
                "value": "ScanInProgress",
                "description": "The system is scanning for updates."
              },
              {
                "name": "ScanFailed",
                "value": "ScanFailed",
                "description": "The scan for updates failed."
              },
              {
                "name": "AdditionalContentRequired",
                "value": "AdditionalContentRequired",
                "description": "Additional content is required to proceed with the update."
              }
            ]
          }
        },
        "prerequisites": {
          "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
          "type": "array",
          "items": {
            "description": "If update State is HasPrerequisite, this property contains an array of objects describing prerequisite updates before installing this update. Otherwise, it is empty.",
            "type": "object",
            "properties": {
              "updateType": {
                "description": "Updatable component type.",
                "type": "string"
              },
              "version": {
                "description": "Version of the prerequisite.",
                "type": "string"
              },
              "packageName": {
                "description": "Friendly name of the prerequisite.",
                "type": "string"
              }
            }
          },
          "x-ms-identifiers": [
            "packageName"
          ]
        },
        "componentVersions": {
          "description": "An array of component versions for a Solution Bundle update, and an empty array otherwise.  ",
          "type": "array",
          "items": {
            "description": "Current version of each updatable component.",
            "type": "object",
            "properties": {
              "packageType": {
                "description": "Package type",
                "type": "string"
              },
              "version": {
                "description": "Package version",
                "type": "string"
              },
              "lastUpdated": {
                "description": "Last time this component was updated.",
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "x-ms-client-flatten": true,
          "x-ms-identifiers": [
            "version"
          ]
        },
        "rebootRequired": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "Indicates whether a reboot is required after the update or operation. Helps determine if a system restart is necessary to complete the process.",
          "enum": [
            "Unknown",
            "True",
            "False"
          ],
          "x-ms-enum": {
            "name": "RebootRequirement",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "It is not known whether a reboot is required."
              },
              {
                "name": "True",
                "value": "True",
                "description": "A reboot is required to complete the operation."
              },
              {
                "name": "False",
                "value": "False",
                "description": "No reboot is required after the operation."
              }
            ]
          }
        },
        "healthState": {
          "description": "Overall health state for update-specific health checks.",
          "type": "object",
          "x-ms-client-flatten": true,
          "enum": [
            "Unknown",
            "Success",
            "Failure",
            "Warning",
            "Error",
            "InProgress"
          ],
          "x-ms-enum": {
            "name": "HealthState",
            "modelAsString": true,
            "values": [
              {
                "name": "Unknown",
                "value": "Unknown",
                "description": "The health state is not known or cannot be determined."
              },
              {
                "name": "Success",
                "value": "Success",
                "description": "The health check completed successfully and the system is healthy."
              },
              {
                "name": "Failure",
                "value": "Failure",
                "description": "The health check failed, indicating a critical issue."
              },
              {
                "name": "Warning",
                "value": "Warning",
                "description": "The health check detected a non-critical issue that may require attention."
              },
              {
                "name": "Error",
                "value": "Error",
                "description": "An error occurred during the health check process."
              },
              {
                "name": "InProgress",
                "value": "InProgress",
                "description": "The health check is currently in progress."
              }
            ]
          }
        },
        "healthCheckResult": {
          "description": "An array of PrecheckResult objects.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "description": "Name of the individual test/rule/alert that was executed. Unique, not exposed to the customer.",
                "type": "string"
              },
              "displayName": {
                "description": "The health check DisplayName localized of the individual test executed.",
                "type": "string"
              },
              "tags": {
                "description": "Key-value pairs that allow grouping/filtering individual tests.",
                "type": "object",
                "properties": {
                  "key": {
                    "description": "Key that allow grouping/filtering individual tests.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value of the key that allow grouping/filtering individual tests.",
                    "type": "string"
                  }
                }
              },
              "healthCheckTags": {
                "description": "Key-value pairs that allow grouping/filtering individual tests.",
                "type": "object"
              },
              "title": {
                "description": "User-facing name; one or more sentences indicating the direct issue.",
                "type": "string"
              },
              "status": {
                "description": "Represents the current status of the check being performed. Indicates whether the check has completed successfully, failed, or is still in progress.",
                "type": "string",
                "enum": [
                  "Succeeded",
                  "Failed",
                  "InProgress"
                ],
                "x-ms-enum": {
                  "name": "status",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Succeeded",
                      "value": "Succeeded",
                      "description": "The check completed successfully."
                    },
                    {
                      "name": "Failed",
                      "value": "Failed",
                      "description": "The check completed but failed."
                    },
                    {
                      "name": "InProgress",
                      "value": "InProgress",
                      "description": "The check is currently in progress."
                    }
                  ]
                }
              },
              "severity": {
                "description": "Indicates the importance or impact level of the result. Determines whether the result is informational, a warning, or a critical issue that may block updates.",
                "type": "string",
                "enum": [
                  "Critical",
                  "Warning",
                  "Informational",
                  "Hidden"
                ],
                "x-ms-enum": {
                  "name": "severity",
                  "modelAsString": true,
                  "values": [
                    {
                      "name": "Critical",
                      "value": "Critical",
                      "description": "A critical issue that blocks updates and requires immediate attention."
                    },
                    {
                      "name": "Warning",
                      "value": "Warning",
                      "description": "A warning that may indicate a potential issue but does not block updates."
                    },
                    {
                      "name": "Informational",
                      "value": "Informational",
                      "description": "General information that does not indicate any issue."
                    },
                    {
                      "name": "Hidden",
                      "value": "Hidden",
                      "description": "The result is hidden and not shown in the output."
                    }
                  ]
                }
              },
              "description": {
                "description": "Detailed overview of the issue and what impact the issue has on the stamp.",
                "type": "string"
              },
              "remediation": {
                "description": "Set of steps that can be taken to resolve the issue found.",
                "type": "string"
              },
              "targetResourceID": {
                "description": "The unique identifier for the affected resource (such as a node or drive).",
                "type": "string"
              },
              "targetResourceName": {
                "description": "The name of the affected resource.",
                "type": "string"
              },
              "targetResourceType": {
                "description": "The type of resource being referred to (well-known set of nouns in infrastructure, aligning with Monitoring).",
                "type": "string"
              },
              "timestamp": {
                "description": "The time in which the HealthCheck was called.",
                "type": "string",
                "format": "date-time"
              },
              "additionalData": {
                "description": "Property bag of key value pairs for additional information.",
                "type": "string"
              },
              "healthCheckSource": {
                "description": "The name of the services called for the HealthCheck (I.E. Test-AzureStack, Test-Cluster).",
                "type": "string"
              }
            }
          },
          "x-ms-client-flatten": true
        },
        "healthCheckDate": {
          "description": "Last time the package-specific checks were run.",
          "type": "string",
          "format": "date-time"
        },
        "packagePath": {
          "description": "Path where the update package is available.",
          "type": "string"
        },
        "packageSizeInMb": {
          "description": "Size of the package. This value is a combination of the size from update metadata and size of the payload that results from the live scan operation for OS update content.",
          "type": "number"
        },
        "displayName": {
          "description": "Display name of the Update",
          "type": "string"
        },
        "version": {
          "description": "Version of the update.",
          "type": "string"
        },
        "publisher": {
          "description": "Publisher of the update package.",
          "type": "string"
        },
        "releaseLink": {
          "description": "Link to release notes for the update.",
          "type": "string"
        },
        "availabilityType": {
          "description": "Indicates how the update content is made available for download. This determines whether the update is sourced locally, from an online repository, or requires user notification.",
          "type": "string",
          "enum": [
            "Local",
            "Online",
            "Notify"
          ],
          "x-ms-enum": {
            "name": "availabilityType",
            "modelAsString": true,
            "values": [
              {
                "name": "Local",
                "value": "Local",
                "description": "The update content is available locally within the environment."
              },
              {
                "name": "Online",
                "value": "Online",
                "description": "The update content is available from an online source."
              },
              {
                "name": "Notify",
                "value": "Notify",
                "description": "The system will notify the user when update content becomes available."
              }
            ]
          }
        },
        "packageType": {
          "description": "Customer-visible type of the update.",
          "type": "string"
        },
        "additionalProperties": {
          "description": "Extensible KV pairs serialized as a string. This is currently used to report the stamp OEM family and hardware model information when an update is flagged as Invalid for the stamp based on OEM type.",
          "type": "string"
        },
        "updateStateProperties": {
          "description": "Additional information regarding the state of the update. See definition of UpdateStateProperties type below for more details on this property.",
          "type": "object",
          "x-ms-client-flatten": true,
          "properties": {
            "progressPercentage": {
              "description": "Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded.",
              "type": "number"
            },
            "notifyMessage": {
              "description": "Brief message with instructions for updates of AvailabilityType Notify.",
              "type": "string"
            }
          }
        }
      }
    },
    "UpdateStateProperties": {
      "description": "Additional information regarding the state of the update. See definition of UpdateStateProperties type below for more details on this property.",
      "type": "object",
      "properties": {
        "progressPercentage": {
          "description": "Progress percentage of ongoing operation. Currently this property is only valid when the update is in the Downloading state, where it maps to how much of the update content has been downloaded.",
          "type": "number"
        },
        "notifyMessage": {
          "description": "Brief message with instructions for updates of AvailabilityType Notify.",
          "type": "string"
        }
      }
    },
    "RebootRequirement": {
      "type": "string",
      "description": "Indicates whether a reboot is required after the update or operation. Helps determine if a system restart is necessary to complete the process.",
      "enum": [
        "Unknown",
        "True",
        "False"
      ],
      "x-ms-enum": {
        "name": "RebootRequirement",
        "modelAsString": true,
        "values": [
          {
            "name": "Unknown",
            "value": "Unknown",
            "description": "It is not known whether a reboot is required."
          },
          {
            "name": "True",
            "value": "True",
            "description": "A reboot is required to complete the operation."
          },
          {
            "name": "False",
            "value": "False",
            "description": "No reboot is required after the operation."
          }
        ]
      }
    },
    "ValidatedSolutionRecipe": {
      "type": "object",
      "description": "Represents a validated solution recipe resource.",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
          "readOnly": true
        },
        "name": {
          "type": "string",
          "description": "The name of the resource",
          "readOnly": true
        },
        "type": {
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "readOnly": true
        },
        "systemData": {
          "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "readOnly": true,
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        },
        "properties": {
          "description": "The resource-specific properties for this resource.",
          "type": "object",
          "properties": {
            "recipeContent": {
              "description": "Represents contents of a validated solution recipe.",
              "type": "object",
              "properties": {
                "info": {
                  "description": "Represents information about a validated solution recipe.",
                  "type": "object",
                  "properties": {
                    "solutionType": {
                      "type": "string",
                      "description": "Represents the solution type for which this validated solution recipe is applicable."
                    },
                    "version": {
                      "type": "string",
                      "description": "Represents the version for which this validated solution recipe is applicable."
                    }
                  },
                  "required": [
                    "solutionType",
                    "version"
                  ]
                },
                "capabilities": {
                  "description": "Represents capabilities available in a validated solution recipe.",
                  "type": "object",
                  "properties": {
                    "clusterCapabilities": {
                      "type": "array",
                      "description": "Represents the cluster capabilities.",
                      "items": {
                        "type": "object",
                        "description": "Represents capability available in a validated solution recipe.",
                        "properties": {
                          "capabilityName": {
                            "type": "string",
                            "description": "Represents the capability name."
                          }
                        },
                        "required": [
                          "capabilityName"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "nodeCapabilities": {
                      "type": "array",
                      "description": "Represents the node capabilities.",
                      "items": {
                        "type": "object",
                        "description": "Represents capability available in a validated solution recipe.",
                        "properties": {
                          "capabilityName": {
                            "type": "string",
                            "description": "Represents the capability name."
                          }
                        },
                        "required": [
                          "capabilityName"
                        ]
                      },
                      "x-ms-identifiers": []
                    }
                  },
                  "required": [
                    "clusterCapabilities",
                    "nodeCapabilities"
                  ]
                },
                "components": {
                  "type": "array",
                  "description": "Represents components available in a validated solution recipe.",
                  "items": {
                    "type": "object",
                    "description": "Represents component available in a validated solution recipe.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Represents the component's name."
                      },
                      "type": {
                        "type": "string",
                        "description": "Represents the component's type."
                      },
                      "requiredVersion": {
                        "type": "string",
                        "description": "Represents the component's required version."
                      },
                      "installOrder": {
                        "type": "integer",
                        "format": "int64",
                        "description": "Represents the component's install order."
                      },
                      "tags": {
                        "type": "array",
                        "description": "Represents the component's tags.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "payloads": {
                        "type": "array",
                        "description": "Represents the component's payloads.",
                        "items": {
                          "type": "object",
                          "description": "Represents payloads associated with a component available in a validated solution recipe.",
                          "properties": {
                            "identifier": {
                              "type": "string",
                              "description": "Represents the unique identifier of the payload used to query the URL."
                            },
                            "hash": {
                              "type": "string",
                              "description": "Represents the cryptographic hash of the payload, ensuring data integrity."
                            },
                            "fileName": {
                              "type": "string",
                              "description": "Represents the name of the file associated with the payload."
                            },
                            "url": {
                              "type": "string",
                              "description": "Represents the URL from which the payload can be downloaded."
                            }
                          },
                          "required": [
                            "identifier",
                            "hash",
                            "fileName",
                            "url"
                          ]
                        },
                        "x-ms-identifiers": []
                      },
                      "metadata": {
                        "description": "Represents the component's metadata.",
                        "type": "object",
                        "properties": {
                          "extensionType": {
                            "type": "string",
                            "description": "Represents the type of extension."
                          },
                          "publisher": {
                            "type": "string",
                            "description": "Represents the publisher of the extension."
                          },
                          "enableAutomaticUpgrade": {
                            "type": "boolean",
                            "description": "Indicates whether automatic upgrades of the extension are enabled."
                          },
                          "lcmUpdate": {
                            "type": "boolean",
                            "description": "Indicates whether the LCM (Lifecycle Management) update of the extension is enabled."
                          },
                          "catalog": {
                            "type": "string",
                            "description": "Specifies the catalog to which the extension belongs."
                          },
                          "ring": {
                            "type": "string",
                            "description": "Specifies the ring to which the extension belongs, internally used by component."
                          },
                          "releaseTrain": {
                            "type": "string",
                            "description": "Specifies the release train to which given component belongs."
                          },
                          "link": {
                            "type": "string",
                            "description": "Specifies the link associated with the extension."
                          },
                          "name": {
                            "type": "string",
                            "description": "Specifies the name of the extension."
                          },
                          "expectedHash": {
                            "type": "string",
                            "description": "Specifies the expected hash of the extension."
                          },
                          "previewSource": {
                            "type": "string",
                            "description": "Specifies the preview source of the extension."
                          }
                        }
                      }
                    },
                    "required": [
                      "name",
                      "type",
                      "tags"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              },
              "required": [
                "info",
                "components"
              ]
            },
            "signature": {
              "type": "string",
              "description": "Represents the signature of the recipe, to be used for ensuring its integrity."
            }
          },
          "required": [
            "recipeContent"
          ]
        }
      }
    },
    "ValidatedSolutionRecipeCapabilities": {
      "type": "object",
      "description": "Represents capabilities available in a validated solution recipe.",
      "properties": {
        "clusterCapabilities": {
          "type": "array",
          "description": "Represents the cluster capabilities.",
          "items": {
            "type": "object",
            "description": "Represents capability available in a validated solution recipe.",
            "properties": {
              "capabilityName": {
                "type": "string",
                "description": "Represents the capability name."
              }
            },
            "required": [
              "capabilityName"
            ]
          },
          "x-ms-identifiers": []
        },
        "nodeCapabilities": {
          "type": "array",
          "description": "Represents the node capabilities.",
          "items": {
            "type": "object",
            "description": "Represents capability available in a validated solution recipe.",
            "properties": {
              "capabilityName": {
                "type": "string",
                "description": "Represents the capability name."
              }
            },
            "required": [
              "capabilityName"
            ]
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "clusterCapabilities",
        "nodeCapabilities"
      ]
    },
    "ValidatedSolutionRecipeCapability": {
      "type": "object",
      "description": "Represents capability available in a validated solution recipe.",
      "properties": {
        "capabilityName": {
          "type": "string",
          "description": "Represents the capability name."
        }
      },
      "required": [
        "capabilityName"
      ]
    },
    "ValidatedSolutionRecipeComponent": {
      "type": "object",
      "description": "Represents component available in a validated solution recipe.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Represents the component's name."
        },
        "type": {
          "type": "string",
          "description": "Represents the component's type."
        },
        "requiredVersion": {
          "type": "string",
          "description": "Represents the component's required version."
        },
        "installOrder": {
          "type": "integer",
          "format": "int64",
          "description": "Represents the component's install order."
        },
        "tags": {
          "type": "array",
          "description": "Represents the component's tags.",
          "items": {
            "type": "string"
          }
        },
        "payloads": {
          "type": "array",
          "description": "Represents the component's payloads.",
          "items": {
            "type": "object",
            "description": "Represents payloads associated with a component available in a validated solution recipe.",
            "properties": {
              "identifier": {
                "type": "string",
                "description": "Represents the unique identifier of the payload used to query the URL."
              },
              "hash": {
                "type": "string",
                "description": "Represents the cryptographic hash of the payload, ensuring data integrity."
              },
              "fileName": {
                "type": "string",
                "description": "Represents the name of the file associated with the payload."
              },
              "url": {
                "type": "string",
                "description": "Represents the URL from which the payload can be downloaded."
              }
            },
            "required": [
              "identifier",
              "hash",
              "fileName",
              "url"
            ]
          },
          "x-ms-identifiers": []
        },
        "metadata": {
          "description": "Represents the component's metadata.",
          "type": "object",
          "properties": {
            "extensionType": {
              "type": "string",
              "description": "Represents the type of extension."
            },
            "publisher": {
              "type": "string",
              "description": "Represents the publisher of the extension."
            },
            "enableAutomaticUpgrade": {
              "type": "boolean",
              "description": "Indicates whether automatic upgrades of the extension are enabled."
            },
            "lcmUpdate": {
              "type": "boolean",
              "description": "Indicates whether the LCM (Lifecycle Management) update of the extension is enabled."
            },
            "catalog": {
              "type": "string",
              "description": "Specifies the catalog to which the extension belongs."
            },
            "ring": {
              "type": "string",
              "description": "Specifies the ring to which the extension belongs, internally used by component."
            },
            "releaseTrain": {
              "type": "string",
              "description": "Specifies the release train to which given component belongs."
            },
            "link": {
              "type": "string",
              "description": "Specifies the link associated with the extension."
            },
            "name": {
              "type": "string",
              "description": "Specifies the name of the extension."
            },
            "expectedHash": {
              "type": "string",
              "description": "Specifies the expected hash of the extension."
            },
            "previewSource": {
              "type": "string",
              "description": "Specifies the preview source of the extension."
            }
          }
        }
      },
      "required": [
        "name",
        "type",
        "tags"
      ]
    },
    "ValidatedSolutionRecipeComponentMetadata": {
      "type": "object",
      "description": "Represents metadata associated with a component available in a validated solution recipe.",
      "properties": {
        "extensionType": {
          "type": "string",
          "description": "Represents the type of extension."
        },
        "publisher": {
          "type": "string",
          "description": "Represents the publisher of the extension."
        },
        "enableAutomaticUpgrade": {
          "type": "boolean",
          "description": "Indicates whether automatic upgrades of the extension are enabled."
        },
        "lcmUpdate": {
          "type": "boolean",
          "description": "Indicates whether the LCM (Lifecycle Management) update of the extension is enabled."
        },
        "catalog": {
          "type": "string",
          "description": "Specifies the catalog to which the extension belongs."
        },
        "ring": {
          "type": "string",
          "description": "Specifies the ring to which the extension belongs, internally used by component."
        },
        "releaseTrain": {
          "type": "string",
          "description": "Specifies the release train to which given component belongs."
        },
        "link": {
          "type": "string",
          "description": "Specifies the link associated with the extension."
        },
        "name": {
          "type": "string",
          "description": "Specifies the name of the extension."
        },
        "expectedHash": {
          "type": "string",
          "description": "Specifies the expected hash of the extension."
        },
        "previewSource": {
          "type": "string",
          "description": "Specifies the preview source of the extension."
        }
      }
    },
    "ValidatedSolutionRecipeComponentPayload": {
      "type": "object",
      "description": "Represents payloads associated with a component available in a validated solution recipe.",
      "properties": {
        "identifier": {
          "type": "string",
          "description": "Represents the unique identifier of the payload used to query the URL."
        },
        "hash": {
          "type": "string",
          "description": "Represents the cryptographic hash of the payload, ensuring data integrity."
        },
        "fileName": {
          "type": "string",
          "description": "Represents the name of the file associated with the payload."
        },
        "url": {
          "type": "string",
          "description": "Represents the URL from which the payload can be downloaded."
        }
      },
      "required": [
        "identifier",
        "hash",
        "fileName",
        "url"
      ]
    },
    "ValidatedSolutionRecipeContent": {
      "type": "object",
      "description": "Represents contents of a validated solution recipe resource.",
      "properties": {
        "info": {
          "description": "Represents information about a validated solution recipe.",
          "type": "object",
          "properties": {
            "solutionType": {
              "type": "string",
              "description": "Represents the solution type for which this validated solution recipe is applicable."
            },
            "version": {
              "type": "string",
              "description": "Represents the version for which this validated solution recipe is applicable."
            }
          },
          "required": [
            "solutionType",
            "version"
          ]
        },
        "capabilities": {
          "description": "Represents capabilities available in a validated solution recipe.",
          "type": "object",
          "properties": {
            "clusterCapabilities": {
              "type": "array",
              "description": "Represents the cluster capabilities.",
              "items": {
                "type": "object",
                "description": "Represents capability available in a validated solution recipe.",
                "properties": {
                  "capabilityName": {
                    "type": "string",
                    "description": "Represents the capability name."
                  }
                },
                "required": [
                  "capabilityName"
                ]
              },
              "x-ms-identifiers": []
            },
            "nodeCapabilities": {
              "type": "array",
              "description": "Represents the node capabilities.",
              "items": {
                "type": "object",
                "description": "Represents capability available in a validated solution recipe.",
                "properties": {
                  "capabilityName": {
                    "type": "string",
                    "description": "Represents the capability name."
                  }
                },
                "required": [
                  "capabilityName"
                ]
              },
              "x-ms-identifiers": []
            }
          },
          "required": [
            "clusterCapabilities",
            "nodeCapabilities"
          ]
        },
        "components": {
          "type": "array",
          "description": "Represents components available in a validated solution recipe.",
          "items": {
            "type": "object",
            "description": "Represents component available in a validated solution recipe.",
            "properties": {
              "name": {
                "type": "string",
                "description": "Represents the component's name."
              },
              "type": {
                "type": "string",
                "description": "Represents the component's type."
              },
              "requiredVersion": {
                "type": "string",
                "description": "Represents the component's required version."
              },
              "installOrder": {
                "type": "integer",
                "format": "int64",
                "description": "Represents the component's install order."
              },
              "tags": {
                "type": "array",
                "description": "Represents the component's tags.",
                "items": {
                  "type": "string"
                }
              },
              "payloads": {
                "type": "array",
                "description": "Represents the component's payloads.",
                "items": {
                  "type": "object",
                  "description": "Represents payloads associated with a component available in a validated solution recipe.",
                  "properties": {
                    "identifier": {
                      "type": "string",
                      "description": "Represents the unique identifier of the payload used to query the URL."
                    },
                    "hash": {
                      "type": "string",
                      "description": "Represents the cryptographic hash of the payload, ensuring data integrity."
                    },
                    "fileName": {
                      "type": "string",
                      "description": "Represents the name of the file associated with the payload."
                    },
                    "url": {
                      "type": "string",
                      "description": "Represents the URL from which the payload can be downloaded."
                    }
                  },
                  "required": [
                    "identifier",
                    "hash",
                    "fileName",
                    "url"
                  ]
                },
                "x-ms-identifiers": []
              },
              "metadata": {
                "description": "Represents the component's metadata.",
                "type": "object",
                "properties": {
                  "extensionType": {
                    "type": "string",
                    "description": "Represents the type of extension."
                  },
                  "publisher": {
                    "type": "string",
                    "description": "Represents the publisher of the extension."
                  },
                  "enableAutomaticUpgrade": {
                    "type": "boolean",
                    "description": "Indicates whether automatic upgrades of the extension are enabled."
                  },
                  "lcmUpdate": {
                    "type": "boolean",
                    "description": "Indicates whether the LCM (Lifecycle Management) update of the extension is enabled."
                  },
                  "catalog": {
                    "type": "string",
                    "description": "Specifies the catalog to which the extension belongs."
                  },
                  "ring": {
                    "type": "string",
                    "description": "Specifies the ring to which the extension belongs, internally used by component."
                  },
                  "releaseTrain": {
                    "type": "string",
                    "description": "Specifies the release train to which given component belongs."
                  },
                  "link": {
                    "type": "string",
                    "description": "Specifies the link associated with the extension."
                  },
                  "name": {
                    "type": "string",
                    "description": "Specifies the name of the extension."
                  },
                  "expectedHash": {
                    "type": "string",
                    "description": "Specifies the expected hash of the extension."
                  },
                  "previewSource": {
                    "type": "string",
                    "description": "Specifies the preview source of the extension."
                  }
                }
              }
            },
            "required": [
              "name",
              "type",
              "tags"
            ]
          },
          "x-ms-identifiers": []
        }
      },
      "required": [
        "info",
        "components"
      ]
    },
    "ValidatedSolutionRecipeInfo": {
      "type": "object",
      "description": "Represents information about a validated solution recipe.",
      "properties": {
        "solutionType": {
          "type": "string",
          "description": "Represents the solution type for which this validated solution recipe is applicable."
        },
        "version": {
          "type": "string",
          "description": "Represents the version for which this validated solution recipe is applicable."
        }
      },
      "required": [
        "solutionType",
        "version"
      ]
    },
    "ValidatedSolutionRecipeListResult": {
      "type": "object",
      "description": "The response of a ValidatedSolutionRecipe list operation.",
      "properties": {
        "value": {
          "type": "array",
          "description": "The ValidatedSolutionRecipe items on this page",
          "items": {
            "type": "object",
            "description": "Represents a validated solution recipe resource.",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "description": "Fully qualified resource ID for the resource. E.g. \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}\"",
                "readOnly": true
              },
              "name": {
                "type": "string",
                "description": "The name of the resource",
                "readOnly": true
              },
              "type": {
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
                "readOnly": true
              },
              "systemData": {
                "description": "Azure Resource Manager metadata containing createdBy and modifiedBy information.",
                "readOnly": true,
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              },
              "properties": {
                "description": "The resource-specific properties for this resource.",
                "type": "object",
                "properties": {
                  "recipeContent": {
                    "description": "Represents contents of a validated solution recipe.",
                    "type": "object",
                    "properties": {
                      "info": {
                        "description": "Represents information about a validated solution recipe.",
                        "type": "object",
                        "properties": {
                          "solutionType": {
                            "type": "string",
                            "description": "Represents the solution type for which this validated solution recipe is applicable."
                          },
                          "version": {
                            "type": "string",
                            "description": "Represents the version for which this validated solution recipe is applicable."
                          }
                        },
                        "required": [
                          "solutionType",
                          "version"
                        ]
                      },
                      "capabilities": {
                        "description": "Represents capabilities available in a validated solution recipe.",
                        "type": "object",
                        "properties": {
                          "clusterCapabilities": {
                            "type": "array",
                            "description": "Represents the cluster capabilities.",
                            "items": {
                              "type": "object",
                              "description": "Represents capability available in a validated solution recipe.",
                              "properties": {
                                "capabilityName": {
                                  "type": "string",
                                  "description": "Represents the capability name."
                                }
                              },
                              "required": [
                                "capabilityName"
                              ]
                            },
                            "x-ms-identifiers": []
                          },
                          "nodeCapabilities": {
                            "type": "array",
                            "description": "Represents the node capabilities.",
                            "items": {
                              "type": "object",
                              "description": "Represents capability available in a validated solution recipe.",
                              "properties": {
                                "capabilityName": {
                                  "type": "string",
                                  "description": "Represents the capability name."
                                }
                              },
                              "required": [
                                "capabilityName"
                              ]
                            },
                            "x-ms-identifiers": []
                          }
                        },
                        "required": [
                          "clusterCapabilities",
                          "nodeCapabilities"
                        ]
                      },
                      "components": {
                        "type": "array",
                        "description": "Represents components available in a validated solution recipe.",
                        "items": {
                          "type": "object",
                          "description": "Represents component available in a validated solution recipe.",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "Represents the component's name."
                            },
                            "type": {
                              "type": "string",
                              "description": "Represents the component's type."
                            },
                            "requiredVersion": {
                              "type": "string",
                              "description": "Represents the component's required version."
                            },
                            "installOrder": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Represents the component's install order."
                            },
                            "tags": {
                              "type": "array",
                              "description": "Represents the component's tags.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "payloads": {
                              "type": "array",
                              "description": "Represents the component's payloads.",
                              "items": {
                                "type": "object",
                                "description": "Represents payloads associated with a component available in a validated solution recipe.",
                                "properties": {
                                  "identifier": {
                                    "type": "string",
                                    "description": "Represents the unique identifier of the payload used to query the URL."
                                  },
                                  "hash": {
                                    "type": "string",
                                    "description": "Represents the cryptographic hash of the payload, ensuring data integrity."
                                  },
                                  "fileName": {
                                    "type": "string",
                                    "description": "Represents the name of the file associated with the payload."
                                  },
                                  "url": {
                                    "type": "string",
                                    "description": "Represents the URL from which the payload can be downloaded."
                                  }
                                },
                                "required": [
                                  "identifier",
                                  "hash",
                                  "fileName",
                                  "url"
                                ]
                              },
                              "x-ms-identifiers": []
                            },
                            "metadata": {
                              "description": "Represents the component's metadata.",
                              "type": "object",
                              "properties": {
                                "extensionType": {
                                  "type": "string",
                                  "description": "Represents the type of extension."
                                },
                                "publisher": {
                                  "type": "string",
                                  "description": "Represents the publisher of the extension."
                                },
                                "enableAutomaticUpgrade": {
                                  "type": "boolean",
                                  "description": "Indicates whether automatic upgrades of the extension are enabled."
                                },
                                "lcmUpdate": {
                                  "type": "boolean",
                                  "description": "Indicates whether the LCM (Lifecycle Management) update of the extension is enabled."
                                },
                                "catalog": {
                                  "type": "string",
                                  "description": "Specifies the catalog to which the extension belongs."
                                },
                                "ring": {
                                  "type": "string",
                                  "description": "Specifies the ring to which the extension belongs, internally used by component."
                                },
                                "releaseTrain": {
                                  "type": "string",
                                  "description": "Specifies the release train to which given component belongs."
                                },
                                "link": {
                                  "type": "string",
                                  "description": "Specifies the link associated with the extension."
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Specifies the name of the extension."
                                },
                                "expectedHash": {
                                  "type": "string",
                                  "description": "Specifies the expected hash of the extension."
                                },
                                "previewSource": {
                                  "type": "string",
                                  "description": "Specifies the preview source of the extension."
                                }
                              }
                            }
                          },
                          "required": [
                            "name",
                            "type",
                            "tags"
                          ]
                        },
                        "x-ms-identifiers": []
                      }
                    },
                    "required": [
                      "info",
                      "components"
                    ]
                  },
                  "signature": {
                    "type": "string",
                    "description": "Represents the signature of the recipe, to be used for ensuring its integrity."
                  }
                },
                "required": [
                  "recipeContent"
                ]
              }
            }
          }
        },
        "nextLink": {
          "type": "string",
          "format": "uri",
          "description": "The link to the next page of items"
        }
      },
      "required": [
        "value"
      ]
    },
    "ValidatedSolutionRecipeProperties": {
      "type": "object",
      "description": "Represents properties of a validated solution recipe resource.",
      "properties": {
        "recipeContent": {
          "description": "Represents contents of a validated solution recipe.",
          "type": "object",
          "properties": {
            "info": {
              "description": "Represents information about a validated solution recipe.",
              "type": "object",
              "properties": {
                "solutionType": {
                  "type": "string",
                  "description": "Represents the solution type for which this validated solution recipe is applicable."
                },
                "version": {
                  "type": "string",
                  "description": "Represents the version for which this validated solution recipe is applicable."
                }
              },
              "required": [
                "solutionType",
                "version"
              ]
            },
            "capabilities": {
              "description": "Represents capabilities available in a validated solution recipe.",
              "type": "object",
              "properties": {
                "clusterCapabilities": {
                  "type": "array",
                  "description": "Represents the cluster capabilities.",
                  "items": {
                    "type": "object",
                    "description": "Represents capability available in a validated solution recipe.",
                    "properties": {
                      "capabilityName": {
                        "type": "string",
                        "description": "Represents the capability name."
                      }
                    },
                    "required": [
                      "capabilityName"
                    ]
                  },
                  "x-ms-identifiers": []
                },
                "nodeCapabilities": {
                  "type": "array",
                  "description": "Represents the node capabilities.",
                  "items": {
                    "type": "object",
                    "description": "Represents capability available in a validated solution recipe.",
                    "properties": {
                      "capabilityName": {
                        "type": "string",
                        "description": "Represents the capability name."
                      }
                    },
                    "required": [
                      "capabilityName"
                    ]
                  },
                  "x-ms-identifiers": []
                }
              },
              "required": [
                "clusterCapabilities",
                "nodeCapabilities"
              ]
            },
            "components": {
              "type": "array",
              "description": "Represents components available in a validated solution recipe.",
              "items": {
                "type": "object",
                "description": "Represents component available in a validated solution recipe.",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Represents the component's name."
                  },
                  "type": {
                    "type": "string",
                    "description": "Represents the component's type."
                  },
                  "requiredVersion": {
                    "type": "string",
                    "description": "Represents the component's required version."
                  },
                  "installOrder": {
                    "type": "integer",
                    "format": "int64",
                    "description": "Represents the component's install order."
                  },
                  "tags": {
                    "type": "array",
                    "description": "Represents the component's tags.",
                    "items": {
                      "type": "string"
                    }
                  },
                  "payloads": {
                    "type": "array",
                    "description": "Represents the component's payloads.",
                    "items": {
                      "type": "object",
                      "description": "Represents payloads associated with a component available in a validated solution recipe.",
                      "properties": {
                        "identifier": {
                          "type": "string",
                          "description": "Represents the unique identifier of the payload used to query the URL."
                        },
                        "hash": {
                          "type": "string",
                          "description": "Represents the cryptographic hash of the payload, ensuring data integrity."
                        },
                        "fileName": {
                          "type": "string",
                          "description": "Represents the name of the file associated with the payload."
                        },
                        "url": {
                          "type": "string",
                          "description": "Represents the URL from which the payload can be downloaded."
                        }
                      },
                      "required": [
                        "identifier",
                        "hash",
                        "fileName",
                        "url"
                      ]
                    },
                    "x-ms-identifiers": []
                  },
                  "metadata": {
                    "description": "Represents the component's metadata.",
                    "type": "object",
                    "properties": {
                      "extensionType": {
                        "type": "string",
                        "description": "Represents the type of extension."
                      },
                      "publisher": {
                        "type": "string",
                        "description": "Represents the publisher of the extension."
                      },
                      "enableAutomaticUpgrade": {
                        "type": "boolean",
                        "description": "Indicates whether automatic upgrades of the extension are enabled."
                      },
                      "lcmUpdate": {
                        "type": "boolean",
                        "description": "Indicates whether the LCM (Lifecycle Management) update of the extension is enabled."
                      },
                      "catalog": {
                        "type": "string",
                        "description": "Specifies the catalog to which the extension belongs."
                      },
                      "ring": {
                        "type": "string",
                        "description": "Specifies the ring to which the extension belongs, internally used by component."
                      },
                      "releaseTrain": {
                        "type": "string",
                        "description": "Specifies the release train to which given component belongs."
                      },
                      "link": {
                        "type": "string",
                        "description": "Specifies the link associated with the extension."
                      },
                      "name": {
                        "type": "string",
                        "description": "Specifies the name of the extension."
                      },
                      "expectedHash": {
                        "type": "string",
                        "description": "Specifies the expected hash of the extension."
                      },
                      "previewSource": {
                        "type": "string",
                        "description": "Specifies the preview source of the extension."
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "type",
                  "tags"
                ]
              },
              "x-ms-identifiers": []
            }
          },
          "required": [
            "info",
            "components"
          ]
        },
        "signature": {
          "type": "string",
          "description": "Represents the signature of the recipe, to be used for ensuring its integrity."
        }
      },
      "required": [
        "recipeContent"
      ]
    }
  },
  "parameters": {
    "ClusterNameParameter": {
      "name": "clusterName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the cluster.",
      "x-ms-parameter-location": "method"
    },
    "ArcSettingNameParameter": {
      "name": "arcSettingName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the proxy resource holding details of HCI ArcSetting information.",
      "x-ms-parameter-location": "method"
    },
    "Azure.ResourceManager.ResourceUriParameter": {
      "name": "resourceUri",
      "in": "path",
      "description": "The fully qualified Azure Resource manager identifier of the resource.",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "x-ms-skip-url-encoding": true
    },
    "ExtensionNameParameter": {
      "name": "extensionName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the machine extension.",
      "x-ms-parameter-location": "method"
    },
    "PublisherNameParameter": {
      "name": "publisherName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the publisher available within HCI cluster.",
      "x-ms-parameter-location": "method"
    },
    "OfferNameParameter": {
      "name": "offerName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the offer available within HCI cluster.",
      "x-ms-parameter-location": "method"
    },
    "ODataExpandParameter": {
      "name": "$expand",
      "in": "query",
      "description": "Specify $expand=content,contentVersion to populate additional fields related to the marketplace offer.",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method"
    },
    "SkuNameParameter": {
      "name": "skuName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the SKU available within HCI cluster.",
      "x-ms-parameter-location": "method"
    },
    "UpdateNameParameter": {
      "name": "updateName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Update",
      "x-ms-parameter-location": "method"
    },
    "UpdateRunNameParameter": {
      "name": "updateRunName",
      "in": "path",
      "required": true,
      "type": "string",
      "description": "The name of the Update Run",
      "x-ms-parameter-location": "method"
    }
  }
}