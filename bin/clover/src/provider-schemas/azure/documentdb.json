{
  "swagger": "2.0",
  "info": {
    "title": "Azure documentdb",
    "version": "2025-04-15",
    "description": "Azure documentdb service specifications"
  },
  "host": "management.azure.com",
  "schemes": [
    "https"
  ],
  "paths": {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}": {
      "get": {
        "operationId": "DatabaseAccounts_Get",
        "description": "Retrieves the properties of an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The database account properties were retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB database account.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "kind": {
                  "description": "Indicates the type of database account. This can only be set at database account creation.",
                  "type": "string",
                  "default": "GlobalDocumentDB",
                  "enum": [
                    "GlobalDocumentDB",
                    "MongoDB",
                    "Parse"
                  ],
                  "x-ms-enum": {
                    "name": "DatabaseAccountKind",
                    "modelAsString": true
                  }
                },
                "identity": {
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client id of user assigned identity."
                          }
                        }
                      },
                      "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                    }
                  },
                  "description": "Identity for the resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the database account.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                    },
                    "documentEndpoint": {
                      "description": "The connection endpoint for the Cosmos DB database account.",
                      "type": "string",
                      "readOnly": true
                    },
                    "databaseAccountOfferType": {
                      "description": "The offer type for the Cosmos DB database account. Default value: Standard.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "DatabaseAccountOfferType",
                        "modelAsString": false
                      }
                    },
                    "ipRules": {
                      "description": "List of IpRules.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "IpAddressOrRange object",
                        "properties": {
                          "ipAddressOrRange": {
                            "type": "string",
                            "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
                          }
                        }
                      }
                    },
                    "isVirtualNetworkFilterEnabled": {
                      "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
                      "type": "boolean"
                    },
                    "enableAutomaticFailover": {
                      "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
                      "type": "boolean"
                    },
                    "consistencyPolicy": {
                      "description": "The consistency policy for the Cosmos DB database account.",
                      "type": "object",
                      "properties": {
                        "defaultConsistencyLevel": {
                          "description": "The default consistency level and configuration settings of the Cosmos DB account.",
                          "type": "string",
                          "enum": [
                            "Eventual",
                            "Session",
                            "BoundedStaleness",
                            "Strong",
                            "ConsistentPrefix"
                          ],
                          "x-ms-enum": {
                            "name": "DefaultConsistencyLevel",
                            "modelAsString": false
                          }
                        },
                        "maxStalenessPrefix": {
                          "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 2147483647,
                          "format": "int64"
                        },
                        "maxIntervalInSeconds": {
                          "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                          "type": "integer",
                          "minimum": 5,
                          "maximum": 86400,
                          "format": "int32"
                        }
                      },
                      "required": [
                        "defaultConsistencyLevel"
                      ]
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of Cosmos DB capabilities for the account",
                      "items": {
                        "type": "object",
                        "description": "Cosmos DB capability object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
                          }
                        }
                      }
                    },
                    "writeLocations": {
                      "type": "array",
                      "readOnly": true,
                      "description": "An array that contains the write location for the Cosmos DB account.",
                      "items": {
                        "description": "A region in which the Azure Cosmos DB database account is deployed.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region."
                          },
                          "documentEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                          },
                          "failoverPriority": {
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 0
                          },
                          "isZoneRedundant": {
                            "type": "boolean",
                            "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                          }
                        }
                      }
                    },
                    "readLocations": {
                      "type": "array",
                      "readOnly": true,
                      "description": "An array that contains of the read locations enabled for the Cosmos DB account.",
                      "items": {
                        "description": "A region in which the Azure Cosmos DB database account is deployed.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region."
                          },
                          "documentEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                          },
                          "failoverPriority": {
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 0
                          },
                          "isZoneRedundant": {
                            "type": "boolean",
                            "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                          }
                        }
                      }
                    },
                    "locations": {
                      "type": "array",
                      "readOnly": true,
                      "description": "An array that contains all of the locations enabled for the Cosmos DB account.",
                      "items": {
                        "description": "A region in which the Azure Cosmos DB database account is deployed.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region."
                          },
                          "documentEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                          },
                          "failoverPriority": {
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 0
                          },
                          "isZoneRedundant": {
                            "type": "boolean",
                            "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                          }
                        }
                      }
                    },
                    "failoverPolicies": {
                      "type": "array",
                      "readOnly": true,
                      "description": "An array that contains the regions ordered by their failover priorities.",
                      "items": {
                        "type": "object",
                        "description": "The failover policy for a given region of a database account.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region in which the database account exists."
                          },
                          "failoverPriority": {
                            "type": "integer",
                            "minimum": 0,
                            "format": "int32",
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
                          }
                        }
                      }
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
                      "items": {
                        "type": "object",
                        "description": "Virtual Network ACL Rule object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/virtualNetworks/subnets"
                                }
                              ]
                            },
                            "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
                          },
                          "ignoreMissingVNetServiceEndpoint": {
                            "type": "boolean",
                            "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
                          }
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of Private Endpoint Connections configured for the Cosmos DB account.",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Resource id of the private endpoint."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection State of the Private Endpoint Connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The private link service connection status."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The private link service connection description."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupId": {
                                "type": "string",
                                "description": "Group id of the private endpoint."
                              },
                              "provisioningState": {
                                "type": "string",
                                "description": "Provisioning state of the private endpoint."
                              }
                            }
                          }
                        }
                      }
                    },
                    "enableMultipleWriteLocations": {
                      "description": "Enables the account to write in multiple locations",
                      "type": "boolean"
                    },
                    "enableCassandraConnector": {
                      "description": "Enables the cassandra connector on the Cosmos DB C* account",
                      "type": "boolean"
                    },
                    "connectorOffer": {
                      "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
                      "type": "string",
                      "enum": [
                        "Small"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorOffer",
                        "modelAsString": true
                      }
                    },
                    "disableKeyBasedMetadataWriteAccess": {
                      "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
                      "type": "boolean"
                    },
                    "keyVaultKeyUri": {
                      "description": "The URI of the key vault",
                      "type": "string"
                    },
                    "defaultIdentity": {
                      "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
                      "type": "string"
                    },
                    "publicNetworkAccess": {
                      "description": "Whether requests from Public Network are allowed",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "enableFreeTier": {
                      "description": "Flag to indicate whether Free Tier is enabled.",
                      "type": "boolean"
                    },
                    "apiProperties": {
                      "description": "API specific properties.",
                      "type": "object",
                      "properties": {
                        "serverVersion": {
                          "type": "string",
                          "enum": [
                            "3.2",
                            "3.6",
                            "4.0",
                            "4.2",
                            "5.0",
                            "6.0",
                            "7.0"
                          ],
                          "description": "Describes the version of the MongoDB account.",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ServerVersion"
                          }
                        }
                      }
                    },
                    "enableAnalyticalStorage": {
                      "description": "Flag to indicate whether to enable storage analytics.",
                      "type": "boolean"
                    },
                    "analyticalStorageConfiguration": {
                      "description": "Analytical storage specific properties.",
                      "type": "object",
                      "properties": {
                        "schemaType": {
                          "type": "string",
                          "description": "Describes the types of schema for analytical storage.",
                          "enum": [
                            "WellDefined",
                            "FullFidelity"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "AnalyticalStorageSchemaType"
                          }
                        }
                      }
                    },
                    "instanceId": {
                      "description": "A unique identifier assigned to the database account",
                      "type": "string",
                      "readOnly": true
                    },
                    "createMode": {
                      "description": "Enum to indicate the mode of account creation.",
                      "type": "string",
                      "default": "Default",
                      "enum": [
                        "Default",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true
                      }
                    },
                    "restoreParameters": {
                      "description": "Parameters to indicate the information about the restore.",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "restoreSource": {
                          "type": "string",
                          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                        },
                        "restoreTimestampInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time to which the account has to be restored (ISO-8601 format)."
                        },
                        "restoreWithTtlDisabled": {
                          "type": "boolean",
                          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                        },
                        "restoreMode": {
                          "type": "string",
                          "enum": [
                            "PointInTime"
                          ],
                          "description": "Describes the mode of the restore.",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "RestoreMode"
                          }
                        },
                        "databasesToRestore": {
                          "type": "array",
                          "description": "List of specific databases available for restore.",
                          "items": {
                            "type": "object",
                            "description": "Specific Databases to restore.",
                            "properties": {
                              "databaseName": {
                                "type": "string",
                                "description": "The name of the database available for restore."
                              },
                              "collectionNames": {
                                "type": "array",
                                "description": "The names of the collections available for restore.",
                                "items": {
                                  "type": "string",
                                  "description": "The name of the collection."
                                }
                              }
                            }
                          }
                        },
                        "gremlinDatabasesToRestore": {
                          "type": "array",
                          "description": "List of specific gremlin databases available for restore.",
                          "items": {
                            "type": "object",
                            "description": "Specific Gremlin Databases to restore.",
                            "properties": {
                              "databaseName": {
                                "type": "string",
                                "description": "The name of the gremlin database available for restore."
                              },
                              "graphNames": {
                                "type": "array",
                                "description": "The names of the graphs available for restore.",
                                "items": {
                                  "type": "string",
                                  "description": "The name of the graph."
                                }
                              }
                            }
                          }
                        },
                        "tablesToRestore": {
                          "type": "array",
                          "description": "List of specific tables available for restore.",
                          "items": {
                            "type": "string",
                            "description": "The name of the table."
                          }
                        }
                      }
                    },
                    "backupPolicy": {
                      "description": "The object representing the policy for taking backups on an account.",
                      "type": "object",
                      "discriminator": "type",
                      "properties": {
                        "type": {
                          "description": "Describes the mode of backups.",
                          "type": "string",
                          "enum": [
                            "Periodic",
                            "Continuous"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "BackupPolicyType"
                          }
                        },
                        "migrationState": {
                          "description": "The object representing the state of the migration between the backup policies.",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "Describes the status of migration between backup policy types.",
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "InProgress",
                                "Completed",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "BackupPolicyMigrationStatus"
                              }
                            },
                            "targetType": {
                              "description": "Describes the target backup policy type of the backup policy migration.",
                              "type": "string",
                              "enum": [
                                "Periodic",
                                "Continuous"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "BackupPolicyType"
                              }
                            },
                            "startTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time at which the backup policy migration started (ISO-8601 format)."
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "cors": {
                      "type": "array",
                      "description": "The CORS policy for the Cosmos DB database account.",
                      "items": {
                        "type": "object",
                        "description": "The CORS policy for the Cosmos DB database account.",
                        "properties": {
                          "allowedOrigins": {
                            "description": "The origin domains that are permitted to make a request against the service via CORS.",
                            "type": "string"
                          },
                          "allowedMethods": {
                            "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                            "type": "string"
                          },
                          "allowedHeaders": {
                            "description": "The request headers that the origin domain may specify on the CORS request.",
                            "type": "string"
                          },
                          "exposedHeaders": {
                            "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                            "type": "string"
                          },
                          "maxAgeInSeconds": {
                            "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 2147483647,
                            "format": "int64"
                          }
                        },
                        "required": [
                          "allowedOrigins"
                        ]
                      }
                    },
                    "networkAclBypass": {
                      "description": "Indicates what services are allowed to bypass firewall checks.",
                      "type": "string",
                      "enum": [
                        "None",
                        "AzureServices"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkAclBypass",
                        "modelAsString": false
                      }
                    },
                    "networkAclBypassResourceIds": {
                      "type": "array",
                      "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
                      "items": {
                        "type": "string",
                        "format": "arm-id"
                      }
                    },
                    "disableLocalAuth": {
                      "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
                      "type": "boolean"
                    },
                    "capacity": {
                      "description": "The object that represents all properties related to capacity enforcement on an account.",
                      "type": "object",
                      "properties": {
                        "totalThroughputLimit": {
                          "type": "integer",
                          "minimum": -1,
                          "format": "int32",
                          "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
                        }
                      }
                    },
                    "keysMetadata": {
                      "description": "The object that represents the metadata for the Account Keys of the Cosmos DB account.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "primaryMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "secondaryMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "primaryReadonlyMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "secondaryReadonlyMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        }
                      }
                    },
                    "enablePartitionMerge": {
                      "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
                      "type": "boolean"
                    },
                    "minimalTlsVersion": {
                      "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
                      "type": "string",
                      "enum": [
                        "Tls",
                        "Tls11",
                        "Tls12"
                      ],
                      "x-ms-enum": {
                        "name": "MinimalTlsVersion",
                        "modelAsString": true
                      }
                    },
                    "enableBurstCapacity": {
                      "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
                      "type": "boolean"
                    },
                    "customerManagedKeyStatus": {
                      "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
                      "type": "string"
                    },
                    "enablePerRegionPerPartitionAutoscale": {
                      "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
                      "type": "boolean"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "DatabaseAccounts_Update",
        "description": "Updates the properties of an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "updateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters for patching Azure Cosmos DB database account properties.",
              "type": "object",
              "properties": {
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "identity": {
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client id of user assigned identity."
                          }
                        }
                      },
                      "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                    }
                  },
                  "description": "Identity for the resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to update Azure Cosmos DB database accounts.",
                  "type": "object",
                  "properties": {
                    "consistencyPolicy": {
                      "description": "The consistency policy for the Cosmos DB account.",
                      "type": "object",
                      "properties": {
                        "defaultConsistencyLevel": {
                          "description": "The default consistency level and configuration settings of the Cosmos DB account.",
                          "type": "string",
                          "enum": [
                            "Eventual",
                            "Session",
                            "BoundedStaleness",
                            "Strong",
                            "ConsistentPrefix"
                          ],
                          "x-ms-enum": {
                            "name": "DefaultConsistencyLevel",
                            "modelAsString": false
                          }
                        },
                        "maxStalenessPrefix": {
                          "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 2147483647,
                          "format": "int64"
                        },
                        "maxIntervalInSeconds": {
                          "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                          "type": "integer",
                          "minimum": 5,
                          "maximum": 86400,
                          "format": "int32"
                        }
                      },
                      "required": [
                        "defaultConsistencyLevel"
                      ]
                    },
                    "locations": {
                      "type": "array",
                      "description": "An array that contains the georeplication locations enabled for the Cosmos DB account.",
                      "items": {
                        "description": "A region in which the Azure Cosmos DB database account is deployed.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region."
                          },
                          "documentEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                          },
                          "failoverPriority": {
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 0
                          },
                          "isZoneRedundant": {
                            "type": "boolean",
                            "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                          }
                        }
                      }
                    },
                    "ipRules": {
                      "description": "List of IpRules.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "IpAddressOrRange object",
                        "properties": {
                          "ipAddressOrRange": {
                            "type": "string",
                            "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
                          }
                        }
                      }
                    },
                    "isVirtualNetworkFilterEnabled": {
                      "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
                      "type": "boolean"
                    },
                    "enableAutomaticFailover": {
                      "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
                      "type": "boolean"
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of Cosmos DB capabilities for the account",
                      "items": {
                        "type": "object",
                        "description": "Cosmos DB capability object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
                          }
                        }
                      }
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
                      "items": {
                        "type": "object",
                        "description": "Virtual Network ACL Rule object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/virtualNetworks/subnets"
                                }
                              ]
                            },
                            "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
                          },
                          "ignoreMissingVNetServiceEndpoint": {
                            "type": "boolean",
                            "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
                          }
                        }
                      }
                    },
                    "enableMultipleWriteLocations": {
                      "description": "Enables the account to write in multiple locations",
                      "type": "boolean"
                    },
                    "enableCassandraConnector": {
                      "description": "Enables the cassandra connector on the Cosmos DB C* account",
                      "type": "boolean"
                    },
                    "connectorOffer": {
                      "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
                      "type": "string",
                      "enum": [
                        "Small"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorOffer",
                        "modelAsString": true
                      }
                    },
                    "disableKeyBasedMetadataWriteAccess": {
                      "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
                      "type": "boolean"
                    },
                    "keyVaultKeyUri": {
                      "description": "The URI of the key vault",
                      "type": "string"
                    },
                    "defaultIdentity": {
                      "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
                      "type": "string"
                    },
                    "publicNetworkAccess": {
                      "description": "Whether requests from Public Network are allowed",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "enableFreeTier": {
                      "description": "Flag to indicate whether Free Tier is enabled.",
                      "type": "boolean"
                    },
                    "apiProperties": {
                      "description": "API specific properties. Currently, supported only for MongoDB API.",
                      "type": "object",
                      "properties": {
                        "serverVersion": {
                          "type": "string",
                          "enum": [
                            "3.2",
                            "3.6",
                            "4.0",
                            "4.2",
                            "5.0",
                            "6.0",
                            "7.0"
                          ],
                          "description": "Describes the version of the MongoDB account.",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ServerVersion"
                          }
                        }
                      }
                    },
                    "enableAnalyticalStorage": {
                      "description": "Flag to indicate whether to enable storage analytics.",
                      "type": "boolean"
                    },
                    "analyticalStorageConfiguration": {
                      "description": "Analytical storage specific properties.",
                      "type": "object",
                      "properties": {
                        "schemaType": {
                          "type": "string",
                          "description": "Describes the types of schema for analytical storage.",
                          "enum": [
                            "WellDefined",
                            "FullFidelity"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "AnalyticalStorageSchemaType"
                          }
                        }
                      }
                    },
                    "backupPolicy": {
                      "description": "The object representing the policy for taking backups on an account.",
                      "type": "object",
                      "discriminator": "type",
                      "properties": {
                        "type": {
                          "description": "Describes the mode of backups.",
                          "type": "string",
                          "enum": [
                            "Periodic",
                            "Continuous"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "BackupPolicyType"
                          }
                        },
                        "migrationState": {
                          "description": "The object representing the state of the migration between the backup policies.",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "Describes the status of migration between backup policy types.",
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "InProgress",
                                "Completed",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "BackupPolicyMigrationStatus"
                              }
                            },
                            "targetType": {
                              "description": "Describes the target backup policy type of the backup policy migration.",
                              "type": "string",
                              "enum": [
                                "Periodic",
                                "Continuous"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "BackupPolicyType"
                              }
                            },
                            "startTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time at which the backup policy migration started (ISO-8601 format)."
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "cors": {
                      "type": "array",
                      "description": "The CORS policy for the Cosmos DB database account.",
                      "items": {
                        "type": "object",
                        "description": "The CORS policy for the Cosmos DB database account.",
                        "properties": {
                          "allowedOrigins": {
                            "description": "The origin domains that are permitted to make a request against the service via CORS.",
                            "type": "string"
                          },
                          "allowedMethods": {
                            "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                            "type": "string"
                          },
                          "allowedHeaders": {
                            "description": "The request headers that the origin domain may specify on the CORS request.",
                            "type": "string"
                          },
                          "exposedHeaders": {
                            "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                            "type": "string"
                          },
                          "maxAgeInSeconds": {
                            "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 2147483647,
                            "format": "int64"
                          }
                        },
                        "required": [
                          "allowedOrigins"
                        ]
                      }
                    },
                    "networkAclBypass": {
                      "description": "Indicates what services are allowed to bypass firewall checks.",
                      "type": "string",
                      "enum": [
                        "None",
                        "AzureServices"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkAclBypass",
                        "modelAsString": false
                      }
                    },
                    "networkAclBypassResourceIds": {
                      "type": "array",
                      "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "disableLocalAuth": {
                      "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
                      "type": "boolean"
                    },
                    "capacity": {
                      "description": "The object that represents all properties related to capacity enforcement on an account.",
                      "type": "object",
                      "properties": {
                        "totalThroughputLimit": {
                          "type": "integer",
                          "minimum": -1,
                          "format": "int32",
                          "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
                        }
                      }
                    },
                    "keysMetadata": {
                      "description": "This property is ignored during the update operation, as the metadata is read-only. The object represents the metadata for the Account Keys of the Cosmos DB account.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "primaryMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "secondaryMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "primaryReadonlyMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "secondaryReadonlyMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        }
                      }
                    },
                    "enablePartitionMerge": {
                      "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
                      "type": "boolean"
                    },
                    "minimalTlsVersion": {
                      "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
                      "type": "string",
                      "enum": [
                        "Tls",
                        "Tls11",
                        "Tls12"
                      ],
                      "x-ms-enum": {
                        "name": "MinimalTlsVersion",
                        "modelAsString": true
                      }
                    },
                    "enableBurstCapacity": {
                      "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
                      "type": "boolean"
                    },
                    "customerManagedKeyStatus": {
                      "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
                      "type": "string"
                    },
                    "enablePerRegionPerPartitionAutoscale": {
                      "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
                      "type": "boolean"
                    }
                  }
                }
              }
            },
            "description": "The parameters to provide for the current database account."
          }
        ],
        "responses": {
          "200": {
            "description": "The database account update operation will complete asynchronously.",
            "schema": {
              "description": "An Azure Cosmos DB database account.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "kind": {
                  "description": "Indicates the type of database account. This can only be set at database account creation.",
                  "type": "string",
                  "default": "GlobalDocumentDB",
                  "enum": [
                    "GlobalDocumentDB",
                    "MongoDB",
                    "Parse"
                  ],
                  "x-ms-enum": {
                    "name": "DatabaseAccountKind",
                    "modelAsString": true
                  }
                },
                "identity": {
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client id of user assigned identity."
                          }
                        }
                      },
                      "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                    }
                  },
                  "description": "Identity for the resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the database account.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                    },
                    "documentEndpoint": {
                      "description": "The connection endpoint for the Cosmos DB database account.",
                      "type": "string",
                      "readOnly": true
                    },
                    "databaseAccountOfferType": {
                      "description": "The offer type for the Cosmos DB database account. Default value: Standard.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "DatabaseAccountOfferType",
                        "modelAsString": false
                      }
                    },
                    "ipRules": {
                      "description": "List of IpRules.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "IpAddressOrRange object",
                        "properties": {
                          "ipAddressOrRange": {
                            "type": "string",
                            "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
                          }
                        }
                      }
                    },
                    "isVirtualNetworkFilterEnabled": {
                      "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
                      "type": "boolean"
                    },
                    "enableAutomaticFailover": {
                      "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
                      "type": "boolean"
                    },
                    "consistencyPolicy": {
                      "description": "The consistency policy for the Cosmos DB database account.",
                      "type": "object",
                      "properties": {
                        "defaultConsistencyLevel": {
                          "description": "The default consistency level and configuration settings of the Cosmos DB account.",
                          "type": "string",
                          "enum": [
                            "Eventual",
                            "Session",
                            "BoundedStaleness",
                            "Strong",
                            "ConsistentPrefix"
                          ],
                          "x-ms-enum": {
                            "name": "DefaultConsistencyLevel",
                            "modelAsString": false
                          }
                        },
                        "maxStalenessPrefix": {
                          "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 2147483647,
                          "format": "int64"
                        },
                        "maxIntervalInSeconds": {
                          "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                          "type": "integer",
                          "minimum": 5,
                          "maximum": 86400,
                          "format": "int32"
                        }
                      },
                      "required": [
                        "defaultConsistencyLevel"
                      ]
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of Cosmos DB capabilities for the account",
                      "items": {
                        "type": "object",
                        "description": "Cosmos DB capability object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
                          }
                        }
                      }
                    },
                    "writeLocations": {
                      "type": "array",
                      "readOnly": true,
                      "description": "An array that contains the write location for the Cosmos DB account.",
                      "items": {
                        "description": "A region in which the Azure Cosmos DB database account is deployed.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region."
                          },
                          "documentEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                          },
                          "failoverPriority": {
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 0
                          },
                          "isZoneRedundant": {
                            "type": "boolean",
                            "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                          }
                        }
                      }
                    },
                    "readLocations": {
                      "type": "array",
                      "readOnly": true,
                      "description": "An array that contains of the read locations enabled for the Cosmos DB account.",
                      "items": {
                        "description": "A region in which the Azure Cosmos DB database account is deployed.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region."
                          },
                          "documentEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                          },
                          "failoverPriority": {
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 0
                          },
                          "isZoneRedundant": {
                            "type": "boolean",
                            "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                          }
                        }
                      }
                    },
                    "locations": {
                      "type": "array",
                      "readOnly": true,
                      "description": "An array that contains all of the locations enabled for the Cosmos DB account.",
                      "items": {
                        "description": "A region in which the Azure Cosmos DB database account is deployed.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region."
                          },
                          "documentEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                          },
                          "failoverPriority": {
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 0
                          },
                          "isZoneRedundant": {
                            "type": "boolean",
                            "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                          }
                        }
                      }
                    },
                    "failoverPolicies": {
                      "type": "array",
                      "readOnly": true,
                      "description": "An array that contains the regions ordered by their failover priorities.",
                      "items": {
                        "type": "object",
                        "description": "The failover policy for a given region of a database account.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region in which the database account exists."
                          },
                          "failoverPriority": {
                            "type": "integer",
                            "minimum": 0,
                            "format": "int32",
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
                          }
                        }
                      }
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
                      "items": {
                        "type": "object",
                        "description": "Virtual Network ACL Rule object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/virtualNetworks/subnets"
                                }
                              ]
                            },
                            "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
                          },
                          "ignoreMissingVNetServiceEndpoint": {
                            "type": "boolean",
                            "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
                          }
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of Private Endpoint Connections configured for the Cosmos DB account.",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Resource id of the private endpoint."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection State of the Private Endpoint Connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The private link service connection status."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The private link service connection description."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupId": {
                                "type": "string",
                                "description": "Group id of the private endpoint."
                              },
                              "provisioningState": {
                                "type": "string",
                                "description": "Provisioning state of the private endpoint."
                              }
                            }
                          }
                        }
                      }
                    },
                    "enableMultipleWriteLocations": {
                      "description": "Enables the account to write in multiple locations",
                      "type": "boolean"
                    },
                    "enableCassandraConnector": {
                      "description": "Enables the cassandra connector on the Cosmos DB C* account",
                      "type": "boolean"
                    },
                    "connectorOffer": {
                      "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
                      "type": "string",
                      "enum": [
                        "Small"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorOffer",
                        "modelAsString": true
                      }
                    },
                    "disableKeyBasedMetadataWriteAccess": {
                      "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
                      "type": "boolean"
                    },
                    "keyVaultKeyUri": {
                      "description": "The URI of the key vault",
                      "type": "string"
                    },
                    "defaultIdentity": {
                      "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
                      "type": "string"
                    },
                    "publicNetworkAccess": {
                      "description": "Whether requests from Public Network are allowed",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "enableFreeTier": {
                      "description": "Flag to indicate whether Free Tier is enabled.",
                      "type": "boolean"
                    },
                    "apiProperties": {
                      "description": "API specific properties.",
                      "type": "object",
                      "properties": {
                        "serverVersion": {
                          "type": "string",
                          "enum": [
                            "3.2",
                            "3.6",
                            "4.0",
                            "4.2",
                            "5.0",
                            "6.0",
                            "7.0"
                          ],
                          "description": "Describes the version of the MongoDB account.",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ServerVersion"
                          }
                        }
                      }
                    },
                    "enableAnalyticalStorage": {
                      "description": "Flag to indicate whether to enable storage analytics.",
                      "type": "boolean"
                    },
                    "analyticalStorageConfiguration": {
                      "description": "Analytical storage specific properties.",
                      "type": "object",
                      "properties": {
                        "schemaType": {
                          "type": "string",
                          "description": "Describes the types of schema for analytical storage.",
                          "enum": [
                            "WellDefined",
                            "FullFidelity"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "AnalyticalStorageSchemaType"
                          }
                        }
                      }
                    },
                    "instanceId": {
                      "description": "A unique identifier assigned to the database account",
                      "type": "string",
                      "readOnly": true
                    },
                    "createMode": {
                      "description": "Enum to indicate the mode of account creation.",
                      "type": "string",
                      "default": "Default",
                      "enum": [
                        "Default",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true
                      }
                    },
                    "restoreParameters": {
                      "description": "Parameters to indicate the information about the restore.",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "restoreSource": {
                          "type": "string",
                          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                        },
                        "restoreTimestampInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time to which the account has to be restored (ISO-8601 format)."
                        },
                        "restoreWithTtlDisabled": {
                          "type": "boolean",
                          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                        },
                        "restoreMode": {
                          "type": "string",
                          "enum": [
                            "PointInTime"
                          ],
                          "description": "Describes the mode of the restore.",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "RestoreMode"
                          }
                        },
                        "databasesToRestore": {
                          "type": "array",
                          "description": "List of specific databases available for restore.",
                          "items": {
                            "type": "object",
                            "description": "Specific Databases to restore.",
                            "properties": {
                              "databaseName": {
                                "type": "string",
                                "description": "The name of the database available for restore."
                              },
                              "collectionNames": {
                                "type": "array",
                                "description": "The names of the collections available for restore.",
                                "items": {
                                  "type": "string",
                                  "description": "The name of the collection."
                                }
                              }
                            }
                          }
                        },
                        "gremlinDatabasesToRestore": {
                          "type": "array",
                          "description": "List of specific gremlin databases available for restore.",
                          "items": {
                            "type": "object",
                            "description": "Specific Gremlin Databases to restore.",
                            "properties": {
                              "databaseName": {
                                "type": "string",
                                "description": "The name of the gremlin database available for restore."
                              },
                              "graphNames": {
                                "type": "array",
                                "description": "The names of the graphs available for restore.",
                                "items": {
                                  "type": "string",
                                  "description": "The name of the graph."
                                }
                              }
                            }
                          }
                        },
                        "tablesToRestore": {
                          "type": "array",
                          "description": "List of specific tables available for restore.",
                          "items": {
                            "type": "string",
                            "description": "The name of the table."
                          }
                        }
                      }
                    },
                    "backupPolicy": {
                      "description": "The object representing the policy for taking backups on an account.",
                      "type": "object",
                      "discriminator": "type",
                      "properties": {
                        "type": {
                          "description": "Describes the mode of backups.",
                          "type": "string",
                          "enum": [
                            "Periodic",
                            "Continuous"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "BackupPolicyType"
                          }
                        },
                        "migrationState": {
                          "description": "The object representing the state of the migration between the backup policies.",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "Describes the status of migration between backup policy types.",
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "InProgress",
                                "Completed",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "BackupPolicyMigrationStatus"
                              }
                            },
                            "targetType": {
                              "description": "Describes the target backup policy type of the backup policy migration.",
                              "type": "string",
                              "enum": [
                                "Periodic",
                                "Continuous"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "BackupPolicyType"
                              }
                            },
                            "startTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time at which the backup policy migration started (ISO-8601 format)."
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "cors": {
                      "type": "array",
                      "description": "The CORS policy for the Cosmos DB database account.",
                      "items": {
                        "type": "object",
                        "description": "The CORS policy for the Cosmos DB database account.",
                        "properties": {
                          "allowedOrigins": {
                            "description": "The origin domains that are permitted to make a request against the service via CORS.",
                            "type": "string"
                          },
                          "allowedMethods": {
                            "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                            "type": "string"
                          },
                          "allowedHeaders": {
                            "description": "The request headers that the origin domain may specify on the CORS request.",
                            "type": "string"
                          },
                          "exposedHeaders": {
                            "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                            "type": "string"
                          },
                          "maxAgeInSeconds": {
                            "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 2147483647,
                            "format": "int64"
                          }
                        },
                        "required": [
                          "allowedOrigins"
                        ]
                      }
                    },
                    "networkAclBypass": {
                      "description": "Indicates what services are allowed to bypass firewall checks.",
                      "type": "string",
                      "enum": [
                        "None",
                        "AzureServices"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkAclBypass",
                        "modelAsString": false
                      }
                    },
                    "networkAclBypassResourceIds": {
                      "type": "array",
                      "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
                      "items": {
                        "type": "string",
                        "format": "arm-id"
                      }
                    },
                    "disableLocalAuth": {
                      "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
                      "type": "boolean"
                    },
                    "capacity": {
                      "description": "The object that represents all properties related to capacity enforcement on an account.",
                      "type": "object",
                      "properties": {
                        "totalThroughputLimit": {
                          "type": "integer",
                          "minimum": -1,
                          "format": "int32",
                          "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
                        }
                      }
                    },
                    "keysMetadata": {
                      "description": "The object that represents the metadata for the Account Keys of the Cosmos DB account.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "primaryMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "secondaryMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "primaryReadonlyMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "secondaryReadonlyMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        }
                      }
                    },
                    "enablePartitionMerge": {
                      "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
                      "type": "boolean"
                    },
                    "minimalTlsVersion": {
                      "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
                      "type": "string",
                      "enum": [
                        "Tls",
                        "Tls11",
                        "Tls12"
                      ],
                      "x-ms-enum": {
                        "name": "MinimalTlsVersion",
                        "modelAsString": true
                      }
                    },
                    "enableBurstCapacity": {
                      "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
                      "type": "boolean"
                    },
                    "customerManagedKeyStatus": {
                      "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
                      "type": "string"
                    },
                    "enablePerRegionPerPartitionAutoscale": {
                      "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
                      "type": "boolean"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "DatabaseAccounts_CreateOrUpdate",
        "description": "Creates or updates an Azure Cosmos DB database account. The \"Update\" method is preferred when performing updates on an account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update Cosmos DB database accounts.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "kind": {
                  "description": "Indicates the type of database account. This can only be set at database account creation.",
                  "type": "string",
                  "default": "GlobalDocumentDB",
                  "enum": [
                    "GlobalDocumentDB",
                    "MongoDB",
                    "Parse"
                  ],
                  "x-ms-enum": {
                    "name": "DatabaseAccountKind",
                    "modelAsString": true
                  }
                },
                "identity": {
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client id of user assigned identity."
                          }
                        }
                      },
                      "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                    }
                  },
                  "description": "Identity for the resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update Azure Cosmos DB database accounts.",
                  "type": "object",
                  "properties": {
                    "consistencyPolicy": {
                      "description": "The consistency policy for the Cosmos DB account.",
                      "type": "object",
                      "properties": {
                        "defaultConsistencyLevel": {
                          "description": "The default consistency level and configuration settings of the Cosmos DB account.",
                          "type": "string",
                          "enum": [
                            "Eventual",
                            "Session",
                            "BoundedStaleness",
                            "Strong",
                            "ConsistentPrefix"
                          ],
                          "x-ms-enum": {
                            "name": "DefaultConsistencyLevel",
                            "modelAsString": false
                          }
                        },
                        "maxStalenessPrefix": {
                          "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 2147483647,
                          "format": "int64"
                        },
                        "maxIntervalInSeconds": {
                          "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                          "type": "integer",
                          "minimum": 5,
                          "maximum": 86400,
                          "format": "int32"
                        }
                      },
                      "required": [
                        "defaultConsistencyLevel"
                      ]
                    },
                    "locations": {
                      "type": "array",
                      "description": "An array that contains the georeplication locations enabled for the Cosmos DB account.",
                      "items": {
                        "description": "A region in which the Azure Cosmos DB database account is deployed.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region."
                          },
                          "documentEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                          },
                          "failoverPriority": {
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 0
                          },
                          "isZoneRedundant": {
                            "type": "boolean",
                            "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                          }
                        }
                      }
                    },
                    "databaseAccountOfferType": {
                      "description": "The offer type for the database",
                      "type": "string",
                      "enum": [
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "DatabaseAccountOfferType",
                        "modelAsString": false
                      }
                    },
                    "ipRules": {
                      "description": "List of IpRules.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "IpAddressOrRange object",
                        "properties": {
                          "ipAddressOrRange": {
                            "type": "string",
                            "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
                          }
                        }
                      }
                    },
                    "isVirtualNetworkFilterEnabled": {
                      "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
                      "type": "boolean"
                    },
                    "enableAutomaticFailover": {
                      "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
                      "type": "boolean"
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of Cosmos DB capabilities for the account",
                      "items": {
                        "type": "object",
                        "description": "Cosmos DB capability object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
                          }
                        }
                      }
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
                      "items": {
                        "type": "object",
                        "description": "Virtual Network ACL Rule object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/virtualNetworks/subnets"
                                }
                              ]
                            },
                            "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
                          },
                          "ignoreMissingVNetServiceEndpoint": {
                            "type": "boolean",
                            "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
                          }
                        }
                      }
                    },
                    "enableMultipleWriteLocations": {
                      "description": "Enables the account to write in multiple locations",
                      "type": "boolean"
                    },
                    "enableCassandraConnector": {
                      "description": "Enables the cassandra connector on the Cosmos DB C* account",
                      "type": "boolean"
                    },
                    "connectorOffer": {
                      "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
                      "type": "string",
                      "enum": [
                        "Small"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorOffer",
                        "modelAsString": true
                      }
                    },
                    "disableKeyBasedMetadataWriteAccess": {
                      "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
                      "type": "boolean"
                    },
                    "keyVaultKeyUri": {
                      "description": "The URI of the key vault",
                      "type": "string"
                    },
                    "defaultIdentity": {
                      "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
                      "type": "string"
                    },
                    "publicNetworkAccess": {
                      "description": "Whether requests from Public Network are allowed",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "enableFreeTier": {
                      "description": "Flag to indicate whether Free Tier is enabled.",
                      "type": "boolean"
                    },
                    "apiProperties": {
                      "description": "API specific properties. Currently, supported only for MongoDB API.",
                      "type": "object",
                      "properties": {
                        "serverVersion": {
                          "type": "string",
                          "enum": [
                            "3.2",
                            "3.6",
                            "4.0",
                            "4.2",
                            "5.0",
                            "6.0",
                            "7.0"
                          ],
                          "description": "Describes the version of the MongoDB account.",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ServerVersion"
                          }
                        }
                      }
                    },
                    "enableAnalyticalStorage": {
                      "description": "Flag to indicate whether to enable storage analytics.",
                      "type": "boolean"
                    },
                    "analyticalStorageConfiguration": {
                      "description": "Analytical storage specific properties.",
                      "type": "object",
                      "properties": {
                        "schemaType": {
                          "type": "string",
                          "description": "Describes the types of schema for analytical storage.",
                          "enum": [
                            "WellDefined",
                            "FullFidelity"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "AnalyticalStorageSchemaType"
                          }
                        }
                      }
                    },
                    "createMode": {
                      "description": "Enum to indicate the mode of account creation.",
                      "type": "string",
                      "default": "Default",
                      "enum": [
                        "Default",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true
                      }
                    },
                    "backupPolicy": {
                      "description": "The object representing the policy for taking backups on an account.",
                      "type": "object",
                      "discriminator": "type",
                      "properties": {
                        "type": {
                          "description": "Describes the mode of backups.",
                          "type": "string",
                          "enum": [
                            "Periodic",
                            "Continuous"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "BackupPolicyType"
                          }
                        },
                        "migrationState": {
                          "description": "The object representing the state of the migration between the backup policies.",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "Describes the status of migration between backup policy types.",
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "InProgress",
                                "Completed",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "BackupPolicyMigrationStatus"
                              }
                            },
                            "targetType": {
                              "description": "Describes the target backup policy type of the backup policy migration.",
                              "type": "string",
                              "enum": [
                                "Periodic",
                                "Continuous"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "BackupPolicyType"
                              }
                            },
                            "startTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time at which the backup policy migration started (ISO-8601 format)."
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "cors": {
                      "type": "array",
                      "description": "The CORS policy for the Cosmos DB database account.",
                      "items": {
                        "type": "object",
                        "description": "The CORS policy for the Cosmos DB database account.",
                        "properties": {
                          "allowedOrigins": {
                            "description": "The origin domains that are permitted to make a request against the service via CORS.",
                            "type": "string"
                          },
                          "allowedMethods": {
                            "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                            "type": "string"
                          },
                          "allowedHeaders": {
                            "description": "The request headers that the origin domain may specify on the CORS request.",
                            "type": "string"
                          },
                          "exposedHeaders": {
                            "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                            "type": "string"
                          },
                          "maxAgeInSeconds": {
                            "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 2147483647,
                            "format": "int64"
                          }
                        },
                        "required": [
                          "allowedOrigins"
                        ]
                      }
                    },
                    "networkAclBypass": {
                      "description": "Indicates what services are allowed to bypass firewall checks.",
                      "type": "string",
                      "enum": [
                        "None",
                        "AzureServices"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkAclBypass",
                        "modelAsString": false
                      }
                    },
                    "networkAclBypassResourceIds": {
                      "type": "array",
                      "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "disableLocalAuth": {
                      "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
                      "type": "boolean"
                    },
                    "restoreParameters": {
                      "description": "Parameters to indicate the information about the restore.",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "restoreSource": {
                          "type": "string",
                          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                        },
                        "restoreTimestampInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time to which the account has to be restored (ISO-8601 format)."
                        },
                        "restoreWithTtlDisabled": {
                          "type": "boolean",
                          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                        },
                        "restoreMode": {
                          "type": "string",
                          "enum": [
                            "PointInTime"
                          ],
                          "description": "Describes the mode of the restore.",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "RestoreMode"
                          }
                        },
                        "databasesToRestore": {
                          "type": "array",
                          "description": "List of specific databases available for restore.",
                          "items": {
                            "type": "object",
                            "description": "Specific Databases to restore.",
                            "properties": {
                              "databaseName": {
                                "type": "string",
                                "description": "The name of the database available for restore."
                              },
                              "collectionNames": {
                                "type": "array",
                                "description": "The names of the collections available for restore.",
                                "items": {
                                  "type": "string",
                                  "description": "The name of the collection."
                                }
                              }
                            }
                          }
                        },
                        "gremlinDatabasesToRestore": {
                          "type": "array",
                          "description": "List of specific gremlin databases available for restore.",
                          "items": {
                            "type": "object",
                            "description": "Specific Gremlin Databases to restore.",
                            "properties": {
                              "databaseName": {
                                "type": "string",
                                "description": "The name of the gremlin database available for restore."
                              },
                              "graphNames": {
                                "type": "array",
                                "description": "The names of the graphs available for restore.",
                                "items": {
                                  "type": "string",
                                  "description": "The name of the graph."
                                }
                              }
                            }
                          }
                        },
                        "tablesToRestore": {
                          "type": "array",
                          "description": "List of specific tables available for restore.",
                          "items": {
                            "type": "string",
                            "description": "The name of the table."
                          }
                        }
                      }
                    },
                    "capacity": {
                      "description": "The object that represents all properties related to capacity enforcement on an account.",
                      "type": "object",
                      "properties": {
                        "totalThroughputLimit": {
                          "type": "integer",
                          "minimum": -1,
                          "format": "int32",
                          "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
                        }
                      }
                    },
                    "keysMetadata": {
                      "description": "This property is ignored during the update/create operation, as the metadata is read-only. The object represents the metadata for the Account Keys of the Cosmos DB account.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "primaryMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "secondaryMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "primaryReadonlyMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "secondaryReadonlyMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        }
                      }
                    },
                    "enablePartitionMerge": {
                      "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
                      "type": "boolean"
                    },
                    "minimalTlsVersion": {
                      "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
                      "type": "string",
                      "enum": [
                        "Tls",
                        "Tls11",
                        "Tls12"
                      ],
                      "x-ms-enum": {
                        "name": "MinimalTlsVersion",
                        "modelAsString": true
                      }
                    },
                    "enableBurstCapacity": {
                      "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
                      "type": "boolean"
                    },
                    "customerManagedKeyStatus": {
                      "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
                      "type": "string"
                    },
                    "enablePerRegionPerPartitionAutoscale": {
                      "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "locations",
                    "databaseAccountOfferType"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the current database account."
          }
        ],
        "responses": {
          "200": {
            "description": "The database account create or update operation will complete asynchronously.",
            "schema": {
              "description": "An Azure Cosmos DB database account.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "kind": {
                  "description": "Indicates the type of database account. This can only be set at database account creation.",
                  "type": "string",
                  "default": "GlobalDocumentDB",
                  "enum": [
                    "GlobalDocumentDB",
                    "MongoDB",
                    "Parse"
                  ],
                  "x-ms-enum": {
                    "name": "DatabaseAccountKind",
                    "modelAsString": true
                  }
                },
                "identity": {
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                      "enum": [
                        "SystemAssigned",
                        "UserAssigned",
                        "SystemAssigned,UserAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ResourceIdentityType",
                        "modelAsString": false
                      }
                    },
                    "userAssignedIdentities": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of user assigned identity."
                          },
                          "clientId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The client id of user assigned identity."
                          }
                        }
                      },
                      "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                    }
                  },
                  "description": "Identity for the resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties for the database account.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                    },
                    "documentEndpoint": {
                      "description": "The connection endpoint for the Cosmos DB database account.",
                      "type": "string",
                      "readOnly": true
                    },
                    "databaseAccountOfferType": {
                      "description": "The offer type for the Cosmos DB database account. Default value: Standard.",
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Standard"
                      ],
                      "x-ms-enum": {
                        "name": "DatabaseAccountOfferType",
                        "modelAsString": false
                      }
                    },
                    "ipRules": {
                      "description": "List of IpRules.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "IpAddressOrRange object",
                        "properties": {
                          "ipAddressOrRange": {
                            "type": "string",
                            "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
                          }
                        }
                      }
                    },
                    "isVirtualNetworkFilterEnabled": {
                      "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
                      "type": "boolean"
                    },
                    "enableAutomaticFailover": {
                      "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
                      "type": "boolean"
                    },
                    "consistencyPolicy": {
                      "description": "The consistency policy for the Cosmos DB database account.",
                      "type": "object",
                      "properties": {
                        "defaultConsistencyLevel": {
                          "description": "The default consistency level and configuration settings of the Cosmos DB account.",
                          "type": "string",
                          "enum": [
                            "Eventual",
                            "Session",
                            "BoundedStaleness",
                            "Strong",
                            "ConsistentPrefix"
                          ],
                          "x-ms-enum": {
                            "name": "DefaultConsistencyLevel",
                            "modelAsString": false
                          }
                        },
                        "maxStalenessPrefix": {
                          "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 2147483647,
                          "format": "int64"
                        },
                        "maxIntervalInSeconds": {
                          "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                          "type": "integer",
                          "minimum": 5,
                          "maximum": 86400,
                          "format": "int32"
                        }
                      },
                      "required": [
                        "defaultConsistencyLevel"
                      ]
                    },
                    "capabilities": {
                      "type": "array",
                      "description": "List of Cosmos DB capabilities for the account",
                      "items": {
                        "type": "object",
                        "description": "Cosmos DB capability object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
                          }
                        }
                      }
                    },
                    "writeLocations": {
                      "type": "array",
                      "readOnly": true,
                      "description": "An array that contains the write location for the Cosmos DB account.",
                      "items": {
                        "description": "A region in which the Azure Cosmos DB database account is deployed.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region."
                          },
                          "documentEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                          },
                          "failoverPriority": {
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 0
                          },
                          "isZoneRedundant": {
                            "type": "boolean",
                            "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                          }
                        }
                      }
                    },
                    "readLocations": {
                      "type": "array",
                      "readOnly": true,
                      "description": "An array that contains of the read locations enabled for the Cosmos DB account.",
                      "items": {
                        "description": "A region in which the Azure Cosmos DB database account is deployed.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region."
                          },
                          "documentEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                          },
                          "failoverPriority": {
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 0
                          },
                          "isZoneRedundant": {
                            "type": "boolean",
                            "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                          }
                        }
                      }
                    },
                    "locations": {
                      "type": "array",
                      "readOnly": true,
                      "description": "An array that contains all of the locations enabled for the Cosmos DB account.",
                      "items": {
                        "description": "A region in which the Azure Cosmos DB database account is deployed.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region."
                          },
                          "documentEndpoint": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                          },
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                          },
                          "failoverPriority": {
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                            "format": "int32",
                            "type": "integer",
                            "minimum": 0
                          },
                          "isZoneRedundant": {
                            "type": "boolean",
                            "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                          }
                        }
                      }
                    },
                    "failoverPolicies": {
                      "type": "array",
                      "readOnly": true,
                      "description": "An array that contains the regions ordered by their failover priorities.",
                      "items": {
                        "type": "object",
                        "description": "The failover policy for a given region of a database account.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                          },
                          "locationName": {
                            "type": "string",
                            "description": "The name of the region in which the database account exists."
                          },
                          "failoverPriority": {
                            "type": "integer",
                            "minimum": 0,
                            "format": "int32",
                            "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
                          }
                        }
                      }
                    },
                    "virtualNetworkRules": {
                      "type": "array",
                      "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
                      "items": {
                        "type": "object",
                        "description": "Virtual Network ACL Rule object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/virtualNetworks/subnets"
                                }
                              ]
                            },
                            "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
                          },
                          "ignoreMissingVNetServiceEndpoint": {
                            "type": "boolean",
                            "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
                          }
                        }
                      }
                    },
                    "privateEndpointConnections": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of Private Endpoint Connections configured for the Cosmos DB account.",
                      "items": {
                        "description": "A private endpoint connection",
                        "type": "object",
                        "properties": {
                          "id": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                          },
                          "name": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the resource"
                          },
                          "type": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                          },
                          "properties": {
                            "description": "Resource properties.",
                            "x-ms-client-flatten": true,
                            "type": "object",
                            "properties": {
                              "privateEndpoint": {
                                "description": "Private endpoint which the connection belongs to.",
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Resource id of the private endpoint."
                                  }
                                }
                              },
                              "privateLinkServiceConnectionState": {
                                "description": "Connection State of the Private Endpoint Connection.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "type": "string",
                                    "description": "The private link service connection status."
                                  },
                                  "description": {
                                    "type": "string",
                                    "description": "The private link service connection description."
                                  },
                                  "actionsRequired": {
                                    "type": "string",
                                    "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                    "readOnly": true
                                  }
                                }
                              },
                              "groupId": {
                                "type": "string",
                                "description": "Group id of the private endpoint."
                              },
                              "provisioningState": {
                                "type": "string",
                                "description": "Provisioning state of the private endpoint."
                              }
                            }
                          }
                        }
                      }
                    },
                    "enableMultipleWriteLocations": {
                      "description": "Enables the account to write in multiple locations",
                      "type": "boolean"
                    },
                    "enableCassandraConnector": {
                      "description": "Enables the cassandra connector on the Cosmos DB C* account",
                      "type": "boolean"
                    },
                    "connectorOffer": {
                      "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
                      "type": "string",
                      "enum": [
                        "Small"
                      ],
                      "x-ms-enum": {
                        "name": "ConnectorOffer",
                        "modelAsString": true
                      }
                    },
                    "disableKeyBasedMetadataWriteAccess": {
                      "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
                      "type": "boolean"
                    },
                    "keyVaultKeyUri": {
                      "description": "The URI of the key vault",
                      "type": "string"
                    },
                    "defaultIdentity": {
                      "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
                      "type": "string"
                    },
                    "publicNetworkAccess": {
                      "description": "Whether requests from Public Network are allowed",
                      "type": "string",
                      "enum": [
                        "Enabled",
                        "Disabled",
                        "SecuredByPerimeter"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "PublicNetworkAccess"
                      }
                    },
                    "enableFreeTier": {
                      "description": "Flag to indicate whether Free Tier is enabled.",
                      "type": "boolean"
                    },
                    "apiProperties": {
                      "description": "API specific properties.",
                      "type": "object",
                      "properties": {
                        "serverVersion": {
                          "type": "string",
                          "enum": [
                            "3.2",
                            "3.6",
                            "4.0",
                            "4.2",
                            "5.0",
                            "6.0",
                            "7.0"
                          ],
                          "description": "Describes the version of the MongoDB account.",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "ServerVersion"
                          }
                        }
                      }
                    },
                    "enableAnalyticalStorage": {
                      "description": "Flag to indicate whether to enable storage analytics.",
                      "type": "boolean"
                    },
                    "analyticalStorageConfiguration": {
                      "description": "Analytical storage specific properties.",
                      "type": "object",
                      "properties": {
                        "schemaType": {
                          "type": "string",
                          "description": "Describes the types of schema for analytical storage.",
                          "enum": [
                            "WellDefined",
                            "FullFidelity"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "AnalyticalStorageSchemaType"
                          }
                        }
                      }
                    },
                    "instanceId": {
                      "description": "A unique identifier assigned to the database account",
                      "type": "string",
                      "readOnly": true
                    },
                    "createMode": {
                      "description": "Enum to indicate the mode of account creation.",
                      "type": "string",
                      "default": "Default",
                      "enum": [
                        "Default",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true
                      }
                    },
                    "restoreParameters": {
                      "description": "Parameters to indicate the information about the restore.",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "restoreSource": {
                          "type": "string",
                          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                        },
                        "restoreTimestampInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time to which the account has to be restored (ISO-8601 format)."
                        },
                        "restoreWithTtlDisabled": {
                          "type": "boolean",
                          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                        },
                        "restoreMode": {
                          "type": "string",
                          "enum": [
                            "PointInTime"
                          ],
                          "description": "Describes the mode of the restore.",
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "RestoreMode"
                          }
                        },
                        "databasesToRestore": {
                          "type": "array",
                          "description": "List of specific databases available for restore.",
                          "items": {
                            "type": "object",
                            "description": "Specific Databases to restore.",
                            "properties": {
                              "databaseName": {
                                "type": "string",
                                "description": "The name of the database available for restore."
                              },
                              "collectionNames": {
                                "type": "array",
                                "description": "The names of the collections available for restore.",
                                "items": {
                                  "type": "string",
                                  "description": "The name of the collection."
                                }
                              }
                            }
                          }
                        },
                        "gremlinDatabasesToRestore": {
                          "type": "array",
                          "description": "List of specific gremlin databases available for restore.",
                          "items": {
                            "type": "object",
                            "description": "Specific Gremlin Databases to restore.",
                            "properties": {
                              "databaseName": {
                                "type": "string",
                                "description": "The name of the gremlin database available for restore."
                              },
                              "graphNames": {
                                "type": "array",
                                "description": "The names of the graphs available for restore.",
                                "items": {
                                  "type": "string",
                                  "description": "The name of the graph."
                                }
                              }
                            }
                          }
                        },
                        "tablesToRestore": {
                          "type": "array",
                          "description": "List of specific tables available for restore.",
                          "items": {
                            "type": "string",
                            "description": "The name of the table."
                          }
                        }
                      }
                    },
                    "backupPolicy": {
                      "description": "The object representing the policy for taking backups on an account.",
                      "type": "object",
                      "discriminator": "type",
                      "properties": {
                        "type": {
                          "description": "Describes the mode of backups.",
                          "type": "string",
                          "enum": [
                            "Periodic",
                            "Continuous"
                          ],
                          "x-ms-enum": {
                            "modelAsString": true,
                            "name": "BackupPolicyType"
                          }
                        },
                        "migrationState": {
                          "description": "The object representing the state of the migration between the backup policies.",
                          "type": "object",
                          "properties": {
                            "status": {
                              "description": "Describes the status of migration between backup policy types.",
                              "type": "string",
                              "enum": [
                                "Invalid",
                                "InProgress",
                                "Completed",
                                "Failed"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "BackupPolicyMigrationStatus"
                              }
                            },
                            "targetType": {
                              "description": "Describes the target backup policy type of the backup policy migration.",
                              "type": "string",
                              "enum": [
                                "Periodic",
                                "Continuous"
                              ],
                              "x-ms-enum": {
                                "modelAsString": true,
                                "name": "BackupPolicyType"
                              }
                            },
                            "startTime": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time at which the backup policy migration started (ISO-8601 format)."
                            }
                          }
                        }
                      },
                      "required": [
                        "type"
                      ]
                    },
                    "cors": {
                      "type": "array",
                      "description": "The CORS policy for the Cosmos DB database account.",
                      "items": {
                        "type": "object",
                        "description": "The CORS policy for the Cosmos DB database account.",
                        "properties": {
                          "allowedOrigins": {
                            "description": "The origin domains that are permitted to make a request against the service via CORS.",
                            "type": "string"
                          },
                          "allowedMethods": {
                            "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                            "type": "string"
                          },
                          "allowedHeaders": {
                            "description": "The request headers that the origin domain may specify on the CORS request.",
                            "type": "string"
                          },
                          "exposedHeaders": {
                            "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                            "type": "string"
                          },
                          "maxAgeInSeconds": {
                            "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                            "type": "integer",
                            "minimum": 1,
                            "maximum": 2147483647,
                            "format": "int64"
                          }
                        },
                        "required": [
                          "allowedOrigins"
                        ]
                      }
                    },
                    "networkAclBypass": {
                      "description": "Indicates what services are allowed to bypass firewall checks.",
                      "type": "string",
                      "enum": [
                        "None",
                        "AzureServices"
                      ],
                      "x-ms-enum": {
                        "name": "NetworkAclBypass",
                        "modelAsString": false
                      }
                    },
                    "networkAclBypassResourceIds": {
                      "type": "array",
                      "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
                      "items": {
                        "type": "string",
                        "format": "arm-id"
                      }
                    },
                    "disableLocalAuth": {
                      "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
                      "type": "boolean"
                    },
                    "capacity": {
                      "description": "The object that represents all properties related to capacity enforcement on an account.",
                      "type": "object",
                      "properties": {
                        "totalThroughputLimit": {
                          "type": "integer",
                          "minimum": -1,
                          "format": "int32",
                          "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
                        }
                      }
                    },
                    "keysMetadata": {
                      "description": "The object that represents the metadata for the Account Keys of the Cosmos DB account.",
                      "type": "object",
                      "readOnly": true,
                      "properties": {
                        "primaryMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "secondaryMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "primaryReadonlyMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        },
                        "secondaryReadonlyMasterKey": {
                          "readOnly": true,
                          "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
                          "type": "object",
                          "properties": {
                            "generationTime": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                            }
                          }
                        }
                      }
                    },
                    "enablePartitionMerge": {
                      "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
                      "type": "boolean"
                    },
                    "minimalTlsVersion": {
                      "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
                      "type": "string",
                      "enum": [
                        "Tls",
                        "Tls11",
                        "Tls12"
                      ],
                      "x-ms-enum": {
                        "name": "MinimalTlsVersion",
                        "modelAsString": true
                      }
                    },
                    "enableBurstCapacity": {
                      "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
                      "type": "boolean"
                    },
                    "customerManagedKeyStatus": {
                      "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
                      "type": "string"
                    },
                    "enablePerRegionPerPartitionAutoscale": {
                      "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
                      "type": "boolean"
                    }
                  }
                },
                "systemData": {
                  "readOnly": true,
                  "description": "The system meta data relating to this resource.",
                  "type": "object",
                  "properties": {
                    "createdBy": {
                      "type": "string",
                      "description": "The identity that created the resource."
                    },
                    "createdByType": {
                      "type": "string",
                      "description": "The type of identity that created the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "createdAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource creation (UTC)."
                    },
                    "lastModifiedBy": {
                      "type": "string",
                      "description": "The identity that last modified the resource."
                    },
                    "lastModifiedByType": {
                      "type": "string",
                      "description": "The type of identity that last modified the resource.",
                      "enum": [
                        "User",
                        "Application",
                        "ManagedIdentity",
                        "Key"
                      ],
                      "x-ms-enum": {
                        "name": "createdByType",
                        "modelAsString": true
                      }
                    },
                    "lastModifiedAt": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The timestamp of resource last modification (UTC)"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DatabaseAccounts_Delete",
        "description": "Deletes an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The database account delete operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The specified account does not exist in the subscription."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/failoverPriorityChange": {
      "post": {
        "operationId": "DatabaseAccounts_FailoverPriorityChange",
        "description": "Changes the failover priority for the Azure Cosmos DB database account. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "failoverParameters",
            "in": "body",
            "required": true,
            "schema": {
              "properties": {
                "failoverPolicies": {
                  "type": "array",
                  "description": "List of failover policies.",
                  "items": {
                    "type": "object",
                    "description": "The failover policy for a given region of a database account.",
                    "properties": {
                      "id": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                      },
                      "locationName": {
                        "type": "string",
                        "description": "The name of the region in which the database account exists."
                      },
                      "failoverPriority": {
                        "type": "integer",
                        "minimum": 0,
                        "format": "int32",
                        "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
                      }
                    }
                  }
                }
              },
              "required": [
                "failoverPolicies"
              ],
              "description": "The list of new failover policies for the failover priority change."
            },
            "description": "The new failover policies for the database account."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The failover policy change operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/databaseAccounts": {
      "get": {
        "operationId": "DatabaseAccounts_List",
        "description": "Lists all the Azure Cosmos DB database accounts available under the subscription.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB database account.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "kind": {
                        "description": "Indicates the type of database account. This can only be set at database account creation.",
                        "type": "string",
                        "default": "GlobalDocumentDB",
                        "enum": [
                          "GlobalDocumentDB",
                          "MongoDB",
                          "Parse"
                        ],
                        "x-ms-enum": {
                          "name": "DatabaseAccountKind",
                          "modelAsString": true
                        }
                      },
                      "identity": {
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The principal id of user assigned identity."
                                },
                                "clientId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The client id of user assigned identity."
                                }
                              }
                            },
                            "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                          }
                        },
                        "description": "Identity for the resource."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties for the database account.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                          },
                          "documentEndpoint": {
                            "description": "The connection endpoint for the Cosmos DB database account.",
                            "type": "string",
                            "readOnly": true
                          },
                          "databaseAccountOfferType": {
                            "description": "The offer type for the Cosmos DB database account. Default value: Standard.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Standard"
                            ],
                            "x-ms-enum": {
                              "name": "DatabaseAccountOfferType",
                              "modelAsString": false
                            }
                          },
                          "ipRules": {
                            "description": "List of IpRules.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "IpAddressOrRange object",
                              "properties": {
                                "ipAddressOrRange": {
                                  "type": "string",
                                  "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
                                }
                              }
                            }
                          },
                          "isVirtualNetworkFilterEnabled": {
                            "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
                            "type": "boolean"
                          },
                          "enableAutomaticFailover": {
                            "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
                            "type": "boolean"
                          },
                          "consistencyPolicy": {
                            "description": "The consistency policy for the Cosmos DB database account.",
                            "type": "object",
                            "properties": {
                              "defaultConsistencyLevel": {
                                "description": "The default consistency level and configuration settings of the Cosmos DB account.",
                                "type": "string",
                                "enum": [
                                  "Eventual",
                                  "Session",
                                  "BoundedStaleness",
                                  "Strong",
                                  "ConsistentPrefix"
                                ],
                                "x-ms-enum": {
                                  "name": "DefaultConsistencyLevel",
                                  "modelAsString": false
                                }
                              },
                              "maxStalenessPrefix": {
                                "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 2147483647,
                                "format": "int64"
                              },
                              "maxIntervalInSeconds": {
                                "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                                "type": "integer",
                                "minimum": 5,
                                "maximum": 86400,
                                "format": "int32"
                              }
                            },
                            "required": [
                              "defaultConsistencyLevel"
                            ]
                          },
                          "capabilities": {
                            "type": "array",
                            "description": "List of Cosmos DB capabilities for the account",
                            "items": {
                              "type": "object",
                              "description": "Cosmos DB capability object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
                                }
                              }
                            }
                          },
                          "writeLocations": {
                            "type": "array",
                            "readOnly": true,
                            "description": "An array that contains the write location for the Cosmos DB account.",
                            "items": {
                              "description": "A region in which the Azure Cosmos DB database account is deployed.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                                },
                                "locationName": {
                                  "type": "string",
                                  "description": "The name of the region."
                                },
                                "documentEndpoint": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                                },
                                "provisioningState": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                                },
                                "failoverPriority": {
                                  "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "isZoneRedundant": {
                                  "type": "boolean",
                                  "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                                }
                              }
                            }
                          },
                          "readLocations": {
                            "type": "array",
                            "readOnly": true,
                            "description": "An array that contains of the read locations enabled for the Cosmos DB account.",
                            "items": {
                              "description": "A region in which the Azure Cosmos DB database account is deployed.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                                },
                                "locationName": {
                                  "type": "string",
                                  "description": "The name of the region."
                                },
                                "documentEndpoint": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                                },
                                "provisioningState": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                                },
                                "failoverPriority": {
                                  "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "isZoneRedundant": {
                                  "type": "boolean",
                                  "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                                }
                              }
                            }
                          },
                          "locations": {
                            "type": "array",
                            "readOnly": true,
                            "description": "An array that contains all of the locations enabled for the Cosmos DB account.",
                            "items": {
                              "description": "A region in which the Azure Cosmos DB database account is deployed.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                                },
                                "locationName": {
                                  "type": "string",
                                  "description": "The name of the region."
                                },
                                "documentEndpoint": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                                },
                                "provisioningState": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                                },
                                "failoverPriority": {
                                  "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "isZoneRedundant": {
                                  "type": "boolean",
                                  "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                                }
                              }
                            }
                          },
                          "failoverPolicies": {
                            "type": "array",
                            "readOnly": true,
                            "description": "An array that contains the regions ordered by their failover priorities.",
                            "items": {
                              "type": "object",
                              "description": "The failover policy for a given region of a database account.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                                },
                                "locationName": {
                                  "type": "string",
                                  "description": "The name of the region in which the database account exists."
                                },
                                "failoverPriority": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "format": "int32",
                                  "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
                                }
                              }
                            }
                          },
                          "virtualNetworkRules": {
                            "type": "array",
                            "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
                            "items": {
                              "type": "object",
                              "description": "Virtual Network ACL Rule object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.Network/virtualNetworks/subnets"
                                      }
                                    ]
                                  },
                                  "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
                                },
                                "ignoreMissingVNetServiceEndpoint": {
                                  "type": "boolean",
                                  "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
                                }
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "readOnly": true,
                            "description": "List of Private Endpoint Connections configured for the Cosmos DB account.",
                            "items": {
                              "description": "A private endpoint connection",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "Private endpoint which the connection belongs to.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Resource id of the private endpoint."
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Connection State of the Private Endpoint Connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "The private link service connection status."
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The private link service connection description."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "groupId": {
                                      "type": "string",
                                      "description": "Group id of the private endpoint."
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "Provisioning state of the private endpoint."
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "enableMultipleWriteLocations": {
                            "description": "Enables the account to write in multiple locations",
                            "type": "boolean"
                          },
                          "enableCassandraConnector": {
                            "description": "Enables the cassandra connector on the Cosmos DB C* account",
                            "type": "boolean"
                          },
                          "connectorOffer": {
                            "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
                            "type": "string",
                            "enum": [
                              "Small"
                            ],
                            "x-ms-enum": {
                              "name": "ConnectorOffer",
                              "modelAsString": true
                            }
                          },
                          "disableKeyBasedMetadataWriteAccess": {
                            "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
                            "type": "boolean"
                          },
                          "keyVaultKeyUri": {
                            "description": "The URI of the key vault",
                            "type": "string"
                          },
                          "defaultIdentity": {
                            "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
                            "type": "string"
                          },
                          "publicNetworkAccess": {
                            "description": "Whether requests from Public Network are allowed",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled",
                              "SecuredByPerimeter"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PublicNetworkAccess"
                            }
                          },
                          "enableFreeTier": {
                            "description": "Flag to indicate whether Free Tier is enabled.",
                            "type": "boolean"
                          },
                          "apiProperties": {
                            "description": "API specific properties.",
                            "type": "object",
                            "properties": {
                              "serverVersion": {
                                "type": "string",
                                "enum": [
                                  "3.2",
                                  "3.6",
                                  "4.0",
                                  "4.2",
                                  "5.0",
                                  "6.0",
                                  "7.0"
                                ],
                                "description": "Describes the version of the MongoDB account.",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ServerVersion"
                                }
                              }
                            }
                          },
                          "enableAnalyticalStorage": {
                            "description": "Flag to indicate whether to enable storage analytics.",
                            "type": "boolean"
                          },
                          "analyticalStorageConfiguration": {
                            "description": "Analytical storage specific properties.",
                            "type": "object",
                            "properties": {
                              "schemaType": {
                                "type": "string",
                                "description": "Describes the types of schema for analytical storage.",
                                "enum": [
                                  "WellDefined",
                                  "FullFidelity"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "AnalyticalStorageSchemaType"
                                }
                              }
                            }
                          },
                          "instanceId": {
                            "description": "A unique identifier assigned to the database account",
                            "type": "string",
                            "readOnly": true
                          },
                          "createMode": {
                            "description": "Enum to indicate the mode of account creation.",
                            "type": "string",
                            "default": "Default",
                            "enum": [
                              "Default",
                              "Restore"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true
                            }
                          },
                          "restoreParameters": {
                            "description": "Parameters to indicate the information about the restore.",
                            "type": "object",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "properties": {
                              "restoreSource": {
                                "type": "string",
                                "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                              },
                              "restoreTimestampInUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time to which the account has to be restored (ISO-8601 format)."
                              },
                              "restoreWithTtlDisabled": {
                                "type": "boolean",
                                "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                              },
                              "restoreMode": {
                                "type": "string",
                                "enum": [
                                  "PointInTime"
                                ],
                                "description": "Describes the mode of the restore.",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "RestoreMode"
                                }
                              },
                              "databasesToRestore": {
                                "type": "array",
                                "description": "List of specific databases available for restore.",
                                "items": {
                                  "type": "object",
                                  "description": "Specific Databases to restore.",
                                  "properties": {
                                    "databaseName": {
                                      "type": "string",
                                      "description": "The name of the database available for restore."
                                    },
                                    "collectionNames": {
                                      "type": "array",
                                      "description": "The names of the collections available for restore.",
                                      "items": {
                                        "type": "string",
                                        "description": "The name of the collection."
                                      }
                                    }
                                  }
                                }
                              },
                              "gremlinDatabasesToRestore": {
                                "type": "array",
                                "description": "List of specific gremlin databases available for restore.",
                                "items": {
                                  "type": "object",
                                  "description": "Specific Gremlin Databases to restore.",
                                  "properties": {
                                    "databaseName": {
                                      "type": "string",
                                      "description": "The name of the gremlin database available for restore."
                                    },
                                    "graphNames": {
                                      "type": "array",
                                      "description": "The names of the graphs available for restore.",
                                      "items": {
                                        "type": "string",
                                        "description": "The name of the graph."
                                      }
                                    }
                                  }
                                }
                              },
                              "tablesToRestore": {
                                "type": "array",
                                "description": "List of specific tables available for restore.",
                                "items": {
                                  "type": "string",
                                  "description": "The name of the table."
                                }
                              }
                            }
                          },
                          "backupPolicy": {
                            "description": "The object representing the policy for taking backups on an account.",
                            "type": "object",
                            "discriminator": "type",
                            "properties": {
                              "type": {
                                "description": "Describes the mode of backups.",
                                "type": "string",
                                "enum": [
                                  "Periodic",
                                  "Continuous"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "BackupPolicyType"
                                }
                              },
                              "migrationState": {
                                "description": "The object representing the state of the migration between the backup policies.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Describes the status of migration between backup policy types.",
                                    "type": "string",
                                    "enum": [
                                      "Invalid",
                                      "InProgress",
                                      "Completed",
                                      "Failed"
                                    ],
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "BackupPolicyMigrationStatus"
                                    }
                                  },
                                  "targetType": {
                                    "description": "Describes the target backup policy type of the backup policy migration.",
                                    "type": "string",
                                    "enum": [
                                      "Periodic",
                                      "Continuous"
                                    ],
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "BackupPolicyType"
                                    }
                                  },
                                  "startTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time at which the backup policy migration started (ISO-8601 format)."
                                  }
                                }
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "cors": {
                            "type": "array",
                            "description": "The CORS policy for the Cosmos DB database account.",
                            "items": {
                              "type": "object",
                              "description": "The CORS policy for the Cosmos DB database account.",
                              "properties": {
                                "allowedOrigins": {
                                  "description": "The origin domains that are permitted to make a request against the service via CORS.",
                                  "type": "string"
                                },
                                "allowedMethods": {
                                  "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                                  "type": "string"
                                },
                                "allowedHeaders": {
                                  "description": "The request headers that the origin domain may specify on the CORS request.",
                                  "type": "string"
                                },
                                "exposedHeaders": {
                                  "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                                  "type": "string"
                                },
                                "maxAgeInSeconds": {
                                  "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 2147483647,
                                  "format": "int64"
                                }
                              },
                              "required": [
                                "allowedOrigins"
                              ]
                            }
                          },
                          "networkAclBypass": {
                            "description": "Indicates what services are allowed to bypass firewall checks.",
                            "type": "string",
                            "enum": [
                              "None",
                              "AzureServices"
                            ],
                            "x-ms-enum": {
                              "name": "NetworkAclBypass",
                              "modelAsString": false
                            }
                          },
                          "networkAclBypassResourceIds": {
                            "type": "array",
                            "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
                            "items": {
                              "type": "string",
                              "format": "arm-id"
                            }
                          },
                          "disableLocalAuth": {
                            "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
                            "type": "boolean"
                          },
                          "capacity": {
                            "description": "The object that represents all properties related to capacity enforcement on an account.",
                            "type": "object",
                            "properties": {
                              "totalThroughputLimit": {
                                "type": "integer",
                                "minimum": -1,
                                "format": "int32",
                                "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
                              }
                            }
                          },
                          "keysMetadata": {
                            "description": "The object that represents the metadata for the Account Keys of the Cosmos DB account.",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "primaryMasterKey": {
                                "readOnly": true,
                                "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
                                "type": "object",
                                "properties": {
                                  "generationTime": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                                  }
                                }
                              },
                              "secondaryMasterKey": {
                                "readOnly": true,
                                "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
                                "type": "object",
                                "properties": {
                                  "generationTime": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                                  }
                                }
                              },
                              "primaryReadonlyMasterKey": {
                                "readOnly": true,
                                "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
                                "type": "object",
                                "properties": {
                                  "generationTime": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                                  }
                                }
                              },
                              "secondaryReadonlyMasterKey": {
                                "readOnly": true,
                                "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
                                "type": "object",
                                "properties": {
                                  "generationTime": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                                  }
                                }
                              }
                            }
                          },
                          "enablePartitionMerge": {
                            "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
                            "type": "boolean"
                          },
                          "minimalTlsVersion": {
                            "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
                            "type": "string",
                            "enum": [
                              "Tls",
                              "Tls11",
                              "Tls12"
                            ],
                            "x-ms-enum": {
                              "name": "MinimalTlsVersion",
                              "modelAsString": true
                            }
                          },
                          "enableBurstCapacity": {
                            "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
                            "type": "boolean"
                          },
                          "customerManagedKeyStatus": {
                            "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
                            "type": "string"
                          },
                          "enablePerRegionPerPartitionAutoscale": {
                            "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
                            "type": "boolean"
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  },
                  "description": "List of database account and their properties."
                }
              },
              "description": "The List operation response, that contains the database accounts and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts": {
      "get": {
        "operationId": "DatabaseAccounts_ListByResourceGroup",
        "description": "Lists all the Azure Cosmos DB database accounts available under the given resource group.",
        "parameters": [
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB database account.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "kind": {
                        "description": "Indicates the type of database account. This can only be set at database account creation.",
                        "type": "string",
                        "default": "GlobalDocumentDB",
                        "enum": [
                          "GlobalDocumentDB",
                          "MongoDB",
                          "Parse"
                        ],
                        "x-ms-enum": {
                          "name": "DatabaseAccountKind",
                          "modelAsString": true
                        }
                      },
                      "identity": {
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                            "enum": [
                              "SystemAssigned",
                              "UserAssigned",
                              "SystemAssigned,UserAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "ResourceIdentityType",
                              "modelAsString": false
                            }
                          },
                          "userAssignedIdentities": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "object",
                              "properties": {
                                "principalId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The principal id of user assigned identity."
                                },
                                "clientId": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The client id of user assigned identity."
                                }
                              }
                            },
                            "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                          }
                        },
                        "description": "Identity for the resource."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties for the database account.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                          },
                          "documentEndpoint": {
                            "description": "The connection endpoint for the Cosmos DB database account.",
                            "type": "string",
                            "readOnly": true
                          },
                          "databaseAccountOfferType": {
                            "description": "The offer type for the Cosmos DB database account. Default value: Standard.",
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Standard"
                            ],
                            "x-ms-enum": {
                              "name": "DatabaseAccountOfferType",
                              "modelAsString": false
                            }
                          },
                          "ipRules": {
                            "description": "List of IpRules.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "IpAddressOrRange object",
                              "properties": {
                                "ipAddressOrRange": {
                                  "type": "string",
                                  "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
                                }
                              }
                            }
                          },
                          "isVirtualNetworkFilterEnabled": {
                            "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
                            "type": "boolean"
                          },
                          "enableAutomaticFailover": {
                            "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
                            "type": "boolean"
                          },
                          "consistencyPolicy": {
                            "description": "The consistency policy for the Cosmos DB database account.",
                            "type": "object",
                            "properties": {
                              "defaultConsistencyLevel": {
                                "description": "The default consistency level and configuration settings of the Cosmos DB account.",
                                "type": "string",
                                "enum": [
                                  "Eventual",
                                  "Session",
                                  "BoundedStaleness",
                                  "Strong",
                                  "ConsistentPrefix"
                                ],
                                "x-ms-enum": {
                                  "name": "DefaultConsistencyLevel",
                                  "modelAsString": false
                                }
                              },
                              "maxStalenessPrefix": {
                                "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 2147483647,
                                "format": "int64"
                              },
                              "maxIntervalInSeconds": {
                                "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                                "type": "integer",
                                "minimum": 5,
                                "maximum": 86400,
                                "format": "int32"
                              }
                            },
                            "required": [
                              "defaultConsistencyLevel"
                            ]
                          },
                          "capabilities": {
                            "type": "array",
                            "description": "List of Cosmos DB capabilities for the account",
                            "items": {
                              "type": "object",
                              "description": "Cosmos DB capability object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
                                }
                              }
                            }
                          },
                          "writeLocations": {
                            "type": "array",
                            "readOnly": true,
                            "description": "An array that contains the write location for the Cosmos DB account.",
                            "items": {
                              "description": "A region in which the Azure Cosmos DB database account is deployed.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                                },
                                "locationName": {
                                  "type": "string",
                                  "description": "The name of the region."
                                },
                                "documentEndpoint": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                                },
                                "provisioningState": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                                },
                                "failoverPriority": {
                                  "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "isZoneRedundant": {
                                  "type": "boolean",
                                  "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                                }
                              }
                            }
                          },
                          "readLocations": {
                            "type": "array",
                            "readOnly": true,
                            "description": "An array that contains of the read locations enabled for the Cosmos DB account.",
                            "items": {
                              "description": "A region in which the Azure Cosmos DB database account is deployed.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                                },
                                "locationName": {
                                  "type": "string",
                                  "description": "The name of the region."
                                },
                                "documentEndpoint": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                                },
                                "provisioningState": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                                },
                                "failoverPriority": {
                                  "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "isZoneRedundant": {
                                  "type": "boolean",
                                  "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                                }
                              }
                            }
                          },
                          "locations": {
                            "type": "array",
                            "readOnly": true,
                            "description": "An array that contains all of the locations enabled for the Cosmos DB account.",
                            "items": {
                              "description": "A region in which the Azure Cosmos DB database account is deployed.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                                },
                                "locationName": {
                                  "type": "string",
                                  "description": "The name of the region."
                                },
                                "documentEndpoint": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                                },
                                "provisioningState": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                                },
                                "failoverPriority": {
                                  "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                                  "format": "int32",
                                  "type": "integer",
                                  "minimum": 0
                                },
                                "isZoneRedundant": {
                                  "type": "boolean",
                                  "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                                }
                              }
                            }
                          },
                          "failoverPolicies": {
                            "type": "array",
                            "readOnly": true,
                            "description": "An array that contains the regions ordered by their failover priorities.",
                            "items": {
                              "type": "object",
                              "description": "The failover policy for a given region of a database account.",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                                },
                                "locationName": {
                                  "type": "string",
                                  "description": "The name of the region in which the database account exists."
                                },
                                "failoverPriority": {
                                  "type": "integer",
                                  "minimum": 0,
                                  "format": "int32",
                                  "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
                                }
                              }
                            }
                          },
                          "virtualNetworkRules": {
                            "type": "array",
                            "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
                            "items": {
                              "type": "object",
                              "description": "Virtual Network ACL Rule object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "format": "arm-id",
                                  "x-ms-arm-id-details": {
                                    "allowedResources": [
                                      {
                                        "type": "Microsoft.Network/virtualNetworks/subnets"
                                      }
                                    ]
                                  },
                                  "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
                                },
                                "ignoreMissingVNetServiceEndpoint": {
                                  "type": "boolean",
                                  "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
                                }
                              }
                            }
                          },
                          "privateEndpointConnections": {
                            "type": "array",
                            "readOnly": true,
                            "description": "List of Private Endpoint Connections configured for the Cosmos DB account.",
                            "items": {
                              "description": "A private endpoint connection",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                                },
                                "name": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The name of the resource"
                                },
                                "type": {
                                  "readOnly": true,
                                  "type": "string",
                                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                                },
                                "properties": {
                                  "description": "Resource properties.",
                                  "x-ms-client-flatten": true,
                                  "type": "object",
                                  "properties": {
                                    "privateEndpoint": {
                                      "description": "Private endpoint which the connection belongs to.",
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "Resource id of the private endpoint."
                                        }
                                      }
                                    },
                                    "privateLinkServiceConnectionState": {
                                      "description": "Connection State of the Private Endpoint Connection.",
                                      "type": "object",
                                      "properties": {
                                        "status": {
                                          "type": "string",
                                          "description": "The private link service connection status."
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The private link service connection description."
                                        },
                                        "actionsRequired": {
                                          "type": "string",
                                          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                          "readOnly": true
                                        }
                                      }
                                    },
                                    "groupId": {
                                      "type": "string",
                                      "description": "Group id of the private endpoint."
                                    },
                                    "provisioningState": {
                                      "type": "string",
                                      "description": "Provisioning state of the private endpoint."
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "enableMultipleWriteLocations": {
                            "description": "Enables the account to write in multiple locations",
                            "type": "boolean"
                          },
                          "enableCassandraConnector": {
                            "description": "Enables the cassandra connector on the Cosmos DB C* account",
                            "type": "boolean"
                          },
                          "connectorOffer": {
                            "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
                            "type": "string",
                            "enum": [
                              "Small"
                            ],
                            "x-ms-enum": {
                              "name": "ConnectorOffer",
                              "modelAsString": true
                            }
                          },
                          "disableKeyBasedMetadataWriteAccess": {
                            "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
                            "type": "boolean"
                          },
                          "keyVaultKeyUri": {
                            "description": "The URI of the key vault",
                            "type": "string"
                          },
                          "defaultIdentity": {
                            "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
                            "type": "string"
                          },
                          "publicNetworkAccess": {
                            "description": "Whether requests from Public Network are allowed",
                            "type": "string",
                            "enum": [
                              "Enabled",
                              "Disabled",
                              "SecuredByPerimeter"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "PublicNetworkAccess"
                            }
                          },
                          "enableFreeTier": {
                            "description": "Flag to indicate whether Free Tier is enabled.",
                            "type": "boolean"
                          },
                          "apiProperties": {
                            "description": "API specific properties.",
                            "type": "object",
                            "properties": {
                              "serverVersion": {
                                "type": "string",
                                "enum": [
                                  "3.2",
                                  "3.6",
                                  "4.0",
                                  "4.2",
                                  "5.0",
                                  "6.0",
                                  "7.0"
                                ],
                                "description": "Describes the version of the MongoDB account.",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "ServerVersion"
                                }
                              }
                            }
                          },
                          "enableAnalyticalStorage": {
                            "description": "Flag to indicate whether to enable storage analytics.",
                            "type": "boolean"
                          },
                          "analyticalStorageConfiguration": {
                            "description": "Analytical storage specific properties.",
                            "type": "object",
                            "properties": {
                              "schemaType": {
                                "type": "string",
                                "description": "Describes the types of schema for analytical storage.",
                                "enum": [
                                  "WellDefined",
                                  "FullFidelity"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "AnalyticalStorageSchemaType"
                                }
                              }
                            }
                          },
                          "instanceId": {
                            "description": "A unique identifier assigned to the database account",
                            "type": "string",
                            "readOnly": true
                          },
                          "createMode": {
                            "description": "Enum to indicate the mode of account creation.",
                            "type": "string",
                            "default": "Default",
                            "enum": [
                              "Default",
                              "Restore"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true
                            }
                          },
                          "restoreParameters": {
                            "description": "Parameters to indicate the information about the restore.",
                            "type": "object",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "properties": {
                              "restoreSource": {
                                "type": "string",
                                "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                              },
                              "restoreTimestampInUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time to which the account has to be restored (ISO-8601 format)."
                              },
                              "restoreWithTtlDisabled": {
                                "type": "boolean",
                                "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                              },
                              "restoreMode": {
                                "type": "string",
                                "enum": [
                                  "PointInTime"
                                ],
                                "description": "Describes the mode of the restore.",
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "RestoreMode"
                                }
                              },
                              "databasesToRestore": {
                                "type": "array",
                                "description": "List of specific databases available for restore.",
                                "items": {
                                  "type": "object",
                                  "description": "Specific Databases to restore.",
                                  "properties": {
                                    "databaseName": {
                                      "type": "string",
                                      "description": "The name of the database available for restore."
                                    },
                                    "collectionNames": {
                                      "type": "array",
                                      "description": "The names of the collections available for restore.",
                                      "items": {
                                        "type": "string",
                                        "description": "The name of the collection."
                                      }
                                    }
                                  }
                                }
                              },
                              "gremlinDatabasesToRestore": {
                                "type": "array",
                                "description": "List of specific gremlin databases available for restore.",
                                "items": {
                                  "type": "object",
                                  "description": "Specific Gremlin Databases to restore.",
                                  "properties": {
                                    "databaseName": {
                                      "type": "string",
                                      "description": "The name of the gremlin database available for restore."
                                    },
                                    "graphNames": {
                                      "type": "array",
                                      "description": "The names of the graphs available for restore.",
                                      "items": {
                                        "type": "string",
                                        "description": "The name of the graph."
                                      }
                                    }
                                  }
                                }
                              },
                              "tablesToRestore": {
                                "type": "array",
                                "description": "List of specific tables available for restore.",
                                "items": {
                                  "type": "string",
                                  "description": "The name of the table."
                                }
                              }
                            }
                          },
                          "backupPolicy": {
                            "description": "The object representing the policy for taking backups on an account.",
                            "type": "object",
                            "discriminator": "type",
                            "properties": {
                              "type": {
                                "description": "Describes the mode of backups.",
                                "type": "string",
                                "enum": [
                                  "Periodic",
                                  "Continuous"
                                ],
                                "x-ms-enum": {
                                  "modelAsString": true,
                                  "name": "BackupPolicyType"
                                }
                              },
                              "migrationState": {
                                "description": "The object representing the state of the migration between the backup policies.",
                                "type": "object",
                                "properties": {
                                  "status": {
                                    "description": "Describes the status of migration between backup policy types.",
                                    "type": "string",
                                    "enum": [
                                      "Invalid",
                                      "InProgress",
                                      "Completed",
                                      "Failed"
                                    ],
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "BackupPolicyMigrationStatus"
                                    }
                                  },
                                  "targetType": {
                                    "description": "Describes the target backup policy type of the backup policy migration.",
                                    "type": "string",
                                    "enum": [
                                      "Periodic",
                                      "Continuous"
                                    ],
                                    "x-ms-enum": {
                                      "modelAsString": true,
                                      "name": "BackupPolicyType"
                                    }
                                  },
                                  "startTime": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time at which the backup policy migration started (ISO-8601 format)."
                                  }
                                }
                              }
                            },
                            "required": [
                              "type"
                            ]
                          },
                          "cors": {
                            "type": "array",
                            "description": "The CORS policy for the Cosmos DB database account.",
                            "items": {
                              "type": "object",
                              "description": "The CORS policy for the Cosmos DB database account.",
                              "properties": {
                                "allowedOrigins": {
                                  "description": "The origin domains that are permitted to make a request against the service via CORS.",
                                  "type": "string"
                                },
                                "allowedMethods": {
                                  "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                                  "type": "string"
                                },
                                "allowedHeaders": {
                                  "description": "The request headers that the origin domain may specify on the CORS request.",
                                  "type": "string"
                                },
                                "exposedHeaders": {
                                  "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                                  "type": "string"
                                },
                                "maxAgeInSeconds": {
                                  "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 2147483647,
                                  "format": "int64"
                                }
                              },
                              "required": [
                                "allowedOrigins"
                              ]
                            }
                          },
                          "networkAclBypass": {
                            "description": "Indicates what services are allowed to bypass firewall checks.",
                            "type": "string",
                            "enum": [
                              "None",
                              "AzureServices"
                            ],
                            "x-ms-enum": {
                              "name": "NetworkAclBypass",
                              "modelAsString": false
                            }
                          },
                          "networkAclBypassResourceIds": {
                            "type": "array",
                            "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
                            "items": {
                              "type": "string",
                              "format": "arm-id"
                            }
                          },
                          "disableLocalAuth": {
                            "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
                            "type": "boolean"
                          },
                          "capacity": {
                            "description": "The object that represents all properties related to capacity enforcement on an account.",
                            "type": "object",
                            "properties": {
                              "totalThroughputLimit": {
                                "type": "integer",
                                "minimum": -1,
                                "format": "int32",
                                "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
                              }
                            }
                          },
                          "keysMetadata": {
                            "description": "The object that represents the metadata for the Account Keys of the Cosmos DB account.",
                            "type": "object",
                            "readOnly": true,
                            "properties": {
                              "primaryMasterKey": {
                                "readOnly": true,
                                "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
                                "type": "object",
                                "properties": {
                                  "generationTime": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                                  }
                                }
                              },
                              "secondaryMasterKey": {
                                "readOnly": true,
                                "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
                                "type": "object",
                                "properties": {
                                  "generationTime": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                                  }
                                }
                              },
                              "primaryReadonlyMasterKey": {
                                "readOnly": true,
                                "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
                                "type": "object",
                                "properties": {
                                  "generationTime": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                                  }
                                }
                              },
                              "secondaryReadonlyMasterKey": {
                                "readOnly": true,
                                "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
                                "type": "object",
                                "properties": {
                                  "generationTime": {
                                    "readOnly": true,
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                                  }
                                }
                              }
                            }
                          },
                          "enablePartitionMerge": {
                            "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
                            "type": "boolean"
                          },
                          "minimalTlsVersion": {
                            "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
                            "type": "string",
                            "enum": [
                              "Tls",
                              "Tls11",
                              "Tls12"
                            ],
                            "x-ms-enum": {
                              "name": "MinimalTlsVersion",
                              "modelAsString": true
                            }
                          },
                          "enableBurstCapacity": {
                            "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
                            "type": "boolean"
                          },
                          "customerManagedKeyStatus": {
                            "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
                            "type": "string"
                          },
                          "enablePerRegionPerPartitionAutoscale": {
                            "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
                            "type": "boolean"
                          }
                        }
                      },
                      "systemData": {
                        "readOnly": true,
                        "description": "The system meta data relating to this resource.",
                        "type": "object",
                        "properties": {
                          "createdBy": {
                            "type": "string",
                            "description": "The identity that created the resource."
                          },
                          "createdByType": {
                            "type": "string",
                            "description": "The type of identity that created the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource creation (UTC)."
                          },
                          "lastModifiedBy": {
                            "type": "string",
                            "description": "The identity that last modified the resource."
                          },
                          "lastModifiedByType": {
                            "type": "string",
                            "description": "The type of identity that last modified the resource.",
                            "enum": [
                              "User",
                              "Application",
                              "ManagedIdentity",
                              "Key"
                            ],
                            "x-ms-enum": {
                              "name": "createdByType",
                              "modelAsString": true
                            }
                          },
                          "lastModifiedAt": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The timestamp of resource last modification (UTC)"
                          }
                        }
                      }
                    }
                  },
                  "description": "List of database account and their properties."
                }
              },
              "description": "The List operation response, that contains the database accounts and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listKeys": {
      "post": {
        "operationId": "DatabaseAccounts_ListKeys",
        "description": "Lists the access keys for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "description": "The access keys for the given database account.",
              "properties": {
                "primaryReadonlyMasterKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Base 64 encoded value of the primary read-only key."
                },
                "secondaryReadonlyMasterKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Base 64 encoded value of the secondary read-only key."
                },
                "primaryMasterKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Base 64 encoded value of the primary read-write key."
                },
                "secondaryMasterKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Base 64 encoded value of the secondary read-write key."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/listConnectionStrings": {
      "post": {
        "operationId": "DatabaseAccounts_ListConnectionStrings",
        "description": "Lists the connection strings for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "description": "The connection strings for the given database account.",
              "properties": {
                "connectionStrings": {
                  "type": "array",
                  "description": "An array that contains the connection strings for the Cosmos DB account.",
                  "items": {
                    "description": "Connection string for the Cosmos DB account",
                    "properties": {
                      "connectionString": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Value of the connection string"
                      },
                      "description": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Description of the connection string"
                      },
                      "keyKind": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Kind of the connection string key",
                        "enum": [
                          "Primary",
                          "Secondary",
                          "PrimaryReadonly",
                          "SecondaryReadonly"
                        ],
                        "x-ms-enum": {
                          "name": "Kind",
                          "modelAsString": true
                        }
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Type of the connection string",
                        "enum": [
                          "Sql",
                          "Table",
                          "MongoDB",
                          "Cassandra",
                          "CassandraConnectorMetadata",
                          "Gremlin",
                          "SqlDedicatedGateway",
                          "GremlinV2",
                          "Undefined"
                        ],
                        "x-ms-enum": {
                          "name": "Type",
                          "modelAsString": true
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/offlineRegion": {
      "post": {
        "operationId": "DatabaseAccounts_OfflineRegion",
        "description": "Offline the specified region for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "regionParameterForOffline",
            "in": "body",
            "required": true,
            "description": "Cosmos DB region to offline for the database account.",
            "schema": {
              "properties": {
                "region": {
                  "type": "string",
                  "description": "Cosmos DB region, with spaces between words and each word capitalized."
                }
              },
              "required": [
                "region"
              ],
              "description": "Cosmos DB region to online or offline."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The offline region operation is completed successfully."
          },
          "202": {
            "description": "Accepted. The offline region operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/onlineRegion": {
      "post": {
        "operationId": "DatabaseAccounts_OnlineRegion",
        "description": "Online the specified region for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "regionParameterForOnline",
            "in": "body",
            "required": true,
            "description": "Cosmos DB region to online for the database account.",
            "schema": {
              "properties": {
                "region": {
                  "type": "string",
                  "description": "Cosmos DB region, with spaces between words and each word capitalized."
                }
              },
              "required": [
                "region"
              ],
              "description": "Cosmos DB region to online or offline."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The online region operation is completed successfully."
          },
          "202": {
            "description": "Accepted. The online region operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/readonlykeys": {
      "get": {
        "operationId": "DatabaseAccounts_GetReadOnlyKeys",
        "description": "Lists the read-only access keys for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "description": "The read-only access keys for the given database account.",
              "properties": {
                "primaryReadonlyMasterKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Base 64 encoded value of the primary read-only key."
                },
                "secondaryReadonlyMasterKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Base 64 encoded value of the secondary read-only key."
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "DatabaseAccounts_ListReadOnlyKeys",
        "description": "Lists the read-only access keys for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "description": "The read-only access keys for the given database account.",
              "properties": {
                "primaryReadonlyMasterKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Base 64 encoded value of the primary read-only key."
                },
                "secondaryReadonlyMasterKey": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Base 64 encoded value of the secondary read-only key."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/regenerateKey": {
      "post": {
        "operationId": "DatabaseAccounts_RegenerateKey",
        "description": "Regenerates an access key for the specified Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "keyToRegenerate",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "description": "Parameters to regenerate the keys within the database account.",
              "properties": {
                "keyKind": {
                  "type": "string",
                  "description": "The access key to regenerate.",
                  "enum": [
                    "primary",
                    "secondary",
                    "primaryReadonly",
                    "secondaryReadonly"
                  ],
                  "x-ms-enum": {
                    "name": "KeyKind",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "keyKind"
              ]
            },
            "description": "The name of the key to regenerate."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted. The regenerate key operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/providers/Microsoft.DocumentDB/databaseAccountNames/{accountName}": {
      "head": {
        "operationId": "DatabaseAccounts_CheckNameExists",
        "x-ms-examples": {
          "CosmosDBDatabaseAccountCheckNameExists": {
            "parameters": {
              "accountName": "ddb1",
              "api-version": "2025-04-15"
            },
            "responses": {
              "200": {},
              "404": {}
            }
          }
        },
        "description": "Checks that the Azure Cosmos DB account name already exists. A valid account name may contain only lowercase letters, numbers, and the '-' character, and must be between 3 and 50 characters.",
        "parameters": [
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK. The account name is valid but is already in use."
          },
          "404": {
            "description": "Not Found. The account name is available and valid."
          }
        }
      }
    },
    "/providers/Microsoft.DocumentDB/operations": {
      "get": {
        "tags": [
          "Operations"
        ],
        "description": "Lists all of the available Cosmos DB Resource Provider operations.",
        "operationId": "Operations_List",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "description": "Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.",
              "properties": {
                "value": {
                  "type": "array",
                  "items": {
                    "description": "REST API operation",
                    "type": "object",
                    "properties": {
                      "name": {
                        "description": "Operation name: {provider}/{resource}/{operation}",
                        "type": "string"
                      },
                      "display": {
                        "description": "The object that represents the operation.",
                        "type": "object",
                        "properties": {
                          "Provider": {
                            "description": "Service provider: Microsoft.ResourceProvider",
                            "type": "string"
                          },
                          "Resource": {
                            "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
                            "type": "string"
                          },
                          "Operation": {
                            "description": "Operation type: Read, write, delete, etc.",
                            "type": "string"
                          },
                          "Description": {
                            "description": "Description of operation",
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "description": "List of operations supported by the Resource Provider."
                },
                "nextLink": {
                  "type": "string",
                  "description": "URL to get the next set of operation list results if there are any."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/metrics": {
      "get": {
        "operationId": "DatabaseAccounts_ListMetrics",
        "description": "Retrieves the metrics determined by the given filter for the given database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq."
          }
        ],
        "responses": {
          "200": {
            "description": "The metrics for the database account were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "startTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time for the metric (ISO-8601 format)."
                      },
                      "endTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time for the metric (ISO-8601 format)."
                      },
                      "timeGrain": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The time grain to be used to summarize the metric values."
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "metricValues": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "properties": {
                            "_count": {
                              "readOnly": true,
                              "type": "number",
                              "format": "int32",
                              "description": "The number of values for the metric."
                            },
                            "average": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The average value of the metric."
                            },
                            "maximum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The max value of the metric."
                            },
                            "minimum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The min value of the metric."
                            },
                            "timestamp": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "The metric timestamp (ISO-8601 format)."
                            },
                            "total": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The total value of the metric."
                            }
                          },
                          "description": "Represents metrics values."
                        },
                        "description": "The metric values for the specified time window and timestep."
                      }
                    },
                    "description": "Metric data"
                  },
                  "description": "The list of metrics for the account."
                }
              },
              "description": "The response to a list metrics request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/metrics": {
      "get": {
        "operationId": "Database_ListMetrics",
        "description": "Retrieves the metrics determined by the given filter for the given database account and database.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database rid."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq."
          }
        ],
        "responses": {
          "200": {
            "description": "The metrics for the database account were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "startTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time for the metric (ISO-8601 format)."
                      },
                      "endTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time for the metric (ISO-8601 format)."
                      },
                      "timeGrain": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The time grain to be used to summarize the metric values."
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "metricValues": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "properties": {
                            "_count": {
                              "readOnly": true,
                              "type": "number",
                              "format": "int32",
                              "description": "The number of values for the metric."
                            },
                            "average": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The average value of the metric."
                            },
                            "maximum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The max value of the metric."
                            },
                            "minimum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The min value of the metric."
                            },
                            "timestamp": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "The metric timestamp (ISO-8601 format)."
                            },
                            "total": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The total value of the metric."
                            }
                          },
                          "description": "Represents metrics values."
                        },
                        "description": "The metric values for the specified time window and timestep."
                      }
                    },
                    "description": "Metric data"
                  },
                  "description": "The list of metrics for the account."
                }
              },
              "description": "The response to a list metrics request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/metrics": {
      "get": {
        "operationId": "Collection_ListMetrics",
        "description": "Retrieves the metrics determined by the given filter for the given database account and collection.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database rid."
          },
          {
            "name": "collectionRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection rid."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq."
          }
        ],
        "responses": {
          "200": {
            "description": "The metrics for the database account were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "startTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time for the metric (ISO-8601 format)."
                      },
                      "endTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time for the metric (ISO-8601 format)."
                      },
                      "timeGrain": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The time grain to be used to summarize the metric values."
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "metricValues": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "properties": {
                            "_count": {
                              "readOnly": true,
                              "type": "number",
                              "format": "int32",
                              "description": "The number of values for the metric."
                            },
                            "average": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The average value of the metric."
                            },
                            "maximum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The max value of the metric."
                            },
                            "minimum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The min value of the metric."
                            },
                            "timestamp": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "The metric timestamp (ISO-8601 format)."
                            },
                            "total": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The total value of the metric."
                            }
                          },
                          "description": "Represents metrics values."
                        },
                        "description": "The metric values for the specified time window and timestep."
                      }
                    },
                    "description": "Metric data"
                  },
                  "description": "The list of metrics for the account."
                }
              },
              "description": "The response to a list metrics request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/metrics": {
      "get": {
        "operationId": "CollectionRegion_ListMetrics",
        "description": "Retrieves the metrics determined by the given filter for the given database account, collection and region.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "region",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "databaseRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database rid."
          },
          {
            "name": "collectionRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection rid."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq."
          }
        ],
        "responses": {
          "200": {
            "description": "The metrics for the database account were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "startTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time for the metric (ISO-8601 format)."
                      },
                      "endTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time for the metric (ISO-8601 format)."
                      },
                      "timeGrain": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The time grain to be used to summarize the metric values."
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "metricValues": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "properties": {
                            "_count": {
                              "readOnly": true,
                              "type": "number",
                              "format": "int32",
                              "description": "The number of values for the metric."
                            },
                            "average": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The average value of the metric."
                            },
                            "maximum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The max value of the metric."
                            },
                            "minimum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The min value of the metric."
                            },
                            "timestamp": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "The metric timestamp (ISO-8601 format)."
                            },
                            "total": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The total value of the metric."
                            }
                          },
                          "description": "Represents metrics values."
                        },
                        "description": "The metric values for the specified time window and timestep."
                      }
                    },
                    "description": "Metric data"
                  },
                  "description": "The list of metrics for the account."
                }
              },
              "description": "The response to a list metrics request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/metrics": {
      "get": {
        "operationId": "DatabaseAccountRegion_ListMetrics",
        "description": "Retrieves the metrics determined by the given filter for the given database account and region.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "region",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq."
          }
        ],
        "responses": {
          "200": {
            "description": "The metrics for the database account were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "startTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time for the metric (ISO-8601 format)."
                      },
                      "endTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time for the metric (ISO-8601 format)."
                      },
                      "timeGrain": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The time grain to be used to summarize the metric values."
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "metricValues": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "properties": {
                            "_count": {
                              "readOnly": true,
                              "type": "number",
                              "format": "int32",
                              "description": "The number of values for the metric."
                            },
                            "average": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The average value of the metric."
                            },
                            "maximum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The max value of the metric."
                            },
                            "minimum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The min value of the metric."
                            },
                            "timestamp": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "The metric timestamp (ISO-8601 format)."
                            },
                            "total": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The total value of the metric."
                            }
                          },
                          "description": "Represents metrics values."
                        },
                        "description": "The metric values for the specified time window and timestep."
                      }
                    },
                    "description": "Metric data"
                  },
                  "description": "The list of metrics for the account."
                }
              },
              "description": "The response to a list metrics request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sourceRegion/{sourceRegion}/targetRegion/{targetRegion}/percentile/metrics": {
      "get": {
        "operationId": "PercentileSourceTarget_ListMetrics",
        "description": "Retrieves the metrics determined by the given filter for the given account, source and target region. This url is only for PBS and Replication Latency data",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "sourceRegion",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Source region from which data is written. Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "targetRegion",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Target region to which data is written. Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq."
          }
        ],
        "responses": {
          "200": {
            "description": "The percentile metrics for the account, source and target regions were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "startTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time for the metric (ISO-8601 format)."
                      },
                      "endTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time for the metric (ISO-8601 format)."
                      },
                      "timeGrain": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The time grain to be used to summarize the metric values."
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "metricValues": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "properties": {
                            "_count": {
                              "readOnly": true,
                              "type": "number",
                              "format": "int32",
                              "description": "The number of values for the metric."
                            },
                            "average": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The average value of the metric."
                            },
                            "maximum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The max value of the metric."
                            },
                            "minimum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The min value of the metric."
                            },
                            "timestamp": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "The metric timestamp (ISO-8601 format)."
                            },
                            "total": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The total value of the metric."
                            },
                            "P10": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 10th percentile value for the metric."
                            },
                            "P25": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 25th percentile value for the metric."
                            },
                            "P50": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 50th percentile value for the metric."
                            },
                            "P75": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 75th percentile value for the metric."
                            },
                            "P90": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 90th percentile value for the metric."
                            },
                            "P95": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 95th percentile value for the metric."
                            },
                            "P99": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 99th percentile value for the metric."
                            }
                          },
                          "description": "Represents percentile metrics values."
                        },
                        "description": "The percentile metric values for the specified time window and timestep."
                      }
                    },
                    "description": "Percentile Metric data"
                  },
                  "description": "The list of percentile metrics for the account."
                }
              },
              "description": "The response to a list percentile metrics request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/targetRegion/{targetRegion}/percentile/metrics": {
      "get": {
        "operationId": "PercentileTarget_ListMetrics",
        "description": "Retrieves the metrics determined by the given filter for the given account target region. This url is only for PBS and Replication Latency data",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "targetRegion",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Target region to which data is written. Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq."
          }
        ],
        "responses": {
          "200": {
            "description": "The percentile metrics for the account and target regions were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "startTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time for the metric (ISO-8601 format)."
                      },
                      "endTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time for the metric (ISO-8601 format)."
                      },
                      "timeGrain": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The time grain to be used to summarize the metric values."
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "metricValues": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "properties": {
                            "_count": {
                              "readOnly": true,
                              "type": "number",
                              "format": "int32",
                              "description": "The number of values for the metric."
                            },
                            "average": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The average value of the metric."
                            },
                            "maximum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The max value of the metric."
                            },
                            "minimum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The min value of the metric."
                            },
                            "timestamp": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "The metric timestamp (ISO-8601 format)."
                            },
                            "total": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The total value of the metric."
                            },
                            "P10": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 10th percentile value for the metric."
                            },
                            "P25": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 25th percentile value for the metric."
                            },
                            "P50": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 50th percentile value for the metric."
                            },
                            "P75": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 75th percentile value for the metric."
                            },
                            "P90": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 90th percentile value for the metric."
                            },
                            "P95": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 95th percentile value for the metric."
                            },
                            "P99": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 99th percentile value for the metric."
                            }
                          },
                          "description": "Represents percentile metrics values."
                        },
                        "description": "The percentile metric values for the specified time window and timestep."
                      }
                    },
                    "description": "Percentile Metric data"
                  },
                  "description": "The list of percentile metrics for the account."
                }
              },
              "description": "The response to a list percentile metrics request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/percentile/metrics": {
      "get": {
        "operationId": "Percentile_ListMetrics",
        "description": "Retrieves the metrics determined by the given filter for the given database account. This url is only for PBS and Replication Latency data",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq."
          }
        ],
        "responses": {
          "200": {
            "description": "The percentile metrics for the account were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "startTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time for the metric (ISO-8601 format)."
                      },
                      "endTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time for the metric (ISO-8601 format)."
                      },
                      "timeGrain": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The time grain to be used to summarize the metric values."
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "metricValues": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "properties": {
                            "_count": {
                              "readOnly": true,
                              "type": "number",
                              "format": "int32",
                              "description": "The number of values for the metric."
                            },
                            "average": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The average value of the metric."
                            },
                            "maximum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The max value of the metric."
                            },
                            "minimum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The min value of the metric."
                            },
                            "timestamp": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "The metric timestamp (ISO-8601 format)."
                            },
                            "total": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The total value of the metric."
                            },
                            "P10": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 10th percentile value for the metric."
                            },
                            "P25": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 25th percentile value for the metric."
                            },
                            "P50": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 50th percentile value for the metric."
                            },
                            "P75": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 75th percentile value for the metric."
                            },
                            "P90": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 90th percentile value for the metric."
                            },
                            "P95": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 95th percentile value for the metric."
                            },
                            "P99": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The 99th percentile value for the metric."
                            }
                          },
                          "description": "Represents percentile metrics values."
                        },
                        "description": "The percentile metric values for the specified time window and timestep."
                      }
                    },
                    "description": "Percentile Metric data"
                  },
                  "description": "The list of percentile metrics for the account."
                }
              },
              "description": "The response to a list percentile metrics request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/partitions/metrics": {
      "get": {
        "operationId": "CollectionPartitionRegion_ListMetrics",
        "description": "Retrieves the metrics determined by the given filter for the given collection and region, split by partition.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "region",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "databaseRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database rid."
          },
          {
            "name": "collectionRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection rid."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq."
          }
        ],
        "responses": {
          "200": {
            "description": "The partition-level metrics for the collection and region were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "startTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time for the metric (ISO-8601 format)."
                      },
                      "endTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time for the metric (ISO-8601 format)."
                      },
                      "timeGrain": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The time grain to be used to summarize the metric values."
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "metricValues": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "properties": {
                            "_count": {
                              "readOnly": true,
                              "type": "number",
                              "format": "int32",
                              "description": "The number of values for the metric."
                            },
                            "average": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The average value of the metric."
                            },
                            "maximum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The max value of the metric."
                            },
                            "minimum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The min value of the metric."
                            },
                            "timestamp": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "The metric timestamp (ISO-8601 format)."
                            },
                            "total": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The total value of the metric."
                            }
                          },
                          "description": "Represents metrics values."
                        },
                        "description": "The metric values for the specified time window and timestep."
                      },
                      "partitionId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The partition id (GUID identifier) of the metric values."
                      },
                      "partitionKeyRangeId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The partition key range id (integer identifier) of the metric values."
                      }
                    },
                    "description": "The metric values for a single partition."
                  },
                  "description": "The list of partition-level metrics for the account."
                }
              },
              "description": "The response to a list partition metrics request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitions/metrics": {
      "get": {
        "operationId": "CollectionPartition_ListMetrics",
        "description": "Retrieves the metrics determined by the given filter for the given collection, split by partition.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database rid."
          },
          {
            "name": "collectionRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection rid."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq."
          }
        ],
        "responses": {
          "200": {
            "description": "The partition-level metrics for the collection were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "startTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time for the metric (ISO-8601 format)."
                      },
                      "endTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time for the metric (ISO-8601 format)."
                      },
                      "timeGrain": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The time grain to be used to summarize the metric values."
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "metricValues": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "properties": {
                            "_count": {
                              "readOnly": true,
                              "type": "number",
                              "format": "int32",
                              "description": "The number of values for the metric."
                            },
                            "average": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The average value of the metric."
                            },
                            "maximum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The max value of the metric."
                            },
                            "minimum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The min value of the metric."
                            },
                            "timestamp": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "The metric timestamp (ISO-8601 format)."
                            },
                            "total": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The total value of the metric."
                            }
                          },
                          "description": "Represents metrics values."
                        },
                        "description": "The metric values for the specified time window and timestep."
                      },
                      "partitionId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The partition id (GUID identifier) of the metric values."
                      },
                      "partitionKeyRangeId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The partition key range id (integer identifier) of the metric values."
                      }
                    },
                    "description": "The metric values for a single partition."
                  },
                  "description": "The list of partition-level metrics for the account."
                }
              },
              "description": "The response to a list partition metrics request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitionKeyRangeId/{partitionKeyRangeId}/metrics": {
      "get": {
        "operationId": "PartitionKeyRangeId_ListMetrics",
        "description": "Retrieves the metrics determined by the given filter for the given partition key range id.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database rid."
          },
          {
            "name": "collectionRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection rid."
          },
          {
            "name": "partitionKeyRangeId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Partition Key Range Id for which to get data."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq."
          }
        ],
        "responses": {
          "200": {
            "description": "The partition-level metrics for the partition key range id were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "startTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time for the metric (ISO-8601 format)."
                      },
                      "endTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time for the metric (ISO-8601 format)."
                      },
                      "timeGrain": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The time grain to be used to summarize the metric values."
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "metricValues": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "properties": {
                            "_count": {
                              "readOnly": true,
                              "type": "number",
                              "format": "int32",
                              "description": "The number of values for the metric."
                            },
                            "average": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The average value of the metric."
                            },
                            "maximum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The max value of the metric."
                            },
                            "minimum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The min value of the metric."
                            },
                            "timestamp": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "The metric timestamp (ISO-8601 format)."
                            },
                            "total": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The total value of the metric."
                            }
                          },
                          "description": "Represents metrics values."
                        },
                        "description": "The metric values for the specified time window and timestep."
                      },
                      "partitionId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The partition id (GUID identifier) of the metric values."
                      },
                      "partitionKeyRangeId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The partition key range id (integer identifier) of the metric values."
                      }
                    },
                    "description": "The metric values for a single partition."
                  },
                  "description": "The list of partition-level metrics for the account."
                }
              },
              "description": "The response to a list partition metrics request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/region/{region}/databases/{databaseRid}/collections/{collectionRid}/partitionKeyRangeId/{partitionKeyRangeId}/metrics": {
      "get": {
        "operationId": "PartitionKeyRangeIdRegion_ListMetrics",
        "description": "Retrieves the metrics determined by the given filter for the given partition key range id and region.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "region",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "databaseRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database rid."
          },
          {
            "name": "collectionRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection rid."
          },
          {
            "name": "partitionKeyRangeId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Partition Key Range Id for which to get data."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq."
          }
        ],
        "responses": {
          "200": {
            "description": "The partition-level metrics for the partition key range id and region were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "properties": {
                      "startTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The start time for the metric (ISO-8601 format)."
                      },
                      "endTime": {
                        "readOnly": true,
                        "type": "string",
                        "format": "date-time",
                        "description": "The end time for the metric (ISO-8601 format)."
                      },
                      "timeGrain": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The time grain to be used to summarize the metric values."
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "metricValues": {
                        "readOnly": true,
                        "type": "array",
                        "items": {
                          "properties": {
                            "_count": {
                              "readOnly": true,
                              "type": "number",
                              "format": "int32",
                              "description": "The number of values for the metric."
                            },
                            "average": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The average value of the metric."
                            },
                            "maximum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The max value of the metric."
                            },
                            "minimum": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The min value of the metric."
                            },
                            "timestamp": {
                              "readOnly": true,
                              "type": "string",
                              "format": "date-time",
                              "description": "The metric timestamp (ISO-8601 format)."
                            },
                            "total": {
                              "readOnly": true,
                              "type": "number",
                              "format": "double",
                              "description": "The total value of the metric."
                            }
                          },
                          "description": "Represents metrics values."
                        },
                        "description": "The metric values for the specified time window and timestep."
                      },
                      "partitionId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The partition id (GUID identifier) of the metric values."
                      },
                      "partitionKeyRangeId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The partition key range id (integer identifier) of the metric values."
                      }
                    },
                    "description": "The metric values for a single partition."
                  },
                  "description": "The list of partition-level metrics for the account."
                }
              },
              "description": "The response to a list partition metrics request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/usages": {
      "get": {
        "operationId": "DatabaseAccounts_ListUsages",
        "description": "Retrieves the usages (most recent data) for the given database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names)."
          }
        ],
        "responses": {
          "200": {
            "description": "The usages for the database account were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "properties": {
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "quotaPeriod": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The quota period used to summarize the usage values."
                      },
                      "limit": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Maximum value for this metric"
                      },
                      "currentValue": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Current value for this metric"
                      }
                    },
                    "description": "The usage data for a usage request."
                  },
                  "description": "The list of usages for the database. A usage is a point in time metric"
                }
              },
              "description": "The response to a list usage request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/usages": {
      "get": {
        "operationId": "Database_ListUsages",
        "description": "Retrieves the usages (most recent data) for the given database.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database rid."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names)."
          }
        ],
        "responses": {
          "200": {
            "description": "The usages for the database were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "properties": {
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "quotaPeriod": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The quota period used to summarize the usage values."
                      },
                      "limit": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Maximum value for this metric"
                      },
                      "currentValue": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Current value for this metric"
                      }
                    },
                    "description": "The usage data for a usage request."
                  },
                  "description": "The list of usages for the database. A usage is a point in time metric"
                }
              },
              "description": "The response to a list usage request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/usages": {
      "get": {
        "operationId": "Collection_ListUsages",
        "description": "Retrieves the usages (most recent storage data) for the given collection.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database rid."
          },
          {
            "name": "collectionRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection rid."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names)."
          }
        ],
        "responses": {
          "200": {
            "description": "The usages for the collection were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "properties": {
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "quotaPeriod": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The quota period used to summarize the usage values."
                      },
                      "limit": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Maximum value for this metric"
                      },
                      "currentValue": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Current value for this metric"
                      }
                    },
                    "description": "The usage data for a usage request."
                  },
                  "description": "The list of usages for the database. A usage is a point in time metric"
                }
              },
              "description": "The response to a list usage request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/partitions/usages": {
      "get": {
        "operationId": "CollectionPartition_ListUsages",
        "description": "Retrieves the usages (most recent storage data) for the given collection, split by partition.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database rid."
          },
          {
            "name": "collectionRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection rid."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "$filter",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names)."
          }
        ],
        "responses": {
          "200": {
            "description": "The usages for the collection, per partition were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "properties": {
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      },
                      "quotaPeriod": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The quota period used to summarize the usage values."
                      },
                      "limit": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Maximum value for this metric"
                      },
                      "currentValue": {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "description": "Current value for this metric"
                      },
                      "partitionId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The partition id (GUID identifier) of the usages."
                      },
                      "partitionKeyRangeId": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The partition key range id (integer identifier) of the usages."
                      }
                    },
                    "description": "The partition level usage data for a usage request."
                  },
                  "description": "The list of partition-level usages for the database. A usage is a point in time metric"
                }
              },
              "description": "The response to a list partition level usage request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/metricDefinitions": {
      "get": {
        "operationId": "Database_ListMetricDefinitions",
        "description": "Retrieves metric definitions for the given database.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database rid."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The metric definitions for the database were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "properties": {
                      "metricAvailabilities": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "properties": {
                            "timeGrain": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The time grain to be used to summarize the metric values."
                            },
                            "retention": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The retention for the metric values."
                            }
                          },
                          "description": "The availability of the metric."
                        },
                        "description": "The list of metric availabilities for the account."
                      },
                      "primaryAggregationType": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The primary aggregation type of the metric.",
                        "enum": [
                          "None",
                          "Average",
                          "Total",
                          "Minimum",
                          "Maximum",
                          "Last"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "PrimaryAggregationType"
                        }
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "resourceUri": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource uri of the database."
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      }
                    },
                    "description": "The definition of a metric."
                  },
                  "description": "The list of metric definitions for the account."
                }
              },
              "description": "The response to a list metric definitions request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/databases/{databaseRid}/collections/{collectionRid}/metricDefinitions": {
      "get": {
        "operationId": "Collection_ListMetricDefinitions",
        "description": "Retrieves metric definitions for the given collection.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database rid."
          },
          {
            "name": "collectionRid",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection rid."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The metric definitions for the collection were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "properties": {
                      "metricAvailabilities": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "properties": {
                            "timeGrain": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The time grain to be used to summarize the metric values."
                            },
                            "retention": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The retention for the metric values."
                            }
                          },
                          "description": "The availability of the metric."
                        },
                        "description": "The list of metric availabilities for the account."
                      },
                      "primaryAggregationType": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The primary aggregation type of the metric.",
                        "enum": [
                          "None",
                          "Average",
                          "Total",
                          "Minimum",
                          "Maximum",
                          "Last"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "PrimaryAggregationType"
                        }
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "resourceUri": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource uri of the database."
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      }
                    },
                    "description": "The definition of a metric."
                  },
                  "description": "The list of metric definitions for the account."
                }
              },
              "description": "The response to a list metric definitions request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/metricDefinitions": {
      "get": {
        "operationId": "DatabaseAccounts_ListMetricDefinitions",
        "description": "Retrieves metric definitions for the given database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The metric definitions for the database account were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "properties": {
                      "metricAvailabilities": {
                        "type": "array",
                        "readOnly": true,
                        "items": {
                          "properties": {
                            "timeGrain": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The time grain to be used to summarize the metric values."
                            },
                            "retention": {
                              "readOnly": true,
                              "type": "string",
                              "description": "The retention for the metric values."
                            }
                          },
                          "description": "The availability of the metric."
                        },
                        "description": "The list of metric availabilities for the account."
                      },
                      "primaryAggregationType": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The primary aggregation type of the metric.",
                        "enum": [
                          "None",
                          "Average",
                          "Total",
                          "Minimum",
                          "Maximum",
                          "Last"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "PrimaryAggregationType"
                        }
                      },
                      "unit": {
                        "description": "The unit of the metric.",
                        "type": "string",
                        "readOnly": true,
                        "enum": [
                          "Count",
                          "Bytes",
                          "Seconds",
                          "Percent",
                          "CountPerSecond",
                          "BytesPerSecond",
                          "Milliseconds"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "UnitType"
                        }
                      },
                      "resourceUri": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The resource uri of the database."
                      },
                      "name": {
                        "readOnly": true,
                        "description": "The name information for the metric.",
                        "properties": {
                          "value": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The name of the metric."
                          },
                          "localizedValue": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The friendly name of the metric."
                          }
                        }
                      }
                    },
                    "description": "The definition of a metric."
                  },
                  "description": "The list of metric definitions for the account."
                }
              },
              "description": "The response to a list metric definitions request."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases": {
      "get": {
        "operationId": "SqlResources_ListSqlDatabases",
        "description": "Lists the SQL databases under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL database properties were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB SQL database.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of an Azure Cosmos DB SQL database",
                        "type": "object",
                        "properties": {
                          "resource": {
                            "properties": {
                              "_colls": {
                                "type": "string",
                                "description": "A system generated property that specified the addressable path of the collections resource."
                              },
                              "_users": {
                                "type": "string",
                                "description": "A system generated property that specifies the addressable path of the users resource."
                              }
                            },
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB SQL database resource object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB SQL database"
                                  },
                                  "restoreParameters": {
                                    "description": "Parameters to indicate the information about the restore",
                                    "type": "object",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "properties": {
                                      "restoreSource": {
                                        "type": "string",
                                        "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                      },
                                      "restoreTimestampInUtc": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Time to which the account has to be restored (ISO-8601 format)."
                                      },
                                      "restoreWithTtlDisabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                      }
                                    }
                                  },
                                  "createMode": {
                                    "description": "Enum to indicate the mode of resource creation.",
                                    "type": "string",
                                    "default": "Default",
                                    "enum": [
                                      "Default",
                                      "Restore"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CreateMode",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              {
                                "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                "type": "object",
                                "properties": {
                                  "_rid": {
                                    "type": "string",
                                    "description": "A system generated property. A unique identifier.",
                                    "readOnly": true
                                  },
                                  "_ts": {
                                    "type": "number",
                                    "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                    "readOnly": true
                                  },
                                  "_etag": {
                                    "type": "string",
                                    "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          },
                          "options": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB options resource object",
                                "readOnly": true,
                                "properties": {
                                  "throughput": {
                                    "type": "integer",
                                    "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                                  },
                                  "autoscaleSettings": {
                                    "type": "object",
                                    "description": "Specifies the Autoscale settings.",
                                    "properties": {
                                      "maxThroughput": {
                                        "type": "integer",
                                        "description": "Represents maximum throughput, the resource can scale up to."
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "List of SQL databases and their properties."
                }
              },
              "description": "The List operation response, that contains the SQL databases and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}": {
      "get": {
        "operationId": "SqlResources_GetSqlDatabase",
        "description": "Gets the SQL database under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL database property was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB SQL database.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB SQL database",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "properties": {
                        "_colls": {
                          "type": "string",
                          "description": "A system generated property that specified the addressable path of the collections resource."
                        },
                        "_users": {
                          "type": "string",
                          "description": "A system generated property that specifies the addressable path of the users resource."
                        }
                      },
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB SQL database resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB SQL database"
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlDatabase",
        "description": "Create or update an Azure Cosmos DB SQL database",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateSqlDatabaseParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update Cosmos DB SQL database.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update Azure Cosmos DB SQL database.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB SQL database resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB SQL database"
                        },
                        "restoreParameters": {
                          "description": "Parameters to indicate the information about the restore",
                          "type": "object",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "properties": {
                            "restoreSource": {
                              "type": "string",
                              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                            },
                            "restoreTimestampInUtc": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time to which the account has to be restored (ISO-8601 format)."
                            },
                            "restoreWithTtlDisabled": {
                              "type": "boolean",
                              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                            }
                          }
                        },
                        "createMode": {
                          "description": "Enum to indicate the mode of resource creation.",
                          "type": "string",
                          "default": "Default",
                          "enum": [
                            "Default",
                            "Restore"
                          ],
                          "x-ms-enum": {
                            "name": "CreateMode",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "options": {
                      "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
                      "type": "object",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Request Units per second. For example, \"throughput\": 10000."
                        },
                        "autoscaleSettings": {
                          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput, the resource can scale up to."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the current SQL database."
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL database create or update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB SQL database.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB SQL database",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "properties": {
                        "_colls": {
                          "type": "string",
                          "description": "A system generated property that specified the addressable path of the collections resource."
                        },
                        "_users": {
                          "type": "string",
                          "description": "A system generated property that specifies the addressable path of the users resource."
                        }
                      },
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB SQL database resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB SQL database"
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The SQL database create or update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlDatabase",
        "description": "Deletes an existing Azure Cosmos DB SQL database.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The SQL database delete operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The SQL database delete operation was completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default": {
      "get": {
        "operationId": "SqlResources_GetSqlDatabaseThroughput",
        "description": "Gets the RUs per second of the SQL database under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the SQL database was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SqlResources_UpdateSqlDatabaseThroughput",
        "description": "Update RUs per second of an Azure Cosmos DB SQL database",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to update Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to update Azure Cosmos DB resource throughput.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                        },
                        "autoscaleSettings": {
                          "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput container can scale up to."
                            },
                            "autoUpgradePolicy": {
                              "description": "Cosmos DB resource auto-upgrade policy",
                              "type": "object",
                              "properties": {
                                "throughputPolicy": {
                                  "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Determines whether the ThroughputPolicy is active or not"
                                    },
                                    "incrementPercent": {
                                      "type": "integer",
                                      "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                    }
                                  }
                                }
                              }
                            },
                            "targetMaxThroughput": {
                              "type": "integer",
                              "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                              "readOnly": true
                            }
                          },
                          "required": [
                            "maxThroughput"
                          ]
                        },
                        "minimumThroughput": {
                          "type": "string",
                          "description": "The minimum throughput of the resource",
                          "readOnly": true
                        },
                        "offerReplacePending": {
                          "type": "string",
                          "description": "The throughput replace is pending",
                          "readOnly": true
                        },
                        "instantMaximumThroughput": {
                          "type": "string",
                          "description": "The offer throughput value to instantly scale up without triggering splits",
                          "readOnly": true
                        },
                        "softAllowedMaximumThroughput": {
                          "type": "string",
                          "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the RUs per second of the current SQL database."
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the SQL database update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The RUs per second of the SQL database update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "SqlResources_MigrateSqlDatabaseToAutoscale",
        "description": "Migrate an Azure Cosmos DB SQL database from manual throughput to autoscale",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL database migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The SQL database migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "SqlResources_MigrateSqlDatabaseToManualThroughput",
        "description": "Migrate an Azure Cosmos DB SQL database from autoscale to manual throughput",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL database migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The SQL database migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers": {
      "get": {
        "operationId": "SqlResources_ListSqlContainers",
        "description": "Lists the SQL container under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL container properties were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB container.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of an Azure Cosmos DB container",
                        "type": "object",
                        "properties": {
                          "resource": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB SQL container resource object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB SQL container"
                                  },
                                  "indexingPolicy": {
                                    "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
                                    "type": "object",
                                    "properties": {
                                      "automatic": {
                                        "type": "boolean",
                                        "description": "Indicates if the indexing policy is automatic"
                                      },
                                      "indexingMode": {
                                        "description": "Indicates the indexing mode.",
                                        "type": "string",
                                        "default": "consistent",
                                        "enum": [
                                          "consistent",
                                          "lazy",
                                          "none"
                                        ],
                                        "x-ms-enum": {
                                          "name": "IndexingMode",
                                          "modelAsString": true
                                        }
                                      },
                                      "includedPaths": {
                                        "description": "List of paths to include in the indexing",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The paths that are included in indexing",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                            },
                                            "indexes": {
                                              "description": "List of indexes for this path",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "description": "The indexes for the path.",
                                                "properties": {
                                                  "dataType": {
                                                    "description": "The datatype for which the indexing behavior is applied to.",
                                                    "type": "string",
                                                    "default": "String",
                                                    "enum": [
                                                      "String",
                                                      "Number",
                                                      "Point",
                                                      "Polygon",
                                                      "LineString",
                                                      "MultiPolygon"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "DataType",
                                                      "modelAsString": true
                                                    }
                                                  },
                                                  "precision": {
                                                    "description": "The precision of the index. -1 is maximum precision.",
                                                    "type": "integer"
                                                  },
                                                  "kind": {
                                                    "description": "Indicates the type of index.",
                                                    "type": "string",
                                                    "default": "Hash",
                                                    "enum": [
                                                      "Hash",
                                                      "Range",
                                                      "Spatial"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "IndexKind",
                                                      "modelAsString": true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "excludedPaths": {
                                        "description": "List of paths to exclude from indexing",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                            }
                                          }
                                        }
                                      },
                                      "compositeIndexes": {
                                        "description": "List of composite path list",
                                        "type": "array",
                                        "items": {
                                          "description": "List of composite path",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "path": {
                                                "type": "string",
                                                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                              },
                                              "order": {
                                                "description": "Sort order for composite paths.",
                                                "type": "string",
                                                "enum": [
                                                  "ascending",
                                                  "descending"
                                                ],
                                                "x-ms-enum": {
                                                  "name": "CompositePathSortOrder",
                                                  "modelAsString": true
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "spatialIndexes": {
                                        "description": "List of spatial specifics",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                            },
                                            "types": {
                                              "description": "List of path's spatial type",
                                              "type": "array",
                                              "items": {
                                                "description": "Indicates the spatial type of index.",
                                                "type": "string",
                                                "enum": [
                                                  "Point",
                                                  "LineString",
                                                  "Polygon",
                                                  "MultiPolygon"
                                                ],
                                                "x-ms-enum": {
                                                  "name": "SpatialType",
                                                  "modelAsString": true
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "vectorIndexes": {
                                        "description": "List of paths to include in the vector indexing",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "The path to the vector field in the document."
                                            },
                                            "type": {
                                              "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                              "type": "string",
                                              "enum": [
                                                "flat",
                                                "diskANN",
                                                "quantizedFlat"
                                              ],
                                              "x-ms-enum": {
                                                "name": "VectorIndexType",
                                                "modelAsString": true
                                              }
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "type"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "partitionKey": {
                                    "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                                    "type": "object",
                                    "properties": {
                                      "paths": {
                                        "description": "List of paths using which data within the container can be partitioned",
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "A path. These typically start with root (/path)"
                                        }
                                      },
                                      "kind": {
                                        "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                                        "type": "string",
                                        "default": "Hash",
                                        "enum": [
                                          "Hash",
                                          "Range",
                                          "MultiHash"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PartitionKind",
                                          "modelAsString": true
                                        }
                                      },
                                      "version": {
                                        "description": "Indicates the version of the partition key definition",
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 2,
                                        "format": "int32"
                                      },
                                      "systemKey": {
                                        "description": "Indicates if the container is using a system generated partition key",
                                        "type": "boolean",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "defaultTtl": {
                                    "type": "integer",
                                    "description": "Default time to live"
                                  },
                                  "uniqueKeyPolicy": {
                                    "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                                    "type": "object",
                                    "properties": {
                                      "uniqueKeys": {
                                        "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                          "properties": {
                                            "paths": {
                                              "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "description": "A path. These typically start with root (/path)"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "conflictResolutionPolicy": {
                                    "description": "The conflict resolution policy for the container.",
                                    "type": "object",
                                    "properties": {
                                      "mode": {
                                        "description": "Indicates the conflict resolution mode.",
                                        "type": "string",
                                        "default": "LastWriterWins",
                                        "enum": [
                                          "LastWriterWins",
                                          "Custom"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ConflictResolutionMode",
                                          "modelAsString": true
                                        }
                                      },
                                      "conflictResolutionPath": {
                                        "type": "string",
                                        "description": "The conflict resolution path in the case of LastWriterWins mode."
                                      },
                                      "conflictResolutionProcedure": {
                                        "type": "string",
                                        "description": "The procedure to resolve conflicts in the case of custom mode."
                                      }
                                    }
                                  },
                                  "clientEncryptionPolicy": {
                                    "description": "The client encryption policy for the container.",
                                    "type": "object",
                                    "properties": {
                                      "includedPaths": {
                                        "description": "Paths of the item that need encryption along with path-specific settings.",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": ".",
                                          "properties": {
                                            "path": {
                                              "description": "Path that needs to be encrypted.",
                                              "type": "string"
                                            },
                                            "clientEncryptionKeyId": {
                                              "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                                              "type": "string"
                                            },
                                            "encryptionType": {
                                              "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                                              "type": "string"
                                            },
                                            "encryptionAlgorithm": {
                                              "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "clientEncryptionKeyId",
                                            "encryptionType",
                                            "encryptionAlgorithm"
                                          ]
                                        },
                                        "x-ms-identifiers": []
                                      },
                                      "policyFormatVersion": {
                                        "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 2,
                                        "format": "int32"
                                      }
                                    },
                                    "required": [
                                      "includedPaths",
                                      "policyFormatVersion"
                                    ]
                                  },
                                  "analyticalStorageTtl": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Analytical TTL."
                                  },
                                  "restoreParameters": {
                                    "description": "Parameters to indicate the information about the restore",
                                    "type": "object",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "properties": {
                                      "restoreSource": {
                                        "type": "string",
                                        "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                      },
                                      "restoreTimestampInUtc": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Time to which the account has to be restored (ISO-8601 format)."
                                      },
                                      "restoreWithTtlDisabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                      }
                                    }
                                  },
                                  "createMode": {
                                    "description": "Enum to indicate the mode of resource creation.",
                                    "type": "string",
                                    "default": "Default",
                                    "enum": [
                                      "Default",
                                      "Restore"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CreateMode",
                                      "modelAsString": true
                                    }
                                  },
                                  "computedProperties": {
                                    "description": "List of computed properties",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "The definition of a computed property",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The name of a computed property, for example - \"cp_lowerName\""
                                        },
                                        "query": {
                                          "type": "string",
                                          "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
                                        }
                                      }
                                    }
                                  },
                                  "vectorEmbeddingPolicy": {
                                    "description": "The vector embedding policy for the container.",
                                    "type": "object",
                                    "properties": {
                                      "vectorEmbeddings": {
                                        "description": "List of vector embeddings",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "The path to the vector field in the document."
                                            },
                                            "dataType": {
                                              "description": "Indicates the data type of vector.",
                                              "type": "string",
                                              "enum": [
                                                "float32",
                                                "uint8",
                                                "int8"
                                              ],
                                              "x-ms-enum": {
                                                "name": "VectorDataType",
                                                "modelAsString": true
                                              }
                                            },
                                            "distanceFunction": {
                                              "description": "The distance function to use for distance calculation in between vectors.",
                                              "type": "string",
                                              "enum": [
                                                "euclidean",
                                                "cosine",
                                                "dotproduct"
                                              ],
                                              "x-ms-enum": {
                                                "name": "DistanceFunction",
                                                "modelAsString": true
                                              }
                                            },
                                            "dimensions": {
                                              "type": "integer",
                                              "format": "int32",
                                              "description": "The number of dimensions in the vector."
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "dataType",
                                            "distanceFunction",
                                            "dimensions"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "fullTextPolicy": {
                                    "description": "The FullText policy for the container.",
                                    "type": "object",
                                    "properties": {
                                      "defaultLanguage": {
                                        "type": "string",
                                        "description": "The default language for a full text paths."
                                      },
                                      "fullTextPaths": {
                                        "description": "List of FullText Paths",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Represents the full text path specification.",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "The path to the full text field in the document."
                                            },
                                            "language": {
                                              "description": "The language of the full text field in the document.",
                                              "type": "string"
                                            }
                                          },
                                          "required": [
                                            "path"
                                          ]
                                        }
                                      }
                                    }
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              {
                                "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                "type": "object",
                                "properties": {
                                  "_rid": {
                                    "type": "string",
                                    "description": "A system generated property. A unique identifier.",
                                    "readOnly": true
                                  },
                                  "_ts": {
                                    "type": "number",
                                    "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                    "readOnly": true
                                  },
                                  "_etag": {
                                    "type": "string",
                                    "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          },
                          "options": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB options resource object",
                                "readOnly": true,
                                "properties": {
                                  "throughput": {
                                    "type": "integer",
                                    "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                                  },
                                  "autoscaleSettings": {
                                    "type": "object",
                                    "description": "Specifies the Autoscale settings.",
                                    "properties": {
                                      "maxThroughput": {
                                        "type": "integer",
                                        "description": "Represents maximum throughput, the resource can scale up to."
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "List of containers and their properties."
                }
              },
              "description": "The List operation response, that contains the containers and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}": {
      "get": {
        "operationId": "SqlResources_GetSqlContainer",
        "description": "Gets the SQL container under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL container property was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB container.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB container",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB SQL container resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB SQL container"
                            },
                            "indexingPolicy": {
                              "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
                              "type": "object",
                              "properties": {
                                "automatic": {
                                  "type": "boolean",
                                  "description": "Indicates if the indexing policy is automatic"
                                },
                                "indexingMode": {
                                  "description": "Indicates the indexing mode.",
                                  "type": "string",
                                  "default": "consistent",
                                  "enum": [
                                    "consistent",
                                    "lazy",
                                    "none"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IndexingMode",
                                    "modelAsString": true
                                  }
                                },
                                "includedPaths": {
                                  "description": "List of paths to include in the indexing",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "The paths that are included in indexing",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      },
                                      "indexes": {
                                        "description": "List of indexes for this path",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The indexes for the path.",
                                          "properties": {
                                            "dataType": {
                                              "description": "The datatype for which the indexing behavior is applied to.",
                                              "type": "string",
                                              "default": "String",
                                              "enum": [
                                                "String",
                                                "Number",
                                                "Point",
                                                "Polygon",
                                                "LineString",
                                                "MultiPolygon"
                                              ],
                                              "x-ms-enum": {
                                                "name": "DataType",
                                                "modelAsString": true
                                              }
                                            },
                                            "precision": {
                                              "description": "The precision of the index. -1 is maximum precision.",
                                              "type": "integer"
                                            },
                                            "kind": {
                                              "description": "Indicates the type of index.",
                                              "type": "string",
                                              "default": "Hash",
                                              "enum": [
                                                "Hash",
                                                "Range",
                                                "Spatial"
                                              ],
                                              "x-ms-enum": {
                                                "name": "IndexKind",
                                                "modelAsString": true
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "excludedPaths": {
                                  "description": "List of paths to exclude from indexing",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      }
                                    }
                                  }
                                },
                                "compositeIndexes": {
                                  "description": "List of composite path list",
                                  "type": "array",
                                  "items": {
                                    "description": "List of composite path",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                        },
                                        "order": {
                                          "description": "Sort order for composite paths.",
                                          "type": "string",
                                          "enum": [
                                            "ascending",
                                            "descending"
                                          ],
                                          "x-ms-enum": {
                                            "name": "CompositePathSortOrder",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "spatialIndexes": {
                                  "description": "List of spatial specifics",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      },
                                      "types": {
                                        "description": "List of path's spatial type",
                                        "type": "array",
                                        "items": {
                                          "description": "Indicates the spatial type of index.",
                                          "type": "string",
                                          "enum": [
                                            "Point",
                                            "LineString",
                                            "Polygon",
                                            "MultiPolygon"
                                          ],
                                          "x-ms-enum": {
                                            "name": "SpatialType",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "vectorIndexes": {
                                  "description": "List of paths to include in the vector indexing",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path to the vector field in the document."
                                      },
                                      "type": {
                                        "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                        "type": "string",
                                        "enum": [
                                          "flat",
                                          "diskANN",
                                          "quantizedFlat"
                                        ],
                                        "x-ms-enum": {
                                          "name": "VectorIndexType",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "required": [
                                      "path",
                                      "type"
                                    ]
                                  }
                                }
                              }
                            },
                            "partitionKey": {
                              "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                              "type": "object",
                              "properties": {
                                "paths": {
                                  "description": "List of paths using which data within the container can be partitioned",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "A path. These typically start with root (/path)"
                                  }
                                },
                                "kind": {
                                  "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                                  "type": "string",
                                  "default": "Hash",
                                  "enum": [
                                    "Hash",
                                    "Range",
                                    "MultiHash"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PartitionKind",
                                    "modelAsString": true
                                  }
                                },
                                "version": {
                                  "description": "Indicates the version of the partition key definition",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 2,
                                  "format": "int32"
                                },
                                "systemKey": {
                                  "description": "Indicates if the container is using a system generated partition key",
                                  "type": "boolean",
                                  "readOnly": true
                                }
                              }
                            },
                            "defaultTtl": {
                              "type": "integer",
                              "description": "Default time to live"
                            },
                            "uniqueKeyPolicy": {
                              "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                              "type": "object",
                              "properties": {
                                "uniqueKeys": {
                                  "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                    "properties": {
                                      "paths": {
                                        "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "A path. These typically start with root (/path)"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "conflictResolutionPolicy": {
                              "description": "The conflict resolution policy for the container.",
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "description": "Indicates the conflict resolution mode.",
                                  "type": "string",
                                  "default": "LastWriterWins",
                                  "enum": [
                                    "LastWriterWins",
                                    "Custom"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ConflictResolutionMode",
                                    "modelAsString": true
                                  }
                                },
                                "conflictResolutionPath": {
                                  "type": "string",
                                  "description": "The conflict resolution path in the case of LastWriterWins mode."
                                },
                                "conflictResolutionProcedure": {
                                  "type": "string",
                                  "description": "The procedure to resolve conflicts in the case of custom mode."
                                }
                              }
                            },
                            "clientEncryptionPolicy": {
                              "description": "The client encryption policy for the container.",
                              "type": "object",
                              "properties": {
                                "includedPaths": {
                                  "description": "Paths of the item that need encryption along with path-specific settings.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": ".",
                                    "properties": {
                                      "path": {
                                        "description": "Path that needs to be encrypted.",
                                        "type": "string"
                                      },
                                      "clientEncryptionKeyId": {
                                        "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                                        "type": "string"
                                      },
                                      "encryptionType": {
                                        "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                                        "type": "string"
                                      },
                                      "encryptionAlgorithm": {
                                        "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "path",
                                      "clientEncryptionKeyId",
                                      "encryptionType",
                                      "encryptionAlgorithm"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyFormatVersion": {
                                  "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 2,
                                  "format": "int32"
                                }
                              },
                              "required": [
                                "includedPaths",
                                "policyFormatVersion"
                              ]
                            },
                            "analyticalStorageTtl": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Analytical TTL."
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            },
                            "computedProperties": {
                              "description": "List of computed properties",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The definition of a computed property",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of a computed property, for example - \"cp_lowerName\""
                                  },
                                  "query": {
                                    "type": "string",
                                    "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
                                  }
                                }
                              }
                            },
                            "vectorEmbeddingPolicy": {
                              "description": "The vector embedding policy for the container.",
                              "type": "object",
                              "properties": {
                                "vectorEmbeddings": {
                                  "description": "List of vector embeddings",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path to the vector field in the document."
                                      },
                                      "dataType": {
                                        "description": "Indicates the data type of vector.",
                                        "type": "string",
                                        "enum": [
                                          "float32",
                                          "uint8",
                                          "int8"
                                        ],
                                        "x-ms-enum": {
                                          "name": "VectorDataType",
                                          "modelAsString": true
                                        }
                                      },
                                      "distanceFunction": {
                                        "description": "The distance function to use for distance calculation in between vectors.",
                                        "type": "string",
                                        "enum": [
                                          "euclidean",
                                          "cosine",
                                          "dotproduct"
                                        ],
                                        "x-ms-enum": {
                                          "name": "DistanceFunction",
                                          "modelAsString": true
                                        }
                                      },
                                      "dimensions": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The number of dimensions in the vector."
                                      }
                                    },
                                    "required": [
                                      "path",
                                      "dataType",
                                      "distanceFunction",
                                      "dimensions"
                                    ]
                                  }
                                }
                              }
                            },
                            "fullTextPolicy": {
                              "description": "The FullText policy for the container.",
                              "type": "object",
                              "properties": {
                                "defaultLanguage": {
                                  "type": "string",
                                  "description": "The default language for a full text paths."
                                },
                                "fullTextPaths": {
                                  "description": "List of FullText Paths",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Represents the full text path specification.",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path to the full text field in the document."
                                      },
                                      "language": {
                                        "description": "The language of the full text field in the document.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "path"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlContainer",
        "description": "Create or update an Azure Cosmos DB SQL container",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateSqlContainerParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update Cosmos DB container.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update Azure Cosmos DB container.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB SQL container resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB SQL container"
                        },
                        "indexingPolicy": {
                          "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
                          "type": "object",
                          "properties": {
                            "automatic": {
                              "type": "boolean",
                              "description": "Indicates if the indexing policy is automatic"
                            },
                            "indexingMode": {
                              "description": "Indicates the indexing mode.",
                              "type": "string",
                              "default": "consistent",
                              "enum": [
                                "consistent",
                                "lazy",
                                "none"
                              ],
                              "x-ms-enum": {
                                "name": "IndexingMode",
                                "modelAsString": true
                              }
                            },
                            "includedPaths": {
                              "description": "List of paths to include in the indexing",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The paths that are included in indexing",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                  },
                                  "indexes": {
                                    "description": "List of indexes for this path",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "The indexes for the path.",
                                      "properties": {
                                        "dataType": {
                                          "description": "The datatype for which the indexing behavior is applied to.",
                                          "type": "string",
                                          "default": "String",
                                          "enum": [
                                            "String",
                                            "Number",
                                            "Point",
                                            "Polygon",
                                            "LineString",
                                            "MultiPolygon"
                                          ],
                                          "x-ms-enum": {
                                            "name": "DataType",
                                            "modelAsString": true
                                          }
                                        },
                                        "precision": {
                                          "description": "The precision of the index. -1 is maximum precision.",
                                          "type": "integer"
                                        },
                                        "kind": {
                                          "description": "Indicates the type of index.",
                                          "type": "string",
                                          "default": "Hash",
                                          "enum": [
                                            "Hash",
                                            "Range",
                                            "Spatial"
                                          ],
                                          "x-ms-enum": {
                                            "name": "IndexKind",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "excludedPaths": {
                              "description": "List of paths to exclude from indexing",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                  }
                                }
                              }
                            },
                            "compositeIndexes": {
                              "description": "List of composite path list",
                              "type": "array",
                              "items": {
                                "description": "List of composite path",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                    },
                                    "order": {
                                      "description": "Sort order for composite paths.",
                                      "type": "string",
                                      "enum": [
                                        "ascending",
                                        "descending"
                                      ],
                                      "x-ms-enum": {
                                        "name": "CompositePathSortOrder",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "spatialIndexes": {
                              "description": "List of spatial specifics",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                  },
                                  "types": {
                                    "description": "List of path's spatial type",
                                    "type": "array",
                                    "items": {
                                      "description": "Indicates the spatial type of index.",
                                      "type": "string",
                                      "enum": [
                                        "Point",
                                        "LineString",
                                        "Polygon",
                                        "MultiPolygon"
                                      ],
                                      "x-ms-enum": {
                                        "name": "SpatialType",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "vectorIndexes": {
                              "description": "List of paths to include in the vector indexing",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path to the vector field in the document."
                                  },
                                  "type": {
                                    "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                    "type": "string",
                                    "enum": [
                                      "flat",
                                      "diskANN",
                                      "quantizedFlat"
                                    ],
                                    "x-ms-enum": {
                                      "name": "VectorIndexType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "required": [
                                  "path",
                                  "type"
                                ]
                              }
                            }
                          }
                        },
                        "partitionKey": {
                          "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                          "type": "object",
                          "properties": {
                            "paths": {
                              "description": "List of paths using which data within the container can be partitioned",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "A path. These typically start with root (/path)"
                              }
                            },
                            "kind": {
                              "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                              "type": "string",
                              "default": "Hash",
                              "enum": [
                                "Hash",
                                "Range",
                                "MultiHash"
                              ],
                              "x-ms-enum": {
                                "name": "PartitionKind",
                                "modelAsString": true
                              }
                            },
                            "version": {
                              "description": "Indicates the version of the partition key definition",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 2,
                              "format": "int32"
                            },
                            "systemKey": {
                              "description": "Indicates if the container is using a system generated partition key",
                              "type": "boolean",
                              "readOnly": true
                            }
                          }
                        },
                        "defaultTtl": {
                          "type": "integer",
                          "description": "Default time to live"
                        },
                        "uniqueKeyPolicy": {
                          "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                          "type": "object",
                          "properties": {
                            "uniqueKeys": {
                              "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                "properties": {
                                  "paths": {
                                    "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "A path. These typically start with root (/path)"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "conflictResolutionPolicy": {
                          "description": "The conflict resolution policy for the container.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "Indicates the conflict resolution mode.",
                              "type": "string",
                              "default": "LastWriterWins",
                              "enum": [
                                "LastWriterWins",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "ConflictResolutionMode",
                                "modelAsString": true
                              }
                            },
                            "conflictResolutionPath": {
                              "type": "string",
                              "description": "The conflict resolution path in the case of LastWriterWins mode."
                            },
                            "conflictResolutionProcedure": {
                              "type": "string",
                              "description": "The procedure to resolve conflicts in the case of custom mode."
                            }
                          }
                        },
                        "clientEncryptionPolicy": {
                          "description": "The client encryption policy for the container.",
                          "type": "object",
                          "properties": {
                            "includedPaths": {
                              "description": "Paths of the item that need encryption along with path-specific settings.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": ".",
                                "properties": {
                                  "path": {
                                    "description": "Path that needs to be encrypted.",
                                    "type": "string"
                                  },
                                  "clientEncryptionKeyId": {
                                    "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                                    "type": "string"
                                  },
                                  "encryptionType": {
                                    "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                                    "type": "string"
                                  },
                                  "encryptionAlgorithm": {
                                    "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "path",
                                  "clientEncryptionKeyId",
                                  "encryptionType",
                                  "encryptionAlgorithm"
                                ]
                              },
                              "x-ms-identifiers": []
                            },
                            "policyFormatVersion": {
                              "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 2,
                              "format": "int32"
                            }
                          },
                          "required": [
                            "includedPaths",
                            "policyFormatVersion"
                          ]
                        },
                        "analyticalStorageTtl": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Analytical TTL."
                        },
                        "restoreParameters": {
                          "description": "Parameters to indicate the information about the restore",
                          "type": "object",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "properties": {
                            "restoreSource": {
                              "type": "string",
                              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                            },
                            "restoreTimestampInUtc": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time to which the account has to be restored (ISO-8601 format)."
                            },
                            "restoreWithTtlDisabled": {
                              "type": "boolean",
                              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                            }
                          }
                        },
                        "createMode": {
                          "description": "Enum to indicate the mode of resource creation.",
                          "type": "string",
                          "default": "Default",
                          "enum": [
                            "Default",
                            "Restore"
                          ],
                          "x-ms-enum": {
                            "name": "CreateMode",
                            "modelAsString": true
                          }
                        },
                        "computedProperties": {
                          "description": "List of computed properties",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The definition of a computed property",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of a computed property, for example - \"cp_lowerName\""
                              },
                              "query": {
                                "type": "string",
                                "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
                              }
                            }
                          }
                        },
                        "vectorEmbeddingPolicy": {
                          "description": "The vector embedding policy for the container.",
                          "type": "object",
                          "properties": {
                            "vectorEmbeddings": {
                              "description": "List of vector embeddings",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path to the vector field in the document."
                                  },
                                  "dataType": {
                                    "description": "Indicates the data type of vector.",
                                    "type": "string",
                                    "enum": [
                                      "float32",
                                      "uint8",
                                      "int8"
                                    ],
                                    "x-ms-enum": {
                                      "name": "VectorDataType",
                                      "modelAsString": true
                                    }
                                  },
                                  "distanceFunction": {
                                    "description": "The distance function to use for distance calculation in between vectors.",
                                    "type": "string",
                                    "enum": [
                                      "euclidean",
                                      "cosine",
                                      "dotproduct"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DistanceFunction",
                                      "modelAsString": true
                                    }
                                  },
                                  "dimensions": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The number of dimensions in the vector."
                                  }
                                },
                                "required": [
                                  "path",
                                  "dataType",
                                  "distanceFunction",
                                  "dimensions"
                                ]
                              }
                            }
                          }
                        },
                        "fullTextPolicy": {
                          "description": "The FullText policy for the container.",
                          "type": "object",
                          "properties": {
                            "defaultLanguage": {
                              "type": "string",
                              "description": "The default language for a full text paths."
                            },
                            "fullTextPaths": {
                              "description": "List of FullText Paths",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Represents the full text path specification.",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path to the full text field in the document."
                                  },
                                  "language": {
                                    "description": "The language of the full text field in the document.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "path"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "options": {
                      "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
                      "type": "object",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Request Units per second. For example, \"throughput\": 10000."
                        },
                        "autoscaleSettings": {
                          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput, the resource can scale up to."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the current SQL container."
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL container create or update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB container.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB container",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB SQL container resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB SQL container"
                            },
                            "indexingPolicy": {
                              "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
                              "type": "object",
                              "properties": {
                                "automatic": {
                                  "type": "boolean",
                                  "description": "Indicates if the indexing policy is automatic"
                                },
                                "indexingMode": {
                                  "description": "Indicates the indexing mode.",
                                  "type": "string",
                                  "default": "consistent",
                                  "enum": [
                                    "consistent",
                                    "lazy",
                                    "none"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IndexingMode",
                                    "modelAsString": true
                                  }
                                },
                                "includedPaths": {
                                  "description": "List of paths to include in the indexing",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "The paths that are included in indexing",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      },
                                      "indexes": {
                                        "description": "List of indexes for this path",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The indexes for the path.",
                                          "properties": {
                                            "dataType": {
                                              "description": "The datatype for which the indexing behavior is applied to.",
                                              "type": "string",
                                              "default": "String",
                                              "enum": [
                                                "String",
                                                "Number",
                                                "Point",
                                                "Polygon",
                                                "LineString",
                                                "MultiPolygon"
                                              ],
                                              "x-ms-enum": {
                                                "name": "DataType",
                                                "modelAsString": true
                                              }
                                            },
                                            "precision": {
                                              "description": "The precision of the index. -1 is maximum precision.",
                                              "type": "integer"
                                            },
                                            "kind": {
                                              "description": "Indicates the type of index.",
                                              "type": "string",
                                              "default": "Hash",
                                              "enum": [
                                                "Hash",
                                                "Range",
                                                "Spatial"
                                              ],
                                              "x-ms-enum": {
                                                "name": "IndexKind",
                                                "modelAsString": true
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "excludedPaths": {
                                  "description": "List of paths to exclude from indexing",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      }
                                    }
                                  }
                                },
                                "compositeIndexes": {
                                  "description": "List of composite path list",
                                  "type": "array",
                                  "items": {
                                    "description": "List of composite path",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                        },
                                        "order": {
                                          "description": "Sort order for composite paths.",
                                          "type": "string",
                                          "enum": [
                                            "ascending",
                                            "descending"
                                          ],
                                          "x-ms-enum": {
                                            "name": "CompositePathSortOrder",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "spatialIndexes": {
                                  "description": "List of spatial specifics",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      },
                                      "types": {
                                        "description": "List of path's spatial type",
                                        "type": "array",
                                        "items": {
                                          "description": "Indicates the spatial type of index.",
                                          "type": "string",
                                          "enum": [
                                            "Point",
                                            "LineString",
                                            "Polygon",
                                            "MultiPolygon"
                                          ],
                                          "x-ms-enum": {
                                            "name": "SpatialType",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "vectorIndexes": {
                                  "description": "List of paths to include in the vector indexing",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path to the vector field in the document."
                                      },
                                      "type": {
                                        "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                        "type": "string",
                                        "enum": [
                                          "flat",
                                          "diskANN",
                                          "quantizedFlat"
                                        ],
                                        "x-ms-enum": {
                                          "name": "VectorIndexType",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "required": [
                                      "path",
                                      "type"
                                    ]
                                  }
                                }
                              }
                            },
                            "partitionKey": {
                              "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                              "type": "object",
                              "properties": {
                                "paths": {
                                  "description": "List of paths using which data within the container can be partitioned",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "A path. These typically start with root (/path)"
                                  }
                                },
                                "kind": {
                                  "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                                  "type": "string",
                                  "default": "Hash",
                                  "enum": [
                                    "Hash",
                                    "Range",
                                    "MultiHash"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PartitionKind",
                                    "modelAsString": true
                                  }
                                },
                                "version": {
                                  "description": "Indicates the version of the partition key definition",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 2,
                                  "format": "int32"
                                },
                                "systemKey": {
                                  "description": "Indicates if the container is using a system generated partition key",
                                  "type": "boolean",
                                  "readOnly": true
                                }
                              }
                            },
                            "defaultTtl": {
                              "type": "integer",
                              "description": "Default time to live"
                            },
                            "uniqueKeyPolicy": {
                              "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                              "type": "object",
                              "properties": {
                                "uniqueKeys": {
                                  "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                    "properties": {
                                      "paths": {
                                        "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "A path. These typically start with root (/path)"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "conflictResolutionPolicy": {
                              "description": "The conflict resolution policy for the container.",
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "description": "Indicates the conflict resolution mode.",
                                  "type": "string",
                                  "default": "LastWriterWins",
                                  "enum": [
                                    "LastWriterWins",
                                    "Custom"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ConflictResolutionMode",
                                    "modelAsString": true
                                  }
                                },
                                "conflictResolutionPath": {
                                  "type": "string",
                                  "description": "The conflict resolution path in the case of LastWriterWins mode."
                                },
                                "conflictResolutionProcedure": {
                                  "type": "string",
                                  "description": "The procedure to resolve conflicts in the case of custom mode."
                                }
                              }
                            },
                            "clientEncryptionPolicy": {
                              "description": "The client encryption policy for the container.",
                              "type": "object",
                              "properties": {
                                "includedPaths": {
                                  "description": "Paths of the item that need encryption along with path-specific settings.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": ".",
                                    "properties": {
                                      "path": {
                                        "description": "Path that needs to be encrypted.",
                                        "type": "string"
                                      },
                                      "clientEncryptionKeyId": {
                                        "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                                        "type": "string"
                                      },
                                      "encryptionType": {
                                        "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                                        "type": "string"
                                      },
                                      "encryptionAlgorithm": {
                                        "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "path",
                                      "clientEncryptionKeyId",
                                      "encryptionType",
                                      "encryptionAlgorithm"
                                    ]
                                  },
                                  "x-ms-identifiers": []
                                },
                                "policyFormatVersion": {
                                  "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 2,
                                  "format": "int32"
                                }
                              },
                              "required": [
                                "includedPaths",
                                "policyFormatVersion"
                              ]
                            },
                            "analyticalStorageTtl": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Analytical TTL."
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            },
                            "computedProperties": {
                              "description": "List of computed properties",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The definition of a computed property",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "The name of a computed property, for example - \"cp_lowerName\""
                                  },
                                  "query": {
                                    "type": "string",
                                    "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
                                  }
                                }
                              }
                            },
                            "vectorEmbeddingPolicy": {
                              "description": "The vector embedding policy for the container.",
                              "type": "object",
                              "properties": {
                                "vectorEmbeddings": {
                                  "description": "List of vector embeddings",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path to the vector field in the document."
                                      },
                                      "dataType": {
                                        "description": "Indicates the data type of vector.",
                                        "type": "string",
                                        "enum": [
                                          "float32",
                                          "uint8",
                                          "int8"
                                        ],
                                        "x-ms-enum": {
                                          "name": "VectorDataType",
                                          "modelAsString": true
                                        }
                                      },
                                      "distanceFunction": {
                                        "description": "The distance function to use for distance calculation in between vectors.",
                                        "type": "string",
                                        "enum": [
                                          "euclidean",
                                          "cosine",
                                          "dotproduct"
                                        ],
                                        "x-ms-enum": {
                                          "name": "DistanceFunction",
                                          "modelAsString": true
                                        }
                                      },
                                      "dimensions": {
                                        "type": "integer",
                                        "format": "int32",
                                        "description": "The number of dimensions in the vector."
                                      }
                                    },
                                    "required": [
                                      "path",
                                      "dataType",
                                      "distanceFunction",
                                      "dimensions"
                                    ]
                                  }
                                }
                              }
                            },
                            "fullTextPolicy": {
                              "description": "The FullText policy for the container.",
                              "type": "object",
                              "properties": {
                                "defaultLanguage": {
                                  "type": "string",
                                  "description": "The default language for a full text paths."
                                },
                                "fullTextPaths": {
                                  "description": "List of FullText Paths",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Represents the full text path specification.",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path to the full text field in the document."
                                      },
                                      "language": {
                                        "description": "The language of the full text field in the document.",
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "path"
                                    ]
                                  }
                                }
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The SQL container create or update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlContainer",
        "description": "Deletes an existing Azure Cosmos DB SQL container.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The SQL container delete operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The SQL container delete operation was completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default": {
      "get": {
        "operationId": "SqlResources_GetSqlContainerThroughput",
        "description": "Gets the RUs per second of the SQL container under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the SQL container was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SqlResources_UpdateSqlContainerThroughput",
        "description": "Update RUs per second of an Azure Cosmos DB SQL container",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to update Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to update Azure Cosmos DB resource throughput.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                        },
                        "autoscaleSettings": {
                          "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput container can scale up to."
                            },
                            "autoUpgradePolicy": {
                              "description": "Cosmos DB resource auto-upgrade policy",
                              "type": "object",
                              "properties": {
                                "throughputPolicy": {
                                  "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Determines whether the ThroughputPolicy is active or not"
                                    },
                                    "incrementPercent": {
                                      "type": "integer",
                                      "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                    }
                                  }
                                }
                              }
                            },
                            "targetMaxThroughput": {
                              "type": "integer",
                              "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                              "readOnly": true
                            }
                          },
                          "required": [
                            "maxThroughput"
                          ]
                        },
                        "minimumThroughput": {
                          "type": "string",
                          "description": "The minimum throughput of the resource",
                          "readOnly": true
                        },
                        "offerReplacePending": {
                          "type": "string",
                          "description": "The throughput replace is pending",
                          "readOnly": true
                        },
                        "instantMaximumThroughput": {
                          "type": "string",
                          "description": "The offer throughput value to instantly scale up without triggering splits",
                          "readOnly": true
                        },
                        "softAllowedMaximumThroughput": {
                          "type": "string",
                          "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the RUs per second of the current SQL container."
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the SQL container update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The RUs per second of the SQL container update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "SqlResources_MigrateSqlContainerToAutoscale",
        "description": "Migrate an Azure Cosmos DB SQL container from manual throughput to autoscale",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL container migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The SQL container migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "SqlResources_MigrateSqlContainerToManualThroughput",
        "description": "Migrate an Azure Cosmos DB SQL container from autoscale to manual throughput",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL container migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The SQL container migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/clientEncryptionKeys": {
      "get": {
        "operationId": "SqlResources_ListClientEncryptionKeys",
        "description": "Lists the ClientEncryptionKeys under an existing Azure Cosmos DB SQL database.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The ClientEncryptionKeys were retrieved successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "Client Encryption Key.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the database account."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the database account."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of a ClientEncryptionKey",
                        "type": "object",
                        "properties": {
                          "resource": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB client encryption key resource object.",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the ClientEncryptionKey"
                                  },
                                  "encryptionAlgorithm": {
                                    "type": "string",
                                    "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
                                  },
                                  "wrappedDataEncryptionKey": {
                                    "type": "string",
                                    "format": "byte",
                                    "description": "Wrapped (encrypted) form of the key represented as a byte array."
                                  },
                                  "keyWrapMetadata": {
                                    "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key.",
                                    "type": "object",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey)."
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "ProviderName of KeyStoreProvider."
                                      },
                                      "value": {
                                        "type": "string",
                                        "description": "Reference / link to the KeyEncryptionKey."
                                      },
                                      "algorithm": {
                                        "type": "string",
                                        "description": "Algorithm used in wrapping and unwrapping of the data encryption key."
                                      }
                                    }
                                  }
                                }
                              },
                              {
                                "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                "type": "object",
                                "properties": {
                                  "_rid": {
                                    "type": "string",
                                    "description": "A system generated property. A unique identifier.",
                                    "readOnly": true
                                  },
                                  "_ts": {
                                    "type": "number",
                                    "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                    "readOnly": true
                                  },
                                  "_etag": {
                                    "type": "string",
                                    "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "List of client encryption keys and their properties."
                }
              },
              "description": "The List operation response, that contains the client encryption keys and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/clientEncryptionKeys/{clientEncryptionKeyName}": {
      "get": {
        "operationId": "SqlResources_GetClientEncryptionKey",
        "description": "Gets the ClientEncryptionKey under an existing Azure Cosmos DB SQL database.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "clientEncryptionKeyName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB ClientEncryptionKey name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The ClientEncryptionKey was retrieved successfully.",
            "schema": {
              "description": "Client Encryption Key.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of a ClientEncryptionKey",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB client encryption key resource object.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the ClientEncryptionKey"
                            },
                            "encryptionAlgorithm": {
                              "type": "string",
                              "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
                            },
                            "wrappedDataEncryptionKey": {
                              "type": "string",
                              "format": "byte",
                              "description": "Wrapped (encrypted) form of the key represented as a byte array."
                            },
                            "keyWrapMetadata": {
                              "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey)."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "ProviderName of KeyStoreProvider."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Reference / link to the KeyEncryptionKey."
                                },
                                "algorithm": {
                                  "type": "string",
                                  "description": "Algorithm used in wrapping and unwrapping of the data encryption key."
                                }
                              }
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateClientEncryptionKey",
        "description": "Create or update a ClientEncryptionKey. This API is meant to be invoked via tools such as the Azure Powershell (instead of directly).",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "clientEncryptionKeyName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB ClientEncryptionKey name."
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "createUpdateClientEncryptionKeyParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update ClientEncryptionKey.",
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update ClientEncryptionKey.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB client encryption key resource object.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the ClientEncryptionKey"
                        },
                        "encryptionAlgorithm": {
                          "type": "string",
                          "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
                        },
                        "wrappedDataEncryptionKey": {
                          "type": "string",
                          "format": "byte",
                          "description": "Wrapped (encrypted) form of the key represented as a byte array."
                        },
                        "keyWrapMetadata": {
                          "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key.",
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey)."
                            },
                            "type": {
                              "type": "string",
                              "description": "ProviderName of KeyStoreProvider."
                            },
                            "value": {
                              "type": "string",
                              "description": "Reference / link to the KeyEncryptionKey."
                            },
                            "algorithm": {
                              "type": "string",
                              "description": "Algorithm used in wrapping and unwrapping of the data encryption key."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the client encryption key."
          }
        ],
        "responses": {
          "200": {
            "description": "The client encryption key create or update operation was completed successfully.",
            "schema": {
              "description": "Client Encryption Key.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of a ClientEncryptionKey",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB client encryption key resource object.",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the ClientEncryptionKey"
                            },
                            "encryptionAlgorithm": {
                              "type": "string",
                              "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
                            },
                            "wrappedDataEncryptionKey": {
                              "type": "string",
                              "format": "byte",
                              "description": "Wrapped (encrypted) form of the key represented as a byte array."
                            },
                            "keyWrapMetadata": {
                              "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key.",
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey)."
                                },
                                "type": {
                                  "type": "string",
                                  "description": "ProviderName of KeyStoreProvider."
                                },
                                "value": {
                                  "type": "string",
                                  "description": "Reference / link to the KeyEncryptionKey."
                                },
                                "algorithm": {
                                  "type": "string",
                                  "description": "Algorithm used in wrapping and unwrapping of the data encryption key."
                                }
                              }
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The client encryption key create or update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/storedProcedures": {
      "get": {
        "operationId": "SqlResources_ListSqlStoredProcedures",
        "description": "Lists the SQL storedProcedure under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL stored procedure properties were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB storedProcedure.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of an Azure Cosmos DB storedProcedure",
                        "type": "object",
                        "properties": {
                          "resource": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB SQL storedProcedure resource object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB SQL storedProcedure"
                                  },
                                  "body": {
                                    "type": "string",
                                    "description": "Body of the Stored Procedure"
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              {
                                "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                "type": "object",
                                "properties": {
                                  "_rid": {
                                    "type": "string",
                                    "description": "A system generated property. A unique identifier.",
                                    "readOnly": true
                                  },
                                  "_ts": {
                                    "type": "number",
                                    "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                    "readOnly": true
                                  },
                                  "_etag": {
                                    "type": "string",
                                    "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "List of storedProcedures and their properties."
                }
              },
              "description": "The List operation response, that contains the storedProcedures and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/storedProcedures/{storedProcedureName}": {
      "get": {
        "operationId": "SqlResources_GetSqlStoredProcedure",
        "description": "Gets the SQL storedProcedure under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "storedProcedureName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB storedProcedure name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL storedProcedure property was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB storedProcedure.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB storedProcedure",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB SQL storedProcedure resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB SQL storedProcedure"
                            },
                            "body": {
                              "type": "string",
                              "description": "Body of the Stored Procedure"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlStoredProcedure",
        "description": "Create or update an Azure Cosmos DB SQL storedProcedure",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "storedProcedureName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB storedProcedure name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateSqlStoredProcedureParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update Cosmos DB storedProcedure.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update Azure Cosmos DB storedProcedure.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB SQL storedProcedure resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB SQL storedProcedure"
                        },
                        "body": {
                          "type": "string",
                          "description": "Body of the Stored Procedure"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "options": {
                      "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
                      "type": "object",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Request Units per second. For example, \"throughput\": 10000."
                        },
                        "autoscaleSettings": {
                          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput, the resource can scale up to."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the current SQL storedProcedure."
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL storedProcedure create or update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB storedProcedure.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB storedProcedure",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB SQL storedProcedure resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB SQL storedProcedure"
                            },
                            "body": {
                              "type": "string",
                              "description": "Body of the Stored Procedure"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The SQL storedProcedure create or update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlStoredProcedure",
        "description": "Deletes an existing Azure Cosmos DB SQL storedProcedure.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "storedProcedureName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB storedProcedure name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The SQL storedProcedure delete operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The SQL storedProcedure delete operation was completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/userDefinedFunctions": {
      "get": {
        "operationId": "SqlResources_ListSqlUserDefinedFunctions",
        "description": "Lists the SQL userDefinedFunction under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL userDefinedFunction properties were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB userDefinedFunction.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of an Azure Cosmos DB userDefinedFunction",
                        "type": "object",
                        "properties": {
                          "resource": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB SQL userDefinedFunction resource object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB SQL userDefinedFunction"
                                  },
                                  "body": {
                                    "type": "string",
                                    "description": "Body of the User Defined Function"
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              {
                                "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                "type": "object",
                                "properties": {
                                  "_rid": {
                                    "type": "string",
                                    "description": "A system generated property. A unique identifier.",
                                    "readOnly": true
                                  },
                                  "_ts": {
                                    "type": "number",
                                    "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                    "readOnly": true
                                  },
                                  "_etag": {
                                    "type": "string",
                                    "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "List of userDefinedFunctions and their properties."
                }
              },
              "description": "The List operation response, that contains the userDefinedFunctions and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/userDefinedFunctions/{userDefinedFunctionName}": {
      "get": {
        "operationId": "SqlResources_GetSqlUserDefinedFunction",
        "description": "Gets the SQL userDefinedFunction under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "userDefinedFunctionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB userDefinedFunction name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL userDefinedFunction property was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB userDefinedFunction.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB userDefinedFunction",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB SQL userDefinedFunction resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB SQL userDefinedFunction"
                            },
                            "body": {
                              "type": "string",
                              "description": "Body of the User Defined Function"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlUserDefinedFunction",
        "description": "Create or update an Azure Cosmos DB SQL userDefinedFunction",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "userDefinedFunctionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB userDefinedFunction name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateSqlUserDefinedFunctionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update Cosmos DB userDefinedFunction.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update Azure Cosmos DB userDefinedFunction.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB SQL userDefinedFunction resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB SQL userDefinedFunction"
                        },
                        "body": {
                          "type": "string",
                          "description": "Body of the User Defined Function"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "options": {
                      "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
                      "type": "object",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Request Units per second. For example, \"throughput\": 10000."
                        },
                        "autoscaleSettings": {
                          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput, the resource can scale up to."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the current SQL userDefinedFunction."
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL userDefinedFunction create or update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB userDefinedFunction.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB userDefinedFunction",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB SQL userDefinedFunction resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB SQL userDefinedFunction"
                            },
                            "body": {
                              "type": "string",
                              "description": "Body of the User Defined Function"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The SQL userDefinedFunction create or update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlUserDefinedFunction",
        "description": "Deletes an existing Azure Cosmos DB SQL userDefinedFunction.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "userDefinedFunctionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB userDefinedFunction name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The SQL userDefinedFunction delete operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The SQL userDefinedFunction delete operation was completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/triggers": {
      "get": {
        "operationId": "SqlResources_ListSqlTriggers",
        "description": "Lists the SQL trigger under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL trigger properties were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB trigger.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of an Azure Cosmos DB trigger",
                        "type": "object",
                        "properties": {
                          "resource": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB SQL trigger resource object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB SQL trigger"
                                  },
                                  "body": {
                                    "type": "string",
                                    "description": "Body of the Trigger"
                                  },
                                  "triggerType": {
                                    "type": "string",
                                    "enum": [
                                      "Pre",
                                      "Post"
                                    ],
                                    "description": "Type of the Trigger",
                                    "x-ms-enum": {
                                      "name": "triggerType",
                                      "modelAsString": true
                                    }
                                  },
                                  "triggerOperation": {
                                    "type": "string",
                                    "enum": [
                                      "All",
                                      "Create",
                                      "Update",
                                      "Delete",
                                      "Replace"
                                    ],
                                    "description": "The operation the trigger is associated with",
                                    "x-ms-enum": {
                                      "name": "triggerOperation",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              {
                                "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                "type": "object",
                                "properties": {
                                  "_rid": {
                                    "type": "string",
                                    "description": "A system generated property. A unique identifier.",
                                    "readOnly": true
                                  },
                                  "_ts": {
                                    "type": "number",
                                    "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                    "readOnly": true
                                  },
                                  "_etag": {
                                    "type": "string",
                                    "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "List of triggers and their properties."
                }
              },
              "description": "The List operation response, that contains the triggers and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/triggers/{triggerName}": {
      "get": {
        "operationId": "SqlResources_GetSqlTrigger",
        "description": "Gets the SQL trigger under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "triggerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB trigger name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL trigger property was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB trigger.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB trigger",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB SQL trigger resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB SQL trigger"
                            },
                            "body": {
                              "type": "string",
                              "description": "Body of the Trigger"
                            },
                            "triggerType": {
                              "type": "string",
                              "enum": [
                                "Pre",
                                "Post"
                              ],
                              "description": "Type of the Trigger",
                              "x-ms-enum": {
                                "name": "triggerType",
                                "modelAsString": true
                              }
                            },
                            "triggerOperation": {
                              "type": "string",
                              "enum": [
                                "All",
                                "Create",
                                "Update",
                                "Delete",
                                "Replace"
                              ],
                              "description": "The operation the trigger is associated with",
                              "x-ms-enum": {
                                "name": "triggerOperation",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlTrigger",
        "description": "Create or update an Azure Cosmos DB SQL trigger",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "triggerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB trigger name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateSqlTriggerParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update Cosmos DB trigger.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update Azure Cosmos DB trigger.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB SQL trigger resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB SQL trigger"
                        },
                        "body": {
                          "type": "string",
                          "description": "Body of the Trigger"
                        },
                        "triggerType": {
                          "type": "string",
                          "enum": [
                            "Pre",
                            "Post"
                          ],
                          "description": "Type of the Trigger",
                          "x-ms-enum": {
                            "name": "triggerType",
                            "modelAsString": true
                          }
                        },
                        "triggerOperation": {
                          "type": "string",
                          "enum": [
                            "All",
                            "Create",
                            "Update",
                            "Delete",
                            "Replace"
                          ],
                          "description": "The operation the trigger is associated with",
                          "x-ms-enum": {
                            "name": "triggerOperation",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "options": {
                      "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
                      "type": "object",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Request Units per second. For example, \"throughput\": 10000."
                        },
                        "autoscaleSettings": {
                          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput, the resource can scale up to."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the current SQL trigger."
          }
        ],
        "responses": {
          "200": {
            "description": "The SQL trigger create or update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB trigger.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB trigger",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB SQL trigger resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB SQL trigger"
                            },
                            "body": {
                              "type": "string",
                              "description": "Body of the Trigger"
                            },
                            "triggerType": {
                              "type": "string",
                              "enum": [
                                "Pre",
                                "Post"
                              ],
                              "description": "Type of the Trigger",
                              "x-ms-enum": {
                                "name": "triggerType",
                                "modelAsString": true
                              }
                            },
                            "triggerOperation": {
                              "type": "string",
                              "enum": [
                                "All",
                                "Create",
                                "Update",
                                "Delete",
                                "Replace"
                              ],
                              "description": "The operation the trigger is associated with",
                              "x-ms-enum": {
                                "name": "triggerOperation",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The SQL trigger create or update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlTrigger",
        "description": "Deletes an existing Azure Cosmos DB SQL trigger.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "triggerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB trigger name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The SQL trigger delete operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The SQL trigger delete operation was completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases": {
      "get": {
        "operationId": "MongoDBResources_ListMongoDBDatabases",
        "description": "Lists the MongoDB databases under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The MongoDB database properties were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB MongoDB database.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of an Azure Cosmos DB MongoDB database",
                        "type": "object",
                        "properties": {
                          "resource": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB MongoDB database resource object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB MongoDB database"
                                  },
                                  "restoreParameters": {
                                    "description": "Parameters to indicate the information about the restore",
                                    "type": "object",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "properties": {
                                      "restoreSource": {
                                        "type": "string",
                                        "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                      },
                                      "restoreTimestampInUtc": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Time to which the account has to be restored (ISO-8601 format)."
                                      },
                                      "restoreWithTtlDisabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                      }
                                    }
                                  },
                                  "createMode": {
                                    "description": "Enum to indicate the mode of resource creation.",
                                    "type": "string",
                                    "default": "Default",
                                    "enum": [
                                      "Default",
                                      "Restore"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CreateMode",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              {
                                "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                "type": "object",
                                "properties": {
                                  "_rid": {
                                    "type": "string",
                                    "description": "A system generated property. A unique identifier.",
                                    "readOnly": true
                                  },
                                  "_ts": {
                                    "type": "number",
                                    "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                    "readOnly": true
                                  },
                                  "_etag": {
                                    "type": "string",
                                    "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          },
                          "options": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB options resource object",
                                "readOnly": true,
                                "properties": {
                                  "throughput": {
                                    "type": "integer",
                                    "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                                  },
                                  "autoscaleSettings": {
                                    "type": "object",
                                    "description": "Specifies the Autoscale settings.",
                                    "properties": {
                                      "maxThroughput": {
                                        "type": "integer",
                                        "description": "Represents maximum throughput, the resource can scale up to."
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "List of MongoDB databases and their properties."
                }
              },
              "description": "The List operation response, that contains the MongoDB databases and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}": {
      "get": {
        "operationId": "MongoDBResources_GetMongoDBDatabase",
        "description": "Gets the MongoDB databases under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The MongoDB database property was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB MongoDB database.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB MongoDB database",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB MongoDB database resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB MongoDB database"
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "MongoDBResources_CreateUpdateMongoDBDatabase",
        "description": "Create or updates Azure Cosmos DB MongoDB database",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateMongoDBDatabaseParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update Cosmos DB MongoDB database.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update Azure Cosmos DB MongoDB database.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB MongoDB database resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB MongoDB database"
                        },
                        "restoreParameters": {
                          "description": "Parameters to indicate the information about the restore",
                          "type": "object",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "properties": {
                            "restoreSource": {
                              "type": "string",
                              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                            },
                            "restoreTimestampInUtc": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time to which the account has to be restored (ISO-8601 format)."
                            },
                            "restoreWithTtlDisabled": {
                              "type": "boolean",
                              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                            }
                          }
                        },
                        "createMode": {
                          "description": "Enum to indicate the mode of resource creation.",
                          "type": "string",
                          "default": "Default",
                          "enum": [
                            "Default",
                            "Restore"
                          ],
                          "x-ms-enum": {
                            "name": "CreateMode",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "options": {
                      "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
                      "type": "object",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Request Units per second. For example, \"throughput\": 10000."
                        },
                        "autoscaleSettings": {
                          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput, the resource can scale up to."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the current MongoDB database."
          }
        ],
        "responses": {
          "200": {
            "description": "The MongoDB database create or update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB MongoDB database.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB MongoDB database",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB MongoDB database resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB MongoDB database"
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The MongoDB database create or update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "MongoDBResources_DeleteMongoDBDatabase",
        "description": "Deletes an existing Azure Cosmos DB MongoDB database.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The MongoDB database delete operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The MongoDB database delete operation was completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default": {
      "get": {
        "operationId": "MongoDBResources_GetMongoDBDatabaseThroughput",
        "description": "Gets the RUs per second of the MongoDB database under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the MongoDB database was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "MongoDBResources_UpdateMongoDBDatabaseThroughput",
        "description": "Update RUs per second of the an Azure Cosmos DB MongoDB database",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to update Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to update Azure Cosmos DB resource throughput.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                        },
                        "autoscaleSettings": {
                          "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput container can scale up to."
                            },
                            "autoUpgradePolicy": {
                              "description": "Cosmos DB resource auto-upgrade policy",
                              "type": "object",
                              "properties": {
                                "throughputPolicy": {
                                  "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Determines whether the ThroughputPolicy is active or not"
                                    },
                                    "incrementPercent": {
                                      "type": "integer",
                                      "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                    }
                                  }
                                }
                              }
                            },
                            "targetMaxThroughput": {
                              "type": "integer",
                              "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                              "readOnly": true
                            }
                          },
                          "required": [
                            "maxThroughput"
                          ]
                        },
                        "minimumThroughput": {
                          "type": "string",
                          "description": "The minimum throughput of the resource",
                          "readOnly": true
                        },
                        "offerReplacePending": {
                          "type": "string",
                          "description": "The throughput replace is pending",
                          "readOnly": true
                        },
                        "instantMaximumThroughput": {
                          "type": "string",
                          "description": "The offer throughput value to instantly scale up without triggering splits",
                          "readOnly": true
                        },
                        "softAllowedMaximumThroughput": {
                          "type": "string",
                          "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The RUs per second of the parameters to provide for the current MongoDB database."
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the MongoDB database update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The RUs per second of the MongoDB database update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "MongoDBResources_MigrateMongoDBDatabaseToAutoscale",
        "description": "Migrate an Azure Cosmos DB MongoDB database from manual throughput to autoscale",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The MongoDB database migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The MongoDB database migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "MongoDBResources_MigrateMongoDBDatabaseToManualThroughput",
        "description": "Migrate an Azure Cosmos DB MongoDB database from autoscale to manual throughput",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The MongoDB database migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The MongoDB database migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections": {
      "get": {
        "operationId": "MongoDBResources_ListMongoDBCollections",
        "description": "Lists the MongoDB collection under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The MongoDB collection properties were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB MongoDB collection.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of an Azure Cosmos DB MongoDB collection",
                        "type": "object",
                        "properties": {
                          "resource": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB MongoDB collection resource object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB MongoDB collection"
                                  },
                                  "shardKey": {
                                    "description": "A key-value pair of shard keys to be applied for the request.",
                                    "type": "object",
                                    "additionalProperties": {
                                      "type": "string"
                                    }
                                  },
                                  "indexes": {
                                    "description": "List of index keys",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Cosmos DB MongoDB collection index key",
                                      "properties": {
                                        "key": {
                                          "description": "Cosmos DB MongoDB collection index keys",
                                          "type": "object",
                                          "properties": {
                                            "keys": {
                                              "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "description": "A Key."
                                              }
                                            }
                                          }
                                        },
                                        "options": {
                                          "description": "Cosmos DB MongoDB collection index key options",
                                          "type": "object",
                                          "properties": {
                                            "expireAfterSeconds": {
                                              "description": "Expire after seconds",
                                              "type": "integer"
                                            },
                                            "unique": {
                                              "description": "Is unique or not",
                                              "type": "boolean"
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "analyticalStorageTtl": {
                                    "type": "integer",
                                    "description": "Analytical TTL."
                                  },
                                  "restoreParameters": {
                                    "description": "Parameters to indicate the information about the restore",
                                    "type": "object",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "properties": {
                                      "restoreSource": {
                                        "type": "string",
                                        "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                      },
                                      "restoreTimestampInUtc": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Time to which the account has to be restored (ISO-8601 format)."
                                      },
                                      "restoreWithTtlDisabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                      }
                                    }
                                  },
                                  "createMode": {
                                    "description": "Enum to indicate the mode of resource creation.",
                                    "type": "string",
                                    "default": "Default",
                                    "enum": [
                                      "Default",
                                      "Restore"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CreateMode",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              {
                                "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                "type": "object",
                                "properties": {
                                  "_rid": {
                                    "type": "string",
                                    "description": "A system generated property. A unique identifier.",
                                    "readOnly": true
                                  },
                                  "_ts": {
                                    "type": "number",
                                    "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                    "readOnly": true
                                  },
                                  "_etag": {
                                    "type": "string",
                                    "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          },
                          "options": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB options resource object",
                                "readOnly": true,
                                "properties": {
                                  "throughput": {
                                    "type": "integer",
                                    "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                                  },
                                  "autoscaleSettings": {
                                    "type": "object",
                                    "description": "Specifies the Autoscale settings.",
                                    "properties": {
                                      "maxThroughput": {
                                        "type": "integer",
                                        "description": "Represents maximum throughput, the resource can scale up to."
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "List of MongoDB collections and their properties."
                }
              },
              "description": "The List operation response, that contains the MongoDB collections and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}": {
      "get": {
        "operationId": "MongoDBResources_GetMongoDBCollection",
        "description": "Gets the MongoDB collection under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "collectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The MongoDB collection property was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB MongoDB collection.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB MongoDB collection",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB MongoDB collection resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB MongoDB collection"
                            },
                            "shardKey": {
                              "description": "A key-value pair of shard keys to be applied for the request.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "indexes": {
                              "description": "List of index keys",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Cosmos DB MongoDB collection index key",
                                "properties": {
                                  "key": {
                                    "description": "Cosmos DB MongoDB collection index keys",
                                    "type": "object",
                                    "properties": {
                                      "keys": {
                                        "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "A Key."
                                        }
                                      }
                                    }
                                  },
                                  "options": {
                                    "description": "Cosmos DB MongoDB collection index key options",
                                    "type": "object",
                                    "properties": {
                                      "expireAfterSeconds": {
                                        "description": "Expire after seconds",
                                        "type": "integer"
                                      },
                                      "unique": {
                                        "description": "Is unique or not",
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "analyticalStorageTtl": {
                              "type": "integer",
                              "description": "Analytical TTL."
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "MongoDBResources_CreateUpdateMongoDBCollection",
        "description": "Create or update an Azure Cosmos DB MongoDB Collection",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "collectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateMongoDBCollectionParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update Cosmos DB MongoDB collection.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update Azure Cosmos DB MongoDB collection.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB MongoDB collection resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB MongoDB collection"
                        },
                        "shardKey": {
                          "description": "A key-value pair of shard keys to be applied for the request.",
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          }
                        },
                        "indexes": {
                          "description": "List of index keys",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Cosmos DB MongoDB collection index key",
                            "properties": {
                              "key": {
                                "description": "Cosmos DB MongoDB collection index keys",
                                "type": "object",
                                "properties": {
                                  "keys": {
                                    "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "A Key."
                                    }
                                  }
                                }
                              },
                              "options": {
                                "description": "Cosmos DB MongoDB collection index key options",
                                "type": "object",
                                "properties": {
                                  "expireAfterSeconds": {
                                    "description": "Expire after seconds",
                                    "type": "integer"
                                  },
                                  "unique": {
                                    "description": "Is unique or not",
                                    "type": "boolean"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "analyticalStorageTtl": {
                          "type": "integer",
                          "description": "Analytical TTL."
                        },
                        "restoreParameters": {
                          "description": "Parameters to indicate the information about the restore",
                          "type": "object",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "properties": {
                            "restoreSource": {
                              "type": "string",
                              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                            },
                            "restoreTimestampInUtc": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time to which the account has to be restored (ISO-8601 format)."
                            },
                            "restoreWithTtlDisabled": {
                              "type": "boolean",
                              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                            }
                          }
                        },
                        "createMode": {
                          "description": "Enum to indicate the mode of resource creation.",
                          "type": "string",
                          "default": "Default",
                          "enum": [
                            "Default",
                            "Restore"
                          ],
                          "x-ms-enum": {
                            "name": "CreateMode",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "options": {
                      "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
                      "type": "object",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Request Units per second. For example, \"throughput\": 10000."
                        },
                        "autoscaleSettings": {
                          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput, the resource can scale up to."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the current MongoDB Collection."
          }
        ],
        "responses": {
          "200": {
            "description": "The MongoDB Collection create or update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB MongoDB collection.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB MongoDB collection",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB MongoDB collection resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB MongoDB collection"
                            },
                            "shardKey": {
                              "description": "A key-value pair of shard keys to be applied for the request.",
                              "type": "object",
                              "additionalProperties": {
                                "type": "string"
                              }
                            },
                            "indexes": {
                              "description": "List of index keys",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Cosmos DB MongoDB collection index key",
                                "properties": {
                                  "key": {
                                    "description": "Cosmos DB MongoDB collection index keys",
                                    "type": "object",
                                    "properties": {
                                      "keys": {
                                        "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "A Key."
                                        }
                                      }
                                    }
                                  },
                                  "options": {
                                    "description": "Cosmos DB MongoDB collection index key options",
                                    "type": "object",
                                    "properties": {
                                      "expireAfterSeconds": {
                                        "description": "Expire after seconds",
                                        "type": "integer"
                                      },
                                      "unique": {
                                        "description": "Is unique or not",
                                        "type": "boolean"
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "analyticalStorageTtl": {
                              "type": "integer",
                              "description": "Analytical TTL."
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The MongoDB Collection create or update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "MongoDBResources_DeleteMongoDBCollection",
        "description": "Deletes an existing Azure Cosmos DB MongoDB Collection.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "collectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The MongoDB collection delete operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The MongoDB collection delete operation was completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default": {
      "get": {
        "operationId": "MongoDBResources_GetMongoDBCollectionThroughput",
        "description": "Gets the RUs per second of the MongoDB collection under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "collectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the MongoDB collection was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "MongoDBResources_UpdateMongoDBCollectionThroughput",
        "description": "Update the RUs per second of an Azure Cosmos DB MongoDB collection",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "collectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to update Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to update Azure Cosmos DB resource throughput.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                        },
                        "autoscaleSettings": {
                          "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput container can scale up to."
                            },
                            "autoUpgradePolicy": {
                              "description": "Cosmos DB resource auto-upgrade policy",
                              "type": "object",
                              "properties": {
                                "throughputPolicy": {
                                  "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Determines whether the ThroughputPolicy is active or not"
                                    },
                                    "incrementPercent": {
                                      "type": "integer",
                                      "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                    }
                                  }
                                }
                              }
                            },
                            "targetMaxThroughput": {
                              "type": "integer",
                              "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                              "readOnly": true
                            }
                          },
                          "required": [
                            "maxThroughput"
                          ]
                        },
                        "minimumThroughput": {
                          "type": "string",
                          "description": "The minimum throughput of the resource",
                          "readOnly": true
                        },
                        "offerReplacePending": {
                          "type": "string",
                          "description": "The throughput replace is pending",
                          "readOnly": true
                        },
                        "instantMaximumThroughput": {
                          "type": "string",
                          "description": "The offer throughput value to instantly scale up without triggering splits",
                          "readOnly": true
                        },
                        "softAllowedMaximumThroughput": {
                          "type": "string",
                          "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The RUs per second of the parameters to provide for the current MongoDB collection."
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the MongoDB collection update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The RUs per second of the MongoDB collection update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "MongoDBResources_MigrateMongoDBCollectionToAutoscale",
        "description": "Migrate an Azure Cosmos DB MongoDB collection from manual throughput to autoscale",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "collectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The MongoDB collection migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The MongoDB collection migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "MongoDBResources_MigrateMongoDBCollectionToManualThroughput",
        "description": "Migrate an Azure Cosmos DB MongoDB collection from autoscale to manual throughput",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "collectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The MongoDB collection migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The MongoDB collection migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables": {
      "get": {
        "operationId": "TableResources_ListTables",
        "description": "Lists the Tables under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Table properties were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB Table.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of an Azure Cosmos DB Table",
                        "type": "object",
                        "properties": {
                          "resource": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB table resource object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB table"
                                  },
                                  "restoreParameters": {
                                    "description": "Parameters to indicate the information about the restore",
                                    "type": "object",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "properties": {
                                      "restoreSource": {
                                        "type": "string",
                                        "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                      },
                                      "restoreTimestampInUtc": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Time to which the account has to be restored (ISO-8601 format)."
                                      },
                                      "restoreWithTtlDisabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                      }
                                    }
                                  },
                                  "createMode": {
                                    "description": "Enum to indicate the mode of resource creation.",
                                    "type": "string",
                                    "default": "Default",
                                    "enum": [
                                      "Default",
                                      "Restore"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CreateMode",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              {
                                "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                "type": "object",
                                "properties": {
                                  "_rid": {
                                    "type": "string",
                                    "description": "A system generated property. A unique identifier.",
                                    "readOnly": true
                                  },
                                  "_ts": {
                                    "type": "number",
                                    "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                    "readOnly": true
                                  },
                                  "_etag": {
                                    "type": "string",
                                    "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          },
                          "options": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB options resource object",
                                "readOnly": true,
                                "properties": {
                                  "throughput": {
                                    "type": "integer",
                                    "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                                  },
                                  "autoscaleSettings": {
                                    "type": "object",
                                    "description": "Specifies the Autoscale settings.",
                                    "properties": {
                                      "maxThroughput": {
                                        "type": "integer",
                                        "description": "Represents maximum throughput, the resource can scale up to."
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "List of Table and their properties."
                }
              },
              "description": "The List operation response, that contains the Table and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}": {
      "get": {
        "operationId": "TableResources_GetTable",
        "description": "Gets the Tables under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Table property was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB Table.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB Table",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB table resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB table"
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "TableResources_CreateUpdateTable",
        "description": "Create or update an Azure Cosmos DB Table",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateTableParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update Cosmos DB Table.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update Azure Cosmos DB Table.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB table resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB table"
                        },
                        "restoreParameters": {
                          "description": "Parameters to indicate the information about the restore",
                          "type": "object",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "properties": {
                            "restoreSource": {
                              "type": "string",
                              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                            },
                            "restoreTimestampInUtc": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time to which the account has to be restored (ISO-8601 format)."
                            },
                            "restoreWithTtlDisabled": {
                              "type": "boolean",
                              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                            }
                          }
                        },
                        "createMode": {
                          "description": "Enum to indicate the mode of resource creation.",
                          "type": "string",
                          "default": "Default",
                          "enum": [
                            "Default",
                            "Restore"
                          ],
                          "x-ms-enum": {
                            "name": "CreateMode",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "options": {
                      "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
                      "type": "object",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Request Units per second. For example, \"throughput\": 10000."
                        },
                        "autoscaleSettings": {
                          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput, the resource can scale up to."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the current Table."
          }
        ],
        "responses": {
          "200": {
            "description": "The Table create or update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB Table.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB Table",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB table resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB table"
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Table create or update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "TableResources_DeleteTable",
        "description": "Deletes an existing Azure Cosmos DB Table.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The Table delete operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The Table delete operation was completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/throughputSettings/default": {
      "get": {
        "operationId": "TableResources_GetTableThroughput",
        "description": "Gets the RUs per second of the Table under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the Table was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "TableResources_UpdateTableThroughput",
        "description": "Update RUs per second of an Azure Cosmos DB Table",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to update Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to update Azure Cosmos DB resource throughput.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                        },
                        "autoscaleSettings": {
                          "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput container can scale up to."
                            },
                            "autoUpgradePolicy": {
                              "description": "Cosmos DB resource auto-upgrade policy",
                              "type": "object",
                              "properties": {
                                "throughputPolicy": {
                                  "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Determines whether the ThroughputPolicy is active or not"
                                    },
                                    "incrementPercent": {
                                      "type": "integer",
                                      "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                    }
                                  }
                                }
                              }
                            },
                            "targetMaxThroughput": {
                              "type": "integer",
                              "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                              "readOnly": true
                            }
                          },
                          "required": [
                            "maxThroughput"
                          ]
                        },
                        "minimumThroughput": {
                          "type": "string",
                          "description": "The minimum throughput of the resource",
                          "readOnly": true
                        },
                        "offerReplacePending": {
                          "type": "string",
                          "description": "The throughput replace is pending",
                          "readOnly": true
                        },
                        "instantMaximumThroughput": {
                          "type": "string",
                          "description": "The offer throughput value to instantly scale up without triggering splits",
                          "readOnly": true
                        },
                        "softAllowedMaximumThroughput": {
                          "type": "string",
                          "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the RUs per second of the current Table."
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the Table update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The RUs per second of the Table update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "TableResources_MigrateTableToAutoscale",
        "description": "Migrate an Azure Cosmos DB Table from manual throughput to autoscale",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Table migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Table migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "TableResources_MigrateTableToManualThroughput",
        "description": "Migrate an Azure Cosmos DB Table from autoscale to manual throughput",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Table migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Table migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces": {
      "get": {
        "operationId": "CassandraResources_ListCassandraKeyspaces",
        "description": "Lists the Cassandra keyspaces under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Cassandra keyspace properties were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB Cassandra keyspace.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of an Azure Cosmos DB Cassandra keyspace",
                        "type": "object",
                        "properties": {
                          "resource": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB Cassandra keyspace resource object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB Cassandra keyspace"
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              {
                                "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                "type": "object",
                                "properties": {
                                  "_rid": {
                                    "type": "string",
                                    "description": "A system generated property. A unique identifier.",
                                    "readOnly": true
                                  },
                                  "_ts": {
                                    "type": "number",
                                    "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                    "readOnly": true
                                  },
                                  "_etag": {
                                    "type": "string",
                                    "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          },
                          "options": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB options resource object",
                                "readOnly": true,
                                "properties": {
                                  "throughput": {
                                    "type": "integer",
                                    "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                                  },
                                  "autoscaleSettings": {
                                    "type": "object",
                                    "description": "Specifies the Autoscale settings.",
                                    "properties": {
                                      "maxThroughput": {
                                        "type": "integer",
                                        "description": "Represents maximum throughput, the resource can scale up to."
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "List of Cassandra keyspaces and their properties."
                }
              },
              "description": "The List operation response, that contains the Cassandra keyspaces and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}": {
      "get": {
        "operationId": "CassandraResources_GetCassandraKeyspace",
        "description": "Gets the Cassandra keyspaces under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Cassandra keyspace property was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB Cassandra keyspace.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB Cassandra keyspace",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB Cassandra keyspace resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB Cassandra keyspace"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "CassandraResources_CreateUpdateCassandraKeyspace",
        "description": "Create or update an Azure Cosmos DB Cassandra keyspace",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateCassandraKeyspaceParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update Cosmos DB Cassandra keyspace.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update Azure Cosmos DB Cassandra keyspace.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB Cassandra keyspace resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB Cassandra keyspace"
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "options": {
                      "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
                      "type": "object",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Request Units per second. For example, \"throughput\": 10000."
                        },
                        "autoscaleSettings": {
                          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput, the resource can scale up to."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the current Cassandra keyspace."
          }
        ],
        "responses": {
          "200": {
            "description": "The Cassandra keyspace create or update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB Cassandra keyspace.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB Cassandra keyspace",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB Cassandra keyspace resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB Cassandra keyspace"
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Cassandra keyspace create or update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "CassandraResources_DeleteCassandraKeyspace",
        "description": "Deletes an existing Azure Cosmos DB Cassandra keyspace.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The Cassandra keyspace delete operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The Cassandra keyspace delete operation was completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/throughputSettings/default": {
      "get": {
        "operationId": "CassandraResources_GetCassandraKeyspaceThroughput",
        "description": "Gets the RUs per second of the Cassandra Keyspace under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the Cassandra Keyspace was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "CassandraResources_UpdateCassandraKeyspaceThroughput",
        "description": "Update RUs per second of an Azure Cosmos DB Cassandra Keyspace",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to update Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to update Azure Cosmos DB resource throughput.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                        },
                        "autoscaleSettings": {
                          "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput container can scale up to."
                            },
                            "autoUpgradePolicy": {
                              "description": "Cosmos DB resource auto-upgrade policy",
                              "type": "object",
                              "properties": {
                                "throughputPolicy": {
                                  "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Determines whether the ThroughputPolicy is active or not"
                                    },
                                    "incrementPercent": {
                                      "type": "integer",
                                      "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                    }
                                  }
                                }
                              }
                            },
                            "targetMaxThroughput": {
                              "type": "integer",
                              "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                              "readOnly": true
                            }
                          },
                          "required": [
                            "maxThroughput"
                          ]
                        },
                        "minimumThroughput": {
                          "type": "string",
                          "description": "The minimum throughput of the resource",
                          "readOnly": true
                        },
                        "offerReplacePending": {
                          "type": "string",
                          "description": "The throughput replace is pending",
                          "readOnly": true
                        },
                        "instantMaximumThroughput": {
                          "type": "string",
                          "description": "The offer throughput value to instantly scale up without triggering splits",
                          "readOnly": true
                        },
                        "softAllowedMaximumThroughput": {
                          "type": "string",
                          "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The RUs per second of the parameters to provide for the current Cassandra Keyspace."
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the Cassandra Keyspace update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The RUs per second of the Cassandra Keyspace update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "CassandraResources_MigrateCassandraKeyspaceToAutoscale",
        "description": "Migrate an Azure Cosmos DB Cassandra Keyspace from manual throughput to autoscale",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Cassandra Keyspace migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Cassandra Keyspace migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "CassandraResources_MigrateCassandraKeyspaceToManualThroughput",
        "description": "Migrate an Azure Cosmos DB Cassandra Keyspace from autoscale to manual throughput",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Cassandra Keyspace migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Cassandra Keyspace migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables": {
      "get": {
        "operationId": "CassandraResources_ListCassandraTables",
        "description": "Lists the Cassandra table under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Cassandra table properties were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB Cassandra table.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of an Azure Cosmos DB Cassandra table",
                        "type": "object",
                        "properties": {
                          "resource": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB Cassandra table resource object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB Cassandra table"
                                  },
                                  "defaultTtl": {
                                    "type": "integer",
                                    "description": "Time to live of the Cosmos DB Cassandra table"
                                  },
                                  "schema": {
                                    "description": "Schema of the Cosmos DB Cassandra table",
                                    "type": "object",
                                    "properties": {
                                      "columns": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Cosmos DB Cassandra table column",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the Cosmos DB Cassandra table column"
                                            },
                                            "type": {
                                              "type": "string",
                                              "description": "Type of the Cosmos DB Cassandra table column"
                                            }
                                          }
                                        },
                                        "description": "List of Cassandra table columns."
                                      },
                                      "partitionKeys": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Cosmos DB Cassandra table partition key",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the Cosmos DB Cassandra table partition key"
                                            }
                                          }
                                        },
                                        "description": "List of partition key."
                                      },
                                      "clusterKeys": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "Cosmos DB Cassandra table cluster key",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "Name of the Cosmos DB Cassandra table cluster key"
                                            },
                                            "orderBy": {
                                              "type": "string",
                                              "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
                                            }
                                          }
                                        },
                                        "description": "List of cluster key."
                                      }
                                    }
                                  },
                                  "analyticalStorageTtl": {
                                    "type": "integer",
                                    "description": "Analytical TTL."
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              {
                                "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                "type": "object",
                                "properties": {
                                  "_rid": {
                                    "type": "string",
                                    "description": "A system generated property. A unique identifier.",
                                    "readOnly": true
                                  },
                                  "_ts": {
                                    "type": "number",
                                    "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                    "readOnly": true
                                  },
                                  "_etag": {
                                    "type": "string",
                                    "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          },
                          "options": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB options resource object",
                                "readOnly": true,
                                "properties": {
                                  "throughput": {
                                    "type": "integer",
                                    "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                                  },
                                  "autoscaleSettings": {
                                    "type": "object",
                                    "description": "Specifies the Autoscale settings.",
                                    "properties": {
                                      "maxThroughput": {
                                        "type": "integer",
                                        "description": "Represents maximum throughput, the resource can scale up to."
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "List of Cassandra tables and their properties."
                }
              },
              "description": "The List operation response, that contains the Cassandra tables and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}": {
      "get": {
        "operationId": "CassandraResources_GetCassandraTable",
        "description": "Gets the Cassandra table under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Cassandra table property was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB Cassandra table.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB Cassandra table",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB Cassandra table resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB Cassandra table"
                            },
                            "defaultTtl": {
                              "type": "integer",
                              "description": "Time to live of the Cosmos DB Cassandra table"
                            },
                            "schema": {
                              "description": "Schema of the Cosmos DB Cassandra table",
                              "type": "object",
                              "properties": {
                                "columns": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Cosmos DB Cassandra table column",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the Cosmos DB Cassandra table column"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Type of the Cosmos DB Cassandra table column"
                                      }
                                    }
                                  },
                                  "description": "List of Cassandra table columns."
                                },
                                "partitionKeys": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Cosmos DB Cassandra table partition key",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the Cosmos DB Cassandra table partition key"
                                      }
                                    }
                                  },
                                  "description": "List of partition key."
                                },
                                "clusterKeys": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Cosmos DB Cassandra table cluster key",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the Cosmos DB Cassandra table cluster key"
                                      },
                                      "orderBy": {
                                        "type": "string",
                                        "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
                                      }
                                    }
                                  },
                                  "description": "List of cluster key."
                                }
                              }
                            },
                            "analyticalStorageTtl": {
                              "type": "integer",
                              "description": "Analytical TTL."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "CassandraResources_CreateUpdateCassandraTable",
        "description": "Create or update an Azure Cosmos DB Cassandra Table",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateCassandraTableParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update Cosmos DB Cassandra table.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update Azure Cosmos DB Cassandra table.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB Cassandra table resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB Cassandra table"
                        },
                        "defaultTtl": {
                          "type": "integer",
                          "description": "Time to live of the Cosmos DB Cassandra table"
                        },
                        "schema": {
                          "description": "Schema of the Cosmos DB Cassandra table",
                          "type": "object",
                          "properties": {
                            "columns": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Cosmos DB Cassandra table column",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB Cassandra table column"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "Type of the Cosmos DB Cassandra table column"
                                  }
                                }
                              },
                              "description": "List of Cassandra table columns."
                            },
                            "partitionKeys": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Cosmos DB Cassandra table partition key",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB Cassandra table partition key"
                                  }
                                }
                              },
                              "description": "List of partition key."
                            },
                            "clusterKeys": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Cosmos DB Cassandra table cluster key",
                                "properties": {
                                  "name": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB Cassandra table cluster key"
                                  },
                                  "orderBy": {
                                    "type": "string",
                                    "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
                                  }
                                }
                              },
                              "description": "List of cluster key."
                            }
                          }
                        },
                        "analyticalStorageTtl": {
                          "type": "integer",
                          "description": "Analytical TTL."
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "options": {
                      "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
                      "type": "object",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Request Units per second. For example, \"throughput\": 10000."
                        },
                        "autoscaleSettings": {
                          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput, the resource can scale up to."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the current Cassandra Table."
          }
        ],
        "responses": {
          "200": {
            "description": "The Cassandra Table create or update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB Cassandra table.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB Cassandra table",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB Cassandra table resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB Cassandra table"
                            },
                            "defaultTtl": {
                              "type": "integer",
                              "description": "Time to live of the Cosmos DB Cassandra table"
                            },
                            "schema": {
                              "description": "Schema of the Cosmos DB Cassandra table",
                              "type": "object",
                              "properties": {
                                "columns": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Cosmos DB Cassandra table column",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the Cosmos DB Cassandra table column"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "Type of the Cosmos DB Cassandra table column"
                                      }
                                    }
                                  },
                                  "description": "List of Cassandra table columns."
                                },
                                "partitionKeys": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Cosmos DB Cassandra table partition key",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the Cosmos DB Cassandra table partition key"
                                      }
                                    }
                                  },
                                  "description": "List of partition key."
                                },
                                "clusterKeys": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "Cosmos DB Cassandra table cluster key",
                                    "properties": {
                                      "name": {
                                        "type": "string",
                                        "description": "Name of the Cosmos DB Cassandra table cluster key"
                                      },
                                      "orderBy": {
                                        "type": "string",
                                        "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
                                      }
                                    }
                                  },
                                  "description": "List of cluster key."
                                }
                              }
                            },
                            "analyticalStorageTtl": {
                              "type": "integer",
                              "description": "Analytical TTL."
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Cassandra Table create or update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "CassandraResources_DeleteCassandraTable",
        "description": "Deletes an existing Azure Cosmos DB Cassandra table.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The Cassandra table delete operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The Cassandra table delete operation was completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}/throughputSettings/default": {
      "get": {
        "operationId": "CassandraResources_GetCassandraTableThroughput",
        "description": "Gets the RUs per second of the Cassandra table under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the Cassandra table was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "CassandraResources_UpdateCassandraTableThroughput",
        "description": "Update RUs per second of an Azure Cosmos DB Cassandra table",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to update Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to update Azure Cosmos DB resource throughput.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                        },
                        "autoscaleSettings": {
                          "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput container can scale up to."
                            },
                            "autoUpgradePolicy": {
                              "description": "Cosmos DB resource auto-upgrade policy",
                              "type": "object",
                              "properties": {
                                "throughputPolicy": {
                                  "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Determines whether the ThroughputPolicy is active or not"
                                    },
                                    "incrementPercent": {
                                      "type": "integer",
                                      "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                    }
                                  }
                                }
                              }
                            },
                            "targetMaxThroughput": {
                              "type": "integer",
                              "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                              "readOnly": true
                            }
                          },
                          "required": [
                            "maxThroughput"
                          ]
                        },
                        "minimumThroughput": {
                          "type": "string",
                          "description": "The minimum throughput of the resource",
                          "readOnly": true
                        },
                        "offerReplacePending": {
                          "type": "string",
                          "description": "The throughput replace is pending",
                          "readOnly": true
                        },
                        "instantMaximumThroughput": {
                          "type": "string",
                          "description": "The offer throughput value to instantly scale up without triggering splits",
                          "readOnly": true
                        },
                        "softAllowedMaximumThroughput": {
                          "type": "string",
                          "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The RUs per second of the parameters to provide for the current Cassandra table."
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the Cassandra table update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The RUs per second of the Cassandra table update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "CassandraResources_MigrateCassandraTableToAutoscale",
        "description": "Migrate an Azure Cosmos DB Cassandra table from manual throughput to autoscale",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Cassandra table migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Cassandra table migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/cassandraKeyspaces/{keyspaceName}/tables/{tableName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "CassandraResources_MigrateCassandraTableToManualThroughput",
        "description": "Migrate an Azure Cosmos DB Cassandra table from autoscale to manual throughput",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "keyspaceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB keyspace name."
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Cassandra table migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Cassandra table migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases": {
      "get": {
        "operationId": "GremlinResources_ListGremlinDatabases",
        "description": "Lists the Gremlin databases under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Gremlin database properties were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB Gremlin database.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of an Azure Cosmos DB SQL database",
                        "type": "object",
                        "properties": {
                          "resource": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB Gremlin database resource object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB Gremlin database"
                                  },
                                  "restoreParameters": {
                                    "description": "Parameters to indicate the information about the restore",
                                    "type": "object",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "properties": {
                                      "restoreSource": {
                                        "type": "string",
                                        "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                      },
                                      "restoreTimestampInUtc": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Time to which the account has to be restored (ISO-8601 format)."
                                      },
                                      "restoreWithTtlDisabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                      }
                                    }
                                  },
                                  "createMode": {
                                    "description": "Enum to indicate the mode of resource creation.",
                                    "type": "string",
                                    "default": "Default",
                                    "enum": [
                                      "Default",
                                      "Restore"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CreateMode",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              {
                                "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                "type": "object",
                                "properties": {
                                  "_rid": {
                                    "type": "string",
                                    "description": "A system generated property. A unique identifier.",
                                    "readOnly": true
                                  },
                                  "_ts": {
                                    "type": "number",
                                    "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                    "readOnly": true
                                  },
                                  "_etag": {
                                    "type": "string",
                                    "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          },
                          "options": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB options resource object",
                                "readOnly": true,
                                "properties": {
                                  "throughput": {
                                    "type": "integer",
                                    "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                                  },
                                  "autoscaleSettings": {
                                    "type": "object",
                                    "description": "Specifies the Autoscale settings.",
                                    "properties": {
                                      "maxThroughput": {
                                        "type": "integer",
                                        "description": "Represents maximum throughput, the resource can scale up to."
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "List of Gremlin databases and their properties."
                }
              },
              "description": "The List operation response, that contains the Gremlin databases and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}": {
      "get": {
        "operationId": "GremlinResources_GetGremlinDatabase",
        "description": "Gets the Gremlin databases under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Gremlin database property was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB Gremlin database.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB SQL database",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB Gremlin database resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB Gremlin database"
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "GremlinResources_CreateUpdateGremlinDatabase",
        "description": "Create or update an Azure Cosmos DB Gremlin database",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateGremlinDatabaseParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update Cosmos DB Gremlin database.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update Azure Cosmos DB Gremlin database.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB Gremlin database resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB Gremlin database"
                        },
                        "restoreParameters": {
                          "description": "Parameters to indicate the information about the restore",
                          "type": "object",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "properties": {
                            "restoreSource": {
                              "type": "string",
                              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                            },
                            "restoreTimestampInUtc": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time to which the account has to be restored (ISO-8601 format)."
                            },
                            "restoreWithTtlDisabled": {
                              "type": "boolean",
                              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                            }
                          }
                        },
                        "createMode": {
                          "description": "Enum to indicate the mode of resource creation.",
                          "type": "string",
                          "default": "Default",
                          "enum": [
                            "Default",
                            "Restore"
                          ],
                          "x-ms-enum": {
                            "name": "CreateMode",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "options": {
                      "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
                      "type": "object",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Request Units per second. For example, \"throughput\": 10000."
                        },
                        "autoscaleSettings": {
                          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput, the resource can scale up to."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the current Gremlin database."
          }
        ],
        "responses": {
          "200": {
            "description": "The Gremlin database create or update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB Gremlin database.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB SQL database",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB Gremlin database resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB Gremlin database"
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Gremlin database create or update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "GremlinResources_DeleteGremlinDatabase",
        "description": "Deletes an existing Azure Cosmos DB Gremlin database.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The Gremlin database delete operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The Gremlin database delete operation was completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/throughputSettings/default": {
      "get": {
        "operationId": "GremlinResources_GetGremlinDatabaseThroughput",
        "description": "Gets the RUs per second of the Gremlin database under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the Gremlin database was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "GremlinResources_UpdateGremlinDatabaseThroughput",
        "description": "Update RUs per second of an Azure Cosmos DB Gremlin database",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to update Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to update Azure Cosmos DB resource throughput.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                        },
                        "autoscaleSettings": {
                          "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput container can scale up to."
                            },
                            "autoUpgradePolicy": {
                              "description": "Cosmos DB resource auto-upgrade policy",
                              "type": "object",
                              "properties": {
                                "throughputPolicy": {
                                  "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Determines whether the ThroughputPolicy is active or not"
                                    },
                                    "incrementPercent": {
                                      "type": "integer",
                                      "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                    }
                                  }
                                }
                              }
                            },
                            "targetMaxThroughput": {
                              "type": "integer",
                              "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                              "readOnly": true
                            }
                          },
                          "required": [
                            "maxThroughput"
                          ]
                        },
                        "minimumThroughput": {
                          "type": "string",
                          "description": "The minimum throughput of the resource",
                          "readOnly": true
                        },
                        "offerReplacePending": {
                          "type": "string",
                          "description": "The throughput replace is pending",
                          "readOnly": true
                        },
                        "instantMaximumThroughput": {
                          "type": "string",
                          "description": "The offer throughput value to instantly scale up without triggering splits",
                          "readOnly": true
                        },
                        "softAllowedMaximumThroughput": {
                          "type": "string",
                          "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The RUs per second of the parameters to provide for the current Gremlin database."
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the Gremlin database update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The RUs per second of the Gremlin database update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "GremlinResources_MigrateGremlinDatabaseToAutoscale",
        "description": "Migrate an Azure Cosmos DB Gremlin database from manual throughput to autoscale",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Gremlin database migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Gremlin database migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "GremlinResources_MigrateGremlinDatabaseToManualThroughput",
        "description": "Migrate an Azure Cosmos DB Gremlin database from autoscale to manual throughput",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Gremlin database migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Gremlin database migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs": {
      "get": {
        "operationId": "GremlinResources_ListGremlinGraphs",
        "description": "Lists the Gremlin graph under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Gremlin graph properties were retrieved successfully.",
            "schema": {
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB Gremlin graph.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "The properties of an Azure Cosmos DB Gremlin graph",
                        "type": "object",
                        "properties": {
                          "resource": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB Gremlin graph resource object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "Name of the Cosmos DB Gremlin graph"
                                  },
                                  "indexingPolicy": {
                                    "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph",
                                    "type": "object",
                                    "properties": {
                                      "automatic": {
                                        "type": "boolean",
                                        "description": "Indicates if the indexing policy is automatic"
                                      },
                                      "indexingMode": {
                                        "description": "Indicates the indexing mode.",
                                        "type": "string",
                                        "default": "consistent",
                                        "enum": [
                                          "consistent",
                                          "lazy",
                                          "none"
                                        ],
                                        "x-ms-enum": {
                                          "name": "IndexingMode",
                                          "modelAsString": true
                                        }
                                      },
                                      "includedPaths": {
                                        "description": "List of paths to include in the indexing",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The paths that are included in indexing",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                            },
                                            "indexes": {
                                              "description": "List of indexes for this path",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "description": "The indexes for the path.",
                                                "properties": {
                                                  "dataType": {
                                                    "description": "The datatype for which the indexing behavior is applied to.",
                                                    "type": "string",
                                                    "default": "String",
                                                    "enum": [
                                                      "String",
                                                      "Number",
                                                      "Point",
                                                      "Polygon",
                                                      "LineString",
                                                      "MultiPolygon"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "DataType",
                                                      "modelAsString": true
                                                    }
                                                  },
                                                  "precision": {
                                                    "description": "The precision of the index. -1 is maximum precision.",
                                                    "type": "integer"
                                                  },
                                                  "kind": {
                                                    "description": "Indicates the type of index.",
                                                    "type": "string",
                                                    "default": "Hash",
                                                    "enum": [
                                                      "Hash",
                                                      "Range",
                                                      "Spatial"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "IndexKind",
                                                      "modelAsString": true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "excludedPaths": {
                                        "description": "List of paths to exclude from indexing",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                            }
                                          }
                                        }
                                      },
                                      "compositeIndexes": {
                                        "description": "List of composite path list",
                                        "type": "array",
                                        "items": {
                                          "description": "List of composite path",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "path": {
                                                "type": "string",
                                                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                              },
                                              "order": {
                                                "description": "Sort order for composite paths.",
                                                "type": "string",
                                                "enum": [
                                                  "ascending",
                                                  "descending"
                                                ],
                                                "x-ms-enum": {
                                                  "name": "CompositePathSortOrder",
                                                  "modelAsString": true
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "spatialIndexes": {
                                        "description": "List of spatial specifics",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                            },
                                            "types": {
                                              "description": "List of path's spatial type",
                                              "type": "array",
                                              "items": {
                                                "description": "Indicates the spatial type of index.",
                                                "type": "string",
                                                "enum": [
                                                  "Point",
                                                  "LineString",
                                                  "Polygon",
                                                  "MultiPolygon"
                                                ],
                                                "x-ms-enum": {
                                                  "name": "SpatialType",
                                                  "modelAsString": true
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "vectorIndexes": {
                                        "description": "List of paths to include in the vector indexing",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "path": {
                                              "type": "string",
                                              "description": "The path to the vector field in the document."
                                            },
                                            "type": {
                                              "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                              "type": "string",
                                              "enum": [
                                                "flat",
                                                "diskANN",
                                                "quantizedFlat"
                                              ],
                                              "x-ms-enum": {
                                                "name": "VectorIndexType",
                                                "modelAsString": true
                                              }
                                            }
                                          },
                                          "required": [
                                            "path",
                                            "type"
                                          ]
                                        }
                                      }
                                    }
                                  },
                                  "partitionKey": {
                                    "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                                    "type": "object",
                                    "properties": {
                                      "paths": {
                                        "description": "List of paths using which data within the container can be partitioned",
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "A path. These typically start with root (/path)"
                                        }
                                      },
                                      "kind": {
                                        "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                                        "type": "string",
                                        "default": "Hash",
                                        "enum": [
                                          "Hash",
                                          "Range",
                                          "MultiHash"
                                        ],
                                        "x-ms-enum": {
                                          "name": "PartitionKind",
                                          "modelAsString": true
                                        }
                                      },
                                      "version": {
                                        "description": "Indicates the version of the partition key definition",
                                        "type": "integer",
                                        "minimum": 1,
                                        "maximum": 2,
                                        "format": "int32"
                                      },
                                      "systemKey": {
                                        "description": "Indicates if the container is using a system generated partition key",
                                        "type": "boolean",
                                        "readOnly": true
                                      }
                                    }
                                  },
                                  "defaultTtl": {
                                    "type": "integer",
                                    "description": "Default time to live"
                                  },
                                  "uniqueKeyPolicy": {
                                    "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                                    "type": "object",
                                    "properties": {
                                      "uniqueKeys": {
                                        "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                          "properties": {
                                            "paths": {
                                              "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                              "type": "array",
                                              "items": {
                                                "type": "string",
                                                "description": "A path. These typically start with root (/path)"
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "conflictResolutionPolicy": {
                                    "description": "The conflict resolution policy for the graph.",
                                    "type": "object",
                                    "properties": {
                                      "mode": {
                                        "description": "Indicates the conflict resolution mode.",
                                        "type": "string",
                                        "default": "LastWriterWins",
                                        "enum": [
                                          "LastWriterWins",
                                          "Custom"
                                        ],
                                        "x-ms-enum": {
                                          "name": "ConflictResolutionMode",
                                          "modelAsString": true
                                        }
                                      },
                                      "conflictResolutionPath": {
                                        "type": "string",
                                        "description": "The conflict resolution path in the case of LastWriterWins mode."
                                      },
                                      "conflictResolutionProcedure": {
                                        "type": "string",
                                        "description": "The procedure to resolve conflicts in the case of custom mode."
                                      }
                                    }
                                  },
                                  "analyticalStorageTtl": {
                                    "type": "integer",
                                    "format": "int64",
                                    "description": "Analytical TTL."
                                  },
                                  "restoreParameters": {
                                    "description": "Parameters to indicate the information about the restore",
                                    "type": "object",
                                    "x-ms-mutability": [
                                      "read",
                                      "create"
                                    ],
                                    "properties": {
                                      "restoreSource": {
                                        "type": "string",
                                        "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                      },
                                      "restoreTimestampInUtc": {
                                        "type": "string",
                                        "format": "date-time",
                                        "description": "Time to which the account has to be restored (ISO-8601 format)."
                                      },
                                      "restoreWithTtlDisabled": {
                                        "type": "boolean",
                                        "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                      }
                                    }
                                  },
                                  "createMode": {
                                    "description": "Enum to indicate the mode of resource creation.",
                                    "type": "string",
                                    "default": "Default",
                                    "enum": [
                                      "Default",
                                      "Restore"
                                    ],
                                    "x-ms-enum": {
                                      "name": "CreateMode",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "required": [
                                  "id"
                                ]
                              },
                              {
                                "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                "type": "object",
                                "properties": {
                                  "_rid": {
                                    "type": "string",
                                    "description": "A system generated property. A unique identifier.",
                                    "readOnly": true
                                  },
                                  "_ts": {
                                    "type": "number",
                                    "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                    "readOnly": true
                                  },
                                  "_etag": {
                                    "type": "string",
                                    "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                    "readOnly": true
                                  }
                                }
                              }
                            ]
                          },
                          "options": {
                            "allOf": [
                              {
                                "type": "object",
                                "description": "Cosmos DB options resource object",
                                "readOnly": true,
                                "properties": {
                                  "throughput": {
                                    "type": "integer",
                                    "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                                  },
                                  "autoscaleSettings": {
                                    "type": "object",
                                    "description": "Specifies the Autoscale settings.",
                                    "properties": {
                                      "maxThroughput": {
                                        "type": "integer",
                                        "description": "Represents maximum throughput, the resource can scale up to."
                                      }
                                    }
                                  }
                                }
                              }
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "List of graphs and their properties."
                }
              },
              "description": "The List operation response, that contains the graphs and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}": {
      "get": {
        "operationId": "GremlinResources_GetGremlinGraph",
        "description": "Gets the Gremlin graph under an existing Azure Cosmos DB database account.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "graphName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB graph name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Gremlin graph property was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB Gremlin graph.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB Gremlin graph",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB Gremlin graph resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB Gremlin graph"
                            },
                            "indexingPolicy": {
                              "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph",
                              "type": "object",
                              "properties": {
                                "automatic": {
                                  "type": "boolean",
                                  "description": "Indicates if the indexing policy is automatic"
                                },
                                "indexingMode": {
                                  "description": "Indicates the indexing mode.",
                                  "type": "string",
                                  "default": "consistent",
                                  "enum": [
                                    "consistent",
                                    "lazy",
                                    "none"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IndexingMode",
                                    "modelAsString": true
                                  }
                                },
                                "includedPaths": {
                                  "description": "List of paths to include in the indexing",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "The paths that are included in indexing",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      },
                                      "indexes": {
                                        "description": "List of indexes for this path",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The indexes for the path.",
                                          "properties": {
                                            "dataType": {
                                              "description": "The datatype for which the indexing behavior is applied to.",
                                              "type": "string",
                                              "default": "String",
                                              "enum": [
                                                "String",
                                                "Number",
                                                "Point",
                                                "Polygon",
                                                "LineString",
                                                "MultiPolygon"
                                              ],
                                              "x-ms-enum": {
                                                "name": "DataType",
                                                "modelAsString": true
                                              }
                                            },
                                            "precision": {
                                              "description": "The precision of the index. -1 is maximum precision.",
                                              "type": "integer"
                                            },
                                            "kind": {
                                              "description": "Indicates the type of index.",
                                              "type": "string",
                                              "default": "Hash",
                                              "enum": [
                                                "Hash",
                                                "Range",
                                                "Spatial"
                                              ],
                                              "x-ms-enum": {
                                                "name": "IndexKind",
                                                "modelAsString": true
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "excludedPaths": {
                                  "description": "List of paths to exclude from indexing",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      }
                                    }
                                  }
                                },
                                "compositeIndexes": {
                                  "description": "List of composite path list",
                                  "type": "array",
                                  "items": {
                                    "description": "List of composite path",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                        },
                                        "order": {
                                          "description": "Sort order for composite paths.",
                                          "type": "string",
                                          "enum": [
                                            "ascending",
                                            "descending"
                                          ],
                                          "x-ms-enum": {
                                            "name": "CompositePathSortOrder",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "spatialIndexes": {
                                  "description": "List of spatial specifics",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      },
                                      "types": {
                                        "description": "List of path's spatial type",
                                        "type": "array",
                                        "items": {
                                          "description": "Indicates the spatial type of index.",
                                          "type": "string",
                                          "enum": [
                                            "Point",
                                            "LineString",
                                            "Polygon",
                                            "MultiPolygon"
                                          ],
                                          "x-ms-enum": {
                                            "name": "SpatialType",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "vectorIndexes": {
                                  "description": "List of paths to include in the vector indexing",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path to the vector field in the document."
                                      },
                                      "type": {
                                        "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                        "type": "string",
                                        "enum": [
                                          "flat",
                                          "diskANN",
                                          "quantizedFlat"
                                        ],
                                        "x-ms-enum": {
                                          "name": "VectorIndexType",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "required": [
                                      "path",
                                      "type"
                                    ]
                                  }
                                }
                              }
                            },
                            "partitionKey": {
                              "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                              "type": "object",
                              "properties": {
                                "paths": {
                                  "description": "List of paths using which data within the container can be partitioned",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "A path. These typically start with root (/path)"
                                  }
                                },
                                "kind": {
                                  "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                                  "type": "string",
                                  "default": "Hash",
                                  "enum": [
                                    "Hash",
                                    "Range",
                                    "MultiHash"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PartitionKind",
                                    "modelAsString": true
                                  }
                                },
                                "version": {
                                  "description": "Indicates the version of the partition key definition",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 2,
                                  "format": "int32"
                                },
                                "systemKey": {
                                  "description": "Indicates if the container is using a system generated partition key",
                                  "type": "boolean",
                                  "readOnly": true
                                }
                              }
                            },
                            "defaultTtl": {
                              "type": "integer",
                              "description": "Default time to live"
                            },
                            "uniqueKeyPolicy": {
                              "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                              "type": "object",
                              "properties": {
                                "uniqueKeys": {
                                  "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                    "properties": {
                                      "paths": {
                                        "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "A path. These typically start with root (/path)"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "conflictResolutionPolicy": {
                              "description": "The conflict resolution policy for the graph.",
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "description": "Indicates the conflict resolution mode.",
                                  "type": "string",
                                  "default": "LastWriterWins",
                                  "enum": [
                                    "LastWriterWins",
                                    "Custom"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ConflictResolutionMode",
                                    "modelAsString": true
                                  }
                                },
                                "conflictResolutionPath": {
                                  "type": "string",
                                  "description": "The conflict resolution path in the case of LastWriterWins mode."
                                },
                                "conflictResolutionProcedure": {
                                  "type": "string",
                                  "description": "The procedure to resolve conflicts in the case of custom mode."
                                }
                              }
                            },
                            "analyticalStorageTtl": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Analytical TTL."
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "GremlinResources_CreateUpdateGremlinGraph",
        "description": "Create or update an Azure Cosmos DB Gremlin graph",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "graphName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB graph name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateGremlinGraphParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create and update Cosmos DB Gremlin graph.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update Azure Cosmos DB Gremlin graph.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB Gremlin graph resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB Gremlin graph"
                        },
                        "indexingPolicy": {
                          "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph",
                          "type": "object",
                          "properties": {
                            "automatic": {
                              "type": "boolean",
                              "description": "Indicates if the indexing policy is automatic"
                            },
                            "indexingMode": {
                              "description": "Indicates the indexing mode.",
                              "type": "string",
                              "default": "consistent",
                              "enum": [
                                "consistent",
                                "lazy",
                                "none"
                              ],
                              "x-ms-enum": {
                                "name": "IndexingMode",
                                "modelAsString": true
                              }
                            },
                            "includedPaths": {
                              "description": "List of paths to include in the indexing",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The paths that are included in indexing",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                  },
                                  "indexes": {
                                    "description": "List of indexes for this path",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "The indexes for the path.",
                                      "properties": {
                                        "dataType": {
                                          "description": "The datatype for which the indexing behavior is applied to.",
                                          "type": "string",
                                          "default": "String",
                                          "enum": [
                                            "String",
                                            "Number",
                                            "Point",
                                            "Polygon",
                                            "LineString",
                                            "MultiPolygon"
                                          ],
                                          "x-ms-enum": {
                                            "name": "DataType",
                                            "modelAsString": true
                                          }
                                        },
                                        "precision": {
                                          "description": "The precision of the index. -1 is maximum precision.",
                                          "type": "integer"
                                        },
                                        "kind": {
                                          "description": "Indicates the type of index.",
                                          "type": "string",
                                          "default": "Hash",
                                          "enum": [
                                            "Hash",
                                            "Range",
                                            "Spatial"
                                          ],
                                          "x-ms-enum": {
                                            "name": "IndexKind",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "excludedPaths": {
                              "description": "List of paths to exclude from indexing",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                  }
                                }
                              }
                            },
                            "compositeIndexes": {
                              "description": "List of composite path list",
                              "type": "array",
                              "items": {
                                "description": "List of composite path",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                    },
                                    "order": {
                                      "description": "Sort order for composite paths.",
                                      "type": "string",
                                      "enum": [
                                        "ascending",
                                        "descending"
                                      ],
                                      "x-ms-enum": {
                                        "name": "CompositePathSortOrder",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "spatialIndexes": {
                              "description": "List of spatial specifics",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                  },
                                  "types": {
                                    "description": "List of path's spatial type",
                                    "type": "array",
                                    "items": {
                                      "description": "Indicates the spatial type of index.",
                                      "type": "string",
                                      "enum": [
                                        "Point",
                                        "LineString",
                                        "Polygon",
                                        "MultiPolygon"
                                      ],
                                      "x-ms-enum": {
                                        "name": "SpatialType",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "vectorIndexes": {
                              "description": "List of paths to include in the vector indexing",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path to the vector field in the document."
                                  },
                                  "type": {
                                    "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                    "type": "string",
                                    "enum": [
                                      "flat",
                                      "diskANN",
                                      "quantizedFlat"
                                    ],
                                    "x-ms-enum": {
                                      "name": "VectorIndexType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "required": [
                                  "path",
                                  "type"
                                ]
                              }
                            }
                          }
                        },
                        "partitionKey": {
                          "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                          "type": "object",
                          "properties": {
                            "paths": {
                              "description": "List of paths using which data within the container can be partitioned",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "A path. These typically start with root (/path)"
                              }
                            },
                            "kind": {
                              "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                              "type": "string",
                              "default": "Hash",
                              "enum": [
                                "Hash",
                                "Range",
                                "MultiHash"
                              ],
                              "x-ms-enum": {
                                "name": "PartitionKind",
                                "modelAsString": true
                              }
                            },
                            "version": {
                              "description": "Indicates the version of the partition key definition",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 2,
                              "format": "int32"
                            },
                            "systemKey": {
                              "description": "Indicates if the container is using a system generated partition key",
                              "type": "boolean",
                              "readOnly": true
                            }
                          }
                        },
                        "defaultTtl": {
                          "type": "integer",
                          "description": "Default time to live"
                        },
                        "uniqueKeyPolicy": {
                          "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                          "type": "object",
                          "properties": {
                            "uniqueKeys": {
                              "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                "properties": {
                                  "paths": {
                                    "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "A path. These typically start with root (/path)"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "conflictResolutionPolicy": {
                          "description": "The conflict resolution policy for the graph.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "Indicates the conflict resolution mode.",
                              "type": "string",
                              "default": "LastWriterWins",
                              "enum": [
                                "LastWriterWins",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "ConflictResolutionMode",
                                "modelAsString": true
                              }
                            },
                            "conflictResolutionPath": {
                              "type": "string",
                              "description": "The conflict resolution path in the case of LastWriterWins mode."
                            },
                            "conflictResolutionProcedure": {
                              "type": "string",
                              "description": "The procedure to resolve conflicts in the case of custom mode."
                            }
                          }
                        },
                        "analyticalStorageTtl": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Analytical TTL."
                        },
                        "restoreParameters": {
                          "description": "Parameters to indicate the information about the restore",
                          "type": "object",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "properties": {
                            "restoreSource": {
                              "type": "string",
                              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                            },
                            "restoreTimestampInUtc": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time to which the account has to be restored (ISO-8601 format)."
                            },
                            "restoreWithTtlDisabled": {
                              "type": "boolean",
                              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                            }
                          }
                        },
                        "createMode": {
                          "description": "Enum to indicate the mode of resource creation.",
                          "type": "string",
                          "default": "Default",
                          "enum": [
                            "Default",
                            "Restore"
                          ],
                          "x-ms-enum": {
                            "name": "CreateMode",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    "options": {
                      "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
                      "type": "object",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Request Units per second. For example, \"throughput\": 10000."
                        },
                        "autoscaleSettings": {
                          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput, the resource can scale up to."
                            }
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The parameters to provide for the current Gremlin graph."
          }
        ],
        "responses": {
          "200": {
            "description": "The Gremlin graph create or update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB Gremlin graph.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB Gremlin graph",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB Gremlin graph resource object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "Name of the Cosmos DB Gremlin graph"
                            },
                            "indexingPolicy": {
                              "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph",
                              "type": "object",
                              "properties": {
                                "automatic": {
                                  "type": "boolean",
                                  "description": "Indicates if the indexing policy is automatic"
                                },
                                "indexingMode": {
                                  "description": "Indicates the indexing mode.",
                                  "type": "string",
                                  "default": "consistent",
                                  "enum": [
                                    "consistent",
                                    "lazy",
                                    "none"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IndexingMode",
                                    "modelAsString": true
                                  }
                                },
                                "includedPaths": {
                                  "description": "List of paths to include in the indexing",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "The paths that are included in indexing",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      },
                                      "indexes": {
                                        "description": "List of indexes for this path",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The indexes for the path.",
                                          "properties": {
                                            "dataType": {
                                              "description": "The datatype for which the indexing behavior is applied to.",
                                              "type": "string",
                                              "default": "String",
                                              "enum": [
                                                "String",
                                                "Number",
                                                "Point",
                                                "Polygon",
                                                "LineString",
                                                "MultiPolygon"
                                              ],
                                              "x-ms-enum": {
                                                "name": "DataType",
                                                "modelAsString": true
                                              }
                                            },
                                            "precision": {
                                              "description": "The precision of the index. -1 is maximum precision.",
                                              "type": "integer"
                                            },
                                            "kind": {
                                              "description": "Indicates the type of index.",
                                              "type": "string",
                                              "default": "Hash",
                                              "enum": [
                                                "Hash",
                                                "Range",
                                                "Spatial"
                                              ],
                                              "x-ms-enum": {
                                                "name": "IndexKind",
                                                "modelAsString": true
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "excludedPaths": {
                                  "description": "List of paths to exclude from indexing",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      }
                                    }
                                  }
                                },
                                "compositeIndexes": {
                                  "description": "List of composite path list",
                                  "type": "array",
                                  "items": {
                                    "description": "List of composite path",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                        },
                                        "order": {
                                          "description": "Sort order for composite paths.",
                                          "type": "string",
                                          "enum": [
                                            "ascending",
                                            "descending"
                                          ],
                                          "x-ms-enum": {
                                            "name": "CompositePathSortOrder",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "spatialIndexes": {
                                  "description": "List of spatial specifics",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      },
                                      "types": {
                                        "description": "List of path's spatial type",
                                        "type": "array",
                                        "items": {
                                          "description": "Indicates the spatial type of index.",
                                          "type": "string",
                                          "enum": [
                                            "Point",
                                            "LineString",
                                            "Polygon",
                                            "MultiPolygon"
                                          ],
                                          "x-ms-enum": {
                                            "name": "SpatialType",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                },
                                "vectorIndexes": {
                                  "description": "List of paths to include in the vector indexing",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path to the vector field in the document."
                                      },
                                      "type": {
                                        "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                        "type": "string",
                                        "enum": [
                                          "flat",
                                          "diskANN",
                                          "quantizedFlat"
                                        ],
                                        "x-ms-enum": {
                                          "name": "VectorIndexType",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "required": [
                                      "path",
                                      "type"
                                    ]
                                  }
                                }
                              }
                            },
                            "partitionKey": {
                              "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                              "type": "object",
                              "properties": {
                                "paths": {
                                  "description": "List of paths using which data within the container can be partitioned",
                                  "type": "array",
                                  "items": {
                                    "type": "string",
                                    "description": "A path. These typically start with root (/path)"
                                  }
                                },
                                "kind": {
                                  "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                                  "type": "string",
                                  "default": "Hash",
                                  "enum": [
                                    "Hash",
                                    "Range",
                                    "MultiHash"
                                  ],
                                  "x-ms-enum": {
                                    "name": "PartitionKind",
                                    "modelAsString": true
                                  }
                                },
                                "version": {
                                  "description": "Indicates the version of the partition key definition",
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 2,
                                  "format": "int32"
                                },
                                "systemKey": {
                                  "description": "Indicates if the container is using a system generated partition key",
                                  "type": "boolean",
                                  "readOnly": true
                                }
                              }
                            },
                            "defaultTtl": {
                              "type": "integer",
                              "description": "Default time to live"
                            },
                            "uniqueKeyPolicy": {
                              "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                              "type": "object",
                              "properties": {
                                "uniqueKeys": {
                                  "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                    "properties": {
                                      "paths": {
                                        "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                        "type": "array",
                                        "items": {
                                          "type": "string",
                                          "description": "A path. These typically start with root (/path)"
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "conflictResolutionPolicy": {
                              "description": "The conflict resolution policy for the graph.",
                              "type": "object",
                              "properties": {
                                "mode": {
                                  "description": "Indicates the conflict resolution mode.",
                                  "type": "string",
                                  "default": "LastWriterWins",
                                  "enum": [
                                    "LastWriterWins",
                                    "Custom"
                                  ],
                                  "x-ms-enum": {
                                    "name": "ConflictResolutionMode",
                                    "modelAsString": true
                                  }
                                },
                                "conflictResolutionPath": {
                                  "type": "string",
                                  "description": "The conflict resolution path in the case of LastWriterWins mode."
                                },
                                "conflictResolutionProcedure": {
                                  "type": "string",
                                  "description": "The procedure to resolve conflicts in the case of custom mode."
                                }
                              }
                            },
                            "analyticalStorageTtl": {
                              "type": "integer",
                              "format": "int64",
                              "description": "Analytical TTL."
                            },
                            "restoreParameters": {
                              "description": "Parameters to indicate the information about the restore",
                              "type": "object",
                              "x-ms-mutability": [
                                "read",
                                "create"
                              ],
                              "properties": {
                                "restoreSource": {
                                  "type": "string",
                                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                },
                                "restoreTimestampInUtc": {
                                  "type": "string",
                                  "format": "date-time",
                                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                                },
                                "restoreWithTtlDisabled": {
                                  "type": "boolean",
                                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                }
                              }
                            },
                            "createMode": {
                              "description": "Enum to indicate the mode of resource creation.",
                              "type": "string",
                              "default": "Default",
                              "enum": [
                                "Default",
                                "Restore"
                              ],
                              "x-ms-enum": {
                                "name": "CreateMode",
                                "modelAsString": true
                              }
                            }
                          },
                          "required": [
                            "id"
                          ]
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    },
                    "options": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB options resource object",
                          "readOnly": true,
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                            },
                            "autoscaleSettings": {
                              "type": "object",
                              "description": "Specifies the Autoscale settings.",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput, the resource can scale up to."
                                }
                              }
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Gremlin graph create or update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "GremlinResources_DeleteGremlinGraph",
        "description": "Deletes an existing Azure Cosmos DB Gremlin graph.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "graphName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB graph name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "The Gremlin graph delete operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The Gremlin graph delete operation was completed successfully."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/throughputSettings/default": {
      "get": {
        "operationId": "GremlinResources_GetGremlinGraphThroughput",
        "description": "Gets the Gremlin graph throughput under an existing Azure Cosmos DB database account with the provided name.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "graphName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB graph name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the Gremlin graph was retrieved successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "GremlinResources_UpdateGremlinGraphThroughput",
        "description": "Update RUs per second of an Azure Cosmos DB Gremlin graph",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "graphName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB graph name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "updateThroughputParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to update Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to update Azure Cosmos DB resource throughput.",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "type": "object",
                      "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                      "properties": {
                        "throughput": {
                          "type": "integer",
                          "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                        },
                        "autoscaleSettings": {
                          "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                          "type": "object",
                          "properties": {
                            "maxThroughput": {
                              "type": "integer",
                              "description": "Represents maximum throughput container can scale up to."
                            },
                            "autoUpgradePolicy": {
                              "description": "Cosmos DB resource auto-upgrade policy",
                              "type": "object",
                              "properties": {
                                "throughputPolicy": {
                                  "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                  "type": "object",
                                  "properties": {
                                    "isEnabled": {
                                      "type": "boolean",
                                      "description": "Determines whether the ThroughputPolicy is active or not"
                                    },
                                    "incrementPercent": {
                                      "type": "integer",
                                      "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                    }
                                  }
                                }
                              }
                            },
                            "targetMaxThroughput": {
                              "type": "integer",
                              "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                              "readOnly": true
                            }
                          },
                          "required": [
                            "maxThroughput"
                          ]
                        },
                        "minimumThroughput": {
                          "type": "string",
                          "description": "The minimum throughput of the resource",
                          "readOnly": true
                        },
                        "offerReplacePending": {
                          "type": "string",
                          "description": "The throughput replace is pending",
                          "readOnly": true
                        },
                        "instantMaximumThroughput": {
                          "type": "string",
                          "description": "The offer throughput value to instantly scale up without triggering splits",
                          "readOnly": true
                        },
                        "softAllowedMaximumThroughput": {
                          "type": "string",
                          "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                          "readOnly": true
                        }
                      }
                    }
                  },
                  "required": [
                    "resource"
                  ]
                }
              },
              "required": [
                "properties"
              ]
            },
            "description": "The RUs per second of the parameters to provide for the current Gremlin graph."
          }
        ],
        "responses": {
          "200": {
            "description": "The RUs per second of the Gremlin graph update operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The RUs per second of the Gremlin graph update operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/throughputSettings/default/migrateToAutoscale": {
      "post": {
        "operationId": "GremlinResources_MigrateGremlinGraphToAutoscale",
        "description": "Migrate an Azure Cosmos DB Gremlin graph from manual throughput to autoscale",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "graphName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB graph name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Gremlin graph migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Gremlin graph migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/throughputSettings/default/migrateToManualThroughput": {
      "post": {
        "operationId": "GremlinResources_MigrateGremlinGraphToManualThroughput",
        "description": "Migrate an Azure Cosmos DB Gremlin graph from autoscale to manual throughput",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "graphName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB graph name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Gremlin graph migrate operation was completed successfully.",
            "schema": {
              "description": "An Azure Cosmos DB resource throughput.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "The properties of an Azure Cosmos DB resource throughput",
                  "type": "object",
                  "properties": {
                    "resource": {
                      "allOf": [
                        {
                          "type": "object",
                          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                          "properties": {
                            "throughput": {
                              "type": "integer",
                              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                            },
                            "autoscaleSettings": {
                              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                              "type": "object",
                              "properties": {
                                "maxThroughput": {
                                  "type": "integer",
                                  "description": "Represents maximum throughput container can scale up to."
                                },
                                "autoUpgradePolicy": {
                                  "description": "Cosmos DB resource auto-upgrade policy",
                                  "type": "object",
                                  "properties": {
                                    "throughputPolicy": {
                                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                                      "type": "object",
                                      "properties": {
                                        "isEnabled": {
                                          "type": "boolean",
                                          "description": "Determines whether the ThroughputPolicy is active or not"
                                        },
                                        "incrementPercent": {
                                          "type": "integer",
                                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                        }
                                      }
                                    }
                                  }
                                },
                                "targetMaxThroughput": {
                                  "type": "integer",
                                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                                  "readOnly": true
                                }
                              },
                              "required": [
                                "maxThroughput"
                              ]
                            },
                            "minimumThroughput": {
                              "type": "string",
                              "description": "The minimum throughput of the resource",
                              "readOnly": true
                            },
                            "offerReplacePending": {
                              "type": "string",
                              "description": "The throughput replace is pending",
                              "readOnly": true
                            },
                            "instantMaximumThroughput": {
                              "type": "string",
                              "description": "The offer throughput value to instantly scale up without triggering splits",
                              "readOnly": true
                            },
                            "softAllowedMaximumThroughput": {
                              "type": "string",
                              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                              "readOnly": true
                            }
                          }
                        },
                        {
                          "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                          "type": "object",
                          "properties": {
                            "_rid": {
                              "type": "string",
                              "description": "A system generated property. A unique identifier.",
                              "readOnly": true
                            },
                            "_ts": {
                              "type": "number",
                              "description": "A system generated property that denotes the last updated timestamp of the resource.",
                              "readOnly": true
                            },
                            "_etag": {
                              "type": "string",
                              "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                              "readOnly": true
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Gremlin graph migrate operation will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations": {
      "get": {
        "operationId": "Locations_List",
        "description": "List Cosmos DB locations and their properties",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "Cosmos DB location get result",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the database account."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the database account."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "properties": {
                        "type": "object",
                        "description": "Cosmos DB location metadata",
                        "properties": {
                          "supportsAvailabilityZone": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Flag indicating whether the location supports availability zones or not."
                          },
                          "isResidencyRestricted": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Flag indicating whether the location is residency sensitive."
                          },
                          "backupStorageRedundancies": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "description": "Enum to indicate type of backup storage redundancy.",
                              "type": "string",
                              "enum": [
                                "Geo",
                                "Local",
                                "Zone"
                              ],
                              "x-ms-enum": {
                                "name": "BackupStorageRedundancy",
                                "modelAsString": true
                              }
                            },
                            "description": "The properties of available backup storage redundancies."
                          },
                          "isSubscriptionRegionAccessAllowedForRegular": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Flag indicating whether the subscription have access in region for Non-Availability Zones."
                          },
                          "isSubscriptionRegionAccessAllowedForAz": {
                            "type": "boolean",
                            "readOnly": true,
                            "description": "Flag indicating whether the subscription have access in region for Availability Zones(Az)."
                          },
                          "status": {
                            "readOnly": true,
                            "type": "string",
                            "description": "Enum to indicate current buildout status of the region.",
                            "enum": [
                              "Uninitialized",
                              "Initializing",
                              "InternallyReady",
                              "Online",
                              "Deleting"
                            ],
                            "x-ms-enum": {
                              "name": "Status",
                              "modelAsString": true
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "List of Cosmos DB locations and their properties."
                }
              },
              "description": "The List operation response, that contains Cosmos DB locations and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}": {
      "get": {
        "operationId": "Locations_Get",
        "description": "Get the properties of an existing Cosmos DB location",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          }
        ],
        "responses": {
          "200": {
            "description": "The Cosmos DB location properties were retrieved successfully.",
            "schema": {
              "description": "Cosmos DB location get result",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "type": "object",
                  "description": "Cosmos DB location metadata",
                  "properties": {
                    "supportsAvailabilityZone": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Flag indicating whether the location supports availability zones or not."
                    },
                    "isResidencyRestricted": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Flag indicating whether the location is residency sensitive."
                    },
                    "backupStorageRedundancies": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "description": "Enum to indicate type of backup storage redundancy.",
                        "type": "string",
                        "enum": [
                          "Geo",
                          "Local",
                          "Zone"
                        ],
                        "x-ms-enum": {
                          "name": "BackupStorageRedundancy",
                          "modelAsString": true
                        }
                      },
                      "description": "The properties of available backup storage redundancies."
                    },
                    "isSubscriptionRegionAccessAllowedForRegular": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Flag indicating whether the subscription have access in region for Non-Availability Zones."
                    },
                    "isSubscriptionRegionAccessAllowedForAz": {
                      "type": "boolean",
                      "readOnly": true,
                      "description": "Flag indicating whether the subscription have access in region for Availability Zones(Az)."
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "description": "Enum to indicate current buildout status of the region.",
                      "enum": [
                        "Uninitialized",
                        "Initializing",
                        "InternallyReady",
                        "Online",
                        "Deleting"
                      ],
                      "x-ms-enum": {
                        "name": "Status",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/cassandraClusters": {
      "get": {
        "operationId": "CassandraClusters_ListBySubscription",
        "description": "List all managed Cassandra clusters in this subscription.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of managed Cassandra clusters.",
            "schema": {
              "description": "List of managed Cassandra clusters.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "value": {
                  "description": "Container for the array of clusters.",
                  "type": "array",
                  "items": {
                    "description": "Representation of a managed Cassandra cluster.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "identity": {
                        "description": "Identity for the resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The object id of the identity resource."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant id of the resource."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource.",
                            "enum": [
                              "SystemAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedCassandraResourceIdentityType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "properties": {
                        "type": "object",
                        "description": "Properties of a managed Cassandra cluster.",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the resource at the time the operation was called.",
                            "type": "string",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedCassandraProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "restoreFromBackupId": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup."
                          },
                          "delegatedManagementSubnetId": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ],
                            "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'"
                          },
                          "cassandraVersion": {
                            "type": "string",
                            "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
                          },
                          "clusterNameOverride": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ],
                            "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property."
                          },
                          "authenticationMethod": {
                            "type": "string",
                            "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
                            "enum": [
                              "None",
                              "Cassandra",
                              "Ldap"
                            ],
                            "x-ms-enum": {
                              "name": "AuthenticationMethod",
                              "modelAsString": true
                            }
                          },
                          "initialCassandraAdminPassword": {
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true,
                            "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
                            "type": "string"
                          },
                          "prometheusEndpoint": {
                            "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.",
                            "type": "object",
                            "properties": {
                              "ipAddress": {
                                "description": "IP address of this seed node.",
                                "type": "string"
                              }
                            }
                          },
                          "repairEnabled": {
                            "type": "boolean",
                            "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
                          },
                          "clientCertificates": {
                            "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "pem": {
                                  "description": "PEM formatted public key.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "externalGossipCertificates": {
                            "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "pem": {
                                  "description": "PEM formatted public key.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "gossipCertificates": {
                            "readOnly": true,
                            "x-ms-mutability": [
                              "read"
                            ],
                            "description": "List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "pem": {
                                  "description": "PEM formatted public key.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "externalSeedNodes": {
                            "type": "array",
                            "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipAddress": {
                                  "description": "IP address of this seed node.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "seedNodes": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipAddress": {
                                  "description": "IP address of this seed node.",
                                  "type": "string"
                                }
                              }
                            },
                            "description": "List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes."
                          },
                          "hoursBetweenBackups": {
                            "type": "integer",
                            "format": "int32",
                            "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
                          },
                          "deallocated": {
                            "type": "boolean",
                            "description": "Whether the cluster and associated data centers has been deallocated."
                          },
                          "cassandraAuditLoggingEnabled": {
                            "type": "boolean",
                            "description": "Whether Cassandra audit logging is enabled"
                          },
                          "provisionError": {
                            "description": "Error related to resource provisioning.",
                            "type": "object",
                            "properties": {
                              "code": {
                                "description": "The code of error that occurred.",
                                "type": "string"
                              },
                              "message": {
                                "description": "The message of the error.",
                                "type": "string"
                              },
                              "target": {
                                "description": "The target resource of the error.",
                                "type": "string"
                              },
                              "additionalErrorInfo": {
                                "description": "Additional information about the error.",
                                "type": "string"
                              }
                            }
                          },
                          "azureConnectionMethod": {
                            "type": "string",
                            "description": "How to connect to the azure services needed for running the cluster",
                            "enum": [
                              "None",
                              "VPN"
                            ],
                            "x-ms-enum": {
                              "name": "AzureConnectionType",
                              "modelAsString": true
                            }
                          },
                          "privateLinkResourceId": {
                            "readOnly": true,
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/privateLinkServices"
                                }
                              ]
                            },
                            "description": "If the Connection Method is VPN, this is the Id of the private link resource that the datacenters need to connect to."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters": {
      "get": {
        "operationId": "CassandraClusters_ListByResourceGroup",
        "description": "List all managed Cassandra clusters in this resource group.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of managed Cassandra clusters.",
            "schema": {
              "description": "List of managed Cassandra clusters.",
              "readOnly": true,
              "type": "object",
              "properties": {
                "value": {
                  "description": "Container for the array of clusters.",
                  "type": "array",
                  "items": {
                    "description": "Representation of a managed Cassandra cluster.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      },
                      "tags": {
                        "type": "object",
                        "additionalProperties": {
                          "type": "string"
                        },
                        "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                      },
                      "identity": {
                        "description": "Identity for the resource.",
                        "type": "object",
                        "properties": {
                          "principalId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The object id of the identity resource."
                          },
                          "tenantId": {
                            "readOnly": true,
                            "type": "string",
                            "description": "The tenant id of the resource."
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of the resource.",
                            "enum": [
                              "SystemAssigned",
                              "None"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedCassandraResourceIdentityType",
                              "modelAsString": true
                            }
                          }
                        }
                      },
                      "properties": {
                        "type": "object",
                        "description": "Properties of a managed Cassandra cluster.",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the resource at the time the operation was called.",
                            "type": "string",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedCassandraProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "restoreFromBackupId": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create"
                            ],
                            "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup."
                          },
                          "delegatedManagementSubnetId": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ],
                            "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'"
                          },
                          "cassandraVersion": {
                            "type": "string",
                            "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
                          },
                          "clusterNameOverride": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ],
                            "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property."
                          },
                          "authenticationMethod": {
                            "type": "string",
                            "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
                            "enum": [
                              "None",
                              "Cassandra",
                              "Ldap"
                            ],
                            "x-ms-enum": {
                              "name": "AuthenticationMethod",
                              "modelAsString": true
                            }
                          },
                          "initialCassandraAdminPassword": {
                            "x-ms-mutability": [
                              "create"
                            ],
                            "x-ms-secret": true,
                            "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
                            "type": "string"
                          },
                          "prometheusEndpoint": {
                            "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.",
                            "type": "object",
                            "properties": {
                              "ipAddress": {
                                "description": "IP address of this seed node.",
                                "type": "string"
                              }
                            }
                          },
                          "repairEnabled": {
                            "type": "boolean",
                            "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
                          },
                          "clientCertificates": {
                            "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "pem": {
                                  "description": "PEM formatted public key.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "externalGossipCertificates": {
                            "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "pem": {
                                  "description": "PEM formatted public key.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "gossipCertificates": {
                            "readOnly": true,
                            "x-ms-mutability": [
                              "read"
                            ],
                            "description": "List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "pem": {
                                  "description": "PEM formatted public key.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "externalSeedNodes": {
                            "type": "array",
                            "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipAddress": {
                                  "description": "IP address of this seed node.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "seedNodes": {
                            "readOnly": true,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipAddress": {
                                  "description": "IP address of this seed node.",
                                  "type": "string"
                                }
                              }
                            },
                            "description": "List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes."
                          },
                          "hoursBetweenBackups": {
                            "type": "integer",
                            "format": "int32",
                            "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
                          },
                          "deallocated": {
                            "type": "boolean",
                            "description": "Whether the cluster and associated data centers has been deallocated."
                          },
                          "cassandraAuditLoggingEnabled": {
                            "type": "boolean",
                            "description": "Whether Cassandra audit logging is enabled"
                          },
                          "provisionError": {
                            "description": "Error related to resource provisioning.",
                            "type": "object",
                            "properties": {
                              "code": {
                                "description": "The code of error that occurred.",
                                "type": "string"
                              },
                              "message": {
                                "description": "The message of the error.",
                                "type": "string"
                              },
                              "target": {
                                "description": "The target resource of the error.",
                                "type": "string"
                              },
                              "additionalErrorInfo": {
                                "description": "Additional information about the error.",
                                "type": "string"
                              }
                            }
                          },
                          "azureConnectionMethod": {
                            "type": "string",
                            "description": "How to connect to the azure services needed for running the cluster",
                            "enum": [
                              "None",
                              "VPN"
                            ],
                            "x-ms-enum": {
                              "name": "AzureConnectionType",
                              "modelAsString": true
                            }
                          },
                          "privateLinkResourceId": {
                            "readOnly": true,
                            "type": "string",
                            "format": "arm-id",
                            "x-ms-arm-id-details": {
                              "allowedResources": [
                                {
                                  "type": "Microsoft.Network/privateLinkServices"
                                }
                              ]
                            },
                            "description": "If the Connection Method is VPN, this is the Id of the private link resource that the datacenters need to connect to."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}": {
      "get": {
        "operationId": "CassandraClusters_Get",
        "description": "Get the properties of a managed Cassandra cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Managed Cassandra cluster name.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The properties of the managed Cassandra cluster were retrieved successfully.",
            "schema": {
              "description": "Representation of a managed Cassandra cluster.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The object id of the identity resource."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant id of the resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource.",
                      "enum": [
                        "SystemAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraResourceIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Properties of a managed Cassandra cluster.",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "restoreFromBackupId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup."
                    },
                    "delegatedManagementSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'"
                    },
                    "cassandraVersion": {
                      "type": "string",
                      "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
                    },
                    "clusterNameOverride": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property."
                    },
                    "authenticationMethod": {
                      "type": "string",
                      "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
                      "enum": [
                        "None",
                        "Cassandra",
                        "Ldap"
                      ],
                      "x-ms-enum": {
                        "name": "AuthenticationMethod",
                        "modelAsString": true
                      }
                    },
                    "initialCassandraAdminPassword": {
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true,
                      "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
                      "type": "string"
                    },
                    "prometheusEndpoint": {
                      "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.",
                      "type": "object",
                      "properties": {
                        "ipAddress": {
                          "description": "IP address of this seed node.",
                          "type": "string"
                        }
                      }
                    },
                    "repairEnabled": {
                      "type": "boolean",
                      "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
                    },
                    "clientCertificates": {
                      "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalGossipCertificates": {
                      "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "gossipCertificates": {
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "description": "List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalSeedNodes": {
                      "type": "array",
                      "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      },
                      "description": "List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes."
                    },
                    "hoursBetweenBackups": {
                      "type": "integer",
                      "format": "int32",
                      "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the cluster and associated data centers has been deallocated."
                    },
                    "cassandraAuditLoggingEnabled": {
                      "type": "boolean",
                      "description": "Whether Cassandra audit logging is enabled"
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "azureConnectionMethod": {
                      "type": "string",
                      "description": "How to connect to the azure services needed for running the cluster",
                      "enum": [
                        "None",
                        "VPN"
                      ],
                      "x-ms-enum": {
                        "name": "AzureConnectionType",
                        "modelAsString": true
                      }
                    },
                    "privateLinkResourceId": {
                      "readOnly": true,
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/privateLinkServices"
                          }
                        ]
                      },
                      "description": "If the Connection Method is VPN, this is the Id of the private link resource that the datacenters need to connect to."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "CassandraClusters_Delete",
        "description": "Deletes a managed Cassandra cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Managed Cassandra cluster name.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The managed Cassandra cluster will be deleted asynchronously."
          },
          "204": {
            "description": "No such cluster to delete."
          }
        }
      },
      "put": {
        "operationId": "CassandraClusters_CreateUpdate",
        "description": "Create or update a managed Cassandra cluster. When updating, you must specify all writable properties. To update only some properties, use PATCH.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Managed Cassandra cluster name.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Representation of a managed Cassandra cluster.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The object id of the identity resource."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant id of the resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource.",
                      "enum": [
                        "SystemAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraResourceIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Properties of a managed Cassandra cluster.",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "restoreFromBackupId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup."
                    },
                    "delegatedManagementSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'"
                    },
                    "cassandraVersion": {
                      "type": "string",
                      "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
                    },
                    "clusterNameOverride": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property."
                    },
                    "authenticationMethod": {
                      "type": "string",
                      "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
                      "enum": [
                        "None",
                        "Cassandra",
                        "Ldap"
                      ],
                      "x-ms-enum": {
                        "name": "AuthenticationMethod",
                        "modelAsString": true
                      }
                    },
                    "initialCassandraAdminPassword": {
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true,
                      "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
                      "type": "string"
                    },
                    "prometheusEndpoint": {
                      "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.",
                      "type": "object",
                      "properties": {
                        "ipAddress": {
                          "description": "IP address of this seed node.",
                          "type": "string"
                        }
                      }
                    },
                    "repairEnabled": {
                      "type": "boolean",
                      "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
                    },
                    "clientCertificates": {
                      "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalGossipCertificates": {
                      "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "gossipCertificates": {
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "description": "List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalSeedNodes": {
                      "type": "array",
                      "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      },
                      "description": "List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes."
                    },
                    "hoursBetweenBackups": {
                      "type": "integer",
                      "format": "int32",
                      "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the cluster and associated data centers has been deallocated."
                    },
                    "cassandraAuditLoggingEnabled": {
                      "type": "boolean",
                      "description": "Whether Cassandra audit logging is enabled"
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "azureConnectionMethod": {
                      "type": "string",
                      "description": "How to connect to the azure services needed for running the cluster",
                      "enum": [
                        "None",
                        "VPN"
                      ],
                      "x-ms-enum": {
                        "name": "AzureConnectionType",
                        "modelAsString": true
                      }
                    },
                    "privateLinkResourceId": {
                      "readOnly": true,
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/privateLinkServices"
                          }
                        ]
                      },
                      "description": "If the Connection Method is VPN, this is the Id of the private link resource that the datacenters need to connect to."
                    }
                  }
                }
              }
            },
            "description": "The properties specifying the desired state of the managed Cassandra cluster."
          }
        ],
        "responses": {
          "200": {
            "description": "The managed Cassandra cluster is being updated. Poll for provisioningState=Succeeded to find when creation completes.",
            "schema": {
              "description": "Representation of a managed Cassandra cluster.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The object id of the identity resource."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant id of the resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource.",
                      "enum": [
                        "SystemAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraResourceIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Properties of a managed Cassandra cluster.",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "restoreFromBackupId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup."
                    },
                    "delegatedManagementSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'"
                    },
                    "cassandraVersion": {
                      "type": "string",
                      "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
                    },
                    "clusterNameOverride": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property."
                    },
                    "authenticationMethod": {
                      "type": "string",
                      "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
                      "enum": [
                        "None",
                        "Cassandra",
                        "Ldap"
                      ],
                      "x-ms-enum": {
                        "name": "AuthenticationMethod",
                        "modelAsString": true
                      }
                    },
                    "initialCassandraAdminPassword": {
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true,
                      "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
                      "type": "string"
                    },
                    "prometheusEndpoint": {
                      "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.",
                      "type": "object",
                      "properties": {
                        "ipAddress": {
                          "description": "IP address of this seed node.",
                          "type": "string"
                        }
                      }
                    },
                    "repairEnabled": {
                      "type": "boolean",
                      "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
                    },
                    "clientCertificates": {
                      "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalGossipCertificates": {
                      "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "gossipCertificates": {
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "description": "List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalSeedNodes": {
                      "type": "array",
                      "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      },
                      "description": "List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes."
                    },
                    "hoursBetweenBackups": {
                      "type": "integer",
                      "format": "int32",
                      "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the cluster and associated data centers has been deallocated."
                    },
                    "cassandraAuditLoggingEnabled": {
                      "type": "boolean",
                      "description": "Whether Cassandra audit logging is enabled"
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "azureConnectionMethod": {
                      "type": "string",
                      "description": "How to connect to the azure services needed for running the cluster",
                      "enum": [
                        "None",
                        "VPN"
                      ],
                      "x-ms-enum": {
                        "name": "AzureConnectionType",
                        "modelAsString": true
                      }
                    },
                    "privateLinkResourceId": {
                      "readOnly": true,
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/privateLinkServices"
                          }
                        ]
                      },
                      "description": "If the Connection Method is VPN, this is the Id of the private link resource that the datacenters need to connect to."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "The managed Cassandra cluster is being created. Poll for provisioningState=Succeeded to find when creation completes.",
            "schema": {
              "description": "Representation of a managed Cassandra cluster.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The object id of the identity resource."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant id of the resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource.",
                      "enum": [
                        "SystemAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraResourceIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Properties of a managed Cassandra cluster.",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "restoreFromBackupId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup."
                    },
                    "delegatedManagementSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'"
                    },
                    "cassandraVersion": {
                      "type": "string",
                      "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
                    },
                    "clusterNameOverride": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property."
                    },
                    "authenticationMethod": {
                      "type": "string",
                      "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
                      "enum": [
                        "None",
                        "Cassandra",
                        "Ldap"
                      ],
                      "x-ms-enum": {
                        "name": "AuthenticationMethod",
                        "modelAsString": true
                      }
                    },
                    "initialCassandraAdminPassword": {
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true,
                      "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
                      "type": "string"
                    },
                    "prometheusEndpoint": {
                      "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.",
                      "type": "object",
                      "properties": {
                        "ipAddress": {
                          "description": "IP address of this seed node.",
                          "type": "string"
                        }
                      }
                    },
                    "repairEnabled": {
                      "type": "boolean",
                      "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
                    },
                    "clientCertificates": {
                      "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalGossipCertificates": {
                      "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "gossipCertificates": {
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "description": "List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalSeedNodes": {
                      "type": "array",
                      "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      },
                      "description": "List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes."
                    },
                    "hoursBetweenBackups": {
                      "type": "integer",
                      "format": "int32",
                      "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the cluster and associated data centers has been deallocated."
                    },
                    "cassandraAuditLoggingEnabled": {
                      "type": "boolean",
                      "description": "Whether Cassandra audit logging is enabled"
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "azureConnectionMethod": {
                      "type": "string",
                      "description": "How to connect to the azure services needed for running the cluster",
                      "enum": [
                        "None",
                        "VPN"
                      ],
                      "x-ms-enum": {
                        "name": "AzureConnectionType",
                        "modelAsString": true
                      }
                    },
                    "privateLinkResourceId": {
                      "readOnly": true,
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/privateLinkServices"
                          }
                        ]
                      },
                      "description": "If the Connection Method is VPN, this is the Id of the private link resource that the datacenters need to connect to."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "CassandraClusters_Update",
        "description": "Updates some of the properties of a managed Cassandra cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Managed Cassandra cluster name.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Representation of a managed Cassandra cluster.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The object id of the identity resource."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant id of the resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource.",
                      "enum": [
                        "SystemAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraResourceIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Properties of a managed Cassandra cluster.",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "restoreFromBackupId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup."
                    },
                    "delegatedManagementSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'"
                    },
                    "cassandraVersion": {
                      "type": "string",
                      "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
                    },
                    "clusterNameOverride": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property."
                    },
                    "authenticationMethod": {
                      "type": "string",
                      "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
                      "enum": [
                        "None",
                        "Cassandra",
                        "Ldap"
                      ],
                      "x-ms-enum": {
                        "name": "AuthenticationMethod",
                        "modelAsString": true
                      }
                    },
                    "initialCassandraAdminPassword": {
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true,
                      "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
                      "type": "string"
                    },
                    "prometheusEndpoint": {
                      "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.",
                      "type": "object",
                      "properties": {
                        "ipAddress": {
                          "description": "IP address of this seed node.",
                          "type": "string"
                        }
                      }
                    },
                    "repairEnabled": {
                      "type": "boolean",
                      "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
                    },
                    "clientCertificates": {
                      "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalGossipCertificates": {
                      "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "gossipCertificates": {
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "description": "List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalSeedNodes": {
                      "type": "array",
                      "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      },
                      "description": "List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes."
                    },
                    "hoursBetweenBackups": {
                      "type": "integer",
                      "format": "int32",
                      "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the cluster and associated data centers has been deallocated."
                    },
                    "cassandraAuditLoggingEnabled": {
                      "type": "boolean",
                      "description": "Whether Cassandra audit logging is enabled"
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "azureConnectionMethod": {
                      "type": "string",
                      "description": "How to connect to the azure services needed for running the cluster",
                      "enum": [
                        "None",
                        "VPN"
                      ],
                      "x-ms-enum": {
                        "name": "AzureConnectionType",
                        "modelAsString": true
                      }
                    },
                    "privateLinkResourceId": {
                      "readOnly": true,
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/privateLinkServices"
                          }
                        ]
                      },
                      "description": "If the Connection Method is VPN, this is the Id of the private link resource that the datacenters need to connect to."
                    }
                  }
                }
              }
            },
            "description": "Parameters to provide for specifying the managed Cassandra cluster."
          }
        ],
        "responses": {
          "200": {
            "description": "Completed synchronously. This will only happen if the fields changed by patch require no changes to the actual Cassandra data center.",
            "schema": {
              "description": "Representation of a managed Cassandra cluster.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The object id of the identity resource."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant id of the resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource.",
                      "enum": [
                        "SystemAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraResourceIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Properties of a managed Cassandra cluster.",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "restoreFromBackupId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup."
                    },
                    "delegatedManagementSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'"
                    },
                    "cassandraVersion": {
                      "type": "string",
                      "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
                    },
                    "clusterNameOverride": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property."
                    },
                    "authenticationMethod": {
                      "type": "string",
                      "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
                      "enum": [
                        "None",
                        "Cassandra",
                        "Ldap"
                      ],
                      "x-ms-enum": {
                        "name": "AuthenticationMethod",
                        "modelAsString": true
                      }
                    },
                    "initialCassandraAdminPassword": {
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true,
                      "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
                      "type": "string"
                    },
                    "prometheusEndpoint": {
                      "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.",
                      "type": "object",
                      "properties": {
                        "ipAddress": {
                          "description": "IP address of this seed node.",
                          "type": "string"
                        }
                      }
                    },
                    "repairEnabled": {
                      "type": "boolean",
                      "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
                    },
                    "clientCertificates": {
                      "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalGossipCertificates": {
                      "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "gossipCertificates": {
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "description": "List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalSeedNodes": {
                      "type": "array",
                      "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      },
                      "description": "List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes."
                    },
                    "hoursBetweenBackups": {
                      "type": "integer",
                      "format": "int32",
                      "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the cluster and associated data centers has been deallocated."
                    },
                    "cassandraAuditLoggingEnabled": {
                      "type": "boolean",
                      "description": "Whether Cassandra audit logging is enabled"
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "azureConnectionMethod": {
                      "type": "string",
                      "description": "How to connect to the azure services needed for running the cluster",
                      "enum": [
                        "None",
                        "VPN"
                      ],
                      "x-ms-enum": {
                        "name": "AzureConnectionType",
                        "modelAsString": true
                      }
                    },
                    "privateLinkResourceId": {
                      "readOnly": true,
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/privateLinkServices"
                          }
                        ]
                      },
                      "description": "If the Connection Method is VPN, this is the Id of the private link resource that the datacenters need to connect to."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The managed Cassandra cluster is being updated. Poll the provided operation for completion.",
            "schema": {
              "description": "Representation of a managed Cassandra cluster.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                },
                "tags": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
                },
                "identity": {
                  "description": "Identity for the resource.",
                  "type": "object",
                  "properties": {
                    "principalId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The object id of the identity resource."
                    },
                    "tenantId": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The tenant id of the resource."
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of the resource.",
                      "enum": [
                        "SystemAssigned",
                        "None"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraResourceIdentityType",
                        "modelAsString": true
                      }
                    }
                  }
                },
                "properties": {
                  "type": "object",
                  "description": "Properties of a managed Cassandra cluster.",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "restoreFromBackupId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create"
                      ],
                      "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup."
                    },
                    "delegatedManagementSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'"
                    },
                    "cassandraVersion": {
                      "type": "string",
                      "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
                    },
                    "clusterNameOverride": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property."
                    },
                    "authenticationMethod": {
                      "type": "string",
                      "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
                      "enum": [
                        "None",
                        "Cassandra",
                        "Ldap"
                      ],
                      "x-ms-enum": {
                        "name": "AuthenticationMethod",
                        "modelAsString": true
                      }
                    },
                    "initialCassandraAdminPassword": {
                      "x-ms-mutability": [
                        "create"
                      ],
                      "x-ms-secret": true,
                      "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
                      "type": "string"
                    },
                    "prometheusEndpoint": {
                      "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.",
                      "type": "object",
                      "properties": {
                        "ipAddress": {
                          "description": "IP address of this seed node.",
                          "type": "string"
                        }
                      }
                    },
                    "repairEnabled": {
                      "type": "boolean",
                      "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
                    },
                    "clientCertificates": {
                      "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalGossipCertificates": {
                      "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "gossipCertificates": {
                      "readOnly": true,
                      "x-ms-mutability": [
                        "read"
                      ],
                      "description": "List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "pem": {
                            "description": "PEM formatted public key.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "externalSeedNodes": {
                      "type": "array",
                      "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      },
                      "description": "List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes."
                    },
                    "hoursBetweenBackups": {
                      "type": "integer",
                      "format": "int32",
                      "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the cluster and associated data centers has been deallocated."
                    },
                    "cassandraAuditLoggingEnabled": {
                      "type": "boolean",
                      "description": "Whether Cassandra audit logging is enabled"
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "azureConnectionMethod": {
                      "type": "string",
                      "description": "How to connect to the azure services needed for running the cluster",
                      "enum": [
                        "None",
                        "VPN"
                      ],
                      "x-ms-enum": {
                        "name": "AzureConnectionType",
                        "modelAsString": true
                      }
                    },
                    "privateLinkResourceId": {
                      "readOnly": true,
                      "type": "string",
                      "format": "arm-id",
                      "x-ms-arm-id-details": {
                        "allowedResources": [
                          {
                            "type": "Microsoft.Network/privateLinkServices"
                          }
                        ]
                      },
                      "description": "If the Connection Method is VPN, this is the Id of the private link resource that the datacenters need to connect to."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/invokeCommand": {
      "post": {
        "operationId": "CassandraClusters_InvokeCommand",
        "description": "Invoke a command like nodetool for cassandra maintenance ",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Managed Cassandra cluster name.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Specification of which command to run where",
              "type": "object",
              "required": [
                "command",
                "host"
              ],
              "properties": {
                "command": {
                  "type": "string",
                  "description": "The command which should be run"
                },
                "arguments": {
                  "type": "object",
                  "description": "The arguments for the command to be run",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "host": {
                  "type": "string",
                  "description": "IP address of the cassandra host to run the command on"
                },
                "cassandra-stop-start": {
                  "type": "boolean",
                  "description": "If true, stops cassandra before executing the command and then start it again"
                },
                "readwrite": {
                  "type": "boolean",
                  "description": "If true, allows the command to *write* to the cassandra directory, otherwise read-only."
                }
              }
            },
            "description": "Specification which command to run where"
          }
        ],
        "responses": {
          "202": {
            "description": "Success. The command operation will begin as soon as possible.",
            "schema": {
              "description": "Response of /command api",
              "type": "object",
              "properties": {
                "commandOutput": {
                  "type": "string",
                  "description": "Output of the command."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/dataCenters": {
      "get": {
        "operationId": "CassandraDataCenters_List",
        "description": "List all data centers in a particular managed Cassandra cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Managed Cassandra cluster name.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the list of managed Cassandra data centers.",
            "schema": {
              "description": "List of managed Cassandra data centers and their properties.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "Container for array of data centers.",
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "description": "A managed Cassandra data center.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the database account."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the database account."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "properties": {
                        "description": "Properties of a managed Cassandra data center.",
                        "type": "object",
                        "properties": {
                          "provisioningState": {
                            "description": "The status of the resource at the time the operation was called.",
                            "type": "string",
                            "enum": [
                              "Creating",
                              "Updating",
                              "Deleting",
                              "Succeeded",
                              "Failed",
                              "Canceled"
                            ],
                            "x-ms-enum": {
                              "name": "ManagedCassandraProvisioningState",
                              "modelAsString": true
                            }
                          },
                          "dataCenterLocation": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ],
                            "description": "The region this data center should be created in."
                          },
                          "delegatedSubnetId": {
                            "type": "string",
                            "x-ms-mutability": [
                              "create",
                              "read"
                            ],
                            "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'."
                          },
                          "nodeCount": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster."
                          },
                          "seedNodes": {
                            "readOnly": true,
                            "type": "array",
                            "description": "IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "ipAddress": {
                                  "description": "IP address of this seed node.",
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "base64EncodedCassandraYamlFragment": {
                            "type": "string",
                            "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed."
                          },
                          "managedDiskCustomerKeyUri": {
                            "type": "string",
                            "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key."
                          },
                          "backupStorageCustomerKeyUri": {
                            "type": "string",
                            "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account."
                          },
                          "sku": {
                            "type": "string",
                            "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2"
                          },
                          "diskSku": {
                            "type": "string",
                            "description": "Disk SKU used for data centers. Default value is P30."
                          },
                          "diskCapacity": {
                            "type": "integer",
                            "format": "int32",
                            "description": "Number of disks attached to each node. Default is 4."
                          },
                          "availabilityZone": {
                            "type": "boolean",
                            "description": "If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines."
                          },
                          "authenticationMethodLdapProperties": {
                            "type": "object",
                            "description": "Ldap authentication method properties. This feature is in preview.",
                            "properties": {
                              "serverHostname": {
                                "description": "Hostname of the LDAP server.",
                                "type": "string"
                              },
                              "serverPort": {
                                "description": "Port of the LDAP server.",
                                "type": "integer",
                                "format": "int32"
                              },
                              "serviceUserDistinguishedName": {
                                "description": "Distinguished name of the look up user account, who can look up user details on authentication.",
                                "type": "string"
                              },
                              "serviceUserPassword": {
                                "description": "Password of the look up user.",
                                "type": "string"
                              },
                              "searchBaseDistinguishedName": {
                                "description": "Distinguished name of the object to start the recursive search of users from.",
                                "type": "string"
                              },
                              "searchFilterTemplate": {
                                "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.",
                                "type": "string"
                              },
                              "serverCertificates": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "pem": {
                                      "description": "PEM formatted public key.",
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "connectionTimeoutInMs": {
                                "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms.",
                                "type": "integer",
                                "format": "int32"
                              }
                            }
                          },
                          "deallocated": {
                            "type": "boolean",
                            "description": "Whether the data center has been deallocated."
                          },
                          "provisionError": {
                            "description": "Error related to resource provisioning.",
                            "type": "object",
                            "properties": {
                              "code": {
                                "description": "The code of error that occurred.",
                                "type": "string"
                              },
                              "message": {
                                "description": "The message of the error.",
                                "type": "string"
                              },
                              "target": {
                                "description": "The target resource of the error.",
                                "type": "string"
                              },
                              "additionalErrorInfo": {
                                "description": "Additional information about the error.",
                                "type": "string"
                              }
                            }
                          },
                          "privateEndpointIpAddress": {
                            "type": "string",
                            "description": "Ip of the VPN Endpoint for this data center."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/dataCenters/{dataCenterName}": {
      "get": {
        "operationId": "CassandraDataCenters_Get",
        "description": "Get the properties of a managed Cassandra data center.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Managed Cassandra cluster name.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "dataCenterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Data center name in a managed Cassandra cluster.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The properties of the managed Cassandra data center were retrieved successfully.",
            "schema": {
              "description": "A managed Cassandra data center.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "description": "Properties of a managed Cassandra data center.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "dataCenterLocation": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "The region this data center should be created in."
                    },
                    "delegatedSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'."
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster."
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "description": "IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "base64EncodedCassandraYamlFragment": {
                      "type": "string",
                      "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed."
                    },
                    "managedDiskCustomerKeyUri": {
                      "type": "string",
                      "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key."
                    },
                    "backupStorageCustomerKeyUri": {
                      "type": "string",
                      "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account."
                    },
                    "sku": {
                      "type": "string",
                      "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2"
                    },
                    "diskSku": {
                      "type": "string",
                      "description": "Disk SKU used for data centers. Default value is P30."
                    },
                    "diskCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of disks attached to each node. Default is 4."
                    },
                    "availabilityZone": {
                      "type": "boolean",
                      "description": "If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines."
                    },
                    "authenticationMethodLdapProperties": {
                      "type": "object",
                      "description": "Ldap authentication method properties. This feature is in preview.",
                      "properties": {
                        "serverHostname": {
                          "description": "Hostname of the LDAP server.",
                          "type": "string"
                        },
                        "serverPort": {
                          "description": "Port of the LDAP server.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "serviceUserDistinguishedName": {
                          "description": "Distinguished name of the look up user account, who can look up user details on authentication.",
                          "type": "string"
                        },
                        "serviceUserPassword": {
                          "description": "Password of the look up user.",
                          "type": "string"
                        },
                        "searchBaseDistinguishedName": {
                          "description": "Distinguished name of the object to start the recursive search of users from.",
                          "type": "string"
                        },
                        "searchFilterTemplate": {
                          "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.",
                          "type": "string"
                        },
                        "serverCertificates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "pem": {
                                "description": "PEM formatted public key.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "connectionTimeoutInMs": {
                          "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the data center has been deallocated."
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "privateEndpointIpAddress": {
                      "type": "string",
                      "description": "Ip of the VPN Endpoint for this data center."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "CassandraDataCenters_Delete",
        "description": "Delete a managed Cassandra data center.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Managed Cassandra cluster name.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "dataCenterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Data center name in a managed Cassandra cluster.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. Deletion will complete asynchronously."
          },
          "204": {
            "description": "Cassandra cluster with the specified name does not exist."
          }
        }
      },
      "put": {
        "operationId": "CassandraDataCenters_CreateUpdate",
        "description": "Create or update a managed Cassandra data center. When updating, overwrite all properties. To update only some properties, use PATCH.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Managed Cassandra cluster name.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "dataCenterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Data center name in a managed Cassandra cluster.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "A managed Cassandra data center.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "description": "Properties of a managed Cassandra data center.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "dataCenterLocation": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "The region this data center should be created in."
                    },
                    "delegatedSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'."
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster."
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "description": "IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "base64EncodedCassandraYamlFragment": {
                      "type": "string",
                      "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed."
                    },
                    "managedDiskCustomerKeyUri": {
                      "type": "string",
                      "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key."
                    },
                    "backupStorageCustomerKeyUri": {
                      "type": "string",
                      "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account."
                    },
                    "sku": {
                      "type": "string",
                      "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2"
                    },
                    "diskSku": {
                      "type": "string",
                      "description": "Disk SKU used for data centers. Default value is P30."
                    },
                    "diskCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of disks attached to each node. Default is 4."
                    },
                    "availabilityZone": {
                      "type": "boolean",
                      "description": "If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines."
                    },
                    "authenticationMethodLdapProperties": {
                      "type": "object",
                      "description": "Ldap authentication method properties. This feature is in preview.",
                      "properties": {
                        "serverHostname": {
                          "description": "Hostname of the LDAP server.",
                          "type": "string"
                        },
                        "serverPort": {
                          "description": "Port of the LDAP server.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "serviceUserDistinguishedName": {
                          "description": "Distinguished name of the look up user account, who can look up user details on authentication.",
                          "type": "string"
                        },
                        "serviceUserPassword": {
                          "description": "Password of the look up user.",
                          "type": "string"
                        },
                        "searchBaseDistinguishedName": {
                          "description": "Distinguished name of the object to start the recursive search of users from.",
                          "type": "string"
                        },
                        "searchFilterTemplate": {
                          "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.",
                          "type": "string"
                        },
                        "serverCertificates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "pem": {
                                "description": "PEM formatted public key.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "connectionTimeoutInMs": {
                          "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the data center has been deallocated."
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "privateEndpointIpAddress": {
                      "type": "string",
                      "description": "Ip of the VPN Endpoint for this data center."
                    }
                  }
                }
              }
            },
            "description": "Parameters specifying the managed Cassandra data center."
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted. The data center will be updated asynchronously.",
            "schema": {
              "description": "A managed Cassandra data center.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "description": "Properties of a managed Cassandra data center.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "dataCenterLocation": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "The region this data center should be created in."
                    },
                    "delegatedSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'."
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster."
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "description": "IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "base64EncodedCassandraYamlFragment": {
                      "type": "string",
                      "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed."
                    },
                    "managedDiskCustomerKeyUri": {
                      "type": "string",
                      "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key."
                    },
                    "backupStorageCustomerKeyUri": {
                      "type": "string",
                      "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account."
                    },
                    "sku": {
                      "type": "string",
                      "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2"
                    },
                    "diskSku": {
                      "type": "string",
                      "description": "Disk SKU used for data centers. Default value is P30."
                    },
                    "diskCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of disks attached to each node. Default is 4."
                    },
                    "availabilityZone": {
                      "type": "boolean",
                      "description": "If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines."
                    },
                    "authenticationMethodLdapProperties": {
                      "type": "object",
                      "description": "Ldap authentication method properties. This feature is in preview.",
                      "properties": {
                        "serverHostname": {
                          "description": "Hostname of the LDAP server.",
                          "type": "string"
                        },
                        "serverPort": {
                          "description": "Port of the LDAP server.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "serviceUserDistinguishedName": {
                          "description": "Distinguished name of the look up user account, who can look up user details on authentication.",
                          "type": "string"
                        },
                        "serviceUserPassword": {
                          "description": "Password of the look up user.",
                          "type": "string"
                        },
                        "searchBaseDistinguishedName": {
                          "description": "Distinguished name of the object to start the recursive search of users from.",
                          "type": "string"
                        },
                        "searchFilterTemplate": {
                          "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.",
                          "type": "string"
                        },
                        "serverCertificates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "pem": {
                                "description": "PEM formatted public key.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "connectionTimeoutInMs": {
                          "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the data center has been deallocated."
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "privateEndpointIpAddress": {
                      "type": "string",
                      "description": "Ip of the VPN Endpoint for this data center."
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Accepted. The data center will be created asynchronously.",
            "schema": {
              "description": "A managed Cassandra data center.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "description": "Properties of a managed Cassandra data center.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "dataCenterLocation": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "The region this data center should be created in."
                    },
                    "delegatedSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'."
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster."
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "description": "IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "base64EncodedCassandraYamlFragment": {
                      "type": "string",
                      "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed."
                    },
                    "managedDiskCustomerKeyUri": {
                      "type": "string",
                      "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key."
                    },
                    "backupStorageCustomerKeyUri": {
                      "type": "string",
                      "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account."
                    },
                    "sku": {
                      "type": "string",
                      "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2"
                    },
                    "diskSku": {
                      "type": "string",
                      "description": "Disk SKU used for data centers. Default value is P30."
                    },
                    "diskCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of disks attached to each node. Default is 4."
                    },
                    "availabilityZone": {
                      "type": "boolean",
                      "description": "If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines."
                    },
                    "authenticationMethodLdapProperties": {
                      "type": "object",
                      "description": "Ldap authentication method properties. This feature is in preview.",
                      "properties": {
                        "serverHostname": {
                          "description": "Hostname of the LDAP server.",
                          "type": "string"
                        },
                        "serverPort": {
                          "description": "Port of the LDAP server.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "serviceUserDistinguishedName": {
                          "description": "Distinguished name of the look up user account, who can look up user details on authentication.",
                          "type": "string"
                        },
                        "serviceUserPassword": {
                          "description": "Password of the look up user.",
                          "type": "string"
                        },
                        "searchBaseDistinguishedName": {
                          "description": "Distinguished name of the object to start the recursive search of users from.",
                          "type": "string"
                        },
                        "searchFilterTemplate": {
                          "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.",
                          "type": "string"
                        },
                        "serverCertificates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "pem": {
                                "description": "PEM formatted public key.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "connectionTimeoutInMs": {
                          "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the data center has been deallocated."
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "privateEndpointIpAddress": {
                      "type": "string",
                      "description": "Ip of the VPN Endpoint for this data center."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "CassandraDataCenters_Update",
        "description": "Update some of the properties of a managed Cassandra data center.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Managed Cassandra cluster name.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "dataCenterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Data center name in a managed Cassandra cluster.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "description": "A managed Cassandra data center.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "description": "Properties of a managed Cassandra data center.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "dataCenterLocation": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "The region this data center should be created in."
                    },
                    "delegatedSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'."
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster."
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "description": "IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "base64EncodedCassandraYamlFragment": {
                      "type": "string",
                      "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed."
                    },
                    "managedDiskCustomerKeyUri": {
                      "type": "string",
                      "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key."
                    },
                    "backupStorageCustomerKeyUri": {
                      "type": "string",
                      "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account."
                    },
                    "sku": {
                      "type": "string",
                      "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2"
                    },
                    "diskSku": {
                      "type": "string",
                      "description": "Disk SKU used for data centers. Default value is P30."
                    },
                    "diskCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of disks attached to each node. Default is 4."
                    },
                    "availabilityZone": {
                      "type": "boolean",
                      "description": "If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines."
                    },
                    "authenticationMethodLdapProperties": {
                      "type": "object",
                      "description": "Ldap authentication method properties. This feature is in preview.",
                      "properties": {
                        "serverHostname": {
                          "description": "Hostname of the LDAP server.",
                          "type": "string"
                        },
                        "serverPort": {
                          "description": "Port of the LDAP server.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "serviceUserDistinguishedName": {
                          "description": "Distinguished name of the look up user account, who can look up user details on authentication.",
                          "type": "string"
                        },
                        "serviceUserPassword": {
                          "description": "Password of the look up user.",
                          "type": "string"
                        },
                        "searchBaseDistinguishedName": {
                          "description": "Distinguished name of the object to start the recursive search of users from.",
                          "type": "string"
                        },
                        "searchFilterTemplate": {
                          "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.",
                          "type": "string"
                        },
                        "serverCertificates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "pem": {
                                "description": "PEM formatted public key.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "connectionTimeoutInMs": {
                          "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the data center has been deallocated."
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "privateEndpointIpAddress": {
                      "type": "string",
                      "description": "Ip of the VPN Endpoint for this data center."
                    }
                  }
                }
              }
            },
            "description": "Parameters to provide for specifying the managed Cassandra data center."
          }
        ],
        "responses": {
          "200": {
            "description": "Completed synchronously. This will only happen if the fields changed by patch require no changes to the actual Cassandra cluster, such as editing the tags.",
            "schema": {
              "description": "A managed Cassandra data center.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "description": "Properties of a managed Cassandra data center.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "dataCenterLocation": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "The region this data center should be created in."
                    },
                    "delegatedSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'."
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster."
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "description": "IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "base64EncodedCassandraYamlFragment": {
                      "type": "string",
                      "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed."
                    },
                    "managedDiskCustomerKeyUri": {
                      "type": "string",
                      "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key."
                    },
                    "backupStorageCustomerKeyUri": {
                      "type": "string",
                      "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account."
                    },
                    "sku": {
                      "type": "string",
                      "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2"
                    },
                    "diskSku": {
                      "type": "string",
                      "description": "Disk SKU used for data centers. Default value is P30."
                    },
                    "diskCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of disks attached to each node. Default is 4."
                    },
                    "availabilityZone": {
                      "type": "boolean",
                      "description": "If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines."
                    },
                    "authenticationMethodLdapProperties": {
                      "type": "object",
                      "description": "Ldap authentication method properties. This feature is in preview.",
                      "properties": {
                        "serverHostname": {
                          "description": "Hostname of the LDAP server.",
                          "type": "string"
                        },
                        "serverPort": {
                          "description": "Port of the LDAP server.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "serviceUserDistinguishedName": {
                          "description": "Distinguished name of the look up user account, who can look up user details on authentication.",
                          "type": "string"
                        },
                        "serviceUserPassword": {
                          "description": "Password of the look up user.",
                          "type": "string"
                        },
                        "searchBaseDistinguishedName": {
                          "description": "Distinguished name of the object to start the recursive search of users from.",
                          "type": "string"
                        },
                        "searchFilterTemplate": {
                          "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.",
                          "type": "string"
                        },
                        "serverCertificates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "pem": {
                                "description": "PEM formatted public key.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "connectionTimeoutInMs": {
                          "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the data center has been deallocated."
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "privateEndpointIpAddress": {
                      "type": "string",
                      "description": "Ip of the VPN Endpoint for this data center."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. Update will proceed asynchronously.",
            "schema": {
              "description": "A managed Cassandra data center.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "description": "Properties of a managed Cassandra data center.",
                  "type": "object",
                  "properties": {
                    "provisioningState": {
                      "description": "The status of the resource at the time the operation was called.",
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Updating",
                        "Deleting",
                        "Succeeded",
                        "Failed",
                        "Canceled"
                      ],
                      "x-ms-enum": {
                        "name": "ManagedCassandraProvisioningState",
                        "modelAsString": true
                      }
                    },
                    "dataCenterLocation": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "The region this data center should be created in."
                    },
                    "delegatedSubnetId": {
                      "type": "string",
                      "x-ms-mutability": [
                        "create",
                        "read"
                      ],
                      "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'."
                    },
                    "nodeCount": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster."
                    },
                    "seedNodes": {
                      "readOnly": true,
                      "type": "array",
                      "description": "IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "ipAddress": {
                            "description": "IP address of this seed node.",
                            "type": "string"
                          }
                        }
                      }
                    },
                    "base64EncodedCassandraYamlFragment": {
                      "type": "string",
                      "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed."
                    },
                    "managedDiskCustomerKeyUri": {
                      "type": "string",
                      "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key."
                    },
                    "backupStorageCustomerKeyUri": {
                      "type": "string",
                      "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account."
                    },
                    "sku": {
                      "type": "string",
                      "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2"
                    },
                    "diskSku": {
                      "type": "string",
                      "description": "Disk SKU used for data centers. Default value is P30."
                    },
                    "diskCapacity": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Number of disks attached to each node. Default is 4."
                    },
                    "availabilityZone": {
                      "type": "boolean",
                      "description": "If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines."
                    },
                    "authenticationMethodLdapProperties": {
                      "type": "object",
                      "description": "Ldap authentication method properties. This feature is in preview.",
                      "properties": {
                        "serverHostname": {
                          "description": "Hostname of the LDAP server.",
                          "type": "string"
                        },
                        "serverPort": {
                          "description": "Port of the LDAP server.",
                          "type": "integer",
                          "format": "int32"
                        },
                        "serviceUserDistinguishedName": {
                          "description": "Distinguished name of the look up user account, who can look up user details on authentication.",
                          "type": "string"
                        },
                        "serviceUserPassword": {
                          "description": "Password of the look up user.",
                          "type": "string"
                        },
                        "searchBaseDistinguishedName": {
                          "description": "Distinguished name of the object to start the recursive search of users from.",
                          "type": "string"
                        },
                        "searchFilterTemplate": {
                          "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.",
                          "type": "string"
                        },
                        "serverCertificates": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "pem": {
                                "description": "PEM formatted public key.",
                                "type": "string"
                              }
                            }
                          }
                        },
                        "connectionTimeoutInMs": {
                          "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms.",
                          "type": "integer",
                          "format": "int32"
                        }
                      }
                    },
                    "deallocated": {
                      "type": "boolean",
                      "description": "Whether the data center has been deallocated."
                    },
                    "provisionError": {
                      "description": "Error related to resource provisioning.",
                      "type": "object",
                      "properties": {
                        "code": {
                          "description": "The code of error that occurred.",
                          "type": "string"
                        },
                        "message": {
                          "description": "The message of the error.",
                          "type": "string"
                        },
                        "target": {
                          "description": "The target resource of the error.",
                          "type": "string"
                        },
                        "additionalErrorInfo": {
                          "description": "Additional information about the error.",
                          "type": "string"
                        }
                      }
                    },
                    "privateEndpointIpAddress": {
                      "type": "string",
                      "description": "Ip of the VPN Endpoint for this data center."
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/deallocate": {
      "post": {
        "operationId": "CassandraClusters_Deallocate",
        "description": "Deallocate the Managed Cassandra Cluster and Associated Data Centers. Deallocation will deallocate the host virtual machine of this cluster, and reserved the data disk. This won't do anything on an already deallocated cluster. Use Start to restart the cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Managed Cassandra cluster name.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Cluster deallocated."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/start": {
      "post": {
        "operationId": "CassandraClusters_Start",
        "description": "Start the Managed Cassandra Cluster and Associated Data Centers. Start will start the host virtual machine of this cluster with reserved data disk. This won't do anything on an already running cluster. Use Deallocate to deallocate the cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Managed Cassandra cluster name.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "202": {
            "description": "Enqueued Operation to start the cluster."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/cassandraClusters/{clusterName}/status": {
      "get": {
        "operationId": "CassandraClusters_Status",
        "description": "Gets the CPU, memory, and disk usage statistics for each Cassandra node in a cluster.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "description": "The ID of the target subscription. The value must be an UUID.",
            "required": true,
            "type": "string",
            "format": "uuid"
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "description": "The name of the resource group. The name is case insensitive.",
            "required": true,
            "type": "string",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "clusterName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Managed Cassandra cluster name.",
            "minLength": 1,
            "maxLength": 100,
            "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "The API version to use for this operation.",
            "required": true,
            "type": "string",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully fetched the usage statistics of all nodes in the cluster.",
            "schema": {
              "type": "object",
              "description": "Properties of a managed Cassandra cluster public status.",
              "properties": {
                "eTag": {
                  "type": "string"
                },
                "reaperStatus": {
                  "type": "object",
                  "properties": {
                    "healthy": {
                      "type": "boolean"
                    },
                    "repairRunIds": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "repairSchedules": {
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    }
                  }
                },
                "connectionErrors": {
                  "type": "array",
                  "description": "List relevant information about any connection errors to the Datacenters.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "connectionState": {
                        "description": "The kind of connection error that occurred.",
                        "type": "string",
                        "enum": [
                          "Unknown",
                          "OK",
                          "OperatorToDataCenterNetworkError",
                          "DatacenterToDatacenterNetworkError",
                          "InternalOperatorToDataCenterCertificateError",
                          "InternalError"
                        ],
                        "x-ms-enum": {
                          "name": "ConnectionState",
                          "modelAsString": true
                        }
                      },
                      "iPFrom": {
                        "description": "The IP of host that originated the failed connection.",
                        "type": "string"
                      },
                      "iPTo": {
                        "description": "The IP that the connection attempted to reach.",
                        "type": "string"
                      },
                      "port": {
                        "description": "The TCP port the connection was attempted on.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "exception": {
                        "description": "Detailed error message about the failed connection.",
                        "type": "string"
                      }
                    }
                  }
                },
                "errors": {
                  "type": "array",
                  "description": "List relevant information about any errors about cluster, data center and connection error.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "The code of error that occurred.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The message of the error.",
                        "type": "string"
                      },
                      "target": {
                        "description": "The target resource of the error.",
                        "type": "string"
                      },
                      "additionalErrorInfo": {
                        "description": "Additional information about the error.",
                        "type": "string"
                      }
                    }
                  }
                },
                "dataCenters": {
                  "type": "array",
                  "description": "List of the status of each datacenter in this cluster.",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of this Datacenter."
                      },
                      "seedNodes": {
                        "type": "array",
                        "description": "A list of all seed nodes in the cluster, managed and unmanaged.",
                        "items": {
                          "type": "string"
                        }
                      },
                      "nodes": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "address": {
                              "type": "string",
                              "description": "The node's IP address."
                            },
                            "state": {
                              "type": "string",
                              "description": "The state of the node in Cassandra ring.",
                              "enum": [
                                "Normal",
                                "Leaving",
                                "Joining",
                                "Moving",
                                "Stopped"
                              ],
                              "x-ms-enum": {
                                "name": "NodeState",
                                "modelAsString": true
                              }
                            },
                            "status": {
                              "type": "string"
                            },
                            "cassandraProcessStatus": {
                              "type": "string",
                              "description": "Cassandra service status on this node"
                            },
                            "load": {
                              "type": "string",
                              "description": "The amount of file system data in the data directory (e.g., 47.66 kB), excluding all content in the snapshots subdirectories. Because all SSTable data files are included, any data that is not cleaned up (such as TTL-expired cells or tombstones) is counted."
                            },
                            "tokens": {
                              "type": "array",
                              "description": "List of tokens this node covers.",
                              "items": {
                                "type": "string"
                              }
                            },
                            "size": {
                              "type": "integer",
                              "format": "int32"
                            },
                            "hostID": {
                              "description": "The network ID of the node.",
                              "type": "string"
                            },
                            "rack": {
                              "description": "The rack this node is part of.",
                              "type": "string"
                            },
                            "timestamp": {
                              "description": "The timestamp when these statistics were captured.",
                              "type": "string"
                            },
                            "diskUsedKB": {
                              "description": "The amount of disk used, in kB, of the directory /var/lib/cassandra.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "diskFreeKB": {
                              "description": "The amount of disk free, in kB, of the directory /var/lib/cassandra.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "memoryUsedKB": {
                              "description": "Used memory (calculated as total - free - buffers - cache), in kB.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "memoryBuffersAndCachedKB": {
                              "description": "Memory used by kernel buffers (Buffers in /proc/meminfo) and page cache and slabs (Cached and SReclaimable in /proc/meminfo), in kB.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "memoryFreeKB": {
                              "description": "Unused memory (MemFree and SwapFree in /proc/meminfo), in kB.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "memoryTotalKB": {
                              "description": "Total installed memory (MemTotal and SwapTotal in /proc/meminfo), in kB.",
                              "type": "integer",
                              "format": "int64"
                            },
                            "cpuUsage": {
                              "description": "A float representing the current system-wide CPU utilization as a percentage.",
                              "type": "number",
                              "format": "double"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbRoleDefinitions/{mongoRoleDefinitionId}": {
      "get": {
        "operationId": "MongoDBResources_GetMongoRoleDefinition",
        "description": "Retrieves the properties of an existing Azure Cosmos DB Mongo Role Definition with the given Id.",
        "parameters": [
          {
            "name": "mongoRoleDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The ID for the Role Definition {dbName.roleName}."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Mongo Role Definition was successfully retrieved.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties related to the Mongo Role Definition.",
                  "type": "object",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "BuiltInRole",
                        "CustomRole"
                      ],
                      "description": "Indicates whether the Role Definition was built-in or user created.",
                      "x-ms-enum": {
                        "name": "MongoRoleDefinitionType",
                        "modelAsString": false
                      }
                    },
                    "databaseName": {
                      "type": "string",
                      "description": "The database name for which access is being granted for this Role Definition."
                    },
                    "privileges": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "resource": {
                            "type": "object",
                            "properties": {
                              "db": {
                                "type": "string",
                                "description": "The database name the role is applied."
                              },
                              "collection": {
                                "type": "string",
                                "description": "The collection name the role is applied."
                              }
                            },
                            "description": "An Azure Cosmos DB Mongo DB Resource."
                          },
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "An array of actions that are allowed."
                          }
                        },
                        "description": "The set of data plane operations permitted through this Role Definition."
                      },
                      "description": "A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege."
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "db": {
                            "type": "string",
                            "description": "The database name the role is applied."
                          },
                          "role": {
                            "type": "string",
                            "description": "The role name."
                          }
                        },
                        "description": "The set of roles permitted through this Role Definition."
                      },
                      "description": "The set of roles inherited by this Role Definition."
                    }
                  }
                }
              },
              "description": "An Azure Cosmos DB Mongo Role Definition."
            }
          }
        }
      },
      "put": {
        "operationId": "MongoDBResources_CreateUpdateMongoRoleDefinition",
        "description": "Creates or updates an Azure Cosmos DB Mongo Role Definition.",
        "parameters": [
          {
            "name": "mongoRoleDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The ID for the Role Definition {dbName.roleName}."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateMongoRoleDefinitionParameters",
            "in": "body",
            "required": true,
            "description": "The properties required to create or update a Role Definition.",
            "schema": {
              "description": "Parameters to create and update an Azure Cosmos DB Mongo Role Definition.",
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update an Azure Cosmos DB Mongo Role Definition.",
                  "type": "object",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "BuiltInRole",
                        "CustomRole"
                      ],
                      "description": "Indicates whether the Role Definition was built-in or user created.",
                      "x-ms-enum": {
                        "name": "MongoRoleDefinitionType",
                        "modelAsString": false
                      }
                    },
                    "databaseName": {
                      "type": "string",
                      "description": "The database name for which access is being granted for this Role Definition."
                    },
                    "privileges": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "resource": {
                            "type": "object",
                            "properties": {
                              "db": {
                                "type": "string",
                                "description": "The database name the role is applied."
                              },
                              "collection": {
                                "type": "string",
                                "description": "The collection name the role is applied."
                              }
                            },
                            "description": "An Azure Cosmos DB Mongo DB Resource."
                          },
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "An array of actions that are allowed."
                          }
                        },
                        "description": "The set of data plane operations permitted through this Role Definition."
                      },
                      "description": "A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege."
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "db": {
                            "type": "string",
                            "description": "The database name the role is applied."
                          },
                          "role": {
                            "type": "string",
                            "description": "The role name."
                          }
                        },
                        "description": "The set of roles permitted through this Role Definition."
                      },
                      "description": "The set of roles inherited by this Role Definition."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Mongo Role Definition create or update operation was completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties related to the Mongo Role Definition.",
                  "type": "object",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "BuiltInRole",
                        "CustomRole"
                      ],
                      "description": "Indicates whether the Role Definition was built-in or user created.",
                      "x-ms-enum": {
                        "name": "MongoRoleDefinitionType",
                        "modelAsString": false
                      }
                    },
                    "databaseName": {
                      "type": "string",
                      "description": "The database name for which access is being granted for this Role Definition."
                    },
                    "privileges": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "resource": {
                            "type": "object",
                            "properties": {
                              "db": {
                                "type": "string",
                                "description": "The database name the role is applied."
                              },
                              "collection": {
                                "type": "string",
                                "description": "The collection name the role is applied."
                              }
                            },
                            "description": "An Azure Cosmos DB Mongo DB Resource."
                          },
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "An array of actions that are allowed."
                          }
                        },
                        "description": "The set of data plane operations permitted through this Role Definition."
                      },
                      "description": "A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege."
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "db": {
                            "type": "string",
                            "description": "The database name the role is applied."
                          },
                          "role": {
                            "type": "string",
                            "description": "The role name."
                          }
                        },
                        "description": "The set of roles permitted through this Role Definition."
                      },
                      "description": "The set of roles inherited by this Role Definition."
                    }
                  }
                }
              },
              "description": "An Azure Cosmos DB Mongo Role Definition."
            }
          },
          "202": {
            "description": "The Mongo Role Definition create or update request was accepted and will complete asynchronously."
          }
        }
      },
      "delete": {
        "operationId": "MongoDBResources_DeleteMongoRoleDefinition",
        "description": "Deletes an existing Azure Cosmos DB Mongo Role Definition.",
        "parameters": [
          {
            "name": "mongoRoleDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The ID for the Role Definition {dbName.roleName}."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Mongo Role Definition delete operation was completed successfully."
          },
          "202": {
            "description": "The Mongo Role Definition delete request was accepted and will complete asynchronously."
          },
          "204": {
            "description": "The requested Mongo Role Definition does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbRoleDefinitions": {
      "get": {
        "operationId": "MongoDBResources_ListMongoRoleDefinitions",
        "description": "Retrieves the list of all Azure Cosmos DB Mongo Role Definitions.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The list operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the database account."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the database account."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties related to the Mongo Role Definition.",
                        "type": "object",
                        "properties": {
                          "roleName": {
                            "type": "string",
                            "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "BuiltInRole",
                              "CustomRole"
                            ],
                            "description": "Indicates whether the Role Definition was built-in or user created.",
                            "x-ms-enum": {
                              "name": "MongoRoleDefinitionType",
                              "modelAsString": false
                            }
                          },
                          "databaseName": {
                            "type": "string",
                            "description": "The database name for which access is being granted for this Role Definition."
                          },
                          "privileges": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "resource": {
                                  "type": "object",
                                  "properties": {
                                    "db": {
                                      "type": "string",
                                      "description": "The database name the role is applied."
                                    },
                                    "collection": {
                                      "type": "string",
                                      "description": "The collection name the role is applied."
                                    }
                                  },
                                  "description": "An Azure Cosmos DB Mongo DB Resource."
                                },
                                "actions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "An array of actions that are allowed."
                                }
                              },
                              "description": "The set of data plane operations permitted through this Role Definition."
                            },
                            "description": "A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege."
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "db": {
                                  "type": "string",
                                  "description": "The database name the role is applied."
                                },
                                "role": {
                                  "type": "string",
                                  "description": "The role name."
                                }
                              },
                              "description": "The set of roles permitted through this Role Definition."
                            },
                            "description": "The set of roles inherited by this Role Definition."
                          }
                        }
                      }
                    },
                    "description": "An Azure Cosmos DB Mongo Role Definition."
                  },
                  "description": "List of Mongo Role Definitions and their properties."
                }
              },
              "description": "The relevant Mongo Role Definitions."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbUserDefinitions/{mongoUserDefinitionId}": {
      "get": {
        "operationId": "MongoDBResources_GetMongoUserDefinition",
        "description": "Retrieves the properties of an existing Azure Cosmos DB Mongo User Definition with the given Id.",
        "parameters": [
          {
            "name": "mongoUserDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The ID for the User Definition {dbName.userName}."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The User Definition was successfully retrieved.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties related to the User Definition.",
                  "type": "object",
                  "properties": {
                    "userName": {
                      "type": "string",
                      "description": "The user name for User Definition."
                    },
                    "password": {
                      "type": "string",
                      "description": "The password for User Definition. Response does not contain user password."
                    },
                    "databaseName": {
                      "type": "string",
                      "description": "The database name for which access is being granted for this User Definition."
                    },
                    "customData": {
                      "type": "string",
                      "description": "A custom definition for the USer Definition."
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "db": {
                            "type": "string",
                            "description": "The database name the role is applied."
                          },
                          "role": {
                            "type": "string",
                            "description": "The role name."
                          }
                        },
                        "description": "The set of roles permitted through this Role Definition."
                      },
                      "description": "The set of roles inherited by the User Definition."
                    },
                    "mechanisms": {
                      "type": "string",
                      "description": "The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256."
                    }
                  }
                }
              },
              "description": "An Azure Cosmos DB User Definition"
            }
          }
        }
      },
      "put": {
        "operationId": "MongoDBResources_CreateUpdateMongoUserDefinition",
        "description": "Creates or updates an Azure Cosmos DB Mongo User Definition.",
        "parameters": [
          {
            "name": "mongoUserDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The ID for the User Definition {dbName.userName}."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateMongoUserDefinitionParameters",
            "in": "body",
            "required": true,
            "description": "The properties required to create or update a User Definition.",
            "schema": {
              "description": "Parameters to create and update an Azure Cosmos DB Mongo User Definition.",
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update an Azure Cosmos DB Mongo User Definition.",
                  "type": "object",
                  "properties": {
                    "userName": {
                      "type": "string",
                      "description": "The user name for User Definition."
                    },
                    "password": {
                      "type": "string",
                      "description": "The password for User Definition. Response does not contain user password."
                    },
                    "databaseName": {
                      "type": "string",
                      "description": "The database name for which access is being granted for this User Definition."
                    },
                    "customData": {
                      "type": "string",
                      "description": "A custom definition for the USer Definition."
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "db": {
                            "type": "string",
                            "description": "The database name the role is applied."
                          },
                          "role": {
                            "type": "string",
                            "description": "The role name."
                          }
                        },
                        "description": "The set of roles permitted through this Role Definition."
                      },
                      "description": "The set of roles inherited by the User Definition."
                    },
                    "mechanisms": {
                      "type": "string",
                      "description": "The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The User Definition create or update operation was completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties related to the User Definition.",
                  "type": "object",
                  "properties": {
                    "userName": {
                      "type": "string",
                      "description": "The user name for User Definition."
                    },
                    "password": {
                      "type": "string",
                      "description": "The password for User Definition. Response does not contain user password."
                    },
                    "databaseName": {
                      "type": "string",
                      "description": "The database name for which access is being granted for this User Definition."
                    },
                    "customData": {
                      "type": "string",
                      "description": "A custom definition for the USer Definition."
                    },
                    "roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "db": {
                            "type": "string",
                            "description": "The database name the role is applied."
                          },
                          "role": {
                            "type": "string",
                            "description": "The role name."
                          }
                        },
                        "description": "The set of roles permitted through this Role Definition."
                      },
                      "description": "The set of roles inherited by the User Definition."
                    },
                    "mechanisms": {
                      "type": "string",
                      "description": "The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256."
                    }
                  }
                }
              },
              "description": "An Azure Cosmos DB User Definition"
            }
          },
          "202": {
            "description": "The User Definition create or update request was accepted and will complete asynchronously."
          }
        }
      },
      "delete": {
        "operationId": "MongoDBResources_DeleteMongoUserDefinition",
        "description": "Deletes an existing Azure Cosmos DB Mongo User Definition.",
        "parameters": [
          {
            "name": "mongoUserDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The ID for the User Definition {dbName.userName}."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The User Definition delete operation was completed successfully."
          },
          "202": {
            "description": "The User Definition delete request was accepted and will complete asynchronously."
          },
          "204": {
            "description": "The requested User Definition does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbUserDefinitions": {
      "get": {
        "operationId": "MongoDBResources_ListMongoUserDefinitions",
        "description": "Retrieves the list of all Azure Cosmos DB Mongo User Definition.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The list operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the database account."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the database account."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties related to the User Definition.",
                        "type": "object",
                        "properties": {
                          "userName": {
                            "type": "string",
                            "description": "The user name for User Definition."
                          },
                          "password": {
                            "type": "string",
                            "description": "The password for User Definition. Response does not contain user password."
                          },
                          "databaseName": {
                            "type": "string",
                            "description": "The database name for which access is being granted for this User Definition."
                          },
                          "customData": {
                            "type": "string",
                            "description": "A custom definition for the USer Definition."
                          },
                          "roles": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "db": {
                                  "type": "string",
                                  "description": "The database name the role is applied."
                                },
                                "role": {
                                  "type": "string",
                                  "description": "The role name."
                                }
                              },
                              "description": "The set of roles permitted through this Role Definition."
                            },
                            "description": "The set of roles inherited by the User Definition."
                          },
                          "mechanisms": {
                            "type": "string",
                            "description": "The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256."
                          }
                        }
                      }
                    },
                    "description": "An Azure Cosmos DB User Definition"
                  },
                  "description": "List of User Definition and their properties"
                }
              },
              "description": "The relevant User Definition."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces": {
      "get": {
        "tags": [
          "NotebookWorkspacesResource"
        ],
        "description": "Gets the notebook workspace resources of an existing Cosmos DB account.",
        "operationId": "NotebookWorkspaces_ListByDatabaseAccount",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved notebook workspace resources.",
            "schema": {
              "description": "A list of notebook workspace resources",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of notebook workspace resources",
                  "items": {
                    "description": "A notebook workspace resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the database account."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the database account."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "notebookServerEndpoint": {
                            "description": "Specifies the endpoint of Notebook server.",
                            "type": "string",
                            "readOnly": true
                          },
                          "status": {
                            "description": "Status of the notebook workspace. Possible values are: Creating, Online, Deleting, Failed, Updating.",
                            "type": "string",
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces/{notebookWorkspaceName}": {
      "get": {
        "tags": [
          "NotebookWorkspacesResource"
        ],
        "description": "Gets the notebook workspace for a Cosmos DB account.",
        "operationId": "NotebookWorkspaces_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "notebookWorkspaceName",
            "in": "path",
            "description": "The name of the notebook workspace resource.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "NotebookWorkspaceName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a specified notebook workspace resource.",
            "schema": {
              "description": "A notebook workspace resource",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "notebookServerEndpoint": {
                      "description": "Specifies the endpoint of Notebook server.",
                      "type": "string",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the notebook workspace. Possible values are: Creating, Online, Deleting, Failed, Updating.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "NotebookWorkspacesResource"
        ],
        "description": "Creates the notebook workspace for a Cosmos DB account.",
        "operationId": "NotebookWorkspaces_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "notebookWorkspaceName",
            "in": "path",
            "description": "The name of the notebook workspace resource.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "NotebookWorkspaceName",
              "modelAsString": true
            }
          },
          {
            "name": "notebookCreateUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters to create a notebook workspace resource",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                }
              }
            },
            "description": "The notebook workspace to create for the current database account."
          }
        ],
        "responses": {
          "200": {
            "description": "Creation of notebook workspace will complete asynchronously.",
            "schema": {
              "description": "A notebook workspace resource",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "notebookServerEndpoint": {
                      "description": "Specifies the endpoint of Notebook server.",
                      "type": "string",
                      "readOnly": true
                    },
                    "status": {
                      "description": "Status of the notebook workspace. Possible values are: Creating, Online, Deleting, Failed, Updating.",
                      "type": "string",
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "NotebookWorkspacesResource"
        ],
        "description": "Deletes the notebook workspace for a Cosmos DB account.",
        "operationId": "NotebookWorkspaces_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "notebookWorkspaceName",
            "in": "path",
            "description": "The name of the notebook workspace resource.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "NotebookWorkspaceName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "202": {
            "description": "The notebook workspace delete operation will complete asynchronously."
          },
          "204": {
            "description": "The specified notebook workspace does not exist in the database account."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces/{notebookWorkspaceName}/listConnectionInfo": {
      "post": {
        "tags": [
          "NotebookWorkspacesResource"
        ],
        "operationId": "NotebookWorkspaces_ListConnectionInfo",
        "description": "Retrieves the connection info for the notebook workspace",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "notebookWorkspaceName",
            "in": "path",
            "description": "The name of the notebook workspace resource.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "NotebookWorkspaceName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "description": "The connection info for the given notebook workspace",
              "properties": {
                "authToken": {
                  "type": "string",
                  "description": "Specifies auth token used for connecting to Notebook server (uses token-based auth).",
                  "readOnly": true
                },
                "notebookServerEndpoint": {
                  "type": "string",
                  "description": "Specifies the endpoint of Notebook server.",
                  "readOnly": true
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces/{notebookWorkspaceName}/regenerateAuthToken": {
      "post": {
        "tags": [
          "NotebookWorkspacesResource"
        ],
        "operationId": "NotebookWorkspaces_RegenerateAuthToken",
        "description": "Regenerates the auth token for the notebook workspace",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "notebookWorkspaceName",
            "in": "path",
            "description": "The name of the notebook workspace resource.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "NotebookWorkspaceName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted. The regenerate auth token operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/notebookWorkspaces/{notebookWorkspaceName}/start": {
      "post": {
        "tags": [
          "NotebookWorkspacesResource"
        ],
        "operationId": "NotebookWorkspaces_Start",
        "description": "Starts the notebook workspace",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "notebookWorkspaceName",
            "in": "path",
            "description": "The name of the notebook workspace resource.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string",
            "enum": [
              "default"
            ],
            "x-ms-enum": {
              "name": "NotebookWorkspaceName",
              "modelAsString": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "202": {
            "description": "Accepted. The start operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/privateEndpointConnections": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "List all private endpoint connections on a Cosmos DB account.",
        "operationId": "PrivateEndpointConnections_ListByDatabaseAccount",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private endpoint connections.",
            "schema": {
              "description": "A list of private endpoint connections",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private endpoint connections",
                  "items": {
                    "description": "A private endpoint connection",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the resource"
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "privateEndpoint": {
                            "description": "Private endpoint which the connection belongs to.",
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Resource id of the private endpoint."
                              }
                            }
                          },
                          "privateLinkServiceConnectionState": {
                            "description": "Connection State of the Private Endpoint Connection.",
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "The private link service connection status."
                              },
                              "description": {
                                "type": "string",
                                "description": "The private link service connection description."
                              },
                              "actionsRequired": {
                                "type": "string",
                                "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                "readOnly": true
                              }
                            }
                          },
                          "groupId": {
                            "type": "string",
                            "description": "Group id of the private endpoint."
                          },
                          "provisioningState": {
                            "type": "string",
                            "description": "Provisioning state of the private endpoint."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/privateEndpointConnections/{privateEndpointConnectionName}": {
      "get": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Gets a private endpoint connection.",
        "operationId": "PrivateEndpointConnections_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The name of the private endpoint connection."
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a specified private endpoint connection.",
            "schema": {
              "description": "A private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "Private endpoint which the connection belongs to.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource id of the private endpoint."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection State of the Private Endpoint Connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The private link service connection status."
                        },
                        "description": {
                          "type": "string",
                          "description": "The private link service connection description."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                          "readOnly": true
                        }
                      }
                    },
                    "groupId": {
                      "type": "string",
                      "description": "Group id of the private endpoint."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the private endpoint."
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Approve or reject a private endpoint connection with a given name.",
        "operationId": "PrivateEndpointConnections_CreateOrUpdate",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The name of the private endpoint connection."
          },
          {
            "name": "parameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "A private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "Private endpoint which the connection belongs to.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource id of the private endpoint."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection State of the Private Endpoint Connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The private link service connection status."
                        },
                        "description": {
                          "type": "string",
                          "description": "The private link service connection description."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                          "readOnly": true
                        }
                      }
                    },
                    "groupId": {
                      "type": "string",
                      "description": "Group id of the private endpoint."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the private endpoint."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully approved or rejected private endpoint connection.",
            "schema": {
              "description": "A private endpoint connection",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the resource"
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "privateEndpoint": {
                      "description": "Private endpoint which the connection belongs to.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Resource id of the private endpoint."
                        }
                      }
                    },
                    "privateLinkServiceConnectionState": {
                      "description": "Connection State of the Private Endpoint Connection.",
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "The private link service connection status."
                        },
                        "description": {
                          "type": "string",
                          "description": "The private link service connection description."
                        },
                        "actionsRequired": {
                          "type": "string",
                          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                          "readOnly": true
                        }
                      }
                    },
                    "groupId": {
                      "type": "string",
                      "description": "Group id of the private endpoint."
                    },
                    "provisioningState": {
                      "type": "string",
                      "description": "Provisioning state of the private endpoint."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "Accepted. The private endpoint connection update will complete asynchronously."
          }
        }
      },
      "delete": {
        "tags": [
          "PrivateEndpointConnections"
        ],
        "description": "Deletes a private endpoint connection with a given name.",
        "operationId": "PrivateEndpointConnections_Delete",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "privateEndpointConnectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The name of the private endpoint connection."
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted. The private endpoint connection delete will complete asynchronously."
          },
          "204": {
            "description": "Private endpoint connection does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/privateLinkResources": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the private link resources that need to be created for a Cosmos DB account.",
        "operationId": "PrivateLinkResources_ListByDatabaseAccount",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved private link resources.",
            "schema": {
              "description": "A list of private link resources",
              "type": "object",
              "properties": {
                "value": {
                  "type": "array",
                  "description": "Array of private link resources",
                  "items": {
                    "description": "A private link resource",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the database account."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the database account."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "properties": {
                        "description": "Resource properties.",
                        "x-ms-client-flatten": true,
                        "type": "object",
                        "properties": {
                          "groupId": {
                            "description": "The private link resource group id.",
                            "type": "string",
                            "readOnly": true
                          },
                          "requiredMembers": {
                            "description": "The private link resource required member names.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          },
                          "requiredZoneNames": {
                            "description": "The private link resource required zone names.",
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "readOnly": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/privateLinkResources/{groupName}": {
      "get": {
        "tags": [
          "PrivateLinkResources"
        ],
        "description": "Gets the private link resources that need to be created for a Cosmos DB account.",
        "operationId": "PrivateLinkResources_Get",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "The name of the private link resource.",
            "required": true,
            "x-ms-parameter-location": "method",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved a specified private link resource.",
            "schema": {
              "description": "A private link resource",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "description": "Resource properties.",
                  "x-ms-client-flatten": true,
                  "type": "object",
                  "properties": {
                    "groupId": {
                      "description": "The private link resource group id.",
                      "type": "string",
                      "readOnly": true
                    },
                    "requiredMembers": {
                      "description": "The private link resource required member names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    },
                    "requiredZoneNames": {
                      "description": "The private link resource required zone names.",
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "readOnly": true
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlRoleDefinitions/{roleDefinitionId}": {
      "get": {
        "operationId": "SqlResources_GetSqlRoleDefinition",
        "description": "Retrieves the properties of an existing Azure Cosmos DB SQL Role Definition with the given Id.",
        "parameters": [
          {
            "name": "roleDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The GUID for the Role Definition."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Role Definition was successfully retrieved.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties related to the Role Definition.",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "BuiltInRole",
                        "CustomRole"
                      ],
                      "description": "Indicates whether the Role Definition was built-in or user created.",
                      "x-ms-enum": {
                        "name": "RoleDefinitionType",
                        "modelAsString": false
                      }
                    },
                    "assignableScopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "dataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "An array of data actions that are allowed."
                          },
                          "notDataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "An array of data actions that are denied."
                          }
                        },
                        "description": "The set of data plane operations permitted through this Role Definition."
                      },
                      "description": "The set of operations allowed through this Role Definition."
                    }
                  }
                }
              },
              "description": "An Azure Cosmos DB SQL Role Definition."
            }
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlRoleDefinition",
        "description": "Creates or updates an Azure Cosmos DB SQL Role Definition.",
        "parameters": [
          {
            "name": "roleDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The GUID for the Role Definition."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateSqlRoleDefinitionParameters",
            "in": "body",
            "required": true,
            "description": "The properties required to create or update a Role Definition.",
            "schema": {
              "description": "Parameters to create and update an Azure Cosmos DB SQL Role Definition.",
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update an Azure Cosmos DB SQL Role Definition.",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "BuiltInRole",
                        "CustomRole"
                      ],
                      "description": "Indicates whether the Role Definition was built-in or user created.",
                      "x-ms-enum": {
                        "name": "RoleDefinitionType",
                        "modelAsString": false
                      }
                    },
                    "assignableScopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "dataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "An array of data actions that are allowed."
                          },
                          "notDataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "An array of data actions that are denied."
                          }
                        },
                        "description": "The set of data plane operations permitted through this Role Definition."
                      },
                      "description": "The set of operations allowed through this Role Definition."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Role Definition create or update operation was completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties related to the Role Definition.",
                  "properties": {
                    "roleName": {
                      "type": "string",
                      "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
                    },
                    "type": {
                      "type": "string",
                      "enum": [
                        "BuiltInRole",
                        "CustomRole"
                      ],
                      "description": "Indicates whether the Role Definition was built-in or user created.",
                      "x-ms-enum": {
                        "name": "RoleDefinitionType",
                        "modelAsString": false
                      }
                    },
                    "assignableScopes": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
                    },
                    "permissions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "dataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "An array of data actions that are allowed."
                          },
                          "notDataActions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "An array of data actions that are denied."
                          }
                        },
                        "description": "The set of data plane operations permitted through this Role Definition."
                      },
                      "description": "The set of operations allowed through this Role Definition."
                    }
                  }
                }
              },
              "description": "An Azure Cosmos DB SQL Role Definition."
            }
          },
          "202": {
            "description": "The Role Definition create or update request was accepted and will complete asynchronously."
          }
        }
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlRoleDefinition",
        "description": "Deletes an existing Azure Cosmos DB SQL Role Definition.",
        "parameters": [
          {
            "name": "roleDefinitionId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The GUID for the Role Definition."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Role Definition delete operation was completed successfully."
          },
          "202": {
            "description": "The Role Definition delete request was accepted and will complete asynchronously."
          },
          "204": {
            "description": "The requested Role Definition does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlRoleDefinitions": {
      "get": {
        "operationId": "SqlResources_ListSqlRoleDefinitions",
        "description": "Retrieves the list of all Azure Cosmos DB SQL Role Definitions.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The list operation completed successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the database account."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the database account."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties related to the Role Definition.",
                        "properties": {
                          "roleName": {
                            "type": "string",
                            "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "BuiltInRole",
                              "CustomRole"
                            ],
                            "description": "Indicates whether the Role Definition was built-in or user created.",
                            "x-ms-enum": {
                              "name": "RoleDefinitionType",
                              "modelAsString": false
                            }
                          },
                          "assignableScopes": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "description": "A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
                          },
                          "permissions": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "dataActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "An array of data actions that are allowed."
                                },
                                "notDataActions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "description": "An array of data actions that are denied."
                                }
                              },
                              "description": "The set of data plane operations permitted through this Role Definition."
                            },
                            "description": "The set of operations allowed through this Role Definition."
                          }
                        }
                      }
                    },
                    "description": "An Azure Cosmos DB SQL Role Definition."
                  },
                  "description": "List of Role Definitions and their properties."
                }
              },
              "description": "The relevant Role Definitions."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlRoleAssignments/{roleAssignmentId}": {
      "get": {
        "operationId": "SqlResources_GetSqlRoleAssignment",
        "description": "Retrieves the properties of an existing Azure Cosmos DB SQL Role Assignment with the given Id.",
        "parameters": [
          {
            "name": "roleAssignmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The GUID for the Role Assignment."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Role Assignment was successfully retrieved.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties related to the Role Assignment.",
                  "type": "object",
                  "properties": {
                    "roleDefinitionId": {
                      "type": "string",
                      "description": "The unique identifier for the associated Role Definition."
                    },
                    "scope": {
                      "type": "string",
                      "description": "The data plane resource path for which access is being granted through this Role Assignment."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
                    }
                  }
                }
              },
              "description": "An Azure Cosmos DB Role Assignment"
            }
          }
        }
      },
      "put": {
        "operationId": "SqlResources_CreateUpdateSqlRoleAssignment",
        "description": "Creates or updates an Azure Cosmos DB SQL Role Assignment.",
        "parameters": [
          {
            "name": "roleAssignmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The GUID for the Role Assignment."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateSqlRoleAssignmentParameters",
            "in": "body",
            "required": true,
            "description": "The properties required to create or update a Role Assignment.",
            "schema": {
              "description": "Parameters to create and update an Azure Cosmos DB SQL Role Assignment.",
              "type": "object",
              "properties": {
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties to create and update an Azure Cosmos DB SQL Role Assignment.",
                  "type": "object",
                  "properties": {
                    "roleDefinitionId": {
                      "type": "string",
                      "description": "The unique identifier for the associated Role Definition."
                    },
                    "scope": {
                      "type": "string",
                      "description": "The data plane resource path for which access is being granted through this Role Assignment."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Role Assignment create or update operation was completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "x-ms-client-flatten": true,
                  "description": "Properties related to the Role Assignment.",
                  "type": "object",
                  "properties": {
                    "roleDefinitionId": {
                      "type": "string",
                      "description": "The unique identifier for the associated Role Definition."
                    },
                    "scope": {
                      "type": "string",
                      "description": "The data plane resource path for which access is being granted through this Role Assignment."
                    },
                    "principalId": {
                      "type": "string",
                      "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
                    }
                  }
                }
              },
              "description": "An Azure Cosmos DB Role Assignment"
            }
          },
          "202": {
            "description": "The Role Assignment create or update request was accepted and will complete asynchronously."
          }
        }
      },
      "delete": {
        "operationId": "SqlResources_DeleteSqlRoleAssignment",
        "description": "Deletes an existing Azure Cosmos DB SQL Role Assignment.",
        "parameters": [
          {
            "name": "roleAssignmentId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The GUID for the Role Assignment."
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The Role Assignment delete operation was completed successfully."
          },
          "202": {
            "description": "The Role Assignment delete request was accepted and will complete asynchronously."
          },
          "204": {
            "description": "The requested Role Assignment does not exist."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlRoleAssignments": {
      "get": {
        "operationId": "SqlResources_ListSqlRoleAssignments",
        "description": "Retrieves the list of all Azure Cosmos DB SQL Role Assignments.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The list operation completed successfully.",
            "schema": {
              "properties": {
                "value": {
                  "type": "array",
                  "readOnly": true,
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the database account."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the database account."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "properties": {
                        "x-ms-client-flatten": true,
                        "description": "Properties related to the Role Assignment.",
                        "type": "object",
                        "properties": {
                          "roleDefinitionId": {
                            "type": "string",
                            "description": "The unique identifier for the associated Role Definition."
                          },
                          "scope": {
                            "type": "string",
                            "description": "The data plane resource path for which access is being granted through this Role Assignment."
                          },
                          "principalId": {
                            "type": "string",
                            "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
                          }
                        }
                      }
                    },
                    "description": "An Azure Cosmos DB Role Assignment"
                  },
                  "description": "List of Role Assignments and their properties"
                }
              },
              "description": "The relevant Role Assignments."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts": {
      "get": {
        "operationId": "RestorableDatabaseAccounts_ListByLocation",
        "description": "Lists all the restorable Azure Cosmos DB database accounts available under the subscription and in a region.  This call requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "A Azure Cosmos DB restorable database account.",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "description": "The properties of a restorable database account.",
                        "properties": {
                          "accountName": {
                            "type": "string",
                            "description": "The name of the global database account"
                          },
                          "creationTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation time of the restorable database account (ISO-8601 format)."
                          },
                          "deletionTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the restorable database account has been deleted (ISO-8601 format)."
                          },
                          "oldestRestorableTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The least recent time at which the database account can be restored to (ISO-8601 format)."
                          },
                          "apiType": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The API type of the restorable database account.",
                            "enum": [
                              "MongoDB",
                              "Gremlin",
                              "Cassandra",
                              "Table",
                              "Sql",
                              "GremlinV2"
                            ],
                            "x-ms-enum": {
                              "name": "ApiType",
                              "modelAsString": true
                            }
                          },
                          "restorableLocations": {
                            "type": "array",
                            "readOnly": true,
                            "description": "List of regions where the of the database account can be restored from.",
                            "items": {
                              "type": "object",
                              "description": "Properties of the regional restorable account.",
                              "properties": {
                                "locationName": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The location of the regional restorable account."
                                },
                                "regionalDatabaseAccountInstanceId": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The instance id of the regional restorable account."
                                },
                                "creationTime": {
                                  "type": "string",
                                  "readOnly": true,
                                  "format": "date-time",
                                  "description": "The creation time of the regional restorable database account (ISO-8601 format)."
                                },
                                "deletionTime": {
                                  "type": "string",
                                  "readOnly": true,
                                  "format": "date-time",
                                  "description": "The time at which the regional restorable database account has been deleted (ISO-8601 format)."
                                }
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      }
                    }
                  },
                  "description": "List of restorable database accounts and their properties."
                }
              },
              "description": "The List operation response, that contains the restorable database accounts and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/restorableDatabaseAccounts": {
      "get": {
        "operationId": "RestorableDatabaseAccounts_List",
        "description": "Lists all the restorable Azure Cosmos DB database accounts available under the subscription. This call requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read' permission.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "A Azure Cosmos DB restorable database account.",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "description": "The properties of a restorable database account.",
                        "properties": {
                          "accountName": {
                            "type": "string",
                            "description": "The name of the global database account"
                          },
                          "creationTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The creation time of the restorable database account (ISO-8601 format)."
                          },
                          "deletionTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time at which the restorable database account has been deleted (ISO-8601 format)."
                          },
                          "oldestRestorableTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The least recent time at which the database account can be restored to (ISO-8601 format)."
                          },
                          "apiType": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The API type of the restorable database account.",
                            "enum": [
                              "MongoDB",
                              "Gremlin",
                              "Cassandra",
                              "Table",
                              "Sql",
                              "GremlinV2"
                            ],
                            "x-ms-enum": {
                              "name": "ApiType",
                              "modelAsString": true
                            }
                          },
                          "restorableLocations": {
                            "type": "array",
                            "readOnly": true,
                            "description": "List of regions where the of the database account can be restored from.",
                            "items": {
                              "type": "object",
                              "description": "Properties of the regional restorable account.",
                              "properties": {
                                "locationName": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The location of the regional restorable account."
                                },
                                "regionalDatabaseAccountInstanceId": {
                                  "type": "string",
                                  "readOnly": true,
                                  "description": "The instance id of the regional restorable account."
                                },
                                "creationTime": {
                                  "type": "string",
                                  "readOnly": true,
                                  "format": "date-time",
                                  "description": "The creation time of the regional restorable database account (ISO-8601 format)."
                                },
                                "deletionTime": {
                                  "type": "string",
                                  "readOnly": true,
                                  "format": "date-time",
                                  "description": "The time at which the regional restorable database account has been deleted (ISO-8601 format)."
                                }
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "location": {
                        "type": "string",
                        "description": "The location of the resource group to which the resource belongs."
                      }
                    }
                  },
                  "description": "List of restorable database accounts and their properties."
                }
              },
              "description": "The List operation response, that contains the restorable database accounts and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}": {
      "get": {
        "operationId": "RestorableDatabaseAccounts_GetByLocation",
        "description": "Retrieves the properties of an existing Azure Cosmos DB restorable database account.  This call requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/read/*' permission.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The instanceId GUID of a restorable database account."
          }
        ],
        "responses": {
          "200": {
            "description": "The restorable database account properties were retrieved successfully.",
            "schema": {
              "description": "A Azure Cosmos DB restorable database account.",
              "type": "object",
              "properties": {
                "properties": {
                  "type": "object",
                  "x-ms-client-flatten": true,
                  "description": "The properties of a restorable database account.",
                  "properties": {
                    "accountName": {
                      "type": "string",
                      "description": "The name of the global database account"
                    },
                    "creationTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The creation time of the restorable database account (ISO-8601 format)."
                    },
                    "deletionTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The time at which the restorable database account has been deleted (ISO-8601 format)."
                    },
                    "oldestRestorableTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "The least recent time at which the database account can be restored to (ISO-8601 format)."
                    },
                    "apiType": {
                      "type": "string",
                      "readOnly": true,
                      "description": "The API type of the restorable database account.",
                      "enum": [
                        "MongoDB",
                        "Gremlin",
                        "Cassandra",
                        "Table",
                        "Sql",
                        "GremlinV2"
                      ],
                      "x-ms-enum": {
                        "name": "ApiType",
                        "modelAsString": true
                      }
                    },
                    "restorableLocations": {
                      "type": "array",
                      "readOnly": true,
                      "description": "List of regions where the of the database account can be restored from.",
                      "items": {
                        "type": "object",
                        "description": "Properties of the regional restorable account.",
                        "properties": {
                          "locationName": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The location of the regional restorable account."
                          },
                          "regionalDatabaseAccountInstanceId": {
                            "type": "string",
                            "readOnly": true,
                            "description": "The instance id of the regional restorable account."
                          },
                          "creationTime": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "The creation time of the regional restorable database account (ISO-8601 format)."
                          },
                          "deletionTime": {
                            "type": "string",
                            "readOnly": true,
                            "format": "date-time",
                            "description": "The time at which the regional restorable database account has been deleted (ISO-8601 format)."
                          }
                        }
                      }
                    }
                  }
                },
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the ARM resource."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the ARM resource."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "location": {
                  "type": "string",
                  "description": "The location of the resource group to which the resource belongs."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/sqlDatabases/{databaseName}/containers/{containerName}/retrieveContinuousBackupInformation": {
      "post": {
        "operationId": "SqlResources_RetrieveContinuousBackupInformation",
        "description": "Retrieves continuous backup information for a container resource.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "containerName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB container name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "in": "body",
            "name": "location",
            "required": true,
            "description": "The name of the continuous backup restore location.",
            "schema": {
              "type": "object",
              "description": "Properties of the regional restorable account.",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The name of the continuous backup restore location."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Sql container retrieve backup information operation completed successfully.",
            "schema": {
              "description": "Backup information of a resource.",
              "type": "object",
              "properties": {
                "continuousBackupInformation": {
                  "description": "Information about the status of continuous backups.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "latestRestorableTimestamp": {
                      "type": "string",
                      "description": "The latest restorable timestamp for a resource."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The sql container retrieve backup information operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableSqlDatabases": {
      "get": {
        "operationId": "RestorableSqlDatabases_List",
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB SQL databases under the restorable account.  This helps in scenario where database was accidentally deleted to get the deletion time.  This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The instanceId GUID of a restorable database account."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB SQL database event",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "description": "The properties of a SQL database event.",
                        "properties": {
                          "resource": {
                            "type": "object",
                            "description": "The resource of an Azure Cosmos DB SQL database event",
                            "properties": {
                              "_rid": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A system generated property. A unique identifier."
                              },
                              "operationType": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The operation type of this database event.",
                                "enum": [
                                  "Create",
                                  "Replace",
                                  "Delete",
                                  "Recreate",
                                  "SystemOperation"
                                ],
                                "x-ms-enum": {
                                  "name": "OperationType",
                                  "modelAsString": true
                                }
                              },
                              "canUndelete": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A state of this database to identify if this database is restorable in same account."
                              },
                              "canUndeleteReason": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The reason why this database can not be restored in same account."
                              },
                              "eventTimestamp": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The time when this database event happened."
                              },
                              "ownerId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The name of the SQL database."
                              },
                              "ownerResourceId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The resource ID of the SQL database."
                              },
                              "database": {
                                "type": "object",
                                "description": "Cosmos DB SQL database resource object",
                                "properties": {
                                  "_colls": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "A system generated property that specified the addressable path of the collections resource."
                                  },
                                  "_users": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "A system generated property that specifies the addressable path of the users resource."
                                  },
                                  "_self": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "A system generated property that specifies the addressable path of the database resource."
                                  }
                                },
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "Cosmos DB SQL database resource object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Name of the Cosmos DB SQL database"
                                      },
                                      "restoreParameters": {
                                        "description": "Parameters to indicate the information about the restore",
                                        "type": "object",
                                        "x-ms-mutability": [
                                          "read",
                                          "create"
                                        ],
                                        "properties": {
                                          "restoreSource": {
                                            "type": "string",
                                            "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                          },
                                          "restoreTimestampInUtc": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Time to which the account has to be restored (ISO-8601 format)."
                                          },
                                          "restoreWithTtlDisabled": {
                                            "type": "boolean",
                                            "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                          }
                                        }
                                      },
                                      "createMode": {
                                        "description": "Enum to indicate the mode of resource creation.",
                                        "type": "string",
                                        "default": "Default",
                                        "enum": [
                                          "Default",
                                          "Restore"
                                        ],
                                        "x-ms-enum": {
                                          "name": "CreateMode",
                                          "modelAsString": true
                                        }
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  },
                                  {
                                    "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                    "type": "object",
                                    "properties": {
                                      "_rid": {
                                        "type": "string",
                                        "description": "A system generated property. A unique identifier.",
                                        "readOnly": true
                                      },
                                      "_ts": {
                                        "type": "number",
                                        "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                        "readOnly": true
                                      },
                                      "_etag": {
                                        "type": "string",
                                        "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                        "readOnly": true
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource Identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      }
                    }
                  },
                  "description": "List of SQL database events and their properties."
                }
              },
              "description": "The List operation response, that contains the SQL database events and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableSqlContainers": {
      "get": {
        "operationId": "RestorableSqlContainers_List",
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB SQL containers under a specific database.  This helps in scenario where container was accidentally deleted.  This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The instanceId GUID of a restorable database account."
          },
          {
            "name": "restorableSqlDatabaseRid",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The resource ID of the SQL database."
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Restorable Sql containers event feed start time."
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Restorable Sql containers event feed end time."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB SQL container event",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "description": "The properties of a SQL container event.",
                        "properties": {
                          "resource": {
                            "description": "The resource of an Azure Cosmos DB SQL container event",
                            "type": "object",
                            "properties": {
                              "_rid": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A system generated property. A unique identifier."
                              },
                              "operationType": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The operation type of this container event.",
                                "enum": [
                                  "Create",
                                  "Replace",
                                  "Delete",
                                  "Recreate",
                                  "SystemOperation"
                                ],
                                "x-ms-enum": {
                                  "name": "OperationType",
                                  "modelAsString": true
                                }
                              },
                              "canUndelete": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A state of this container to identify if this container is restorable in same account."
                              },
                              "canUndeleteReason": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The reason why this container can not be restored in same account."
                              },
                              "eventTimestamp": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The when this container event happened."
                              },
                              "ownerId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The name of this SQL container."
                              },
                              "ownerResourceId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The resource ID of this SQL container."
                              },
                              "container": {
                                "type": "object",
                                "description": "Cosmos DB SQL container resource object",
                                "properties": {
                                  "_self": {
                                    "type": "string",
                                    "readOnly": true,
                                    "description": "A system generated property that specifies the addressable path of the container resource."
                                  }
                                },
                                "allOf": [
                                  {
                                    "type": "object",
                                    "description": "Cosmos DB SQL container resource object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "Name of the Cosmos DB SQL container"
                                      },
                                      "indexingPolicy": {
                                        "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
                                        "type": "object",
                                        "properties": {
                                          "automatic": {
                                            "type": "boolean",
                                            "description": "Indicates if the indexing policy is automatic"
                                          },
                                          "indexingMode": {
                                            "description": "Indicates the indexing mode.",
                                            "type": "string",
                                            "default": "consistent",
                                            "enum": [
                                              "consistent",
                                              "lazy",
                                              "none"
                                            ],
                                            "x-ms-enum": {
                                              "name": "IndexingMode",
                                              "modelAsString": true
                                            }
                                          },
                                          "includedPaths": {
                                            "description": "List of paths to include in the indexing",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": "The paths that are included in indexing",
                                              "properties": {
                                                "path": {
                                                  "type": "string",
                                                  "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                                },
                                                "indexes": {
                                                  "description": "List of indexes for this path",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "object",
                                                    "description": "The indexes for the path.",
                                                    "properties": {
                                                      "dataType": {
                                                        "description": "The datatype for which the indexing behavior is applied to.",
                                                        "type": "string",
                                                        "default": "String",
                                                        "enum": [
                                                          "String",
                                                          "Number",
                                                          "Point",
                                                          "Polygon",
                                                          "LineString",
                                                          "MultiPolygon"
                                                        ],
                                                        "x-ms-enum": {
                                                          "name": "DataType",
                                                          "modelAsString": true
                                                        }
                                                      },
                                                      "precision": {
                                                        "description": "The precision of the index. -1 is maximum precision.",
                                                        "type": "integer"
                                                      },
                                                      "kind": {
                                                        "description": "Indicates the type of index.",
                                                        "type": "string",
                                                        "default": "Hash",
                                                        "enum": [
                                                          "Hash",
                                                          "Range",
                                                          "Spatial"
                                                        ],
                                                        "x-ms-enum": {
                                                          "name": "IndexKind",
                                                          "modelAsString": true
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "excludedPaths": {
                                            "description": "List of paths to exclude from indexing",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "path": {
                                                  "type": "string",
                                                  "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                                }
                                              }
                                            }
                                          },
                                          "compositeIndexes": {
                                            "description": "List of composite path list",
                                            "type": "array",
                                            "items": {
                                              "description": "List of composite path",
                                              "type": "array",
                                              "items": {
                                                "type": "object",
                                                "properties": {
                                                  "path": {
                                                    "type": "string",
                                                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                                  },
                                                  "order": {
                                                    "description": "Sort order for composite paths.",
                                                    "type": "string",
                                                    "enum": [
                                                      "ascending",
                                                      "descending"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "CompositePathSortOrder",
                                                      "modelAsString": true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "spatialIndexes": {
                                            "description": "List of spatial specifics",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "path": {
                                                  "type": "string",
                                                  "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                                },
                                                "types": {
                                                  "description": "List of path's spatial type",
                                                  "type": "array",
                                                  "items": {
                                                    "description": "Indicates the spatial type of index.",
                                                    "type": "string",
                                                    "enum": [
                                                      "Point",
                                                      "LineString",
                                                      "Polygon",
                                                      "MultiPolygon"
                                                    ],
                                                    "x-ms-enum": {
                                                      "name": "SpatialType",
                                                      "modelAsString": true
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          },
                                          "vectorIndexes": {
                                            "description": "List of paths to include in the vector indexing",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "properties": {
                                                "path": {
                                                  "type": "string",
                                                  "description": "The path to the vector field in the document."
                                                },
                                                "type": {
                                                  "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                                  "type": "string",
                                                  "enum": [
                                                    "flat",
                                                    "diskANN",
                                                    "quantizedFlat"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "VectorIndexType",
                                                    "modelAsString": true
                                                  }
                                                }
                                              },
                                              "required": [
                                                "path",
                                                "type"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "partitionKey": {
                                        "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                                        "type": "object",
                                        "properties": {
                                          "paths": {
                                            "description": "List of paths using which data within the container can be partitioned",
                                            "type": "array",
                                            "items": {
                                              "type": "string",
                                              "description": "A path. These typically start with root (/path)"
                                            }
                                          },
                                          "kind": {
                                            "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                                            "type": "string",
                                            "default": "Hash",
                                            "enum": [
                                              "Hash",
                                              "Range",
                                              "MultiHash"
                                            ],
                                            "x-ms-enum": {
                                              "name": "PartitionKind",
                                              "modelAsString": true
                                            }
                                          },
                                          "version": {
                                            "description": "Indicates the version of the partition key definition",
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 2,
                                            "format": "int32"
                                          },
                                          "systemKey": {
                                            "description": "Indicates if the container is using a system generated partition key",
                                            "type": "boolean",
                                            "readOnly": true
                                          }
                                        }
                                      },
                                      "defaultTtl": {
                                        "type": "integer",
                                        "description": "Default time to live"
                                      },
                                      "uniqueKeyPolicy": {
                                        "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                                        "type": "object",
                                        "properties": {
                                          "uniqueKeys": {
                                            "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                              "properties": {
                                                "paths": {
                                                  "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                                  "type": "array",
                                                  "items": {
                                                    "type": "string",
                                                    "description": "A path. These typically start with root (/path)"
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      },
                                      "conflictResolutionPolicy": {
                                        "description": "The conflict resolution policy for the container.",
                                        "type": "object",
                                        "properties": {
                                          "mode": {
                                            "description": "Indicates the conflict resolution mode.",
                                            "type": "string",
                                            "default": "LastWriterWins",
                                            "enum": [
                                              "LastWriterWins",
                                              "Custom"
                                            ],
                                            "x-ms-enum": {
                                              "name": "ConflictResolutionMode",
                                              "modelAsString": true
                                            }
                                          },
                                          "conflictResolutionPath": {
                                            "type": "string",
                                            "description": "The conflict resolution path in the case of LastWriterWins mode."
                                          },
                                          "conflictResolutionProcedure": {
                                            "type": "string",
                                            "description": "The procedure to resolve conflicts in the case of custom mode."
                                          }
                                        }
                                      },
                                      "clientEncryptionPolicy": {
                                        "description": "The client encryption policy for the container.",
                                        "type": "object",
                                        "properties": {
                                          "includedPaths": {
                                            "description": "Paths of the item that need encryption along with path-specific settings.",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": ".",
                                              "properties": {
                                                "path": {
                                                  "description": "Path that needs to be encrypted.",
                                                  "type": "string"
                                                },
                                                "clientEncryptionKeyId": {
                                                  "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                                                  "type": "string"
                                                },
                                                "encryptionType": {
                                                  "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                                                  "type": "string"
                                                },
                                                "encryptionAlgorithm": {
                                                  "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "path",
                                                "clientEncryptionKeyId",
                                                "encryptionType",
                                                "encryptionAlgorithm"
                                              ]
                                            },
                                            "x-ms-identifiers": []
                                          },
                                          "policyFormatVersion": {
                                            "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
                                            "type": "integer",
                                            "minimum": 1,
                                            "maximum": 2,
                                            "format": "int32"
                                          }
                                        },
                                        "required": [
                                          "includedPaths",
                                          "policyFormatVersion"
                                        ]
                                      },
                                      "analyticalStorageTtl": {
                                        "type": "integer",
                                        "format": "int64",
                                        "description": "Analytical TTL."
                                      },
                                      "restoreParameters": {
                                        "description": "Parameters to indicate the information about the restore",
                                        "type": "object",
                                        "x-ms-mutability": [
                                          "read",
                                          "create"
                                        ],
                                        "properties": {
                                          "restoreSource": {
                                            "type": "string",
                                            "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                          },
                                          "restoreTimestampInUtc": {
                                            "type": "string",
                                            "format": "date-time",
                                            "description": "Time to which the account has to be restored (ISO-8601 format)."
                                          },
                                          "restoreWithTtlDisabled": {
                                            "type": "boolean",
                                            "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                          }
                                        }
                                      },
                                      "createMode": {
                                        "description": "Enum to indicate the mode of resource creation.",
                                        "type": "string",
                                        "default": "Default",
                                        "enum": [
                                          "Default",
                                          "Restore"
                                        ],
                                        "x-ms-enum": {
                                          "name": "CreateMode",
                                          "modelAsString": true
                                        }
                                      },
                                      "computedProperties": {
                                        "description": "List of computed properties",
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "description": "The definition of a computed property",
                                          "properties": {
                                            "name": {
                                              "type": "string",
                                              "description": "The name of a computed property, for example - \"cp_lowerName\""
                                            },
                                            "query": {
                                              "type": "string",
                                              "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
                                            }
                                          }
                                        }
                                      },
                                      "vectorEmbeddingPolicy": {
                                        "description": "The vector embedding policy for the container.",
                                        "type": "object",
                                        "properties": {
                                          "vectorEmbeddings": {
                                            "description": "List of vector embeddings",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                                              "properties": {
                                                "path": {
                                                  "type": "string",
                                                  "description": "The path to the vector field in the document."
                                                },
                                                "dataType": {
                                                  "description": "Indicates the data type of vector.",
                                                  "type": "string",
                                                  "enum": [
                                                    "float32",
                                                    "uint8",
                                                    "int8"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "VectorDataType",
                                                    "modelAsString": true
                                                  }
                                                },
                                                "distanceFunction": {
                                                  "description": "The distance function to use for distance calculation in between vectors.",
                                                  "type": "string",
                                                  "enum": [
                                                    "euclidean",
                                                    "cosine",
                                                    "dotproduct"
                                                  ],
                                                  "x-ms-enum": {
                                                    "name": "DistanceFunction",
                                                    "modelAsString": true
                                                  }
                                                },
                                                "dimensions": {
                                                  "type": "integer",
                                                  "format": "int32",
                                                  "description": "The number of dimensions in the vector."
                                                }
                                              },
                                              "required": [
                                                "path",
                                                "dataType",
                                                "distanceFunction",
                                                "dimensions"
                                              ]
                                            }
                                          }
                                        }
                                      },
                                      "fullTextPolicy": {
                                        "description": "The FullText policy for the container.",
                                        "type": "object",
                                        "properties": {
                                          "defaultLanguage": {
                                            "type": "string",
                                            "description": "The default language for a full text paths."
                                          },
                                          "fullTextPaths": {
                                            "description": "List of FullText Paths",
                                            "type": "array",
                                            "items": {
                                              "type": "object",
                                              "description": "Represents the full text path specification.",
                                              "properties": {
                                                "path": {
                                                  "type": "string",
                                                  "description": "The path to the full text field in the document."
                                                },
                                                "language": {
                                                  "description": "The language of the full text field in the document.",
                                                  "type": "string"
                                                }
                                              },
                                              "required": [
                                                "path"
                                              ]
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "required": [
                                      "id"
                                    ]
                                  },
                                  {
                                    "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                                    "type": "object",
                                    "properties": {
                                      "_rid": {
                                        "type": "string",
                                        "description": "A system generated property. A unique identifier.",
                                        "readOnly": true
                                      },
                                      "_ts": {
                                        "type": "number",
                                        "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                        "readOnly": true
                                      },
                                      "_etag": {
                                        "type": "string",
                                        "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                        "readOnly": true
                                      }
                                    }
                                  }
                                ]
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource Identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      }
                    }
                  },
                  "description": "List of SQL container events and their properties."
                }
              },
              "description": "The List operation response, that contains the SQL container events and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableSqlResources": {
      "get": {
        "operationId": "RestorableSqlResources_List",
        "description": "Return a list of database and container combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The instanceId GUID of a restorable database account."
          },
          {
            "name": "restoreLocation",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The location where the restorable resources are located."
          },
          {
            "name": "restoreTimestampInUtc",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The timestamp when the restorable resources existed."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Specific Databases to restore.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "databaseName": {
                        "type": "string",
                        "description": "The name of the database available for restore."
                      },
                      "collectionNames": {
                        "type": "array",
                        "description": "The names of the collections available for restore.",
                        "items": {
                          "type": "string",
                          "description": "The name of the collection."
                        }
                      }
                    }
                  },
                  "description": "List of restorable SQL resources, including the database and collection names."
                }
              },
              "description": "The List operation response, that contains the restorable SQL resources."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/mongodbDatabases/{databaseName}/collections/{collectionName}/retrieveContinuousBackupInformation": {
      "post": {
        "operationId": "MongoDBResources_RetrieveContinuousBackupInformation",
        "description": "Retrieves continuous backup information for a Mongodb collection.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "collectionName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB collection name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "in": "body",
            "name": "location",
            "required": true,
            "description": "The name of the continuous backup restore location.",
            "schema": {
              "type": "object",
              "description": "Properties of the regional restorable account.",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The name of the continuous backup restore location."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Mongodb collection retrieve backup information operation completed successfully.",
            "schema": {
              "description": "Backup information of a resource.",
              "type": "object",
              "properties": {
                "continuousBackupInformation": {
                  "description": "Information about the status of continuous backups.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "latestRestorableTimestamp": {
                      "type": "string",
                      "description": "The latest restorable timestamp for a resource."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Mongodb collection retrieve backup information operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableMongodbDatabases": {
      "get": {
        "operationId": "RestorableMongodbDatabases_List",
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB databases under the restorable account.  This helps in scenario where database was accidentally deleted to get the deletion time.  This API requires  'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The instanceId GUID of a restorable database account."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB MongoDB database event",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "description": "The properties of a MongoDB database event.",
                        "properties": {
                          "resource": {
                            "description": "The resource of an Azure Cosmos DB MongoDB database event",
                            "type": "object",
                            "properties": {
                              "_rid": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A system generated property. A unique identifier."
                              },
                              "operationType": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The operation type of this database event.",
                                "enum": [
                                  "Create",
                                  "Replace",
                                  "Delete",
                                  "Recreate",
                                  "SystemOperation"
                                ],
                                "x-ms-enum": {
                                  "name": "OperationType",
                                  "modelAsString": true
                                }
                              },
                              "canUndelete": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A state of this database to identify if this database is restorable in same account."
                              },
                              "canUndeleteReason": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The reason why this database can not be restored in same account."
                              },
                              "eventTimestamp": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The time when this database event happened."
                              },
                              "ownerId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The name of this MongoDB database."
                              },
                              "ownerResourceId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The resource ID of this MongoDB database."
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource Identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      }
                    }
                  },
                  "description": "List of MongoDB database events and their properties."
                }
              },
              "description": "The List operation response, that contains the MongoDB database events and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableMongodbCollections": {
      "get": {
        "operationId": "RestorableMongodbCollections_List",
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB MongoDB collections under a specific database.  This helps in scenario where container was accidentally deleted.  This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The instanceId GUID of a restorable database account."
          },
          {
            "name": "restorableMongodbDatabaseRid",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The resource ID of the MongoDB database."
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Restorable MongoDB collections event feed start time."
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Restorable MongoDB collections event feed end time."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB MongoDB collection event",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "description": "The properties of a MongoDB collection event.",
                        "properties": {
                          "resource": {
                            "description": "The resource of an Azure Cosmos DB MongoDB collection event",
                            "type": "object",
                            "properties": {
                              "_rid": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A system generated property. A unique identifier."
                              },
                              "operationType": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The operation type of this collection event.",
                                "enum": [
                                  "Create",
                                  "Replace",
                                  "Delete",
                                  "Recreate",
                                  "SystemOperation"
                                ],
                                "x-ms-enum": {
                                  "name": "OperationType",
                                  "modelAsString": true
                                }
                              },
                              "canUndelete": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A state of this collection to identify if this container is restorable in same account."
                              },
                              "canUndeleteReason": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The reason why this collection can not be restored in same account."
                              },
                              "eventTimestamp": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The time when this collection event happened."
                              },
                              "ownerId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The name of this MongoDB collection."
                              },
                              "ownerResourceId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The resource ID of this MongoDB collection."
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource Identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      }
                    }
                  },
                  "description": "List of MongoDB collection events and their properties."
                }
              },
              "description": "The List operation response, that contains the MongoDB collection events and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableMongodbResources": {
      "get": {
        "operationId": "RestorableMongodbResources_List",
        "description": "Return a list of database and collection combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The instanceId GUID of a restorable database account."
          },
          {
            "name": "restoreLocation",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The location where the restorable resources are located."
          },
          {
            "name": "restoreTimestampInUtc",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The timestamp when the restorable resources existed."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Specific Databases to restore.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "databaseName": {
                        "type": "string",
                        "description": "The name of the database available for restore."
                      },
                      "collectionNames": {
                        "type": "array",
                        "description": "The names of the collections available for restore.",
                        "items": {
                          "type": "string",
                          "description": "The name of the collection."
                        }
                      }
                    }
                  },
                  "description": "List of restorable MongoDB resources, including the database and collection names."
                }
              },
              "description": "The List operation response, that contains the restorable MongoDB resources."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/gremlinDatabases/{databaseName}/graphs/{graphName}/retrieveContinuousBackupInformation": {
      "post": {
        "operationId": "GremlinResources_RetrieveContinuousBackupInformation",
        "description": "Retrieves continuous backup information for a gremlin graph.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "databaseName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database name."
          },
          {
            "name": "graphName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB graph name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "in": "body",
            "name": "location",
            "required": true,
            "description": "The name of the continuous backup restore location.",
            "schema": {
              "type": "object",
              "description": "Properties of the regional restorable account.",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The name of the continuous backup restore location."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Gremlin graph retrieve backup information operation completed successfully.",
            "schema": {
              "description": "Backup information of a resource.",
              "type": "object",
              "properties": {
                "continuousBackupInformation": {
                  "description": "Information about the status of continuous backups.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "latestRestorableTimestamp": {
                      "type": "string",
                      "description": "The latest restorable timestamp for a resource."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Gremlin graph retrieve backup information operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableGremlinDatabases": {
      "get": {
        "operationId": "RestorableGremlinDatabases_List",
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB Gremlin databases under the restorable account. This helps in scenario where database was accidentally deleted to get the deletion time. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The instanceId GUID of a restorable database account."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB Gremlin database event",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "description": "The properties of a Gremlin database event.",
                        "properties": {
                          "resource": {
                            "description": "The resource of an Azure Cosmos DB Gremlin database event",
                            "type": "object",
                            "properties": {
                              "_rid": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A system generated property. A unique identifier."
                              },
                              "operationType": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The operation type of this database event.",
                                "enum": [
                                  "Create",
                                  "Replace",
                                  "Delete",
                                  "Recreate",
                                  "SystemOperation"
                                ],
                                "x-ms-enum": {
                                  "name": "OperationType",
                                  "modelAsString": true
                                }
                              },
                              "canUndelete": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A state of this database to identify if this database is restorable in same account."
                              },
                              "canUndeleteReason": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The reason why this database can not be restored in same account."
                              },
                              "eventTimestamp": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The time when this database event happened."
                              },
                              "ownerId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The name of this Gremlin database."
                              },
                              "ownerResourceId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The resource ID of this Gremlin database."
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource Identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      }
                    }
                  },
                  "description": "List of Gremlin database events and their properties."
                }
              },
              "description": "The List operation response, that contains the Gremlin database events and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableGraphs": {
      "get": {
        "operationId": "RestorableGremlinGraphs_List",
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB Gremlin graphs under a specific database. This helps in scenario where container was accidentally deleted. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The instanceId GUID of a restorable database account."
          },
          {
            "name": "restorableGremlinDatabaseRid",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The resource ID of the Gremlin database."
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Restorable Gremlin graphs event feed start time."
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Restorable Gremlin graphs event feed end time."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB Gremlin graph event",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "description": "The properties of a Gremlin graph event.",
                        "properties": {
                          "resource": {
                            "description": "The resource of an Azure Cosmos DB Gremlin graph event",
                            "type": "object",
                            "properties": {
                              "_rid": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A system generated property. A unique identifier."
                              },
                              "operationType": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The operation type of this graph event.",
                                "enum": [
                                  "Create",
                                  "Replace",
                                  "Delete",
                                  "Recreate",
                                  "SystemOperation"
                                ],
                                "x-ms-enum": {
                                  "name": "OperationType",
                                  "modelAsString": true
                                }
                              },
                              "canUndelete": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A state of this graph to identify if this graph is restorable in same account."
                              },
                              "canUndeleteReason": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The reason why this graph can not be restored in same account."
                              },
                              "eventTimestamp": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The time when this graph event happened."
                              },
                              "ownerId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The name of this Gremlin graph."
                              },
                              "ownerResourceId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The resource ID of this Gremlin graph."
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource Identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      }
                    }
                  },
                  "description": "List of Gremlin graph events and their properties."
                }
              },
              "description": "The List operation response, that contains the Gremlin graph events and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableGremlinResources": {
      "get": {
        "operationId": "RestorableGremlinResources_List",
        "description": "Return a list of gremlin database and graphs combo that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The instanceId GUID of a restorable database account."
          },
          {
            "name": "restoreLocation",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The location where the restorable resources are located."
          },
          {
            "name": "restoreTimestampInUtc",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The timestamp when the restorable resources existed."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Specific Databases to restore.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "databaseName": {
                        "type": "string",
                        "description": "The name of the gremlin database available for restore."
                      },
                      "graphNames": {
                        "type": "array",
                        "description": "The names of the graphs available for restore.",
                        "items": {
                          "type": "string",
                          "description": "The name of the graph."
                        }
                      }
                    }
                  },
                  "description": "List of restorable Gremlin resources, including the gremlin database and graph names.",
                  "x-ms-identifiers": []
                }
              },
              "description": "The List operation response, that contains the restorable Gremlin resources."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/tables/{tableName}/retrieveContinuousBackupInformation": {
      "post": {
        "operationId": "TableResources_RetrieveContinuousBackupInformation",
        "description": "Retrieves continuous backup information for a table.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB table name."
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "in": "body",
            "name": "location",
            "required": true,
            "description": "The name of the continuous backup restore location.",
            "schema": {
              "type": "object",
              "description": "Properties of the regional restorable account.",
              "properties": {
                "location": {
                  "type": "string",
                  "description": "The name of the continuous backup restore location."
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The Table retrieve backup information operation completed successfully.",
            "schema": {
              "description": "Backup information of a resource.",
              "type": "object",
              "properties": {
                "continuousBackupInformation": {
                  "description": "Information about the status of continuous backups.",
                  "type": "object",
                  "readOnly": true,
                  "properties": {
                    "latestRestorableTimestamp": {
                      "type": "string",
                      "description": "The latest restorable timestamp for a resource."
                    }
                  }
                }
              }
            }
          },
          "202": {
            "description": "The Table retrieve backup information operation will complete asynchronously."
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableTables": {
      "get": {
        "operationId": "RestorableTables_List",
        "description": "Show the event feed of all mutations done on all the Azure Cosmos DB Tables. This helps in scenario where table was accidentally deleted. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The instanceId GUID of a restorable database account."
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Restorable Tables event feed start time."
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Restorable Tables event feed end time."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "An Azure Cosmos DB Table event",
                    "type": "object",
                    "properties": {
                      "properties": {
                        "type": "object",
                        "x-ms-client-flatten": true,
                        "description": "The properties of a Table event.",
                        "properties": {
                          "resource": {
                            "description": "The resource of an Azure Cosmos DB Table event",
                            "type": "object",
                            "properties": {
                              "_rid": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A system generated property. A unique identifier."
                              },
                              "operationType": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The operation type of this table event.",
                                "enum": [
                                  "Create",
                                  "Replace",
                                  "Delete",
                                  "Recreate",
                                  "SystemOperation"
                                ],
                                "x-ms-enum": {
                                  "name": "OperationType",
                                  "modelAsString": true
                                }
                              },
                              "canUndelete": {
                                "type": "string",
                                "readOnly": true,
                                "description": "A state of this table to identify if this table is restorable in same account."
                              },
                              "canUndeleteReason": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The reason why this table can not be restored in same account."
                              },
                              "eventTimestamp": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The time when this table event happened."
                              },
                              "ownerId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The name of this Table."
                              },
                              "ownerResourceId": {
                                "type": "string",
                                "readOnly": true,
                                "description": "The resource ID of this Table."
                              }
                            }
                          }
                        }
                      },
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource Identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the ARM resource."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      }
                    }
                  },
                  "description": "List of Table events and their properties."
                }
              },
              "description": "The List operation response, that contains the Table events and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{instanceId}/restorableTableResources": {
      "get": {
        "operationId": "RestorableTableResources_List",
        "description": "Return a list of tables that exist on the account at the given timestamp and location. This helps in scenarios to validate what resources exist at given timestamp and location. This API requires 'Microsoft.DocumentDB/locations/restorableDatabaseAccounts/.../read' permission.",
        "parameters": [
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "location",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB region, with spaces between words and each word capitalized."
          },
          {
            "name": "instanceId",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The instanceId GUID of a restorable database account."
          },
          {
            "name": "restoreLocation",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The location where the restorable resources are located."
          },
          {
            "name": "restoreTimestampInUtc",
            "in": "query",
            "required": false,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "The timestamp when the restorable resources existed."
          }
        ],
        "responses": {
          "200": {
            "description": "The operation completed successfully.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Specific Databases to restore.",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the ARM resource."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the Table."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      }
                    }
                  },
                  "description": "List of restorable table names."
                }
              },
              "description": "List of restorable table names."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/services": {
      "get": {
        "operationId": "Service_List",
        "description": "Gets the status of service.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The ServiceResource.",
            "schema": {
              "type": "object",
              "properties": {
                "value": {
                  "readOnly": true,
                  "type": "array",
                  "items": {
                    "description": "Properties for the database account.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The unique resource identifier of the database account."
                      },
                      "name": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The name of the database account."
                      },
                      "type": {
                        "readOnly": true,
                        "type": "string",
                        "description": "The type of Azure resource."
                      },
                      "properties": {
                        "x-ms-client-flatten": false,
                        "description": "Services response resource.",
                        "type": "object",
                        "discriminator": "serviceType",
                        "properties": {
                          "creationTime": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "Time of the last state change (ISO-8601 format)."
                          },
                          "instanceSize": {
                            "type": "string",
                            "enum": [
                              "Cosmos.D4s",
                              "Cosmos.D8s",
                              "Cosmos.D16s"
                            ],
                            "description": "Instance type for the service.",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ServiceSize"
                            }
                          },
                          "instanceCount": {
                            "description": "Instance count for the service.",
                            "type": "integer",
                            "minimum": 0,
                            "format": "int32"
                          },
                          "serviceType": {
                            "type": "string",
                            "enum": [
                              "SqlDedicatedGateway",
                              "DataTransfer",
                              "GraphAPICompute",
                              "MaterializedViewsBuilder"
                            ],
                            "description": "ServiceType for the service.",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ServiceType"
                            }
                          },
                          "status": {
                            "readOnly": true,
                            "type": "string",
                            "enum": [
                              "Creating",
                              "Running",
                              "Updating",
                              "Deleting",
                              "Error",
                              "Stopped"
                            ],
                            "description": "Describes the status of a service.",
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "ServiceStatus"
                            }
                          }
                        },
                        "additionalProperties": true,
                        "required": [
                          "serviceType"
                        ]
                      }
                    }
                  },
                  "description": "List of Service Resource and their properties."
                }
              },
              "description": "The List operation response, that contains the Service Resource and their properties."
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DocumentDB/databaseAccounts/{accountName}/services/{serviceName}": {
      "put": {
        "tags": [
          "DataTransfer",
          "SqlDedicatedGateway",
          "GraphAPICompute",
          "MaterializedViewsBuilder"
        ],
        "operationId": "Service_Create",
        "description": "Creates a service.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB service name.",
            "minLength": 3,
            "maxLength": 50
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          },
          {
            "name": "createUpdateParameters",
            "in": "body",
            "required": true,
            "schema": {
              "description": "Parameters for Create or Update request for ServiceResource",
              "type": "object",
              "properties": {
                "properties": {
                  "description": "Properties in ServiceResourceCreateUpdateParameters.",
                  "type": "object",
                  "discriminator": "serviceType",
                  "properties": {
                    "instanceSize": {
                      "type": "string",
                      "enum": [
                        "Cosmos.D4s",
                        "Cosmos.D8s",
                        "Cosmos.D16s"
                      ],
                      "description": "Instance type for the service.",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ServiceSize"
                      }
                    },
                    "instanceCount": {
                      "description": "Instance count for the service.",
                      "type": "integer",
                      "minimum": 0,
                      "format": "int32"
                    },
                    "serviceType": {
                      "type": "string",
                      "enum": [
                        "SqlDedicatedGateway",
                        "DataTransfer",
                        "GraphAPICompute",
                        "MaterializedViewsBuilder"
                      ],
                      "description": "ServiceType for the service.",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ServiceType"
                      }
                    }
                  },
                  "required": [
                    "serviceType"
                  ]
                }
              }
            },
            "description": "The Service resource parameters."
          }
        ],
        "responses": {
          "200": {
            "description": "The service status.",
            "schema": {
              "description": "Properties for the database account.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "description": "Services response resource.",
                  "type": "object",
                  "discriminator": "serviceType",
                  "properties": {
                    "creationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Time of the last state change (ISO-8601 format)."
                    },
                    "instanceSize": {
                      "type": "string",
                      "enum": [
                        "Cosmos.D4s",
                        "Cosmos.D8s",
                        "Cosmos.D16s"
                      ],
                      "description": "Instance type for the service.",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ServiceSize"
                      }
                    },
                    "instanceCount": {
                      "description": "Instance count for the service.",
                      "type": "integer",
                      "minimum": 0,
                      "format": "int32"
                    },
                    "serviceType": {
                      "type": "string",
                      "enum": [
                        "SqlDedicatedGateway",
                        "DataTransfer",
                        "GraphAPICompute",
                        "MaterializedViewsBuilder"
                      ],
                      "description": "ServiceType for the service.",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ServiceType"
                      }
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Running",
                        "Updating",
                        "Deleting",
                        "Error",
                        "Stopped"
                      ],
                      "description": "Describes the status of a service.",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ServiceStatus"
                      }
                    }
                  },
                  "additionalProperties": true,
                  "required": [
                    "serviceType"
                  ]
                }
              }
            }
          },
          "202": {
            "description": "The job will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "DataTransfer",
          "SqlDedicatedGateway",
          "GraphAPICompute",
          "MaterializedViewsBuilder"
        ],
        "operationId": "Service_Get",
        "description": "Gets the status of service.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB service name.",
            "minLength": 3,
            "maxLength": 50
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The ServiceResource.",
            "schema": {
              "description": "Properties for the database account.",
              "type": "object",
              "properties": {
                "id": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The unique resource identifier of the database account."
                },
                "name": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The name of the database account."
                },
                "type": {
                  "readOnly": true,
                  "type": "string",
                  "description": "The type of Azure resource."
                },
                "properties": {
                  "x-ms-client-flatten": false,
                  "description": "Services response resource.",
                  "type": "object",
                  "discriminator": "serviceType",
                  "properties": {
                    "creationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Time of the last state change (ISO-8601 format)."
                    },
                    "instanceSize": {
                      "type": "string",
                      "enum": [
                        "Cosmos.D4s",
                        "Cosmos.D8s",
                        "Cosmos.D16s"
                      ],
                      "description": "Instance type for the service.",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ServiceSize"
                      }
                    },
                    "instanceCount": {
                      "description": "Instance count for the service.",
                      "type": "integer",
                      "minimum": 0,
                      "format": "int32"
                    },
                    "serviceType": {
                      "type": "string",
                      "enum": [
                        "SqlDedicatedGateway",
                        "DataTransfer",
                        "GraphAPICompute",
                        "MaterializedViewsBuilder"
                      ],
                      "description": "ServiceType for the service.",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ServiceType"
                      }
                    },
                    "status": {
                      "readOnly": true,
                      "type": "string",
                      "enum": [
                        "Creating",
                        "Running",
                        "Updating",
                        "Deleting",
                        "Error",
                        "Stopped"
                      ],
                      "description": "Describes the status of a service.",
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "ServiceStatus"
                      }
                    }
                  },
                  "additionalProperties": true,
                  "required": [
                    "serviceType"
                  ]
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "DataTransfer",
          "SqlDedicatedGateway",
          "GraphAPICompute",
          "MaterializedViewsBuilder"
        ],
        "operationId": "Service_Delete",
        "description": "Deletes service with the given serviceName.",
        "parameters": [
          {
            "name": "subscriptionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The ID of the target subscription.",
            "minLength": 1
          },
          {
            "name": "resourceGroupName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "The name of the resource group. The name is case insensitive.",
            "minLength": 1,
            "maxLength": 90,
            "x-ms-parameter-location": "method"
          },
          {
            "name": "accountName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB database account name.",
            "minLength": 3,
            "maxLength": 50,
            "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
          },
          {
            "name": "serviceName",
            "in": "path",
            "required": true,
            "type": "string",
            "x-ms-parameter-location": "method",
            "description": "Cosmos DB service name.",
            "minLength": 3,
            "maxLength": 50
          },
          {
            "name": "api-version",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The API version to use for this operation.",
            "minLength": 1
          }
        ],
        "responses": {
          "200": {
            "description": "The response for service deletion."
          },
          "202": {
            "description": "The job will complete asynchronously.",
            "headers": {
              "azure-AsyncOperation": {
                "type": "string",
                "description": "URI to poll for completion status."
              },
              "location": {
                "type": "string",
                "description": "URI to poll for completion status."
              }
            }
          },
          "204": {
            "description": "The response for service deletion."
          }
        }
      }
    }
  },
  "definitions": {
    "ClientEncryptionKeysListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "Client Encryption Key.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the database account."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the database account."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of a ClientEncryptionKey",
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB client encryption key resource object.",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Name of the ClientEncryptionKey"
                          },
                          "encryptionAlgorithm": {
                            "type": "string",
                            "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
                          },
                          "wrappedDataEncryptionKey": {
                            "type": "string",
                            "format": "byte",
                            "description": "Wrapped (encrypted) form of the key represented as a byte array."
                          },
                          "keyWrapMetadata": {
                            "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key.",
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey)."
                              },
                              "type": {
                                "type": "string",
                                "description": "ProviderName of KeyStoreProvider."
                              },
                              "value": {
                                "type": "string",
                                "description": "Reference / link to the KeyEncryptionKey."
                              },
                              "algorithm": {
                                "type": "string",
                                "description": "Algorithm used in wrapping and unwrapping of the data encryption key."
                              }
                            }
                          }
                        }
                      },
                      {
                        "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                        "type": "object",
                        "properties": {
                          "_rid": {
                            "type": "string",
                            "description": "A system generated property. A unique identifier.",
                            "readOnly": true
                          },
                          "_ts": {
                            "type": "number",
                            "description": "A system generated property that denotes the last updated timestamp of the resource.",
                            "readOnly": true
                          },
                          "_etag": {
                            "type": "string",
                            "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of client encryption keys and their properties."
        }
      },
      "description": "The List operation response, that contains the client encryption keys and their properties."
    },
    "DatabaseAccountsListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB database account.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "kind": {
                "description": "Indicates the type of database account. This can only be set at database account creation.",
                "type": "string",
                "default": "GlobalDocumentDB",
                "enum": [
                  "GlobalDocumentDB",
                  "MongoDB",
                  "Parse"
                ],
                "x-ms-enum": {
                  "name": "DatabaseAccountKind",
                  "modelAsString": true
                }
              },
              "identity": {
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
                  },
                  "tenantId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
                    "enum": [
                      "SystemAssigned",
                      "UserAssigned",
                      "SystemAssigned,UserAssigned",
                      "None"
                    ],
                    "x-ms-enum": {
                      "name": "ResourceIdentityType",
                      "modelAsString": false
                    }
                  },
                  "userAssignedIdentities": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "principalId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The principal id of user assigned identity."
                        },
                        "clientId": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The client id of user assigned identity."
                        }
                      }
                    },
                    "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
                  }
                },
                "description": "Identity for the resource."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties for the database account.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                  },
                  "documentEndpoint": {
                    "description": "The connection endpoint for the Cosmos DB database account.",
                    "type": "string",
                    "readOnly": true
                  },
                  "databaseAccountOfferType": {
                    "description": "The offer type for the Cosmos DB database account. Default value: Standard.",
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Standard"
                    ],
                    "x-ms-enum": {
                      "name": "DatabaseAccountOfferType",
                      "modelAsString": false
                    }
                  },
                  "ipRules": {
                    "description": "List of IpRules.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "IpAddressOrRange object",
                      "properties": {
                        "ipAddressOrRange": {
                          "type": "string",
                          "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
                        }
                      }
                    }
                  },
                  "isVirtualNetworkFilterEnabled": {
                    "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
                    "type": "boolean"
                  },
                  "enableAutomaticFailover": {
                    "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
                    "type": "boolean"
                  },
                  "consistencyPolicy": {
                    "description": "The consistency policy for the Cosmos DB database account.",
                    "type": "object",
                    "properties": {
                      "defaultConsistencyLevel": {
                        "description": "The default consistency level and configuration settings of the Cosmos DB account.",
                        "type": "string",
                        "enum": [
                          "Eventual",
                          "Session",
                          "BoundedStaleness",
                          "Strong",
                          "ConsistentPrefix"
                        ],
                        "x-ms-enum": {
                          "name": "DefaultConsistencyLevel",
                          "modelAsString": false
                        }
                      },
                      "maxStalenessPrefix": {
                        "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                        "type": "integer",
                        "minimum": 1,
                        "maximum": 2147483647,
                        "format": "int64"
                      },
                      "maxIntervalInSeconds": {
                        "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                        "type": "integer",
                        "minimum": 5,
                        "maximum": 86400,
                        "format": "int32"
                      }
                    },
                    "required": [
                      "defaultConsistencyLevel"
                    ]
                  },
                  "capabilities": {
                    "type": "array",
                    "description": "List of Cosmos DB capabilities for the account",
                    "items": {
                      "type": "object",
                      "description": "Cosmos DB capability object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
                        }
                      }
                    }
                  },
                  "writeLocations": {
                    "type": "array",
                    "readOnly": true,
                    "description": "An array that contains the write location for the Cosmos DB account.",
                    "items": {
                      "description": "A region in which the Azure Cosmos DB database account is deployed.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                        },
                        "locationName": {
                          "type": "string",
                          "description": "The name of the region."
                        },
                        "documentEndpoint": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                        },
                        "provisioningState": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                        },
                        "failoverPriority": {
                          "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 0
                        },
                        "isZoneRedundant": {
                          "type": "boolean",
                          "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                        }
                      }
                    }
                  },
                  "readLocations": {
                    "type": "array",
                    "readOnly": true,
                    "description": "An array that contains of the read locations enabled for the Cosmos DB account.",
                    "items": {
                      "description": "A region in which the Azure Cosmos DB database account is deployed.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                        },
                        "locationName": {
                          "type": "string",
                          "description": "The name of the region."
                        },
                        "documentEndpoint": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                        },
                        "provisioningState": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                        },
                        "failoverPriority": {
                          "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 0
                        },
                        "isZoneRedundant": {
                          "type": "boolean",
                          "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                        }
                      }
                    }
                  },
                  "locations": {
                    "type": "array",
                    "readOnly": true,
                    "description": "An array that contains all of the locations enabled for the Cosmos DB account.",
                    "items": {
                      "description": "A region in which the Azure Cosmos DB database account is deployed.",
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                        },
                        "locationName": {
                          "type": "string",
                          "description": "The name of the region."
                        },
                        "documentEndpoint": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                        },
                        "provisioningState": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                        },
                        "failoverPriority": {
                          "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                          "format": "int32",
                          "type": "integer",
                          "minimum": 0
                        },
                        "isZoneRedundant": {
                          "type": "boolean",
                          "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                        }
                      }
                    }
                  },
                  "failoverPolicies": {
                    "type": "array",
                    "readOnly": true,
                    "description": "An array that contains the regions ordered by their failover priorities.",
                    "items": {
                      "type": "object",
                      "description": "The failover policy for a given region of a database account.",
                      "properties": {
                        "id": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                        },
                        "locationName": {
                          "type": "string",
                          "description": "The name of the region in which the database account exists."
                        },
                        "failoverPriority": {
                          "type": "integer",
                          "minimum": 0,
                          "format": "int32",
                          "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
                        }
                      }
                    }
                  },
                  "virtualNetworkRules": {
                    "type": "array",
                    "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
                    "items": {
                      "type": "object",
                      "description": "Virtual Network ACL Rule object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "format": "arm-id",
                          "x-ms-arm-id-details": {
                            "allowedResources": [
                              {
                                "type": "Microsoft.Network/virtualNetworks/subnets"
                              }
                            ]
                          },
                          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
                        },
                        "ignoreMissingVNetServiceEndpoint": {
                          "type": "boolean",
                          "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
                        }
                      }
                    }
                  },
                  "privateEndpointConnections": {
                    "type": "array",
                    "readOnly": true,
                    "description": "List of Private Endpoint Connections configured for the Cosmos DB account.",
                    "items": {
                      "description": "A private endpoint connection",
                      "type": "object",
                      "properties": {
                        "id": {
                          "readOnly": true,
                          "type": "string",
                          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                        },
                        "name": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The name of the resource"
                        },
                        "type": {
                          "readOnly": true,
                          "type": "string",
                          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                        },
                        "properties": {
                          "description": "Resource properties.",
                          "x-ms-client-flatten": true,
                          "type": "object",
                          "properties": {
                            "privateEndpoint": {
                              "description": "Private endpoint which the connection belongs to.",
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Resource id of the private endpoint."
                                }
                              }
                            },
                            "privateLinkServiceConnectionState": {
                              "description": "Connection State of the Private Endpoint Connection.",
                              "type": "object",
                              "properties": {
                                "status": {
                                  "type": "string",
                                  "description": "The private link service connection status."
                                },
                                "description": {
                                  "type": "string",
                                  "description": "The private link service connection description."
                                },
                                "actionsRequired": {
                                  "type": "string",
                                  "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                                  "readOnly": true
                                }
                              }
                            },
                            "groupId": {
                              "type": "string",
                              "description": "Group id of the private endpoint."
                            },
                            "provisioningState": {
                              "type": "string",
                              "description": "Provisioning state of the private endpoint."
                            }
                          }
                        }
                      }
                    }
                  },
                  "enableMultipleWriteLocations": {
                    "description": "Enables the account to write in multiple locations",
                    "type": "boolean"
                  },
                  "enableCassandraConnector": {
                    "description": "Enables the cassandra connector on the Cosmos DB C* account",
                    "type": "boolean"
                  },
                  "connectorOffer": {
                    "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
                    "type": "string",
                    "enum": [
                      "Small"
                    ],
                    "x-ms-enum": {
                      "name": "ConnectorOffer",
                      "modelAsString": true
                    }
                  },
                  "disableKeyBasedMetadataWriteAccess": {
                    "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
                    "type": "boolean"
                  },
                  "keyVaultKeyUri": {
                    "description": "The URI of the key vault",
                    "type": "string"
                  },
                  "defaultIdentity": {
                    "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
                    "type": "string"
                  },
                  "publicNetworkAccess": {
                    "description": "Whether requests from Public Network are allowed",
                    "type": "string",
                    "enum": [
                      "Enabled",
                      "Disabled",
                      "SecuredByPerimeter"
                    ],
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "PublicNetworkAccess"
                    }
                  },
                  "enableFreeTier": {
                    "description": "Flag to indicate whether Free Tier is enabled.",
                    "type": "boolean"
                  },
                  "apiProperties": {
                    "description": "API specific properties.",
                    "type": "object",
                    "properties": {
                      "serverVersion": {
                        "type": "string",
                        "enum": [
                          "3.2",
                          "3.6",
                          "4.0",
                          "4.2",
                          "5.0",
                          "6.0",
                          "7.0"
                        ],
                        "description": "Describes the version of the MongoDB account.",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "ServerVersion"
                        }
                      }
                    }
                  },
                  "enableAnalyticalStorage": {
                    "description": "Flag to indicate whether to enable storage analytics.",
                    "type": "boolean"
                  },
                  "analyticalStorageConfiguration": {
                    "description": "Analytical storage specific properties.",
                    "type": "object",
                    "properties": {
                      "schemaType": {
                        "type": "string",
                        "description": "Describes the types of schema for analytical storage.",
                        "enum": [
                          "WellDefined",
                          "FullFidelity"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "AnalyticalStorageSchemaType"
                        }
                      }
                    }
                  },
                  "instanceId": {
                    "description": "A unique identifier assigned to the database account",
                    "type": "string",
                    "readOnly": true
                  },
                  "createMode": {
                    "description": "Enum to indicate the mode of account creation.",
                    "type": "string",
                    "default": "Default",
                    "enum": [
                      "Default",
                      "Restore"
                    ],
                    "x-ms-enum": {
                      "name": "CreateMode",
                      "modelAsString": true
                    }
                  },
                  "restoreParameters": {
                    "description": "Parameters to indicate the information about the restore.",
                    "type": "object",
                    "x-ms-mutability": [
                      "read",
                      "create"
                    ],
                    "properties": {
                      "restoreSource": {
                        "type": "string",
                        "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                      },
                      "restoreTimestampInUtc": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Time to which the account has to be restored (ISO-8601 format)."
                      },
                      "restoreWithTtlDisabled": {
                        "type": "boolean",
                        "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                      },
                      "restoreMode": {
                        "type": "string",
                        "enum": [
                          "PointInTime"
                        ],
                        "description": "Describes the mode of the restore.",
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "RestoreMode"
                        }
                      },
                      "databasesToRestore": {
                        "type": "array",
                        "description": "List of specific databases available for restore.",
                        "items": {
                          "type": "object",
                          "description": "Specific Databases to restore.",
                          "properties": {
                            "databaseName": {
                              "type": "string",
                              "description": "The name of the database available for restore."
                            },
                            "collectionNames": {
                              "type": "array",
                              "description": "The names of the collections available for restore.",
                              "items": {
                                "type": "string",
                                "description": "The name of the collection."
                              }
                            }
                          }
                        }
                      },
                      "gremlinDatabasesToRestore": {
                        "type": "array",
                        "description": "List of specific gremlin databases available for restore.",
                        "items": {
                          "type": "object",
                          "description": "Specific Gremlin Databases to restore.",
                          "properties": {
                            "databaseName": {
                              "type": "string",
                              "description": "The name of the gremlin database available for restore."
                            },
                            "graphNames": {
                              "type": "array",
                              "description": "The names of the graphs available for restore.",
                              "items": {
                                "type": "string",
                                "description": "The name of the graph."
                              }
                            }
                          }
                        }
                      },
                      "tablesToRestore": {
                        "type": "array",
                        "description": "List of specific tables available for restore.",
                        "items": {
                          "type": "string",
                          "description": "The name of the table."
                        }
                      }
                    }
                  },
                  "backupPolicy": {
                    "description": "The object representing the policy for taking backups on an account.",
                    "type": "object",
                    "discriminator": "type",
                    "properties": {
                      "type": {
                        "description": "Describes the mode of backups.",
                        "type": "string",
                        "enum": [
                          "Periodic",
                          "Continuous"
                        ],
                        "x-ms-enum": {
                          "modelAsString": true,
                          "name": "BackupPolicyType"
                        }
                      },
                      "migrationState": {
                        "description": "The object representing the state of the migration between the backup policies.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "description": "Describes the status of migration between backup policy types.",
                            "type": "string",
                            "enum": [
                              "Invalid",
                              "InProgress",
                              "Completed",
                              "Failed"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "BackupPolicyMigrationStatus"
                            }
                          },
                          "targetType": {
                            "description": "Describes the target backup policy type of the backup policy migration.",
                            "type": "string",
                            "enum": [
                              "Periodic",
                              "Continuous"
                            ],
                            "x-ms-enum": {
                              "modelAsString": true,
                              "name": "BackupPolicyType"
                            }
                          },
                          "startTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "Time at which the backup policy migration started (ISO-8601 format)."
                          }
                        }
                      }
                    },
                    "required": [
                      "type"
                    ]
                  },
                  "cors": {
                    "type": "array",
                    "description": "The CORS policy for the Cosmos DB database account.",
                    "items": {
                      "type": "object",
                      "description": "The CORS policy for the Cosmos DB database account.",
                      "properties": {
                        "allowedOrigins": {
                          "description": "The origin domains that are permitted to make a request against the service via CORS.",
                          "type": "string"
                        },
                        "allowedMethods": {
                          "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                          "type": "string"
                        },
                        "allowedHeaders": {
                          "description": "The request headers that the origin domain may specify on the CORS request.",
                          "type": "string"
                        },
                        "exposedHeaders": {
                          "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                          "type": "string"
                        },
                        "maxAgeInSeconds": {
                          "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 2147483647,
                          "format": "int64"
                        }
                      },
                      "required": [
                        "allowedOrigins"
                      ]
                    }
                  },
                  "networkAclBypass": {
                    "description": "Indicates what services are allowed to bypass firewall checks.",
                    "type": "string",
                    "enum": [
                      "None",
                      "AzureServices"
                    ],
                    "x-ms-enum": {
                      "name": "NetworkAclBypass",
                      "modelAsString": false
                    }
                  },
                  "networkAclBypassResourceIds": {
                    "type": "array",
                    "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
                    "items": {
                      "type": "string",
                      "format": "arm-id"
                    }
                  },
                  "disableLocalAuth": {
                    "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
                    "type": "boolean"
                  },
                  "capacity": {
                    "description": "The object that represents all properties related to capacity enforcement on an account.",
                    "type": "object",
                    "properties": {
                      "totalThroughputLimit": {
                        "type": "integer",
                        "minimum": -1,
                        "format": "int32",
                        "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
                      }
                    }
                  },
                  "keysMetadata": {
                    "description": "The object that represents the metadata for the Account Keys of the Cosmos DB account.",
                    "type": "object",
                    "readOnly": true,
                    "properties": {
                      "primaryMasterKey": {
                        "readOnly": true,
                        "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
                        "type": "object",
                        "properties": {
                          "generationTime": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                          }
                        }
                      },
                      "secondaryMasterKey": {
                        "readOnly": true,
                        "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
                        "type": "object",
                        "properties": {
                          "generationTime": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                          }
                        }
                      },
                      "primaryReadonlyMasterKey": {
                        "readOnly": true,
                        "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
                        "type": "object",
                        "properties": {
                          "generationTime": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                          }
                        }
                      },
                      "secondaryReadonlyMasterKey": {
                        "readOnly": true,
                        "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
                        "type": "object",
                        "properties": {
                          "generationTime": {
                            "readOnly": true,
                            "type": "string",
                            "format": "date-time",
                            "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                          }
                        }
                      }
                    }
                  },
                  "enablePartitionMerge": {
                    "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
                    "type": "boolean"
                  },
                  "minimalTlsVersion": {
                    "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
                    "type": "string",
                    "enum": [
                      "Tls",
                      "Tls11",
                      "Tls12"
                    ],
                    "x-ms-enum": {
                      "name": "MinimalTlsVersion",
                      "modelAsString": true
                    }
                  },
                  "enableBurstCapacity": {
                    "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
                    "type": "boolean"
                  },
                  "customerManagedKeyStatus": {
                    "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
                    "type": "string"
                  },
                  "enablePerRegionPerPartitionAutoscale": {
                    "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
                    "type": "boolean"
                  }
                }
              },
              "systemData": {
                "readOnly": true,
                "description": "The system meta data relating to this resource.",
                "type": "object",
                "properties": {
                  "createdBy": {
                    "type": "string",
                    "description": "The identity that created the resource."
                  },
                  "createdByType": {
                    "type": "string",
                    "description": "The type of identity that created the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "createdAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource creation (UTC)."
                  },
                  "lastModifiedBy": {
                    "type": "string",
                    "description": "The identity that last modified the resource."
                  },
                  "lastModifiedByType": {
                    "type": "string",
                    "description": "The type of identity that last modified the resource.",
                    "enum": [
                      "User",
                      "Application",
                      "ManagedIdentity",
                      "Key"
                    ],
                    "x-ms-enum": {
                      "name": "createdByType",
                      "modelAsString": true
                    }
                  },
                  "lastModifiedAt": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of resource last modification (UTC)"
                  }
                }
              }
            }
          },
          "description": "List of database account and their properties."
        }
      },
      "description": "The List operation response, that contains the database accounts and their properties."
    },
    "SqlDatabaseListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB SQL database.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of an Azure Cosmos DB SQL database",
                "type": "object",
                "properties": {
                  "resource": {
                    "properties": {
                      "_colls": {
                        "type": "string",
                        "description": "A system generated property that specified the addressable path of the collections resource."
                      },
                      "_users": {
                        "type": "string",
                        "description": "A system generated property that specifies the addressable path of the users resource."
                      }
                    },
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB SQL database resource object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Name of the Cosmos DB SQL database"
                          },
                          "restoreParameters": {
                            "description": "Parameters to indicate the information about the restore",
                            "type": "object",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "properties": {
                              "restoreSource": {
                                "type": "string",
                                "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                              },
                              "restoreTimestampInUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time to which the account has to be restored (ISO-8601 format)."
                              },
                              "restoreWithTtlDisabled": {
                                "type": "boolean",
                                "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                              }
                            }
                          },
                          "createMode": {
                            "description": "Enum to indicate the mode of resource creation.",
                            "type": "string",
                            "default": "Default",
                            "enum": [
                              "Default",
                              "Restore"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                        "type": "object",
                        "properties": {
                          "_rid": {
                            "type": "string",
                            "description": "A system generated property. A unique identifier.",
                            "readOnly": true
                          },
                          "_ts": {
                            "type": "number",
                            "description": "A system generated property that denotes the last updated timestamp of the resource.",
                            "readOnly": true
                          },
                          "_etag": {
                            "type": "string",
                            "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  },
                  "options": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB options resource object",
                        "readOnly": true,
                        "properties": {
                          "throughput": {
                            "type": "integer",
                            "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                          },
                          "autoscaleSettings": {
                            "type": "object",
                            "description": "Specifies the Autoscale settings.",
                            "properties": {
                              "maxThroughput": {
                                "type": "integer",
                                "description": "Represents maximum throughput, the resource can scale up to."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of SQL databases and their properties."
        }
      },
      "description": "The List operation response, that contains the SQL databases and their properties."
    },
    "SqlContainerListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB container.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of an Azure Cosmos DB container",
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB SQL container resource object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Name of the Cosmos DB SQL container"
                          },
                          "indexingPolicy": {
                            "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
                            "type": "object",
                            "properties": {
                              "automatic": {
                                "type": "boolean",
                                "description": "Indicates if the indexing policy is automatic"
                              },
                              "indexingMode": {
                                "description": "Indicates the indexing mode.",
                                "type": "string",
                                "default": "consistent",
                                "enum": [
                                  "consistent",
                                  "lazy",
                                  "none"
                                ],
                                "x-ms-enum": {
                                  "name": "IndexingMode",
                                  "modelAsString": true
                                }
                              },
                              "includedPaths": {
                                "description": "List of paths to include in the indexing",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The paths that are included in indexing",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                    },
                                    "indexes": {
                                      "description": "List of indexes for this path",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "The indexes for the path.",
                                        "properties": {
                                          "dataType": {
                                            "description": "The datatype for which the indexing behavior is applied to.",
                                            "type": "string",
                                            "default": "String",
                                            "enum": [
                                              "String",
                                              "Number",
                                              "Point",
                                              "Polygon",
                                              "LineString",
                                              "MultiPolygon"
                                            ],
                                            "x-ms-enum": {
                                              "name": "DataType",
                                              "modelAsString": true
                                            }
                                          },
                                          "precision": {
                                            "description": "The precision of the index. -1 is maximum precision.",
                                            "type": "integer"
                                          },
                                          "kind": {
                                            "description": "Indicates the type of index.",
                                            "type": "string",
                                            "default": "Hash",
                                            "enum": [
                                              "Hash",
                                              "Range",
                                              "Spatial"
                                            ],
                                            "x-ms-enum": {
                                              "name": "IndexKind",
                                              "modelAsString": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "excludedPaths": {
                                "description": "List of paths to exclude from indexing",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                    }
                                  }
                                }
                              },
                              "compositeIndexes": {
                                "description": "List of composite path list",
                                "type": "array",
                                "items": {
                                  "description": "List of composite path",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      },
                                      "order": {
                                        "description": "Sort order for composite paths.",
                                        "type": "string",
                                        "enum": [
                                          "ascending",
                                          "descending"
                                        ],
                                        "x-ms-enum": {
                                          "name": "CompositePathSortOrder",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "spatialIndexes": {
                                "description": "List of spatial specifics",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                    },
                                    "types": {
                                      "description": "List of path's spatial type",
                                      "type": "array",
                                      "items": {
                                        "description": "Indicates the spatial type of index.",
                                        "type": "string",
                                        "enum": [
                                          "Point",
                                          "LineString",
                                          "Polygon",
                                          "MultiPolygon"
                                        ],
                                        "x-ms-enum": {
                                          "name": "SpatialType",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "vectorIndexes": {
                                "description": "List of paths to include in the vector indexing",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "The path to the vector field in the document."
                                    },
                                    "type": {
                                      "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                      "type": "string",
                                      "enum": [
                                        "flat",
                                        "diskANN",
                                        "quantizedFlat"
                                      ],
                                      "x-ms-enum": {
                                        "name": "VectorIndexType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "path",
                                    "type"
                                  ]
                                }
                              }
                            }
                          },
                          "partitionKey": {
                            "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                            "type": "object",
                            "properties": {
                              "paths": {
                                "description": "List of paths using which data within the container can be partitioned",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A path. These typically start with root (/path)"
                                }
                              },
                              "kind": {
                                "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                                "type": "string",
                                "default": "Hash",
                                "enum": [
                                  "Hash",
                                  "Range",
                                  "MultiHash"
                                ],
                                "x-ms-enum": {
                                  "name": "PartitionKind",
                                  "modelAsString": true
                                }
                              },
                              "version": {
                                "description": "Indicates the version of the partition key definition",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 2,
                                "format": "int32"
                              },
                              "systemKey": {
                                "description": "Indicates if the container is using a system generated partition key",
                                "type": "boolean",
                                "readOnly": true
                              }
                            }
                          },
                          "defaultTtl": {
                            "type": "integer",
                            "description": "Default time to live"
                          },
                          "uniqueKeyPolicy": {
                            "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                            "type": "object",
                            "properties": {
                              "uniqueKeys": {
                                "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                  "properties": {
                                    "paths": {
                                      "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "A path. These typically start with root (/path)"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "conflictResolutionPolicy": {
                            "description": "The conflict resolution policy for the container.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "Indicates the conflict resolution mode.",
                                "type": "string",
                                "default": "LastWriterWins",
                                "enum": [
                                  "LastWriterWins",
                                  "Custom"
                                ],
                                "x-ms-enum": {
                                  "name": "ConflictResolutionMode",
                                  "modelAsString": true
                                }
                              },
                              "conflictResolutionPath": {
                                "type": "string",
                                "description": "The conflict resolution path in the case of LastWriterWins mode."
                              },
                              "conflictResolutionProcedure": {
                                "type": "string",
                                "description": "The procedure to resolve conflicts in the case of custom mode."
                              }
                            }
                          },
                          "clientEncryptionPolicy": {
                            "description": "The client encryption policy for the container.",
                            "type": "object",
                            "properties": {
                              "includedPaths": {
                                "description": "Paths of the item that need encryption along with path-specific settings.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": ".",
                                  "properties": {
                                    "path": {
                                      "description": "Path that needs to be encrypted.",
                                      "type": "string"
                                    },
                                    "clientEncryptionKeyId": {
                                      "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                                      "type": "string"
                                    },
                                    "encryptionType": {
                                      "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                                      "type": "string"
                                    },
                                    "encryptionAlgorithm": {
                                      "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "path",
                                    "clientEncryptionKeyId",
                                    "encryptionType",
                                    "encryptionAlgorithm"
                                  ]
                                },
                                "x-ms-identifiers": []
                              },
                              "policyFormatVersion": {
                                "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 2,
                                "format": "int32"
                              }
                            },
                            "required": [
                              "includedPaths",
                              "policyFormatVersion"
                            ]
                          },
                          "analyticalStorageTtl": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Analytical TTL."
                          },
                          "restoreParameters": {
                            "description": "Parameters to indicate the information about the restore",
                            "type": "object",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "properties": {
                              "restoreSource": {
                                "type": "string",
                                "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                              },
                              "restoreTimestampInUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time to which the account has to be restored (ISO-8601 format)."
                              },
                              "restoreWithTtlDisabled": {
                                "type": "boolean",
                                "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                              }
                            }
                          },
                          "createMode": {
                            "description": "Enum to indicate the mode of resource creation.",
                            "type": "string",
                            "default": "Default",
                            "enum": [
                              "Default",
                              "Restore"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true
                            }
                          },
                          "computedProperties": {
                            "description": "List of computed properties",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The definition of a computed property",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of a computed property, for example - \"cp_lowerName\""
                                },
                                "query": {
                                  "type": "string",
                                  "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
                                }
                              }
                            }
                          },
                          "vectorEmbeddingPolicy": {
                            "description": "The vector embedding policy for the container.",
                            "type": "object",
                            "properties": {
                              "vectorEmbeddings": {
                                "description": "List of vector embeddings",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "The path to the vector field in the document."
                                    },
                                    "dataType": {
                                      "description": "Indicates the data type of vector.",
                                      "type": "string",
                                      "enum": [
                                        "float32",
                                        "uint8",
                                        "int8"
                                      ],
                                      "x-ms-enum": {
                                        "name": "VectorDataType",
                                        "modelAsString": true
                                      }
                                    },
                                    "distanceFunction": {
                                      "description": "The distance function to use for distance calculation in between vectors.",
                                      "type": "string",
                                      "enum": [
                                        "euclidean",
                                        "cosine",
                                        "dotproduct"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DistanceFunction",
                                        "modelAsString": true
                                      }
                                    },
                                    "dimensions": {
                                      "type": "integer",
                                      "format": "int32",
                                      "description": "The number of dimensions in the vector."
                                    }
                                  },
                                  "required": [
                                    "path",
                                    "dataType",
                                    "distanceFunction",
                                    "dimensions"
                                  ]
                                }
                              }
                            }
                          },
                          "fullTextPolicy": {
                            "description": "The FullText policy for the container.",
                            "type": "object",
                            "properties": {
                              "defaultLanguage": {
                                "type": "string",
                                "description": "The default language for a full text paths."
                              },
                              "fullTextPaths": {
                                "description": "List of FullText Paths",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Represents the full text path specification.",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "The path to the full text field in the document."
                                    },
                                    "language": {
                                      "description": "The language of the full text field in the document.",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "path"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                        "type": "object",
                        "properties": {
                          "_rid": {
                            "type": "string",
                            "description": "A system generated property. A unique identifier.",
                            "readOnly": true
                          },
                          "_ts": {
                            "type": "number",
                            "description": "A system generated property that denotes the last updated timestamp of the resource.",
                            "readOnly": true
                          },
                          "_etag": {
                            "type": "string",
                            "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  },
                  "options": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB options resource object",
                        "readOnly": true,
                        "properties": {
                          "throughput": {
                            "type": "integer",
                            "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                          },
                          "autoscaleSettings": {
                            "type": "object",
                            "description": "Specifies the Autoscale settings.",
                            "properties": {
                              "maxThroughput": {
                                "type": "integer",
                                "description": "Represents maximum throughput, the resource can scale up to."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of containers and their properties."
        }
      },
      "description": "The List operation response, that contains the containers and their properties."
    },
    "SqlStoredProcedureListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB storedProcedure.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of an Azure Cosmos DB storedProcedure",
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB SQL storedProcedure resource object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Name of the Cosmos DB SQL storedProcedure"
                          },
                          "body": {
                            "type": "string",
                            "description": "Body of the Stored Procedure"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                        "type": "object",
                        "properties": {
                          "_rid": {
                            "type": "string",
                            "description": "A system generated property. A unique identifier.",
                            "readOnly": true
                          },
                          "_ts": {
                            "type": "number",
                            "description": "A system generated property that denotes the last updated timestamp of the resource.",
                            "readOnly": true
                          },
                          "_etag": {
                            "type": "string",
                            "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of storedProcedures and their properties."
        }
      },
      "description": "The List operation response, that contains the storedProcedures and their properties."
    },
    "SqlUserDefinedFunctionListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB userDefinedFunction.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of an Azure Cosmos DB userDefinedFunction",
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB SQL userDefinedFunction resource object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Name of the Cosmos DB SQL userDefinedFunction"
                          },
                          "body": {
                            "type": "string",
                            "description": "Body of the User Defined Function"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                        "type": "object",
                        "properties": {
                          "_rid": {
                            "type": "string",
                            "description": "A system generated property. A unique identifier.",
                            "readOnly": true
                          },
                          "_ts": {
                            "type": "number",
                            "description": "A system generated property that denotes the last updated timestamp of the resource.",
                            "readOnly": true
                          },
                          "_etag": {
                            "type": "string",
                            "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of userDefinedFunctions and their properties."
        }
      },
      "description": "The List operation response, that contains the userDefinedFunctions and their properties."
    },
    "SqlTriggerListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB trigger.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of an Azure Cosmos DB trigger",
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB SQL trigger resource object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Name of the Cosmos DB SQL trigger"
                          },
                          "body": {
                            "type": "string",
                            "description": "Body of the Trigger"
                          },
                          "triggerType": {
                            "type": "string",
                            "enum": [
                              "Pre",
                              "Post"
                            ],
                            "description": "Type of the Trigger",
                            "x-ms-enum": {
                              "name": "triggerType",
                              "modelAsString": true
                            }
                          },
                          "triggerOperation": {
                            "type": "string",
                            "enum": [
                              "All",
                              "Create",
                              "Update",
                              "Delete",
                              "Replace"
                            ],
                            "description": "The operation the trigger is associated with",
                            "x-ms-enum": {
                              "name": "triggerOperation",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                        "type": "object",
                        "properties": {
                          "_rid": {
                            "type": "string",
                            "description": "A system generated property. A unique identifier.",
                            "readOnly": true
                          },
                          "_ts": {
                            "type": "number",
                            "description": "A system generated property that denotes the last updated timestamp of the resource.",
                            "readOnly": true
                          },
                          "_etag": {
                            "type": "string",
                            "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of triggers and their properties."
        }
      },
      "description": "The List operation response, that contains the triggers and their properties."
    },
    "MongoDBDatabaseListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB MongoDB database.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of an Azure Cosmos DB MongoDB database",
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB MongoDB database resource object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Name of the Cosmos DB MongoDB database"
                          },
                          "restoreParameters": {
                            "description": "Parameters to indicate the information about the restore",
                            "type": "object",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "properties": {
                              "restoreSource": {
                                "type": "string",
                                "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                              },
                              "restoreTimestampInUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time to which the account has to be restored (ISO-8601 format)."
                              },
                              "restoreWithTtlDisabled": {
                                "type": "boolean",
                                "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                              }
                            }
                          },
                          "createMode": {
                            "description": "Enum to indicate the mode of resource creation.",
                            "type": "string",
                            "default": "Default",
                            "enum": [
                              "Default",
                              "Restore"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                        "type": "object",
                        "properties": {
                          "_rid": {
                            "type": "string",
                            "description": "A system generated property. A unique identifier.",
                            "readOnly": true
                          },
                          "_ts": {
                            "type": "number",
                            "description": "A system generated property that denotes the last updated timestamp of the resource.",
                            "readOnly": true
                          },
                          "_etag": {
                            "type": "string",
                            "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  },
                  "options": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB options resource object",
                        "readOnly": true,
                        "properties": {
                          "throughput": {
                            "type": "integer",
                            "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                          },
                          "autoscaleSettings": {
                            "type": "object",
                            "description": "Specifies the Autoscale settings.",
                            "properties": {
                              "maxThroughput": {
                                "type": "integer",
                                "description": "Represents maximum throughput, the resource can scale up to."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of MongoDB databases and their properties."
        }
      },
      "description": "The List operation response, that contains the MongoDB databases and their properties."
    },
    "MongoDBCollectionListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB MongoDB collection.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of an Azure Cosmos DB MongoDB collection",
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB MongoDB collection resource object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Name of the Cosmos DB MongoDB collection"
                          },
                          "shardKey": {
                            "description": "A key-value pair of shard keys to be applied for the request.",
                            "type": "object",
                            "additionalProperties": {
                              "type": "string"
                            }
                          },
                          "indexes": {
                            "description": "List of index keys",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "Cosmos DB MongoDB collection index key",
                              "properties": {
                                "key": {
                                  "description": "Cosmos DB MongoDB collection index keys",
                                  "type": "object",
                                  "properties": {
                                    "keys": {
                                      "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "A Key."
                                      }
                                    }
                                  }
                                },
                                "options": {
                                  "description": "Cosmos DB MongoDB collection index key options",
                                  "type": "object",
                                  "properties": {
                                    "expireAfterSeconds": {
                                      "description": "Expire after seconds",
                                      "type": "integer"
                                    },
                                    "unique": {
                                      "description": "Is unique or not",
                                      "type": "boolean"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "analyticalStorageTtl": {
                            "type": "integer",
                            "description": "Analytical TTL."
                          },
                          "restoreParameters": {
                            "description": "Parameters to indicate the information about the restore",
                            "type": "object",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "properties": {
                              "restoreSource": {
                                "type": "string",
                                "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                              },
                              "restoreTimestampInUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time to which the account has to be restored (ISO-8601 format)."
                              },
                              "restoreWithTtlDisabled": {
                                "type": "boolean",
                                "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                              }
                            }
                          },
                          "createMode": {
                            "description": "Enum to indicate the mode of resource creation.",
                            "type": "string",
                            "default": "Default",
                            "enum": [
                              "Default",
                              "Restore"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                        "type": "object",
                        "properties": {
                          "_rid": {
                            "type": "string",
                            "description": "A system generated property. A unique identifier.",
                            "readOnly": true
                          },
                          "_ts": {
                            "type": "number",
                            "description": "A system generated property that denotes the last updated timestamp of the resource.",
                            "readOnly": true
                          },
                          "_etag": {
                            "type": "string",
                            "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  },
                  "options": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB options resource object",
                        "readOnly": true,
                        "properties": {
                          "throughput": {
                            "type": "integer",
                            "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                          },
                          "autoscaleSettings": {
                            "type": "object",
                            "description": "Specifies the Autoscale settings.",
                            "properties": {
                              "maxThroughput": {
                                "type": "integer",
                                "description": "Represents maximum throughput, the resource can scale up to."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of MongoDB collections and their properties."
        }
      },
      "description": "The List operation response, that contains the MongoDB collections and their properties."
    },
    "TableListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB Table.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of an Azure Cosmos DB Table",
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB table resource object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Name of the Cosmos DB table"
                          },
                          "restoreParameters": {
                            "description": "Parameters to indicate the information about the restore",
                            "type": "object",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "properties": {
                              "restoreSource": {
                                "type": "string",
                                "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                              },
                              "restoreTimestampInUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time to which the account has to be restored (ISO-8601 format)."
                              },
                              "restoreWithTtlDisabled": {
                                "type": "boolean",
                                "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                              }
                            }
                          },
                          "createMode": {
                            "description": "Enum to indicate the mode of resource creation.",
                            "type": "string",
                            "default": "Default",
                            "enum": [
                              "Default",
                              "Restore"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                        "type": "object",
                        "properties": {
                          "_rid": {
                            "type": "string",
                            "description": "A system generated property. A unique identifier.",
                            "readOnly": true
                          },
                          "_ts": {
                            "type": "number",
                            "description": "A system generated property that denotes the last updated timestamp of the resource.",
                            "readOnly": true
                          },
                          "_etag": {
                            "type": "string",
                            "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  },
                  "options": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB options resource object",
                        "readOnly": true,
                        "properties": {
                          "throughput": {
                            "type": "integer",
                            "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                          },
                          "autoscaleSettings": {
                            "type": "object",
                            "description": "Specifies the Autoscale settings.",
                            "properties": {
                              "maxThroughput": {
                                "type": "integer",
                                "description": "Represents maximum throughput, the resource can scale up to."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of Table and their properties."
        }
      },
      "description": "The List operation response, that contains the Table and their properties."
    },
    "CassandraKeyspaceListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB Cassandra keyspace.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of an Azure Cosmos DB Cassandra keyspace",
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB Cassandra keyspace resource object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Name of the Cosmos DB Cassandra keyspace"
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                        "type": "object",
                        "properties": {
                          "_rid": {
                            "type": "string",
                            "description": "A system generated property. A unique identifier.",
                            "readOnly": true
                          },
                          "_ts": {
                            "type": "number",
                            "description": "A system generated property that denotes the last updated timestamp of the resource.",
                            "readOnly": true
                          },
                          "_etag": {
                            "type": "string",
                            "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  },
                  "options": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB options resource object",
                        "readOnly": true,
                        "properties": {
                          "throughput": {
                            "type": "integer",
                            "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                          },
                          "autoscaleSettings": {
                            "type": "object",
                            "description": "Specifies the Autoscale settings.",
                            "properties": {
                              "maxThroughput": {
                                "type": "integer",
                                "description": "Represents maximum throughput, the resource can scale up to."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of Cassandra keyspaces and their properties."
        }
      },
      "description": "The List operation response, that contains the Cassandra keyspaces and their properties."
    },
    "CassandraTableListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB Cassandra table.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of an Azure Cosmos DB Cassandra table",
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB Cassandra table resource object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Name of the Cosmos DB Cassandra table"
                          },
                          "defaultTtl": {
                            "type": "integer",
                            "description": "Time to live of the Cosmos DB Cassandra table"
                          },
                          "schema": {
                            "description": "Schema of the Cosmos DB Cassandra table",
                            "type": "object",
                            "properties": {
                              "columns": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Cosmos DB Cassandra table column",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the Cosmos DB Cassandra table column"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Type of the Cosmos DB Cassandra table column"
                                    }
                                  }
                                },
                                "description": "List of Cassandra table columns."
                              },
                              "partitionKeys": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Cosmos DB Cassandra table partition key",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the Cosmos DB Cassandra table partition key"
                                    }
                                  }
                                },
                                "description": "List of partition key."
                              },
                              "clusterKeys": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "Cosmos DB Cassandra table cluster key",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "Name of the Cosmos DB Cassandra table cluster key"
                                    },
                                    "orderBy": {
                                      "type": "string",
                                      "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
                                    }
                                  }
                                },
                                "description": "List of cluster key."
                              }
                            }
                          },
                          "analyticalStorageTtl": {
                            "type": "integer",
                            "description": "Analytical TTL."
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                        "type": "object",
                        "properties": {
                          "_rid": {
                            "type": "string",
                            "description": "A system generated property. A unique identifier.",
                            "readOnly": true
                          },
                          "_ts": {
                            "type": "number",
                            "description": "A system generated property that denotes the last updated timestamp of the resource.",
                            "readOnly": true
                          },
                          "_etag": {
                            "type": "string",
                            "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  },
                  "options": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB options resource object",
                        "readOnly": true,
                        "properties": {
                          "throughput": {
                            "type": "integer",
                            "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                          },
                          "autoscaleSettings": {
                            "type": "object",
                            "description": "Specifies the Autoscale settings.",
                            "properties": {
                              "maxThroughput": {
                                "type": "integer",
                                "description": "Represents maximum throughput, the resource can scale up to."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of Cassandra tables and their properties."
        }
      },
      "description": "The List operation response, that contains the Cassandra tables and their properties."
    },
    "GremlinDatabaseListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB Gremlin database.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of an Azure Cosmos DB SQL database",
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB Gremlin database resource object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Name of the Cosmos DB Gremlin database"
                          },
                          "restoreParameters": {
                            "description": "Parameters to indicate the information about the restore",
                            "type": "object",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "properties": {
                              "restoreSource": {
                                "type": "string",
                                "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                              },
                              "restoreTimestampInUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time to which the account has to be restored (ISO-8601 format)."
                              },
                              "restoreWithTtlDisabled": {
                                "type": "boolean",
                                "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                              }
                            }
                          },
                          "createMode": {
                            "description": "Enum to indicate the mode of resource creation.",
                            "type": "string",
                            "default": "Default",
                            "enum": [
                              "Default",
                              "Restore"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                        "type": "object",
                        "properties": {
                          "_rid": {
                            "type": "string",
                            "description": "A system generated property. A unique identifier.",
                            "readOnly": true
                          },
                          "_ts": {
                            "type": "number",
                            "description": "A system generated property that denotes the last updated timestamp of the resource.",
                            "readOnly": true
                          },
                          "_etag": {
                            "type": "string",
                            "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  },
                  "options": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB options resource object",
                        "readOnly": true,
                        "properties": {
                          "throughput": {
                            "type": "integer",
                            "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                          },
                          "autoscaleSettings": {
                            "type": "object",
                            "description": "Specifies the Autoscale settings.",
                            "properties": {
                              "maxThroughput": {
                                "type": "integer",
                                "description": "Represents maximum throughput, the resource can scale up to."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of Gremlin databases and their properties."
        }
      },
      "description": "The List operation response, that contains the Gremlin databases and their properties."
    },
    "GremlinGraphListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB Gremlin graph.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "The properties of an Azure Cosmos DB Gremlin graph",
                "type": "object",
                "properties": {
                  "resource": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB Gremlin graph resource object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Name of the Cosmos DB Gremlin graph"
                          },
                          "indexingPolicy": {
                            "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph",
                            "type": "object",
                            "properties": {
                              "automatic": {
                                "type": "boolean",
                                "description": "Indicates if the indexing policy is automatic"
                              },
                              "indexingMode": {
                                "description": "Indicates the indexing mode.",
                                "type": "string",
                                "default": "consistent",
                                "enum": [
                                  "consistent",
                                  "lazy",
                                  "none"
                                ],
                                "x-ms-enum": {
                                  "name": "IndexingMode",
                                  "modelAsString": true
                                }
                              },
                              "includedPaths": {
                                "description": "List of paths to include in the indexing",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The paths that are included in indexing",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                    },
                                    "indexes": {
                                      "description": "List of indexes for this path",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "description": "The indexes for the path.",
                                        "properties": {
                                          "dataType": {
                                            "description": "The datatype for which the indexing behavior is applied to.",
                                            "type": "string",
                                            "default": "String",
                                            "enum": [
                                              "String",
                                              "Number",
                                              "Point",
                                              "Polygon",
                                              "LineString",
                                              "MultiPolygon"
                                            ],
                                            "x-ms-enum": {
                                              "name": "DataType",
                                              "modelAsString": true
                                            }
                                          },
                                          "precision": {
                                            "description": "The precision of the index. -1 is maximum precision.",
                                            "type": "integer"
                                          },
                                          "kind": {
                                            "description": "Indicates the type of index.",
                                            "type": "string",
                                            "default": "Hash",
                                            "enum": [
                                              "Hash",
                                              "Range",
                                              "Spatial"
                                            ],
                                            "x-ms-enum": {
                                              "name": "IndexKind",
                                              "modelAsString": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "excludedPaths": {
                                "description": "List of paths to exclude from indexing",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                    }
                                  }
                                }
                              },
                              "compositeIndexes": {
                                "description": "List of composite path list",
                                "type": "array",
                                "items": {
                                  "description": "List of composite path",
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "path": {
                                        "type": "string",
                                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                      },
                                      "order": {
                                        "description": "Sort order for composite paths.",
                                        "type": "string",
                                        "enum": [
                                          "ascending",
                                          "descending"
                                        ],
                                        "x-ms-enum": {
                                          "name": "CompositePathSortOrder",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "spatialIndexes": {
                                "description": "List of spatial specifics",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                    },
                                    "types": {
                                      "description": "List of path's spatial type",
                                      "type": "array",
                                      "items": {
                                        "description": "Indicates the spatial type of index.",
                                        "type": "string",
                                        "enum": [
                                          "Point",
                                          "LineString",
                                          "Polygon",
                                          "MultiPolygon"
                                        ],
                                        "x-ms-enum": {
                                          "name": "SpatialType",
                                          "modelAsString": true
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "vectorIndexes": {
                                "description": "List of paths to include in the vector indexing",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "The path to the vector field in the document."
                                    },
                                    "type": {
                                      "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                      "type": "string",
                                      "enum": [
                                        "flat",
                                        "diskANN",
                                        "quantizedFlat"
                                      ],
                                      "x-ms-enum": {
                                        "name": "VectorIndexType",
                                        "modelAsString": true
                                      }
                                    }
                                  },
                                  "required": [
                                    "path",
                                    "type"
                                  ]
                                }
                              }
                            }
                          },
                          "partitionKey": {
                            "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                            "type": "object",
                            "properties": {
                              "paths": {
                                "description": "List of paths using which data within the container can be partitioned",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A path. These typically start with root (/path)"
                                }
                              },
                              "kind": {
                                "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                                "type": "string",
                                "default": "Hash",
                                "enum": [
                                  "Hash",
                                  "Range",
                                  "MultiHash"
                                ],
                                "x-ms-enum": {
                                  "name": "PartitionKind",
                                  "modelAsString": true
                                }
                              },
                              "version": {
                                "description": "Indicates the version of the partition key definition",
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 2,
                                "format": "int32"
                              },
                              "systemKey": {
                                "description": "Indicates if the container is using a system generated partition key",
                                "type": "boolean",
                                "readOnly": true
                              }
                            }
                          },
                          "defaultTtl": {
                            "type": "integer",
                            "description": "Default time to live"
                          },
                          "uniqueKeyPolicy": {
                            "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                            "type": "object",
                            "properties": {
                              "uniqueKeys": {
                                "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                  "properties": {
                                    "paths": {
                                      "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                      "type": "array",
                                      "items": {
                                        "type": "string",
                                        "description": "A path. These typically start with root (/path)"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "conflictResolutionPolicy": {
                            "description": "The conflict resolution policy for the graph.",
                            "type": "object",
                            "properties": {
                              "mode": {
                                "description": "Indicates the conflict resolution mode.",
                                "type": "string",
                                "default": "LastWriterWins",
                                "enum": [
                                  "LastWriterWins",
                                  "Custom"
                                ],
                                "x-ms-enum": {
                                  "name": "ConflictResolutionMode",
                                  "modelAsString": true
                                }
                              },
                              "conflictResolutionPath": {
                                "type": "string",
                                "description": "The conflict resolution path in the case of LastWriterWins mode."
                              },
                              "conflictResolutionProcedure": {
                                "type": "string",
                                "description": "The procedure to resolve conflicts in the case of custom mode."
                              }
                            }
                          },
                          "analyticalStorageTtl": {
                            "type": "integer",
                            "format": "int64",
                            "description": "Analytical TTL."
                          },
                          "restoreParameters": {
                            "description": "Parameters to indicate the information about the restore",
                            "type": "object",
                            "x-ms-mutability": [
                              "read",
                              "create"
                            ],
                            "properties": {
                              "restoreSource": {
                                "type": "string",
                                "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                              },
                              "restoreTimestampInUtc": {
                                "type": "string",
                                "format": "date-time",
                                "description": "Time to which the account has to be restored (ISO-8601 format)."
                              },
                              "restoreWithTtlDisabled": {
                                "type": "boolean",
                                "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                              }
                            }
                          },
                          "createMode": {
                            "description": "Enum to indicate the mode of resource creation.",
                            "type": "string",
                            "default": "Default",
                            "enum": [
                              "Default",
                              "Restore"
                            ],
                            "x-ms-enum": {
                              "name": "CreateMode",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "id"
                        ]
                      },
                      {
                        "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                        "type": "object",
                        "properties": {
                          "_rid": {
                            "type": "string",
                            "description": "A system generated property. A unique identifier.",
                            "readOnly": true
                          },
                          "_ts": {
                            "type": "number",
                            "description": "A system generated property that denotes the last updated timestamp of the resource.",
                            "readOnly": true
                          },
                          "_etag": {
                            "type": "string",
                            "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                            "readOnly": true
                          }
                        }
                      }
                    ]
                  },
                  "options": {
                    "allOf": [
                      {
                        "type": "object",
                        "description": "Cosmos DB options resource object",
                        "readOnly": true,
                        "properties": {
                          "throughput": {
                            "type": "integer",
                            "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                          },
                          "autoscaleSettings": {
                            "type": "object",
                            "description": "Specifies the Autoscale settings.",
                            "properties": {
                              "maxThroughput": {
                                "type": "integer",
                                "description": "Represents maximum throughput, the resource can scale up to."
                              }
                            }
                          }
                        }
                      }
                    ]
                  }
                }
              }
            }
          },
          "description": "List of graphs and their properties."
        }
      },
      "description": "The List operation response, that contains the graphs and their properties."
    },
    "ErrorResponse": {
      "properties": {
        "code": {
          "description": "Error code.",
          "type": "string"
        },
        "message": {
          "description": "Error message indicating why the operation failed.",
          "type": "string"
        }
      },
      "description": "Error Response."
    },
    "CloudError": {
      "x-ms-external": true,
      "description": "An error response from the service.",
      "properties": {
        "error": {
          "properties": {
            "code": {
              "description": "Error code.",
              "type": "string"
            },
            "message": {
              "description": "Error message indicating why the operation failed.",
              "type": "string"
            }
          },
          "description": "Error Response."
        }
      }
    },
    "FailoverPolicies": {
      "properties": {
        "failoverPolicies": {
          "type": "array",
          "description": "List of failover policies.",
          "items": {
            "type": "object",
            "description": "The failover policy for a given region of a database account.",
            "properties": {
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
              },
              "locationName": {
                "type": "string",
                "description": "The name of the region in which the database account exists."
              },
              "failoverPriority": {
                "type": "integer",
                "minimum": 0,
                "format": "int32",
                "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
              }
            }
          }
        }
      },
      "required": [
        "failoverPolicies"
      ],
      "description": "The list of new failover policies for the failover priority change."
    },
    "FailoverPolicy": {
      "type": "object",
      "description": "The failover policy for a given region of a database account.",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
        },
        "locationName": {
          "type": "string",
          "description": "The name of the region in which the database account exists."
        },
        "failoverPriority": {
          "type": "integer",
          "minimum": 0,
          "format": "int32",
          "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
        }
      }
    },
    "RegionForOnlineOffline": {
      "properties": {
        "region": {
          "type": "string",
          "description": "Cosmos DB region, with spaces between words and each word capitalized."
        }
      },
      "required": [
        "region"
      ],
      "description": "Cosmos DB region to online or offline."
    },
    "Location": {
      "description": "A region in which the Azure Cosmos DB database account is deployed.",
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "readOnly": true,
          "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
        },
        "locationName": {
          "type": "string",
          "description": "The name of the region."
        },
        "documentEndpoint": {
          "type": "string",
          "readOnly": true,
          "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
        },
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
        },
        "failoverPriority": {
          "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
          "format": "int32",
          "type": "integer",
          "minimum": 0
        },
        "isZoneRedundant": {
          "type": "boolean",
          "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
        }
      }
    },
    "ARMResourceProperties": {
      "type": "object",
      "description": "The core properties of ARM resources.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        }
      },
      "x-ms-azure-resource": true
    },
    "ARMProxyResource": {
      "type": "object",
      "description": "The resource model definition for a ARM proxy resource. It will have everything other than required location and tags",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the database account."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database account."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        }
      },
      "x-ms-azure-resource": true
    },
    "ClientEncryptionKeyCreateUpdateParameters": {
      "description": "Parameters to create and update ClientEncryptionKey.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update ClientEncryptionKey.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB client encryption key resource object.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the ClientEncryptionKey"
                },
                "encryptionAlgorithm": {
                  "type": "string",
                  "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
                },
                "wrappedDataEncryptionKey": {
                  "type": "string",
                  "format": "byte",
                  "description": "Wrapped (encrypted) form of the key represented as a byte array."
                },
                "keyWrapMetadata": {
                  "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey)."
                    },
                    "type": {
                      "type": "string",
                      "description": "ProviderName of KeyStoreProvider."
                    },
                    "value": {
                      "type": "string",
                      "description": "Reference / link to the KeyEncryptionKey."
                    },
                    "algorithm": {
                      "type": "string",
                      "description": "Algorithm used in wrapping and unwrapping of the data encryption key."
                    }
                  }
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "ClientEncryptionKeyCreateUpdateProperties": {
      "description": "Properties to create and update ClientEncryptionKey.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB client encryption key resource object.",
          "properties": {
            "id": {
              "type": "string",
              "description": "Name of the ClientEncryptionKey"
            },
            "encryptionAlgorithm": {
              "type": "string",
              "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
            },
            "wrappedDataEncryptionKey": {
              "type": "string",
              "format": "byte",
              "description": "Wrapped (encrypted) form of the key represented as a byte array."
            },
            "keyWrapMetadata": {
              "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key.",
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey)."
                },
                "type": {
                  "type": "string",
                  "description": "ProviderName of KeyStoreProvider."
                },
                "value": {
                  "type": "string",
                  "description": "Reference / link to the KeyEncryptionKey."
                },
                "algorithm": {
                  "type": "string",
                  "description": "Algorithm used in wrapping and unwrapping of the data encryption key."
                }
              }
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "ClientEncryptionKeyGetResults": {
      "description": "Client Encryption Key.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the database account."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database account."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of a ClientEncryptionKey",
          "type": "object",
          "properties": {
            "resource": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB client encryption key resource object.",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the ClientEncryptionKey"
                    },
                    "encryptionAlgorithm": {
                      "type": "string",
                      "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
                    },
                    "wrappedDataEncryptionKey": {
                      "type": "string",
                      "format": "byte",
                      "description": "Wrapped (encrypted) form of the key represented as a byte array."
                    },
                    "keyWrapMetadata": {
                      "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key.",
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey)."
                        },
                        "type": {
                          "type": "string",
                          "description": "ProviderName of KeyStoreProvider."
                        },
                        "value": {
                          "type": "string",
                          "description": "Reference / link to the KeyEncryptionKey."
                        },
                        "algorithm": {
                          "type": "string",
                          "description": "Algorithm used in wrapping and unwrapping of the data encryption key."
                        }
                      }
                    }
                  }
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "ClientEncryptionKeyGetProperties": {
      "description": "The properties of a ClientEncryptionKey resource",
      "type": "object",
      "properties": {
        "resource": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB client encryption key resource object.",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the ClientEncryptionKey"
                },
                "encryptionAlgorithm": {
                  "type": "string",
                  "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
                },
                "wrappedDataEncryptionKey": {
                  "type": "string",
                  "format": "byte",
                  "description": "Wrapped (encrypted) form of the key represented as a byte array."
                },
                "keyWrapMetadata": {
                  "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key.",
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey)."
                    },
                    "type": {
                      "type": "string",
                      "description": "ProviderName of KeyStoreProvider."
                    },
                    "value": {
                      "type": "string",
                      "description": "Reference / link to the KeyEncryptionKey."
                    },
                    "algorithm": {
                      "type": "string",
                      "description": "Algorithm used in wrapping and unwrapping of the data encryption key."
                    }
                  }
                }
              }
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        }
      }
    },
    "DatabaseAccountGetResults": {
      "description": "An Azure Cosmos DB database account.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "kind": {
          "description": "Indicates the type of database account. This can only be set at database account creation.",
          "type": "string",
          "default": "GlobalDocumentDB",
          "enum": [
            "GlobalDocumentDB",
            "MongoDB",
            "Parse"
          ],
          "x-ms-enum": {
            "name": "DatabaseAccountKind",
            "modelAsString": true
          }
        },
        "identity": {
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "type": {
              "type": "string",
              "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned",
                "None"
              ],
              "x-ms-enum": {
                "name": "ResourceIdentityType",
                "modelAsString": false
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal id of user assigned identity."
                  },
                  "clientId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The client id of user assigned identity."
                  }
                }
              },
              "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
            }
          },
          "description": "Identity for the resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties for the database account.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "type": "string",
              "readOnly": true,
              "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
            },
            "documentEndpoint": {
              "description": "The connection endpoint for the Cosmos DB database account.",
              "type": "string",
              "readOnly": true
            },
            "databaseAccountOfferType": {
              "description": "The offer type for the Cosmos DB database account. Default value: Standard.",
              "readOnly": true,
              "type": "string",
              "enum": [
                "Standard"
              ],
              "x-ms-enum": {
                "name": "DatabaseAccountOfferType",
                "modelAsString": false
              }
            },
            "ipRules": {
              "description": "List of IpRules.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "IpAddressOrRange object",
                "properties": {
                  "ipAddressOrRange": {
                    "type": "string",
                    "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
                  }
                }
              }
            },
            "isVirtualNetworkFilterEnabled": {
              "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
              "type": "boolean"
            },
            "enableAutomaticFailover": {
              "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
              "type": "boolean"
            },
            "consistencyPolicy": {
              "description": "The consistency policy for the Cosmos DB database account.",
              "type": "object",
              "properties": {
                "defaultConsistencyLevel": {
                  "description": "The default consistency level and configuration settings of the Cosmos DB account.",
                  "type": "string",
                  "enum": [
                    "Eventual",
                    "Session",
                    "BoundedStaleness",
                    "Strong",
                    "ConsistentPrefix"
                  ],
                  "x-ms-enum": {
                    "name": "DefaultConsistencyLevel",
                    "modelAsString": false
                  }
                },
                "maxStalenessPrefix": {
                  "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 2147483647,
                  "format": "int64"
                },
                "maxIntervalInSeconds": {
                  "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                  "type": "integer",
                  "minimum": 5,
                  "maximum": 86400,
                  "format": "int32"
                }
              },
              "required": [
                "defaultConsistencyLevel"
              ]
            },
            "capabilities": {
              "type": "array",
              "description": "List of Cosmos DB capabilities for the account",
              "items": {
                "type": "object",
                "description": "Cosmos DB capability object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
                  }
                }
              }
            },
            "writeLocations": {
              "type": "array",
              "readOnly": true,
              "description": "An array that contains the write location for the Cosmos DB account.",
              "items": {
                "description": "A region in which the Azure Cosmos DB database account is deployed.",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                  },
                  "locationName": {
                    "type": "string",
                    "description": "The name of the region."
                  },
                  "documentEndpoint": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                  },
                  "failoverPriority": {
                    "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                    "format": "int32",
                    "type": "integer",
                    "minimum": 0
                  },
                  "isZoneRedundant": {
                    "type": "boolean",
                    "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                  }
                }
              }
            },
            "readLocations": {
              "type": "array",
              "readOnly": true,
              "description": "An array that contains of the read locations enabled for the Cosmos DB account.",
              "items": {
                "description": "A region in which the Azure Cosmos DB database account is deployed.",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                  },
                  "locationName": {
                    "type": "string",
                    "description": "The name of the region."
                  },
                  "documentEndpoint": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                  },
                  "failoverPriority": {
                    "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                    "format": "int32",
                    "type": "integer",
                    "minimum": 0
                  },
                  "isZoneRedundant": {
                    "type": "boolean",
                    "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                  }
                }
              }
            },
            "locations": {
              "type": "array",
              "readOnly": true,
              "description": "An array that contains all of the locations enabled for the Cosmos DB account.",
              "items": {
                "description": "A region in which the Azure Cosmos DB database account is deployed.",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                  },
                  "locationName": {
                    "type": "string",
                    "description": "The name of the region."
                  },
                  "documentEndpoint": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                  },
                  "failoverPriority": {
                    "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                    "format": "int32",
                    "type": "integer",
                    "minimum": 0
                  },
                  "isZoneRedundant": {
                    "type": "boolean",
                    "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                  }
                }
              }
            },
            "failoverPolicies": {
              "type": "array",
              "readOnly": true,
              "description": "An array that contains the regions ordered by their failover priorities.",
              "items": {
                "type": "object",
                "description": "The failover policy for a given region of a database account.",
                "properties": {
                  "id": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                  },
                  "locationName": {
                    "type": "string",
                    "description": "The name of the region in which the database account exists."
                  },
                  "failoverPriority": {
                    "type": "integer",
                    "minimum": 0,
                    "format": "int32",
                    "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
                  }
                }
              }
            },
            "virtualNetworkRules": {
              "type": "array",
              "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
              "items": {
                "type": "object",
                "description": "Virtual Network ACL Rule object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/virtualNetworks/subnets"
                        }
                      ]
                    },
                    "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
                  },
                  "ignoreMissingVNetServiceEndpoint": {
                    "type": "boolean",
                    "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
                  }
                }
              }
            },
            "privateEndpointConnections": {
              "type": "array",
              "readOnly": true,
              "description": "List of Private Endpoint Connections configured for the Cosmos DB account.",
              "items": {
                "description": "A private endpoint connection",
                "type": "object",
                "properties": {
                  "id": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
                  },
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the resource"
                  },
                  "type": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
                  },
                  "properties": {
                    "description": "Resource properties.",
                    "x-ms-client-flatten": true,
                    "type": "object",
                    "properties": {
                      "privateEndpoint": {
                        "description": "Private endpoint which the connection belongs to.",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Resource id of the private endpoint."
                          }
                        }
                      },
                      "privateLinkServiceConnectionState": {
                        "description": "Connection State of the Private Endpoint Connection.",
                        "type": "object",
                        "properties": {
                          "status": {
                            "type": "string",
                            "description": "The private link service connection status."
                          },
                          "description": {
                            "type": "string",
                            "description": "The private link service connection description."
                          },
                          "actionsRequired": {
                            "type": "string",
                            "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                            "readOnly": true
                          }
                        }
                      },
                      "groupId": {
                        "type": "string",
                        "description": "Group id of the private endpoint."
                      },
                      "provisioningState": {
                        "type": "string",
                        "description": "Provisioning state of the private endpoint."
                      }
                    }
                  }
                }
              }
            },
            "enableMultipleWriteLocations": {
              "description": "Enables the account to write in multiple locations",
              "type": "boolean"
            },
            "enableCassandraConnector": {
              "description": "Enables the cassandra connector on the Cosmos DB C* account",
              "type": "boolean"
            },
            "connectorOffer": {
              "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
              "type": "string",
              "enum": [
                "Small"
              ],
              "x-ms-enum": {
                "name": "ConnectorOffer",
                "modelAsString": true
              }
            },
            "disableKeyBasedMetadataWriteAccess": {
              "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
              "type": "boolean"
            },
            "keyVaultKeyUri": {
              "description": "The URI of the key vault",
              "type": "string"
            },
            "defaultIdentity": {
              "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
              "type": "string"
            },
            "publicNetworkAccess": {
              "description": "Whether requests from Public Network are allowed",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PublicNetworkAccess"
              }
            },
            "enableFreeTier": {
              "description": "Flag to indicate whether Free Tier is enabled.",
              "type": "boolean"
            },
            "apiProperties": {
              "description": "API specific properties.",
              "type": "object",
              "properties": {
                "serverVersion": {
                  "type": "string",
                  "enum": [
                    "3.2",
                    "3.6",
                    "4.0",
                    "4.2",
                    "5.0",
                    "6.0",
                    "7.0"
                  ],
                  "description": "Describes the version of the MongoDB account.",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ServerVersion"
                  }
                }
              }
            },
            "enableAnalyticalStorage": {
              "description": "Flag to indicate whether to enable storage analytics.",
              "type": "boolean"
            },
            "analyticalStorageConfiguration": {
              "description": "Analytical storage specific properties.",
              "type": "object",
              "properties": {
                "schemaType": {
                  "type": "string",
                  "description": "Describes the types of schema for analytical storage.",
                  "enum": [
                    "WellDefined",
                    "FullFidelity"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "AnalyticalStorageSchemaType"
                  }
                }
              }
            },
            "instanceId": {
              "description": "A unique identifier assigned to the database account",
              "type": "string",
              "readOnly": true
            },
            "createMode": {
              "description": "Enum to indicate the mode of account creation.",
              "type": "string",
              "default": "Default",
              "enum": [
                "Default",
                "Restore"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true
              }
            },
            "restoreParameters": {
              "description": "Parameters to indicate the information about the restore.",
              "type": "object",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "properties": {
                "restoreSource": {
                  "type": "string",
                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                },
                "restoreTimestampInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                },
                "restoreWithTtlDisabled": {
                  "type": "boolean",
                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                },
                "restoreMode": {
                  "type": "string",
                  "enum": [
                    "PointInTime"
                  ],
                  "description": "Describes the mode of the restore.",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "RestoreMode"
                  }
                },
                "databasesToRestore": {
                  "type": "array",
                  "description": "List of specific databases available for restore.",
                  "items": {
                    "type": "object",
                    "description": "Specific Databases to restore.",
                    "properties": {
                      "databaseName": {
                        "type": "string",
                        "description": "The name of the database available for restore."
                      },
                      "collectionNames": {
                        "type": "array",
                        "description": "The names of the collections available for restore.",
                        "items": {
                          "type": "string",
                          "description": "The name of the collection."
                        }
                      }
                    }
                  }
                },
                "gremlinDatabasesToRestore": {
                  "type": "array",
                  "description": "List of specific gremlin databases available for restore.",
                  "items": {
                    "type": "object",
                    "description": "Specific Gremlin Databases to restore.",
                    "properties": {
                      "databaseName": {
                        "type": "string",
                        "description": "The name of the gremlin database available for restore."
                      },
                      "graphNames": {
                        "type": "array",
                        "description": "The names of the graphs available for restore.",
                        "items": {
                          "type": "string",
                          "description": "The name of the graph."
                        }
                      }
                    }
                  }
                },
                "tablesToRestore": {
                  "type": "array",
                  "description": "List of specific tables available for restore.",
                  "items": {
                    "type": "string",
                    "description": "The name of the table."
                  }
                }
              }
            },
            "backupPolicy": {
              "description": "The object representing the policy for taking backups on an account.",
              "type": "object",
              "discriminator": "type",
              "properties": {
                "type": {
                  "description": "Describes the mode of backups.",
                  "type": "string",
                  "enum": [
                    "Periodic",
                    "Continuous"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "BackupPolicyType"
                  }
                },
                "migrationState": {
                  "description": "The object representing the state of the migration between the backup policies.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Describes the status of migration between backup policy types.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "InProgress",
                        "Completed",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "BackupPolicyMigrationStatus"
                      }
                    },
                    "targetType": {
                      "description": "Describes the target backup policy type of the backup policy migration.",
                      "type": "string",
                      "enum": [
                        "Periodic",
                        "Continuous"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "BackupPolicyType"
                      }
                    },
                    "startTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which the backup policy migration started (ISO-8601 format)."
                    }
                  }
                }
              },
              "required": [
                "type"
              ]
            },
            "cors": {
              "type": "array",
              "description": "The CORS policy for the Cosmos DB database account.",
              "items": {
                "type": "object",
                "description": "The CORS policy for the Cosmos DB database account.",
                "properties": {
                  "allowedOrigins": {
                    "description": "The origin domains that are permitted to make a request against the service via CORS.",
                    "type": "string"
                  },
                  "allowedMethods": {
                    "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                    "type": "string"
                  },
                  "allowedHeaders": {
                    "description": "The request headers that the origin domain may specify on the CORS request.",
                    "type": "string"
                  },
                  "exposedHeaders": {
                    "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                    "type": "string"
                  },
                  "maxAgeInSeconds": {
                    "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 2147483647,
                    "format": "int64"
                  }
                },
                "required": [
                  "allowedOrigins"
                ]
              }
            },
            "networkAclBypass": {
              "description": "Indicates what services are allowed to bypass firewall checks.",
              "type": "string",
              "enum": [
                "None",
                "AzureServices"
              ],
              "x-ms-enum": {
                "name": "NetworkAclBypass",
                "modelAsString": false
              }
            },
            "networkAclBypassResourceIds": {
              "type": "array",
              "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
              "items": {
                "type": "string",
                "format": "arm-id"
              }
            },
            "disableLocalAuth": {
              "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
              "type": "boolean"
            },
            "capacity": {
              "description": "The object that represents all properties related to capacity enforcement on an account.",
              "type": "object",
              "properties": {
                "totalThroughputLimit": {
                  "type": "integer",
                  "minimum": -1,
                  "format": "int32",
                  "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
                }
              }
            },
            "keysMetadata": {
              "description": "The object that represents the metadata for the Account Keys of the Cosmos DB account.",
              "type": "object",
              "readOnly": true,
              "properties": {
                "primaryMasterKey": {
                  "readOnly": true,
                  "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
                  "type": "object",
                  "properties": {
                    "generationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                    }
                  }
                },
                "secondaryMasterKey": {
                  "readOnly": true,
                  "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
                  "type": "object",
                  "properties": {
                    "generationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                    }
                  }
                },
                "primaryReadonlyMasterKey": {
                  "readOnly": true,
                  "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
                  "type": "object",
                  "properties": {
                    "generationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                    }
                  }
                },
                "secondaryReadonlyMasterKey": {
                  "readOnly": true,
                  "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
                  "type": "object",
                  "properties": {
                    "generationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                    }
                  }
                }
              }
            },
            "enablePartitionMerge": {
              "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
              "type": "boolean"
            },
            "minimalTlsVersion": {
              "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
              "type": "string",
              "enum": [
                "Tls",
                "Tls11",
                "Tls12"
              ],
              "x-ms-enum": {
                "name": "MinimalTlsVersion",
                "modelAsString": true
              }
            },
            "enableBurstCapacity": {
              "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
              "type": "boolean"
            },
            "customerManagedKeyStatus": {
              "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
              "type": "string"
            },
            "enablePerRegionPerPartitionAutoscale": {
              "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
              "type": "boolean"
            }
          }
        },
        "systemData": {
          "readOnly": true,
          "description": "The system meta data relating to this resource.",
          "type": "object",
          "properties": {
            "createdBy": {
              "type": "string",
              "description": "The identity that created the resource."
            },
            "createdByType": {
              "type": "string",
              "description": "The type of identity that created the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "createdAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource creation (UTC)."
            },
            "lastModifiedBy": {
              "type": "string",
              "description": "The identity that last modified the resource."
            },
            "lastModifiedByType": {
              "type": "string",
              "description": "The type of identity that last modified the resource.",
              "enum": [
                "User",
                "Application",
                "ManagedIdentity",
                "Key"
              ],
              "x-ms-enum": {
                "name": "createdByType",
                "modelAsString": true
              }
            },
            "lastModifiedAt": {
              "type": "string",
              "format": "date-time",
              "description": "The timestamp of resource last modification (UTC)"
            }
          }
        }
      }
    },
    "ExtendedResourceProperties": {
      "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
      "type": "object",
      "properties": {
        "_rid": {
          "type": "string",
          "description": "A system generated property. A unique identifier.",
          "readOnly": true
        },
        "_ts": {
          "type": "number",
          "description": "A system generated property that denotes the last updated timestamp of the resource.",
          "readOnly": true
        },
        "_etag": {
          "type": "string",
          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
          "readOnly": true
        }
      }
    },
    "ThroughputSettingsGetResults": {
      "description": "An Azure Cosmos DB resource throughput.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of an Azure Cosmos DB resource throughput",
          "type": "object",
          "properties": {
            "resource": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
                  "properties": {
                    "throughput": {
                      "type": "integer",
                      "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                    },
                    "autoscaleSettings": {
                      "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                      "type": "object",
                      "properties": {
                        "maxThroughput": {
                          "type": "integer",
                          "description": "Represents maximum throughput container can scale up to."
                        },
                        "autoUpgradePolicy": {
                          "description": "Cosmos DB resource auto-upgrade policy",
                          "type": "object",
                          "properties": {
                            "throughputPolicy": {
                              "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                              "type": "object",
                              "properties": {
                                "isEnabled": {
                                  "type": "boolean",
                                  "description": "Determines whether the ThroughputPolicy is active or not"
                                },
                                "incrementPercent": {
                                  "type": "integer",
                                  "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                                }
                              }
                            }
                          }
                        },
                        "targetMaxThroughput": {
                          "type": "integer",
                          "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                          "readOnly": true
                        }
                      },
                      "required": [
                        "maxThroughput"
                      ]
                    },
                    "minimumThroughput": {
                      "type": "string",
                      "description": "The minimum throughput of the resource",
                      "readOnly": true
                    },
                    "offerReplacePending": {
                      "type": "string",
                      "description": "The throughput replace is pending",
                      "readOnly": true
                    },
                    "instantMaximumThroughput": {
                      "type": "string",
                      "description": "The offer throughput value to instantly scale up without triggering splits",
                      "readOnly": true
                    },
                    "softAllowedMaximumThroughput": {
                      "type": "string",
                      "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                      "readOnly": true
                    }
                  }
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "ThroughputSettingsGetProperties": {
      "description": "The properties of an Azure Cosmos DB resource throughput",
      "type": "object",
      "properties": {
        "resource": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                },
                "autoscaleSettings": {
                  "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput container can scale up to."
                    },
                    "autoUpgradePolicy": {
                      "description": "Cosmos DB resource auto-upgrade policy",
                      "type": "object",
                      "properties": {
                        "throughputPolicy": {
                          "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                          "type": "object",
                          "properties": {
                            "isEnabled": {
                              "type": "boolean",
                              "description": "Determines whether the ThroughputPolicy is active or not"
                            },
                            "incrementPercent": {
                              "type": "integer",
                              "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                            }
                          }
                        }
                      }
                    },
                    "targetMaxThroughput": {
                      "type": "integer",
                      "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "maxThroughput"
                  ]
                },
                "minimumThroughput": {
                  "type": "string",
                  "description": "The minimum throughput of the resource",
                  "readOnly": true
                },
                "offerReplacePending": {
                  "type": "string",
                  "description": "The throughput replace is pending",
                  "readOnly": true
                },
                "instantMaximumThroughput": {
                  "type": "string",
                  "description": "The offer throughput value to instantly scale up without triggering splits",
                  "readOnly": true
                },
                "softAllowedMaximumThroughput": {
                  "type": "string",
                  "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                  "readOnly": true
                }
              }
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        }
      }
    },
    "SqlDatabaseGetResults": {
      "description": "An Azure Cosmos DB SQL database.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of an Azure Cosmos DB SQL database",
          "type": "object",
          "properties": {
            "resource": {
              "properties": {
                "_colls": {
                  "type": "string",
                  "description": "A system generated property that specified the addressable path of the collections resource."
                },
                "_users": {
                  "type": "string",
                  "description": "A system generated property that specifies the addressable path of the users resource."
                }
              },
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB SQL database resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB SQL database"
                    },
                    "restoreParameters": {
                      "description": "Parameters to indicate the information about the restore",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "restoreSource": {
                          "type": "string",
                          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                        },
                        "restoreTimestampInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time to which the account has to be restored (ISO-8601 format)."
                        },
                        "restoreWithTtlDisabled": {
                          "type": "boolean",
                          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                        }
                      }
                    },
                    "createMode": {
                      "description": "Enum to indicate the mode of resource creation.",
                      "type": "string",
                      "default": "Default",
                      "enum": [
                        "Default",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "options": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB options resource object",
                  "readOnly": true,
                  "properties": {
                    "throughput": {
                      "type": "integer",
                      "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                    },
                    "autoscaleSettings": {
                      "type": "object",
                      "description": "Specifies the Autoscale settings.",
                      "properties": {
                        "maxThroughput": {
                          "type": "integer",
                          "description": "Represents maximum throughput, the resource can scale up to."
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "SqlDatabaseGetProperties": {
      "description": "The properties of an Azure Cosmos DB SQL database",
      "type": "object",
      "properties": {
        "resource": {
          "properties": {
            "_colls": {
              "type": "string",
              "description": "A system generated property that specified the addressable path of the collections resource."
            },
            "_users": {
              "type": "string",
              "description": "A system generated property that specifies the addressable path of the users resource."
            }
          },
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB SQL database resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB SQL database"
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "options": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB options resource object",
              "readOnly": true,
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                },
                "autoscaleSettings": {
                  "type": "object",
                  "description": "Specifies the Autoscale settings.",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "SqlContainerGetResults": {
      "description": "An Azure Cosmos DB container.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of an Azure Cosmos DB container",
          "type": "object",
          "properties": {
            "resource": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB SQL container resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB SQL container"
                    },
                    "indexingPolicy": {
                      "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
                      "type": "object",
                      "properties": {
                        "automatic": {
                          "type": "boolean",
                          "description": "Indicates if the indexing policy is automatic"
                        },
                        "indexingMode": {
                          "description": "Indicates the indexing mode.",
                          "type": "string",
                          "default": "consistent",
                          "enum": [
                            "consistent",
                            "lazy",
                            "none"
                          ],
                          "x-ms-enum": {
                            "name": "IndexingMode",
                            "modelAsString": true
                          }
                        },
                        "includedPaths": {
                          "description": "List of paths to include in the indexing",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The paths that are included in indexing",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                              },
                              "indexes": {
                                "description": "List of indexes for this path",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The indexes for the path.",
                                  "properties": {
                                    "dataType": {
                                      "description": "The datatype for which the indexing behavior is applied to.",
                                      "type": "string",
                                      "default": "String",
                                      "enum": [
                                        "String",
                                        "Number",
                                        "Point",
                                        "Polygon",
                                        "LineString",
                                        "MultiPolygon"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataType",
                                        "modelAsString": true
                                      }
                                    },
                                    "precision": {
                                      "description": "The precision of the index. -1 is maximum precision.",
                                      "type": "integer"
                                    },
                                    "kind": {
                                      "description": "Indicates the type of index.",
                                      "type": "string",
                                      "default": "Hash",
                                      "enum": [
                                        "Hash",
                                        "Range",
                                        "Spatial"
                                      ],
                                      "x-ms-enum": {
                                        "name": "IndexKind",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "excludedPaths": {
                          "description": "List of paths to exclude from indexing",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                              }
                            }
                          }
                        },
                        "compositeIndexes": {
                          "description": "List of composite path list",
                          "type": "array",
                          "items": {
                            "description": "List of composite path",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "path": {
                                  "type": "string",
                                  "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                },
                                "order": {
                                  "description": "Sort order for composite paths.",
                                  "type": "string",
                                  "enum": [
                                    "ascending",
                                    "descending"
                                  ],
                                  "x-ms-enum": {
                                    "name": "CompositePathSortOrder",
                                    "modelAsString": true
                                  }
                                }
                              }
                            }
                          }
                        },
                        "spatialIndexes": {
                          "description": "List of spatial specifics",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                              },
                              "types": {
                                "description": "List of path's spatial type",
                                "type": "array",
                                "items": {
                                  "description": "Indicates the spatial type of index.",
                                  "type": "string",
                                  "enum": [
                                    "Point",
                                    "LineString",
                                    "Polygon",
                                    "MultiPolygon"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SpatialType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            }
                          }
                        },
                        "vectorIndexes": {
                          "description": "List of paths to include in the vector indexing",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path to the vector field in the document."
                              },
                              "type": {
                                "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                "type": "string",
                                "enum": [
                                  "flat",
                                  "diskANN",
                                  "quantizedFlat"
                                ],
                                "x-ms-enum": {
                                  "name": "VectorIndexType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "path",
                              "type"
                            ]
                          }
                        }
                      }
                    },
                    "partitionKey": {
                      "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                      "type": "object",
                      "properties": {
                        "paths": {
                          "description": "List of paths using which data within the container can be partitioned",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A path. These typically start with root (/path)"
                          }
                        },
                        "kind": {
                          "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                          "type": "string",
                          "default": "Hash",
                          "enum": [
                            "Hash",
                            "Range",
                            "MultiHash"
                          ],
                          "x-ms-enum": {
                            "name": "PartitionKind",
                            "modelAsString": true
                          }
                        },
                        "version": {
                          "description": "Indicates the version of the partition key definition",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 2,
                          "format": "int32"
                        },
                        "systemKey": {
                          "description": "Indicates if the container is using a system generated partition key",
                          "type": "boolean",
                          "readOnly": true
                        }
                      }
                    },
                    "defaultTtl": {
                      "type": "integer",
                      "description": "Default time to live"
                    },
                    "uniqueKeyPolicy": {
                      "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                      "type": "object",
                      "properties": {
                        "uniqueKeys": {
                          "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                            "properties": {
                              "paths": {
                                "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A path. These typically start with root (/path)"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "conflictResolutionPolicy": {
                      "description": "The conflict resolution policy for the container.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "Indicates the conflict resolution mode.",
                          "type": "string",
                          "default": "LastWriterWins",
                          "enum": [
                            "LastWriterWins",
                            "Custom"
                          ],
                          "x-ms-enum": {
                            "name": "ConflictResolutionMode",
                            "modelAsString": true
                          }
                        },
                        "conflictResolutionPath": {
                          "type": "string",
                          "description": "The conflict resolution path in the case of LastWriterWins mode."
                        },
                        "conflictResolutionProcedure": {
                          "type": "string",
                          "description": "The procedure to resolve conflicts in the case of custom mode."
                        }
                      }
                    },
                    "clientEncryptionPolicy": {
                      "description": "The client encryption policy for the container.",
                      "type": "object",
                      "properties": {
                        "includedPaths": {
                          "description": "Paths of the item that need encryption along with path-specific settings.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": ".",
                            "properties": {
                              "path": {
                                "description": "Path that needs to be encrypted.",
                                "type": "string"
                              },
                              "clientEncryptionKeyId": {
                                "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                                "type": "string"
                              },
                              "encryptionType": {
                                "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                                "type": "string"
                              },
                              "encryptionAlgorithm": {
                                "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "path",
                              "clientEncryptionKeyId",
                              "encryptionType",
                              "encryptionAlgorithm"
                            ]
                          },
                          "x-ms-identifiers": []
                        },
                        "policyFormatVersion": {
                          "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 2,
                          "format": "int32"
                        }
                      },
                      "required": [
                        "includedPaths",
                        "policyFormatVersion"
                      ]
                    },
                    "analyticalStorageTtl": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Analytical TTL."
                    },
                    "restoreParameters": {
                      "description": "Parameters to indicate the information about the restore",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "restoreSource": {
                          "type": "string",
                          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                        },
                        "restoreTimestampInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time to which the account has to be restored (ISO-8601 format)."
                        },
                        "restoreWithTtlDisabled": {
                          "type": "boolean",
                          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                        }
                      }
                    },
                    "createMode": {
                      "description": "Enum to indicate the mode of resource creation.",
                      "type": "string",
                      "default": "Default",
                      "enum": [
                        "Default",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true
                      }
                    },
                    "computedProperties": {
                      "description": "List of computed properties",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The definition of a computed property",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of a computed property, for example - \"cp_lowerName\""
                          },
                          "query": {
                            "type": "string",
                            "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
                          }
                        }
                      }
                    },
                    "vectorEmbeddingPolicy": {
                      "description": "The vector embedding policy for the container.",
                      "type": "object",
                      "properties": {
                        "vectorEmbeddings": {
                          "description": "List of vector embeddings",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path to the vector field in the document."
                              },
                              "dataType": {
                                "description": "Indicates the data type of vector.",
                                "type": "string",
                                "enum": [
                                  "float32",
                                  "uint8",
                                  "int8"
                                ],
                                "x-ms-enum": {
                                  "name": "VectorDataType",
                                  "modelAsString": true
                                }
                              },
                              "distanceFunction": {
                                "description": "The distance function to use for distance calculation in between vectors.",
                                "type": "string",
                                "enum": [
                                  "euclidean",
                                  "cosine",
                                  "dotproduct"
                                ],
                                "x-ms-enum": {
                                  "name": "DistanceFunction",
                                  "modelAsString": true
                                }
                              },
                              "dimensions": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of dimensions in the vector."
                              }
                            },
                            "required": [
                              "path",
                              "dataType",
                              "distanceFunction",
                              "dimensions"
                            ]
                          }
                        }
                      }
                    },
                    "fullTextPolicy": {
                      "description": "The FullText policy for the container.",
                      "type": "object",
                      "properties": {
                        "defaultLanguage": {
                          "type": "string",
                          "description": "The default language for a full text paths."
                        },
                        "fullTextPaths": {
                          "description": "List of FullText Paths",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Represents the full text path specification.",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path to the full text field in the document."
                              },
                              "language": {
                                "description": "The language of the full text field in the document.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "path"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "options": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB options resource object",
                  "readOnly": true,
                  "properties": {
                    "throughput": {
                      "type": "integer",
                      "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                    },
                    "autoscaleSettings": {
                      "type": "object",
                      "description": "Specifies the Autoscale settings.",
                      "properties": {
                        "maxThroughput": {
                          "type": "integer",
                          "description": "Represents maximum throughput, the resource can scale up to."
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "SqlContainerGetProperties": {
      "description": "The properties of an Azure Cosmos DB container",
      "type": "object",
      "properties": {
        "resource": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB SQL container resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB SQL container"
                },
                "indexingPolicy": {
                  "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
                  "type": "object",
                  "properties": {
                    "automatic": {
                      "type": "boolean",
                      "description": "Indicates if the indexing policy is automatic"
                    },
                    "indexingMode": {
                      "description": "Indicates the indexing mode.",
                      "type": "string",
                      "default": "consistent",
                      "enum": [
                        "consistent",
                        "lazy",
                        "none"
                      ],
                      "x-ms-enum": {
                        "name": "IndexingMode",
                        "modelAsString": true
                      }
                    },
                    "includedPaths": {
                      "description": "List of paths to include in the indexing",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The paths that are included in indexing",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                          },
                          "indexes": {
                            "description": "List of indexes for this path",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The indexes for the path.",
                              "properties": {
                                "dataType": {
                                  "description": "The datatype for which the indexing behavior is applied to.",
                                  "type": "string",
                                  "default": "String",
                                  "enum": [
                                    "String",
                                    "Number",
                                    "Point",
                                    "Polygon",
                                    "LineString",
                                    "MultiPolygon"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DataType",
                                    "modelAsString": true
                                  }
                                },
                                "precision": {
                                  "description": "The precision of the index. -1 is maximum precision.",
                                  "type": "integer"
                                },
                                "kind": {
                                  "description": "Indicates the type of index.",
                                  "type": "string",
                                  "default": "Hash",
                                  "enum": [
                                    "Hash",
                                    "Range",
                                    "Spatial"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IndexKind",
                                    "modelAsString": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "excludedPaths": {
                      "description": "List of paths to exclude from indexing",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                          }
                        }
                      }
                    },
                    "compositeIndexes": {
                      "description": "List of composite path list",
                      "type": "array",
                      "items": {
                        "description": "List of composite path",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                            },
                            "order": {
                              "description": "Sort order for composite paths.",
                              "type": "string",
                              "enum": [
                                "ascending",
                                "descending"
                              ],
                              "x-ms-enum": {
                                "name": "CompositePathSortOrder",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "spatialIndexes": {
                      "description": "List of spatial specifics",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                          },
                          "types": {
                            "description": "List of path's spatial type",
                            "type": "array",
                            "items": {
                              "description": "Indicates the spatial type of index.",
                              "type": "string",
                              "enum": [
                                "Point",
                                "LineString",
                                "Polygon",
                                "MultiPolygon"
                              ],
                              "x-ms-enum": {
                                "name": "SpatialType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "vectorIndexes": {
                      "description": "List of paths to include in the vector indexing",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path to the vector field in the document."
                          },
                          "type": {
                            "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                            "type": "string",
                            "enum": [
                              "flat",
                              "diskANN",
                              "quantizedFlat"
                            ],
                            "x-ms-enum": {
                              "name": "VectorIndexType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "path",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "partitionKey": {
                  "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                  "type": "object",
                  "properties": {
                    "paths": {
                      "description": "List of paths using which data within the container can be partitioned",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A path. These typically start with root (/path)"
                      }
                    },
                    "kind": {
                      "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                      "type": "string",
                      "default": "Hash",
                      "enum": [
                        "Hash",
                        "Range",
                        "MultiHash"
                      ],
                      "x-ms-enum": {
                        "name": "PartitionKind",
                        "modelAsString": true
                      }
                    },
                    "version": {
                      "description": "Indicates the version of the partition key definition",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 2,
                      "format": "int32"
                    },
                    "systemKey": {
                      "description": "Indicates if the container is using a system generated partition key",
                      "type": "boolean",
                      "readOnly": true
                    }
                  }
                },
                "defaultTtl": {
                  "type": "integer",
                  "description": "Default time to live"
                },
                "uniqueKeyPolicy": {
                  "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                  "type": "object",
                  "properties": {
                    "uniqueKeys": {
                      "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                        "properties": {
                          "paths": {
                            "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "A path. These typically start with root (/path)"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "conflictResolutionPolicy": {
                  "description": "The conflict resolution policy for the container.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "description": "Indicates the conflict resolution mode.",
                      "type": "string",
                      "default": "LastWriterWins",
                      "enum": [
                        "LastWriterWins",
                        "Custom"
                      ],
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      }
                    },
                    "conflictResolutionPath": {
                      "type": "string",
                      "description": "The conflict resolution path in the case of LastWriterWins mode."
                    },
                    "conflictResolutionProcedure": {
                      "type": "string",
                      "description": "The procedure to resolve conflicts in the case of custom mode."
                    }
                  }
                },
                "clientEncryptionPolicy": {
                  "description": "The client encryption policy for the container.",
                  "type": "object",
                  "properties": {
                    "includedPaths": {
                      "description": "Paths of the item that need encryption along with path-specific settings.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": ".",
                        "properties": {
                          "path": {
                            "description": "Path that needs to be encrypted.",
                            "type": "string"
                          },
                          "clientEncryptionKeyId": {
                            "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                            "type": "string"
                          },
                          "encryptionType": {
                            "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                            "type": "string"
                          },
                          "encryptionAlgorithm": {
                            "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "path",
                          "clientEncryptionKeyId",
                          "encryptionType",
                          "encryptionAlgorithm"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "policyFormatVersion": {
                      "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 2,
                      "format": "int32"
                    }
                  },
                  "required": [
                    "includedPaths",
                    "policyFormatVersion"
                  ]
                },
                "analyticalStorageTtl": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Analytical TTL."
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                },
                "computedProperties": {
                  "description": "List of computed properties",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The definition of a computed property",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of a computed property, for example - \"cp_lowerName\""
                      },
                      "query": {
                        "type": "string",
                        "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
                      }
                    }
                  }
                },
                "vectorEmbeddingPolicy": {
                  "description": "The vector embedding policy for the container.",
                  "type": "object",
                  "properties": {
                    "vectorEmbeddings": {
                      "description": "List of vector embeddings",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path to the vector field in the document."
                          },
                          "dataType": {
                            "description": "Indicates the data type of vector.",
                            "type": "string",
                            "enum": [
                              "float32",
                              "uint8",
                              "int8"
                            ],
                            "x-ms-enum": {
                              "name": "VectorDataType",
                              "modelAsString": true
                            }
                          },
                          "distanceFunction": {
                            "description": "The distance function to use for distance calculation in between vectors.",
                            "type": "string",
                            "enum": [
                              "euclidean",
                              "cosine",
                              "dotproduct"
                            ],
                            "x-ms-enum": {
                              "name": "DistanceFunction",
                              "modelAsString": true
                            }
                          },
                          "dimensions": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of dimensions in the vector."
                          }
                        },
                        "required": [
                          "path",
                          "dataType",
                          "distanceFunction",
                          "dimensions"
                        ]
                      }
                    }
                  }
                },
                "fullTextPolicy": {
                  "description": "The FullText policy for the container.",
                  "type": "object",
                  "properties": {
                    "defaultLanguage": {
                      "type": "string",
                      "description": "The default language for a full text paths."
                    },
                    "fullTextPaths": {
                      "description": "List of FullText Paths",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Represents the full text path specification.",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path to the full text field in the document."
                          },
                          "language": {
                            "description": "The language of the full text field in the document.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "path"
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "options": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB options resource object",
              "readOnly": true,
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                },
                "autoscaleSettings": {
                  "type": "object",
                  "description": "Specifies the Autoscale settings.",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "SqlStoredProcedureGetResults": {
      "description": "An Azure Cosmos DB storedProcedure.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of an Azure Cosmos DB storedProcedure",
          "type": "object",
          "properties": {
            "resource": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB SQL storedProcedure resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB SQL storedProcedure"
                    },
                    "body": {
                      "type": "string",
                      "description": "Body of the Stored Procedure"
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "SqlStoredProcedureGetProperties": {
      "description": "The properties of an Azure Cosmos DB StoredProcedure",
      "type": "object",
      "properties": {
        "resource": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB SQL storedProcedure resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB SQL storedProcedure"
                },
                "body": {
                  "type": "string",
                  "description": "Body of the Stored Procedure"
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        }
      }
    },
    "SqlUserDefinedFunctionGetResults": {
      "description": "An Azure Cosmos DB userDefinedFunction.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of an Azure Cosmos DB userDefinedFunction",
          "type": "object",
          "properties": {
            "resource": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB SQL userDefinedFunction resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB SQL userDefinedFunction"
                    },
                    "body": {
                      "type": "string",
                      "description": "Body of the User Defined Function"
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "SqlUserDefinedFunctionGetProperties": {
      "description": "The properties of an Azure Cosmos DB userDefinedFunction",
      "type": "object",
      "properties": {
        "resource": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB SQL userDefinedFunction resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB SQL userDefinedFunction"
                },
                "body": {
                  "type": "string",
                  "description": "Body of the User Defined Function"
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        }
      }
    },
    "SqlTriggerGetResults": {
      "description": "An Azure Cosmos DB trigger.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of an Azure Cosmos DB trigger",
          "type": "object",
          "properties": {
            "resource": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB SQL trigger resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB SQL trigger"
                    },
                    "body": {
                      "type": "string",
                      "description": "Body of the Trigger"
                    },
                    "triggerType": {
                      "type": "string",
                      "enum": [
                        "Pre",
                        "Post"
                      ],
                      "description": "Type of the Trigger",
                      "x-ms-enum": {
                        "name": "triggerType",
                        "modelAsString": true
                      }
                    },
                    "triggerOperation": {
                      "type": "string",
                      "enum": [
                        "All",
                        "Create",
                        "Update",
                        "Delete",
                        "Replace"
                      ],
                      "description": "The operation the trigger is associated with",
                      "x-ms-enum": {
                        "name": "triggerOperation",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "SqlTriggerGetProperties": {
      "description": "The properties of an Azure Cosmos DB trigger",
      "type": "object",
      "properties": {
        "resource": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB SQL trigger resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB SQL trigger"
                },
                "body": {
                  "type": "string",
                  "description": "Body of the Trigger"
                },
                "triggerType": {
                  "type": "string",
                  "enum": [
                    "Pre",
                    "Post"
                  ],
                  "description": "Type of the Trigger",
                  "x-ms-enum": {
                    "name": "triggerType",
                    "modelAsString": true
                  }
                },
                "triggerOperation": {
                  "type": "string",
                  "enum": [
                    "All",
                    "Create",
                    "Update",
                    "Delete",
                    "Replace"
                  ],
                  "description": "The operation the trigger is associated with",
                  "x-ms-enum": {
                    "name": "triggerOperation",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        }
      }
    },
    "MongoDBDatabaseGetResults": {
      "description": "An Azure Cosmos DB MongoDB database.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of an Azure Cosmos DB MongoDB database",
          "type": "object",
          "properties": {
            "resource": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB MongoDB database resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB MongoDB database"
                    },
                    "restoreParameters": {
                      "description": "Parameters to indicate the information about the restore",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "restoreSource": {
                          "type": "string",
                          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                        },
                        "restoreTimestampInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time to which the account has to be restored (ISO-8601 format)."
                        },
                        "restoreWithTtlDisabled": {
                          "type": "boolean",
                          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                        }
                      }
                    },
                    "createMode": {
                      "description": "Enum to indicate the mode of resource creation.",
                      "type": "string",
                      "default": "Default",
                      "enum": [
                        "Default",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "options": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB options resource object",
                  "readOnly": true,
                  "properties": {
                    "throughput": {
                      "type": "integer",
                      "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                    },
                    "autoscaleSettings": {
                      "type": "object",
                      "description": "Specifies the Autoscale settings.",
                      "properties": {
                        "maxThroughput": {
                          "type": "integer",
                          "description": "Represents maximum throughput, the resource can scale up to."
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "MongoDBDatabaseGetProperties": {
      "description": "The properties of an Azure Cosmos DB MongoDB database",
      "type": "object",
      "properties": {
        "resource": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB MongoDB database resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB MongoDB database"
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "options": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB options resource object",
              "readOnly": true,
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                },
                "autoscaleSettings": {
                  "type": "object",
                  "description": "Specifies the Autoscale settings.",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "MongoDBCollectionGetResults": {
      "description": "An Azure Cosmos DB MongoDB collection.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of an Azure Cosmos DB MongoDB collection",
          "type": "object",
          "properties": {
            "resource": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB MongoDB collection resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB MongoDB collection"
                    },
                    "shardKey": {
                      "description": "A key-value pair of shard keys to be applied for the request.",
                      "type": "object",
                      "additionalProperties": {
                        "type": "string"
                      }
                    },
                    "indexes": {
                      "description": "List of index keys",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Cosmos DB MongoDB collection index key",
                        "properties": {
                          "key": {
                            "description": "Cosmos DB MongoDB collection index keys",
                            "type": "object",
                            "properties": {
                              "keys": {
                                "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A Key."
                                }
                              }
                            }
                          },
                          "options": {
                            "description": "Cosmos DB MongoDB collection index key options",
                            "type": "object",
                            "properties": {
                              "expireAfterSeconds": {
                                "description": "Expire after seconds",
                                "type": "integer"
                              },
                              "unique": {
                                "description": "Is unique or not",
                                "type": "boolean"
                              }
                            }
                          }
                        }
                      }
                    },
                    "analyticalStorageTtl": {
                      "type": "integer",
                      "description": "Analytical TTL."
                    },
                    "restoreParameters": {
                      "description": "Parameters to indicate the information about the restore",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "restoreSource": {
                          "type": "string",
                          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                        },
                        "restoreTimestampInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time to which the account has to be restored (ISO-8601 format)."
                        },
                        "restoreWithTtlDisabled": {
                          "type": "boolean",
                          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                        }
                      }
                    },
                    "createMode": {
                      "description": "Enum to indicate the mode of resource creation.",
                      "type": "string",
                      "default": "Default",
                      "enum": [
                        "Default",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "options": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB options resource object",
                  "readOnly": true,
                  "properties": {
                    "throughput": {
                      "type": "integer",
                      "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                    },
                    "autoscaleSettings": {
                      "type": "object",
                      "description": "Specifies the Autoscale settings.",
                      "properties": {
                        "maxThroughput": {
                          "type": "integer",
                          "description": "Represents maximum throughput, the resource can scale up to."
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "MongoDBCollectionGetProperties": {
      "description": "The properties of an Azure Cosmos DB MongoDB collection",
      "type": "object",
      "properties": {
        "resource": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB MongoDB collection resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB MongoDB collection"
                },
                "shardKey": {
                  "description": "A key-value pair of shard keys to be applied for the request.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "indexes": {
                  "description": "List of index keys",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Cosmos DB MongoDB collection index key",
                    "properties": {
                      "key": {
                        "description": "Cosmos DB MongoDB collection index keys",
                        "type": "object",
                        "properties": {
                          "keys": {
                            "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "A Key."
                            }
                          }
                        }
                      },
                      "options": {
                        "description": "Cosmos DB MongoDB collection index key options",
                        "type": "object",
                        "properties": {
                          "expireAfterSeconds": {
                            "description": "Expire after seconds",
                            "type": "integer"
                          },
                          "unique": {
                            "description": "Is unique or not",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "analyticalStorageTtl": {
                  "type": "integer",
                  "description": "Analytical TTL."
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "options": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB options resource object",
              "readOnly": true,
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                },
                "autoscaleSettings": {
                  "type": "object",
                  "description": "Specifies the Autoscale settings.",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "TableGetResults": {
      "description": "An Azure Cosmos DB Table.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of an Azure Cosmos DB Table",
          "type": "object",
          "properties": {
            "resource": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB table resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB table"
                    },
                    "restoreParameters": {
                      "description": "Parameters to indicate the information about the restore",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "restoreSource": {
                          "type": "string",
                          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                        },
                        "restoreTimestampInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time to which the account has to be restored (ISO-8601 format)."
                        },
                        "restoreWithTtlDisabled": {
                          "type": "boolean",
                          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                        }
                      }
                    },
                    "createMode": {
                      "description": "Enum to indicate the mode of resource creation.",
                      "type": "string",
                      "default": "Default",
                      "enum": [
                        "Default",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "options": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB options resource object",
                  "readOnly": true,
                  "properties": {
                    "throughput": {
                      "type": "integer",
                      "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                    },
                    "autoscaleSettings": {
                      "type": "object",
                      "description": "Specifies the Autoscale settings.",
                      "properties": {
                        "maxThroughput": {
                          "type": "integer",
                          "description": "Represents maximum throughput, the resource can scale up to."
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "TableGetProperties": {
      "description": "The properties of an Azure Cosmos Table",
      "type": "object",
      "properties": {
        "resource": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB table resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB table"
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "options": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB options resource object",
              "readOnly": true,
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                },
                "autoscaleSettings": {
                  "type": "object",
                  "description": "Specifies the Autoscale settings.",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "CassandraKeyspaceGetResults": {
      "description": "An Azure Cosmos DB Cassandra keyspace.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of an Azure Cosmos DB Cassandra keyspace",
          "type": "object",
          "properties": {
            "resource": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB Cassandra keyspace resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB Cassandra keyspace"
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "options": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB options resource object",
                  "readOnly": true,
                  "properties": {
                    "throughput": {
                      "type": "integer",
                      "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                    },
                    "autoscaleSettings": {
                      "type": "object",
                      "description": "Specifies the Autoscale settings.",
                      "properties": {
                        "maxThroughput": {
                          "type": "integer",
                          "description": "Represents maximum throughput, the resource can scale up to."
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "CassandraKeyspaceGetProperties": {
      "description": "The properties of an Azure Cosmos DB Cassandra keyspace",
      "type": "object",
      "properties": {
        "resource": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB Cassandra keyspace resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB Cassandra keyspace"
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "options": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB options resource object",
              "readOnly": true,
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                },
                "autoscaleSettings": {
                  "type": "object",
                  "description": "Specifies the Autoscale settings.",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "CassandraTableGetResults": {
      "description": "An Azure Cosmos DB Cassandra table.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of an Azure Cosmos DB Cassandra table",
          "type": "object",
          "properties": {
            "resource": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB Cassandra table resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB Cassandra table"
                    },
                    "defaultTtl": {
                      "type": "integer",
                      "description": "Time to live of the Cosmos DB Cassandra table"
                    },
                    "schema": {
                      "description": "Schema of the Cosmos DB Cassandra table",
                      "type": "object",
                      "properties": {
                        "columns": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Cosmos DB Cassandra table column",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the Cosmos DB Cassandra table column"
                              },
                              "type": {
                                "type": "string",
                                "description": "Type of the Cosmos DB Cassandra table column"
                              }
                            }
                          },
                          "description": "List of Cassandra table columns."
                        },
                        "partitionKeys": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Cosmos DB Cassandra table partition key",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the Cosmos DB Cassandra table partition key"
                              }
                            }
                          },
                          "description": "List of partition key."
                        },
                        "clusterKeys": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Cosmos DB Cassandra table cluster key",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "Name of the Cosmos DB Cassandra table cluster key"
                              },
                              "orderBy": {
                                "type": "string",
                                "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
                              }
                            }
                          },
                          "description": "List of cluster key."
                        }
                      }
                    },
                    "analyticalStorageTtl": {
                      "type": "integer",
                      "description": "Analytical TTL."
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "options": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB options resource object",
                  "readOnly": true,
                  "properties": {
                    "throughput": {
                      "type": "integer",
                      "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                    },
                    "autoscaleSettings": {
                      "type": "object",
                      "description": "Specifies the Autoscale settings.",
                      "properties": {
                        "maxThroughput": {
                          "type": "integer",
                          "description": "Represents maximum throughput, the resource can scale up to."
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "CassandraTableGetProperties": {
      "description": "The properties of an Azure Cosmos DB Cassandra table",
      "type": "object",
      "properties": {
        "resource": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB Cassandra table resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB Cassandra table"
                },
                "defaultTtl": {
                  "type": "integer",
                  "description": "Time to live of the Cosmos DB Cassandra table"
                },
                "schema": {
                  "description": "Schema of the Cosmos DB Cassandra table",
                  "type": "object",
                  "properties": {
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Cosmos DB Cassandra table column",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Cosmos DB Cassandra table column"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the Cosmos DB Cassandra table column"
                          }
                        }
                      },
                      "description": "List of Cassandra table columns."
                    },
                    "partitionKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Cosmos DB Cassandra table partition key",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Cosmos DB Cassandra table partition key"
                          }
                        }
                      },
                      "description": "List of partition key."
                    },
                    "clusterKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Cosmos DB Cassandra table cluster key",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Cosmos DB Cassandra table cluster key"
                          },
                          "orderBy": {
                            "type": "string",
                            "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
                          }
                        }
                      },
                      "description": "List of cluster key."
                    }
                  }
                },
                "analyticalStorageTtl": {
                  "type": "integer",
                  "description": "Analytical TTL."
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "options": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB options resource object",
              "readOnly": true,
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                },
                "autoscaleSettings": {
                  "type": "object",
                  "description": "Specifies the Autoscale settings.",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "GremlinDatabaseGetResults": {
      "description": "An Azure Cosmos DB Gremlin database.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of an Azure Cosmos DB SQL database",
          "type": "object",
          "properties": {
            "resource": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB Gremlin database resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB Gremlin database"
                    },
                    "restoreParameters": {
                      "description": "Parameters to indicate the information about the restore",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "restoreSource": {
                          "type": "string",
                          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                        },
                        "restoreTimestampInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time to which the account has to be restored (ISO-8601 format)."
                        },
                        "restoreWithTtlDisabled": {
                          "type": "boolean",
                          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                        }
                      }
                    },
                    "createMode": {
                      "description": "Enum to indicate the mode of resource creation.",
                      "type": "string",
                      "default": "Default",
                      "enum": [
                        "Default",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "options": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB options resource object",
                  "readOnly": true,
                  "properties": {
                    "throughput": {
                      "type": "integer",
                      "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                    },
                    "autoscaleSettings": {
                      "type": "object",
                      "description": "Specifies the Autoscale settings.",
                      "properties": {
                        "maxThroughput": {
                          "type": "integer",
                          "description": "Represents maximum throughput, the resource can scale up to."
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "GremlinDatabaseGetProperties": {
      "description": "The properties of an Azure Cosmos DB SQL database",
      "type": "object",
      "properties": {
        "resource": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB Gremlin database resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB Gremlin database"
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "options": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB options resource object",
              "readOnly": true,
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                },
                "autoscaleSettings": {
                  "type": "object",
                  "description": "Specifies the Autoscale settings.",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "GremlinGraphGetResults": {
      "description": "An Azure Cosmos DB Gremlin graph.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "The properties of an Azure Cosmos DB Gremlin graph",
          "type": "object",
          "properties": {
            "resource": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB Gremlin graph resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB Gremlin graph"
                    },
                    "indexingPolicy": {
                      "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph",
                      "type": "object",
                      "properties": {
                        "automatic": {
                          "type": "boolean",
                          "description": "Indicates if the indexing policy is automatic"
                        },
                        "indexingMode": {
                          "description": "Indicates the indexing mode.",
                          "type": "string",
                          "default": "consistent",
                          "enum": [
                            "consistent",
                            "lazy",
                            "none"
                          ],
                          "x-ms-enum": {
                            "name": "IndexingMode",
                            "modelAsString": true
                          }
                        },
                        "includedPaths": {
                          "description": "List of paths to include in the indexing",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The paths that are included in indexing",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                              },
                              "indexes": {
                                "description": "List of indexes for this path",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The indexes for the path.",
                                  "properties": {
                                    "dataType": {
                                      "description": "The datatype for which the indexing behavior is applied to.",
                                      "type": "string",
                                      "default": "String",
                                      "enum": [
                                        "String",
                                        "Number",
                                        "Point",
                                        "Polygon",
                                        "LineString",
                                        "MultiPolygon"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataType",
                                        "modelAsString": true
                                      }
                                    },
                                    "precision": {
                                      "description": "The precision of the index. -1 is maximum precision.",
                                      "type": "integer"
                                    },
                                    "kind": {
                                      "description": "Indicates the type of index.",
                                      "type": "string",
                                      "default": "Hash",
                                      "enum": [
                                        "Hash",
                                        "Range",
                                        "Spatial"
                                      ],
                                      "x-ms-enum": {
                                        "name": "IndexKind",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "excludedPaths": {
                          "description": "List of paths to exclude from indexing",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                              }
                            }
                          }
                        },
                        "compositeIndexes": {
                          "description": "List of composite path list",
                          "type": "array",
                          "items": {
                            "description": "List of composite path",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "path": {
                                  "type": "string",
                                  "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                },
                                "order": {
                                  "description": "Sort order for composite paths.",
                                  "type": "string",
                                  "enum": [
                                    "ascending",
                                    "descending"
                                  ],
                                  "x-ms-enum": {
                                    "name": "CompositePathSortOrder",
                                    "modelAsString": true
                                  }
                                }
                              }
                            }
                          }
                        },
                        "spatialIndexes": {
                          "description": "List of spatial specifics",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                              },
                              "types": {
                                "description": "List of path's spatial type",
                                "type": "array",
                                "items": {
                                  "description": "Indicates the spatial type of index.",
                                  "type": "string",
                                  "enum": [
                                    "Point",
                                    "LineString",
                                    "Polygon",
                                    "MultiPolygon"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SpatialType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            }
                          }
                        },
                        "vectorIndexes": {
                          "description": "List of paths to include in the vector indexing",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path to the vector field in the document."
                              },
                              "type": {
                                "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                "type": "string",
                                "enum": [
                                  "flat",
                                  "diskANN",
                                  "quantizedFlat"
                                ],
                                "x-ms-enum": {
                                  "name": "VectorIndexType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "path",
                              "type"
                            ]
                          }
                        }
                      }
                    },
                    "partitionKey": {
                      "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                      "type": "object",
                      "properties": {
                        "paths": {
                          "description": "List of paths using which data within the container can be partitioned",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A path. These typically start with root (/path)"
                          }
                        },
                        "kind": {
                          "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                          "type": "string",
                          "default": "Hash",
                          "enum": [
                            "Hash",
                            "Range",
                            "MultiHash"
                          ],
                          "x-ms-enum": {
                            "name": "PartitionKind",
                            "modelAsString": true
                          }
                        },
                        "version": {
                          "description": "Indicates the version of the partition key definition",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 2,
                          "format": "int32"
                        },
                        "systemKey": {
                          "description": "Indicates if the container is using a system generated partition key",
                          "type": "boolean",
                          "readOnly": true
                        }
                      }
                    },
                    "defaultTtl": {
                      "type": "integer",
                      "description": "Default time to live"
                    },
                    "uniqueKeyPolicy": {
                      "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                      "type": "object",
                      "properties": {
                        "uniqueKeys": {
                          "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                            "properties": {
                              "paths": {
                                "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A path. These typically start with root (/path)"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "conflictResolutionPolicy": {
                      "description": "The conflict resolution policy for the graph.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "Indicates the conflict resolution mode.",
                          "type": "string",
                          "default": "LastWriterWins",
                          "enum": [
                            "LastWriterWins",
                            "Custom"
                          ],
                          "x-ms-enum": {
                            "name": "ConflictResolutionMode",
                            "modelAsString": true
                          }
                        },
                        "conflictResolutionPath": {
                          "type": "string",
                          "description": "The conflict resolution path in the case of LastWriterWins mode."
                        },
                        "conflictResolutionProcedure": {
                          "type": "string",
                          "description": "The procedure to resolve conflicts in the case of custom mode."
                        }
                      }
                    },
                    "analyticalStorageTtl": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Analytical TTL."
                    },
                    "restoreParameters": {
                      "description": "Parameters to indicate the information about the restore",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "restoreSource": {
                          "type": "string",
                          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                        },
                        "restoreTimestampInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time to which the account has to be restored (ISO-8601 format)."
                        },
                        "restoreWithTtlDisabled": {
                          "type": "boolean",
                          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                        }
                      }
                    },
                    "createMode": {
                      "description": "Enum to indicate the mode of resource creation.",
                      "type": "string",
                      "default": "Default",
                      "enum": [
                        "Default",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            },
            "options": {
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB options resource object",
                  "readOnly": true,
                  "properties": {
                    "throughput": {
                      "type": "integer",
                      "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                    },
                    "autoscaleSettings": {
                      "type": "object",
                      "description": "Specifies the Autoscale settings.",
                      "properties": {
                        "maxThroughput": {
                          "type": "integer",
                          "description": "Represents maximum throughput, the resource can scale up to."
                        }
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "GremlinGraphGetProperties": {
      "description": "The properties of an Azure Cosmos DB Gremlin graph",
      "type": "object",
      "properties": {
        "resource": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB Gremlin graph resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB Gremlin graph"
                },
                "indexingPolicy": {
                  "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph",
                  "type": "object",
                  "properties": {
                    "automatic": {
                      "type": "boolean",
                      "description": "Indicates if the indexing policy is automatic"
                    },
                    "indexingMode": {
                      "description": "Indicates the indexing mode.",
                      "type": "string",
                      "default": "consistent",
                      "enum": [
                        "consistent",
                        "lazy",
                        "none"
                      ],
                      "x-ms-enum": {
                        "name": "IndexingMode",
                        "modelAsString": true
                      }
                    },
                    "includedPaths": {
                      "description": "List of paths to include in the indexing",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The paths that are included in indexing",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                          },
                          "indexes": {
                            "description": "List of indexes for this path",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The indexes for the path.",
                              "properties": {
                                "dataType": {
                                  "description": "The datatype for which the indexing behavior is applied to.",
                                  "type": "string",
                                  "default": "String",
                                  "enum": [
                                    "String",
                                    "Number",
                                    "Point",
                                    "Polygon",
                                    "LineString",
                                    "MultiPolygon"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DataType",
                                    "modelAsString": true
                                  }
                                },
                                "precision": {
                                  "description": "The precision of the index. -1 is maximum precision.",
                                  "type": "integer"
                                },
                                "kind": {
                                  "description": "Indicates the type of index.",
                                  "type": "string",
                                  "default": "Hash",
                                  "enum": [
                                    "Hash",
                                    "Range",
                                    "Spatial"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IndexKind",
                                    "modelAsString": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "excludedPaths": {
                      "description": "List of paths to exclude from indexing",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                          }
                        }
                      }
                    },
                    "compositeIndexes": {
                      "description": "List of composite path list",
                      "type": "array",
                      "items": {
                        "description": "List of composite path",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                            },
                            "order": {
                              "description": "Sort order for composite paths.",
                              "type": "string",
                              "enum": [
                                "ascending",
                                "descending"
                              ],
                              "x-ms-enum": {
                                "name": "CompositePathSortOrder",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "spatialIndexes": {
                      "description": "List of spatial specifics",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                          },
                          "types": {
                            "description": "List of path's spatial type",
                            "type": "array",
                            "items": {
                              "description": "Indicates the spatial type of index.",
                              "type": "string",
                              "enum": [
                                "Point",
                                "LineString",
                                "Polygon",
                                "MultiPolygon"
                              ],
                              "x-ms-enum": {
                                "name": "SpatialType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "vectorIndexes": {
                      "description": "List of paths to include in the vector indexing",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path to the vector field in the document."
                          },
                          "type": {
                            "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                            "type": "string",
                            "enum": [
                              "flat",
                              "diskANN",
                              "quantizedFlat"
                            ],
                            "x-ms-enum": {
                              "name": "VectorIndexType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "path",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "partitionKey": {
                  "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                  "type": "object",
                  "properties": {
                    "paths": {
                      "description": "List of paths using which data within the container can be partitioned",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A path. These typically start with root (/path)"
                      }
                    },
                    "kind": {
                      "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                      "type": "string",
                      "default": "Hash",
                      "enum": [
                        "Hash",
                        "Range",
                        "MultiHash"
                      ],
                      "x-ms-enum": {
                        "name": "PartitionKind",
                        "modelAsString": true
                      }
                    },
                    "version": {
                      "description": "Indicates the version of the partition key definition",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 2,
                      "format": "int32"
                    },
                    "systemKey": {
                      "description": "Indicates if the container is using a system generated partition key",
                      "type": "boolean",
                      "readOnly": true
                    }
                  }
                },
                "defaultTtl": {
                  "type": "integer",
                  "description": "Default time to live"
                },
                "uniqueKeyPolicy": {
                  "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                  "type": "object",
                  "properties": {
                    "uniqueKeys": {
                      "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                        "properties": {
                          "paths": {
                            "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "A path. These typically start with root (/path)"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "conflictResolutionPolicy": {
                  "description": "The conflict resolution policy for the graph.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "description": "Indicates the conflict resolution mode.",
                      "type": "string",
                      "default": "LastWriterWins",
                      "enum": [
                        "LastWriterWins",
                        "Custom"
                      ],
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      }
                    },
                    "conflictResolutionPath": {
                      "type": "string",
                      "description": "The conflict resolution path in the case of LastWriterWins mode."
                    },
                    "conflictResolutionProcedure": {
                      "type": "string",
                      "description": "The procedure to resolve conflicts in the case of custom mode."
                    }
                  }
                },
                "analyticalStorageTtl": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Analytical TTL."
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            {
              "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "description": "A system generated property. A unique identifier.",
                  "readOnly": true
                },
                "_ts": {
                  "type": "number",
                  "description": "A system generated property that denotes the last updated timestamp of the resource.",
                  "readOnly": true
                },
                "_etag": {
                  "type": "string",
                  "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                  "readOnly": true
                }
              }
            }
          ]
        },
        "options": {
          "allOf": [
            {
              "type": "object",
              "description": "Cosmos DB options resource object",
              "readOnly": true,
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
                },
                "autoscaleSettings": {
                  "type": "object",
                  "description": "Specifies the Autoscale settings.",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          ]
        }
      }
    },
    "ConsistencyPolicy": {
      "type": "object",
      "description": "The consistency policy for the Cosmos DB database account.",
      "properties": {
        "defaultConsistencyLevel": {
          "description": "The default consistency level and configuration settings of the Cosmos DB account.",
          "type": "string",
          "enum": [
            "Eventual",
            "Session",
            "BoundedStaleness",
            "Strong",
            "ConsistentPrefix"
          ],
          "x-ms-enum": {
            "name": "DefaultConsistencyLevel",
            "modelAsString": false
          }
        },
        "maxStalenessPrefix": {
          "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
          "type": "integer",
          "minimum": 1,
          "maximum": 2147483647,
          "format": "int64"
        },
        "maxIntervalInSeconds": {
          "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
          "type": "integer",
          "minimum": 5,
          "maximum": 86400,
          "format": "int32"
        }
      },
      "required": [
        "defaultConsistencyLevel"
      ]
    },
    "CorsPolicy": {
      "type": "object",
      "description": "The CORS policy for the Cosmos DB database account.",
      "properties": {
        "allowedOrigins": {
          "description": "The origin domains that are permitted to make a request against the service via CORS.",
          "type": "string"
        },
        "allowedMethods": {
          "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
          "type": "string"
        },
        "allowedHeaders": {
          "description": "The request headers that the origin domain may specify on the CORS request.",
          "type": "string"
        },
        "exposedHeaders": {
          "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
          "type": "string"
        },
        "maxAgeInSeconds": {
          "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
          "type": "integer",
          "minimum": 1,
          "maximum": 2147483647,
          "format": "int64"
        }
      },
      "required": [
        "allowedOrigins"
      ]
    },
    "DatabaseAccountGetProperties": {
      "description": "Properties for the database account.",
      "type": "object",
      "properties": {
        "provisioningState": {
          "type": "string",
          "readOnly": true,
          "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
        },
        "documentEndpoint": {
          "description": "The connection endpoint for the Cosmos DB database account.",
          "type": "string",
          "readOnly": true
        },
        "databaseAccountOfferType": {
          "description": "The offer type for the Cosmos DB database account. Default value: Standard.",
          "readOnly": true,
          "type": "string",
          "enum": [
            "Standard"
          ],
          "x-ms-enum": {
            "name": "DatabaseAccountOfferType",
            "modelAsString": false
          }
        },
        "ipRules": {
          "description": "List of IpRules.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "IpAddressOrRange object",
            "properties": {
              "ipAddressOrRange": {
                "type": "string",
                "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
              }
            }
          }
        },
        "isVirtualNetworkFilterEnabled": {
          "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
          "type": "boolean"
        },
        "enableAutomaticFailover": {
          "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
          "type": "boolean"
        },
        "consistencyPolicy": {
          "description": "The consistency policy for the Cosmos DB database account.",
          "type": "object",
          "properties": {
            "defaultConsistencyLevel": {
              "description": "The default consistency level and configuration settings of the Cosmos DB account.",
              "type": "string",
              "enum": [
                "Eventual",
                "Session",
                "BoundedStaleness",
                "Strong",
                "ConsistentPrefix"
              ],
              "x-ms-enum": {
                "name": "DefaultConsistencyLevel",
                "modelAsString": false
              }
            },
            "maxStalenessPrefix": {
              "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "format": "int64"
            },
            "maxIntervalInSeconds": {
              "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
              "type": "integer",
              "minimum": 5,
              "maximum": 86400,
              "format": "int32"
            }
          },
          "required": [
            "defaultConsistencyLevel"
          ]
        },
        "capabilities": {
          "type": "array",
          "description": "List of Cosmos DB capabilities for the account",
          "items": {
            "type": "object",
            "description": "Cosmos DB capability object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
              }
            }
          }
        },
        "writeLocations": {
          "type": "array",
          "readOnly": true,
          "description": "An array that contains the write location for the Cosmos DB account.",
          "items": {
            "description": "A region in which the Azure Cosmos DB database account is deployed.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
              },
              "locationName": {
                "type": "string",
                "description": "The name of the region."
              },
              "documentEndpoint": {
                "type": "string",
                "readOnly": true,
                "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
              },
              "provisioningState": {
                "type": "string",
                "readOnly": true,
                "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
              },
              "failoverPriority": {
                "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                "format": "int32",
                "type": "integer",
                "minimum": 0
              },
              "isZoneRedundant": {
                "type": "boolean",
                "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
              }
            }
          }
        },
        "readLocations": {
          "type": "array",
          "readOnly": true,
          "description": "An array that contains of the read locations enabled for the Cosmos DB account.",
          "items": {
            "description": "A region in which the Azure Cosmos DB database account is deployed.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
              },
              "locationName": {
                "type": "string",
                "description": "The name of the region."
              },
              "documentEndpoint": {
                "type": "string",
                "readOnly": true,
                "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
              },
              "provisioningState": {
                "type": "string",
                "readOnly": true,
                "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
              },
              "failoverPriority": {
                "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                "format": "int32",
                "type": "integer",
                "minimum": 0
              },
              "isZoneRedundant": {
                "type": "boolean",
                "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
              }
            }
          }
        },
        "locations": {
          "type": "array",
          "readOnly": true,
          "description": "An array that contains all of the locations enabled for the Cosmos DB account.",
          "items": {
            "description": "A region in which the Azure Cosmos DB database account is deployed.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
              },
              "locationName": {
                "type": "string",
                "description": "The name of the region."
              },
              "documentEndpoint": {
                "type": "string",
                "readOnly": true,
                "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
              },
              "provisioningState": {
                "type": "string",
                "readOnly": true,
                "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
              },
              "failoverPriority": {
                "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                "format": "int32",
                "type": "integer",
                "minimum": 0
              },
              "isZoneRedundant": {
                "type": "boolean",
                "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
              }
            }
          }
        },
        "failoverPolicies": {
          "type": "array",
          "readOnly": true,
          "description": "An array that contains the regions ordered by their failover priorities.",
          "items": {
            "type": "object",
            "description": "The failover policy for a given region of a database account.",
            "properties": {
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "The unique identifier of the region in which the database account replicates to. Example: &lt;accountName&gt;-&lt;locationName&gt;."
              },
              "locationName": {
                "type": "string",
                "description": "The name of the region in which the database account exists."
              },
              "failoverPriority": {
                "type": "integer",
                "minimum": 0,
                "format": "int32",
                "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists."
              }
            }
          }
        },
        "virtualNetworkRules": {
          "type": "array",
          "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
          "items": {
            "type": "object",
            "description": "Virtual Network ACL Rule object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                  ]
                },
                "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
              },
              "ignoreMissingVNetServiceEndpoint": {
                "type": "boolean",
                "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
              }
            }
          }
        },
        "privateEndpointConnections": {
          "type": "array",
          "readOnly": true,
          "description": "List of Private Endpoint Connections configured for the Cosmos DB account.",
          "items": {
            "description": "A private endpoint connection",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "Private endpoint which the connection belongs to.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource id of the private endpoint."
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Connection State of the Private Endpoint Connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "The private link service connection status."
                      },
                      "description": {
                        "type": "string",
                        "description": "The private link service connection description."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                        "readOnly": true
                      }
                    }
                  },
                  "groupId": {
                    "type": "string",
                    "description": "Group id of the private endpoint."
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "Provisioning state of the private endpoint."
                  }
                }
              }
            }
          }
        },
        "enableMultipleWriteLocations": {
          "description": "Enables the account to write in multiple locations",
          "type": "boolean"
        },
        "enableCassandraConnector": {
          "description": "Enables the cassandra connector on the Cosmos DB C* account",
          "type": "boolean"
        },
        "connectorOffer": {
          "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
          "type": "string",
          "enum": [
            "Small"
          ],
          "x-ms-enum": {
            "name": "ConnectorOffer",
            "modelAsString": true
          }
        },
        "disableKeyBasedMetadataWriteAccess": {
          "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
          "type": "boolean"
        },
        "keyVaultKeyUri": {
          "description": "The URI of the key vault",
          "type": "string"
        },
        "defaultIdentity": {
          "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "Whether requests from Public Network are allowed",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled",
            "SecuredByPerimeter"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PublicNetworkAccess"
          }
        },
        "enableFreeTier": {
          "description": "Flag to indicate whether Free Tier is enabled.",
          "type": "boolean"
        },
        "apiProperties": {
          "description": "API specific properties.",
          "type": "object",
          "properties": {
            "serverVersion": {
              "type": "string",
              "enum": [
                "3.2",
                "3.6",
                "4.0",
                "4.2",
                "5.0",
                "6.0",
                "7.0"
              ],
              "description": "Describes the version of the MongoDB account.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServerVersion"
              }
            }
          }
        },
        "enableAnalyticalStorage": {
          "description": "Flag to indicate whether to enable storage analytics.",
          "type": "boolean"
        },
        "analyticalStorageConfiguration": {
          "description": "Analytical storage specific properties.",
          "type": "object",
          "properties": {
            "schemaType": {
              "type": "string",
              "description": "Describes the types of schema for analytical storage.",
              "enum": [
                "WellDefined",
                "FullFidelity"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "AnalyticalStorageSchemaType"
              }
            }
          }
        },
        "instanceId": {
          "description": "A unique identifier assigned to the database account",
          "type": "string",
          "readOnly": true
        },
        "createMode": {
          "description": "Enum to indicate the mode of account creation.",
          "type": "string",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          }
        },
        "restoreParameters": {
          "description": "Parameters to indicate the information about the restore.",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "restoreSource": {
              "type": "string",
              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
            },
            "restoreTimestampInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Time to which the account has to be restored (ISO-8601 format)."
            },
            "restoreWithTtlDisabled": {
              "type": "boolean",
              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
            },
            "restoreMode": {
              "type": "string",
              "enum": [
                "PointInTime"
              ],
              "description": "Describes the mode of the restore.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "RestoreMode"
              }
            },
            "databasesToRestore": {
              "type": "array",
              "description": "List of specific databases available for restore.",
              "items": {
                "type": "object",
                "description": "Specific Databases to restore.",
                "properties": {
                  "databaseName": {
                    "type": "string",
                    "description": "The name of the database available for restore."
                  },
                  "collectionNames": {
                    "type": "array",
                    "description": "The names of the collections available for restore.",
                    "items": {
                      "type": "string",
                      "description": "The name of the collection."
                    }
                  }
                }
              }
            },
            "gremlinDatabasesToRestore": {
              "type": "array",
              "description": "List of specific gremlin databases available for restore.",
              "items": {
                "type": "object",
                "description": "Specific Gremlin Databases to restore.",
                "properties": {
                  "databaseName": {
                    "type": "string",
                    "description": "The name of the gremlin database available for restore."
                  },
                  "graphNames": {
                    "type": "array",
                    "description": "The names of the graphs available for restore.",
                    "items": {
                      "type": "string",
                      "description": "The name of the graph."
                    }
                  }
                }
              }
            },
            "tablesToRestore": {
              "type": "array",
              "description": "List of specific tables available for restore.",
              "items": {
                "type": "string",
                "description": "The name of the table."
              }
            }
          }
        },
        "backupPolicy": {
          "description": "The object representing the policy for taking backups on an account.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Describes the mode of backups.",
              "type": "string",
              "enum": [
                "Periodic",
                "Continuous"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "BackupPolicyType"
              }
            },
            "migrationState": {
              "description": "The object representing the state of the migration between the backup policies.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Describes the status of migration between backup policy types.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InProgress",
                    "Completed",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "BackupPolicyMigrationStatus"
                  }
                },
                "targetType": {
                  "description": "Describes the target backup policy type of the backup policy migration.",
                  "type": "string",
                  "enum": [
                    "Periodic",
                    "Continuous"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "BackupPolicyType"
                  }
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time at which the backup policy migration started (ISO-8601 format)."
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "cors": {
          "type": "array",
          "description": "The CORS policy for the Cosmos DB database account.",
          "items": {
            "type": "object",
            "description": "The CORS policy for the Cosmos DB database account.",
            "properties": {
              "allowedOrigins": {
                "description": "The origin domains that are permitted to make a request against the service via CORS.",
                "type": "string"
              },
              "allowedMethods": {
                "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                "type": "string"
              },
              "allowedHeaders": {
                "description": "The request headers that the origin domain may specify on the CORS request.",
                "type": "string"
              },
              "exposedHeaders": {
                "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                "type": "string"
              },
              "maxAgeInSeconds": {
                "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                "type": "integer",
                "minimum": 1,
                "maximum": 2147483647,
                "format": "int64"
              }
            },
            "required": [
              "allowedOrigins"
            ]
          }
        },
        "networkAclBypass": {
          "description": "Indicates what services are allowed to bypass firewall checks.",
          "type": "string",
          "enum": [
            "None",
            "AzureServices"
          ],
          "x-ms-enum": {
            "name": "NetworkAclBypass",
            "modelAsString": false
          }
        },
        "networkAclBypassResourceIds": {
          "type": "array",
          "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
          "items": {
            "type": "string",
            "format": "arm-id"
          }
        },
        "disableLocalAuth": {
          "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
          "type": "boolean"
        },
        "capacity": {
          "description": "The object that represents all properties related to capacity enforcement on an account.",
          "type": "object",
          "properties": {
            "totalThroughputLimit": {
              "type": "integer",
              "minimum": -1,
              "format": "int32",
              "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
            }
          }
        },
        "keysMetadata": {
          "description": "The object that represents the metadata for the Account Keys of the Cosmos DB account.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "primaryMasterKey": {
              "readOnly": true,
              "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
              "type": "object",
              "properties": {
                "generationTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                }
              }
            },
            "secondaryMasterKey": {
              "readOnly": true,
              "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
              "type": "object",
              "properties": {
                "generationTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                }
              }
            },
            "primaryReadonlyMasterKey": {
              "readOnly": true,
              "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
              "type": "object",
              "properties": {
                "generationTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                }
              }
            },
            "secondaryReadonlyMasterKey": {
              "readOnly": true,
              "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
              "type": "object",
              "properties": {
                "generationTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                }
              }
            }
          }
        },
        "enablePartitionMerge": {
          "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
          "type": "boolean"
        },
        "minimalTlsVersion": {
          "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
          "type": "string",
          "enum": [
            "Tls",
            "Tls11",
            "Tls12"
          ],
          "x-ms-enum": {
            "name": "MinimalTlsVersion",
            "modelAsString": true
          }
        },
        "enableBurstCapacity": {
          "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
          "type": "boolean"
        },
        "customerManagedKeyStatus": {
          "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
          "type": "string"
        },
        "enablePerRegionPerPartitionAutoscale": {
          "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
          "type": "boolean"
        }
      }
    },
    "DatabaseAccountCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB database accounts.",
      "type": "object",
      "properties": {
        "consistencyPolicy": {
          "description": "The consistency policy for the Cosmos DB account.",
          "type": "object",
          "properties": {
            "defaultConsistencyLevel": {
              "description": "The default consistency level and configuration settings of the Cosmos DB account.",
              "type": "string",
              "enum": [
                "Eventual",
                "Session",
                "BoundedStaleness",
                "Strong",
                "ConsistentPrefix"
              ],
              "x-ms-enum": {
                "name": "DefaultConsistencyLevel",
                "modelAsString": false
              }
            },
            "maxStalenessPrefix": {
              "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "format": "int64"
            },
            "maxIntervalInSeconds": {
              "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
              "type": "integer",
              "minimum": 5,
              "maximum": 86400,
              "format": "int32"
            }
          },
          "required": [
            "defaultConsistencyLevel"
          ]
        },
        "locations": {
          "type": "array",
          "description": "An array that contains the georeplication locations enabled for the Cosmos DB account.",
          "items": {
            "description": "A region in which the Azure Cosmos DB database account is deployed.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
              },
              "locationName": {
                "type": "string",
                "description": "The name of the region."
              },
              "documentEndpoint": {
                "type": "string",
                "readOnly": true,
                "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
              },
              "provisioningState": {
                "type": "string",
                "readOnly": true,
                "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
              },
              "failoverPriority": {
                "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                "format": "int32",
                "type": "integer",
                "minimum": 0
              },
              "isZoneRedundant": {
                "type": "boolean",
                "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
              }
            }
          }
        },
        "databaseAccountOfferType": {
          "description": "The offer type for the database",
          "type": "string",
          "enum": [
            "Standard"
          ],
          "x-ms-enum": {
            "name": "DatabaseAccountOfferType",
            "modelAsString": false
          }
        },
        "ipRules": {
          "description": "List of IpRules.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "IpAddressOrRange object",
            "properties": {
              "ipAddressOrRange": {
                "type": "string",
                "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
              }
            }
          }
        },
        "isVirtualNetworkFilterEnabled": {
          "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
          "type": "boolean"
        },
        "enableAutomaticFailover": {
          "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
          "type": "boolean"
        },
        "capabilities": {
          "type": "array",
          "description": "List of Cosmos DB capabilities for the account",
          "items": {
            "type": "object",
            "description": "Cosmos DB capability object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
              }
            }
          }
        },
        "virtualNetworkRules": {
          "type": "array",
          "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
          "items": {
            "type": "object",
            "description": "Virtual Network ACL Rule object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                  ]
                },
                "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
              },
              "ignoreMissingVNetServiceEndpoint": {
                "type": "boolean",
                "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
              }
            }
          }
        },
        "enableMultipleWriteLocations": {
          "description": "Enables the account to write in multiple locations",
          "type": "boolean"
        },
        "enableCassandraConnector": {
          "description": "Enables the cassandra connector on the Cosmos DB C* account",
          "type": "boolean"
        },
        "connectorOffer": {
          "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
          "type": "string",
          "enum": [
            "Small"
          ],
          "x-ms-enum": {
            "name": "ConnectorOffer",
            "modelAsString": true
          }
        },
        "disableKeyBasedMetadataWriteAccess": {
          "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
          "type": "boolean"
        },
        "keyVaultKeyUri": {
          "description": "The URI of the key vault",
          "type": "string"
        },
        "defaultIdentity": {
          "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "Whether requests from Public Network are allowed",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled",
            "SecuredByPerimeter"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PublicNetworkAccess"
          }
        },
        "enableFreeTier": {
          "description": "Flag to indicate whether Free Tier is enabled.",
          "type": "boolean"
        },
        "apiProperties": {
          "description": "API specific properties. Currently, supported only for MongoDB API.",
          "type": "object",
          "properties": {
            "serverVersion": {
              "type": "string",
              "enum": [
                "3.2",
                "3.6",
                "4.0",
                "4.2",
                "5.0",
                "6.0",
                "7.0"
              ],
              "description": "Describes the version of the MongoDB account.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServerVersion"
              }
            }
          }
        },
        "enableAnalyticalStorage": {
          "description": "Flag to indicate whether to enable storage analytics.",
          "type": "boolean"
        },
        "analyticalStorageConfiguration": {
          "description": "Analytical storage specific properties.",
          "type": "object",
          "properties": {
            "schemaType": {
              "type": "string",
              "description": "Describes the types of schema for analytical storage.",
              "enum": [
                "WellDefined",
                "FullFidelity"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "AnalyticalStorageSchemaType"
              }
            }
          }
        },
        "createMode": {
          "description": "Enum to indicate the mode of account creation.",
          "type": "string",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          }
        },
        "backupPolicy": {
          "description": "The object representing the policy for taking backups on an account.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Describes the mode of backups.",
              "type": "string",
              "enum": [
                "Periodic",
                "Continuous"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "BackupPolicyType"
              }
            },
            "migrationState": {
              "description": "The object representing the state of the migration between the backup policies.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Describes the status of migration between backup policy types.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InProgress",
                    "Completed",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "BackupPolicyMigrationStatus"
                  }
                },
                "targetType": {
                  "description": "Describes the target backup policy type of the backup policy migration.",
                  "type": "string",
                  "enum": [
                    "Periodic",
                    "Continuous"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "BackupPolicyType"
                  }
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time at which the backup policy migration started (ISO-8601 format)."
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "cors": {
          "type": "array",
          "description": "The CORS policy for the Cosmos DB database account.",
          "items": {
            "type": "object",
            "description": "The CORS policy for the Cosmos DB database account.",
            "properties": {
              "allowedOrigins": {
                "description": "The origin domains that are permitted to make a request against the service via CORS.",
                "type": "string"
              },
              "allowedMethods": {
                "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                "type": "string"
              },
              "allowedHeaders": {
                "description": "The request headers that the origin domain may specify on the CORS request.",
                "type": "string"
              },
              "exposedHeaders": {
                "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                "type": "string"
              },
              "maxAgeInSeconds": {
                "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                "type": "integer",
                "minimum": 1,
                "maximum": 2147483647,
                "format": "int64"
              }
            },
            "required": [
              "allowedOrigins"
            ]
          }
        },
        "networkAclBypass": {
          "description": "Indicates what services are allowed to bypass firewall checks.",
          "type": "string",
          "enum": [
            "None",
            "AzureServices"
          ],
          "x-ms-enum": {
            "name": "NetworkAclBypass",
            "modelAsString": false
          }
        },
        "networkAclBypassResourceIds": {
          "type": "array",
          "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
          "items": {
            "type": "string"
          }
        },
        "disableLocalAuth": {
          "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
          "type": "boolean"
        },
        "restoreParameters": {
          "description": "Parameters to indicate the information about the restore.",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "restoreSource": {
              "type": "string",
              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
            },
            "restoreTimestampInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Time to which the account has to be restored (ISO-8601 format)."
            },
            "restoreWithTtlDisabled": {
              "type": "boolean",
              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
            },
            "restoreMode": {
              "type": "string",
              "enum": [
                "PointInTime"
              ],
              "description": "Describes the mode of the restore.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "RestoreMode"
              }
            },
            "databasesToRestore": {
              "type": "array",
              "description": "List of specific databases available for restore.",
              "items": {
                "type": "object",
                "description": "Specific Databases to restore.",
                "properties": {
                  "databaseName": {
                    "type": "string",
                    "description": "The name of the database available for restore."
                  },
                  "collectionNames": {
                    "type": "array",
                    "description": "The names of the collections available for restore.",
                    "items": {
                      "type": "string",
                      "description": "The name of the collection."
                    }
                  }
                }
              }
            },
            "gremlinDatabasesToRestore": {
              "type": "array",
              "description": "List of specific gremlin databases available for restore.",
              "items": {
                "type": "object",
                "description": "Specific Gremlin Databases to restore.",
                "properties": {
                  "databaseName": {
                    "type": "string",
                    "description": "The name of the gremlin database available for restore."
                  },
                  "graphNames": {
                    "type": "array",
                    "description": "The names of the graphs available for restore.",
                    "items": {
                      "type": "string",
                      "description": "The name of the graph."
                    }
                  }
                }
              }
            },
            "tablesToRestore": {
              "type": "array",
              "description": "List of specific tables available for restore.",
              "items": {
                "type": "string",
                "description": "The name of the table."
              }
            }
          }
        },
        "capacity": {
          "description": "The object that represents all properties related to capacity enforcement on an account.",
          "type": "object",
          "properties": {
            "totalThroughputLimit": {
              "type": "integer",
              "minimum": -1,
              "format": "int32",
              "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
            }
          }
        },
        "keysMetadata": {
          "description": "This property is ignored during the update/create operation, as the metadata is read-only. The object represents the metadata for the Account Keys of the Cosmos DB account.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "primaryMasterKey": {
              "readOnly": true,
              "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
              "type": "object",
              "properties": {
                "generationTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                }
              }
            },
            "secondaryMasterKey": {
              "readOnly": true,
              "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
              "type": "object",
              "properties": {
                "generationTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                }
              }
            },
            "primaryReadonlyMasterKey": {
              "readOnly": true,
              "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
              "type": "object",
              "properties": {
                "generationTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                }
              }
            },
            "secondaryReadonlyMasterKey": {
              "readOnly": true,
              "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
              "type": "object",
              "properties": {
                "generationTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                }
              }
            }
          }
        },
        "enablePartitionMerge": {
          "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
          "type": "boolean"
        },
        "minimalTlsVersion": {
          "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
          "type": "string",
          "enum": [
            "Tls",
            "Tls11",
            "Tls12"
          ],
          "x-ms-enum": {
            "name": "MinimalTlsVersion",
            "modelAsString": true
          }
        },
        "enableBurstCapacity": {
          "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
          "type": "boolean"
        },
        "customerManagedKeyStatus": {
          "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
          "type": "string"
        },
        "enablePerRegionPerPartitionAutoscale": {
          "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
          "type": "boolean"
        }
      },
      "required": [
        "locations",
        "databaseAccountOfferType"
      ]
    },
    "DatabaseAccountCreateUpdateParameters": {
      "description": "Parameters to create and update Cosmos DB database accounts.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "kind": {
          "description": "Indicates the type of database account. This can only be set at database account creation.",
          "type": "string",
          "default": "GlobalDocumentDB",
          "enum": [
            "GlobalDocumentDB",
            "MongoDB",
            "Parse"
          ],
          "x-ms-enum": {
            "name": "DatabaseAccountKind",
            "modelAsString": true
          }
        },
        "identity": {
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "type": {
              "type": "string",
              "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned",
                "None"
              ],
              "x-ms-enum": {
                "name": "ResourceIdentityType",
                "modelAsString": false
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal id of user assigned identity."
                  },
                  "clientId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The client id of user assigned identity."
                  }
                }
              },
              "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
            }
          },
          "description": "Identity for the resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update Azure Cosmos DB database accounts.",
          "type": "object",
          "properties": {
            "consistencyPolicy": {
              "description": "The consistency policy for the Cosmos DB account.",
              "type": "object",
              "properties": {
                "defaultConsistencyLevel": {
                  "description": "The default consistency level and configuration settings of the Cosmos DB account.",
                  "type": "string",
                  "enum": [
                    "Eventual",
                    "Session",
                    "BoundedStaleness",
                    "Strong",
                    "ConsistentPrefix"
                  ],
                  "x-ms-enum": {
                    "name": "DefaultConsistencyLevel",
                    "modelAsString": false
                  }
                },
                "maxStalenessPrefix": {
                  "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 2147483647,
                  "format": "int64"
                },
                "maxIntervalInSeconds": {
                  "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                  "type": "integer",
                  "minimum": 5,
                  "maximum": 86400,
                  "format": "int32"
                }
              },
              "required": [
                "defaultConsistencyLevel"
              ]
            },
            "locations": {
              "type": "array",
              "description": "An array that contains the georeplication locations enabled for the Cosmos DB account.",
              "items": {
                "description": "A region in which the Azure Cosmos DB database account is deployed.",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                  },
                  "locationName": {
                    "type": "string",
                    "description": "The name of the region."
                  },
                  "documentEndpoint": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                  },
                  "failoverPriority": {
                    "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                    "format": "int32",
                    "type": "integer",
                    "minimum": 0
                  },
                  "isZoneRedundant": {
                    "type": "boolean",
                    "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                  }
                }
              }
            },
            "databaseAccountOfferType": {
              "description": "The offer type for the database",
              "type": "string",
              "enum": [
                "Standard"
              ],
              "x-ms-enum": {
                "name": "DatabaseAccountOfferType",
                "modelAsString": false
              }
            },
            "ipRules": {
              "description": "List of IpRules.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "IpAddressOrRange object",
                "properties": {
                  "ipAddressOrRange": {
                    "type": "string",
                    "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
                  }
                }
              }
            },
            "isVirtualNetworkFilterEnabled": {
              "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
              "type": "boolean"
            },
            "enableAutomaticFailover": {
              "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
              "type": "boolean"
            },
            "capabilities": {
              "type": "array",
              "description": "List of Cosmos DB capabilities for the account",
              "items": {
                "type": "object",
                "description": "Cosmos DB capability object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
                  }
                }
              }
            },
            "virtualNetworkRules": {
              "type": "array",
              "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
              "items": {
                "type": "object",
                "description": "Virtual Network ACL Rule object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/virtualNetworks/subnets"
                        }
                      ]
                    },
                    "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
                  },
                  "ignoreMissingVNetServiceEndpoint": {
                    "type": "boolean",
                    "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
                  }
                }
              }
            },
            "enableMultipleWriteLocations": {
              "description": "Enables the account to write in multiple locations",
              "type": "boolean"
            },
            "enableCassandraConnector": {
              "description": "Enables the cassandra connector on the Cosmos DB C* account",
              "type": "boolean"
            },
            "connectorOffer": {
              "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
              "type": "string",
              "enum": [
                "Small"
              ],
              "x-ms-enum": {
                "name": "ConnectorOffer",
                "modelAsString": true
              }
            },
            "disableKeyBasedMetadataWriteAccess": {
              "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
              "type": "boolean"
            },
            "keyVaultKeyUri": {
              "description": "The URI of the key vault",
              "type": "string"
            },
            "defaultIdentity": {
              "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
              "type": "string"
            },
            "publicNetworkAccess": {
              "description": "Whether requests from Public Network are allowed",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PublicNetworkAccess"
              }
            },
            "enableFreeTier": {
              "description": "Flag to indicate whether Free Tier is enabled.",
              "type": "boolean"
            },
            "apiProperties": {
              "description": "API specific properties. Currently, supported only for MongoDB API.",
              "type": "object",
              "properties": {
                "serverVersion": {
                  "type": "string",
                  "enum": [
                    "3.2",
                    "3.6",
                    "4.0",
                    "4.2",
                    "5.0",
                    "6.0",
                    "7.0"
                  ],
                  "description": "Describes the version of the MongoDB account.",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ServerVersion"
                  }
                }
              }
            },
            "enableAnalyticalStorage": {
              "description": "Flag to indicate whether to enable storage analytics.",
              "type": "boolean"
            },
            "analyticalStorageConfiguration": {
              "description": "Analytical storage specific properties.",
              "type": "object",
              "properties": {
                "schemaType": {
                  "type": "string",
                  "description": "Describes the types of schema for analytical storage.",
                  "enum": [
                    "WellDefined",
                    "FullFidelity"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "AnalyticalStorageSchemaType"
                  }
                }
              }
            },
            "createMode": {
              "description": "Enum to indicate the mode of account creation.",
              "type": "string",
              "default": "Default",
              "enum": [
                "Default",
                "Restore"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true
              }
            },
            "backupPolicy": {
              "description": "The object representing the policy for taking backups on an account.",
              "type": "object",
              "discriminator": "type",
              "properties": {
                "type": {
                  "description": "Describes the mode of backups.",
                  "type": "string",
                  "enum": [
                    "Periodic",
                    "Continuous"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "BackupPolicyType"
                  }
                },
                "migrationState": {
                  "description": "The object representing the state of the migration between the backup policies.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Describes the status of migration between backup policy types.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "InProgress",
                        "Completed",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "BackupPolicyMigrationStatus"
                      }
                    },
                    "targetType": {
                      "description": "Describes the target backup policy type of the backup policy migration.",
                      "type": "string",
                      "enum": [
                        "Periodic",
                        "Continuous"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "BackupPolicyType"
                      }
                    },
                    "startTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which the backup policy migration started (ISO-8601 format)."
                    }
                  }
                }
              },
              "required": [
                "type"
              ]
            },
            "cors": {
              "type": "array",
              "description": "The CORS policy for the Cosmos DB database account.",
              "items": {
                "type": "object",
                "description": "The CORS policy for the Cosmos DB database account.",
                "properties": {
                  "allowedOrigins": {
                    "description": "The origin domains that are permitted to make a request against the service via CORS.",
                    "type": "string"
                  },
                  "allowedMethods": {
                    "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                    "type": "string"
                  },
                  "allowedHeaders": {
                    "description": "The request headers that the origin domain may specify on the CORS request.",
                    "type": "string"
                  },
                  "exposedHeaders": {
                    "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                    "type": "string"
                  },
                  "maxAgeInSeconds": {
                    "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 2147483647,
                    "format": "int64"
                  }
                },
                "required": [
                  "allowedOrigins"
                ]
              }
            },
            "networkAclBypass": {
              "description": "Indicates what services are allowed to bypass firewall checks.",
              "type": "string",
              "enum": [
                "None",
                "AzureServices"
              ],
              "x-ms-enum": {
                "name": "NetworkAclBypass",
                "modelAsString": false
              }
            },
            "networkAclBypassResourceIds": {
              "type": "array",
              "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
              "items": {
                "type": "string"
              }
            },
            "disableLocalAuth": {
              "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
              "type": "boolean"
            },
            "restoreParameters": {
              "description": "Parameters to indicate the information about the restore.",
              "type": "object",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "properties": {
                "restoreSource": {
                  "type": "string",
                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                },
                "restoreTimestampInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                },
                "restoreWithTtlDisabled": {
                  "type": "boolean",
                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                },
                "restoreMode": {
                  "type": "string",
                  "enum": [
                    "PointInTime"
                  ],
                  "description": "Describes the mode of the restore.",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "RestoreMode"
                  }
                },
                "databasesToRestore": {
                  "type": "array",
                  "description": "List of specific databases available for restore.",
                  "items": {
                    "type": "object",
                    "description": "Specific Databases to restore.",
                    "properties": {
                      "databaseName": {
                        "type": "string",
                        "description": "The name of the database available for restore."
                      },
                      "collectionNames": {
                        "type": "array",
                        "description": "The names of the collections available for restore.",
                        "items": {
                          "type": "string",
                          "description": "The name of the collection."
                        }
                      }
                    }
                  }
                },
                "gremlinDatabasesToRestore": {
                  "type": "array",
                  "description": "List of specific gremlin databases available for restore.",
                  "items": {
                    "type": "object",
                    "description": "Specific Gremlin Databases to restore.",
                    "properties": {
                      "databaseName": {
                        "type": "string",
                        "description": "The name of the gremlin database available for restore."
                      },
                      "graphNames": {
                        "type": "array",
                        "description": "The names of the graphs available for restore.",
                        "items": {
                          "type": "string",
                          "description": "The name of the graph."
                        }
                      }
                    }
                  }
                },
                "tablesToRestore": {
                  "type": "array",
                  "description": "List of specific tables available for restore.",
                  "items": {
                    "type": "string",
                    "description": "The name of the table."
                  }
                }
              }
            },
            "capacity": {
              "description": "The object that represents all properties related to capacity enforcement on an account.",
              "type": "object",
              "properties": {
                "totalThroughputLimit": {
                  "type": "integer",
                  "minimum": -1,
                  "format": "int32",
                  "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
                }
              }
            },
            "keysMetadata": {
              "description": "This property is ignored during the update/create operation, as the metadata is read-only. The object represents the metadata for the Account Keys of the Cosmos DB account.",
              "type": "object",
              "readOnly": true,
              "properties": {
                "primaryMasterKey": {
                  "readOnly": true,
                  "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
                  "type": "object",
                  "properties": {
                    "generationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                    }
                  }
                },
                "secondaryMasterKey": {
                  "readOnly": true,
                  "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
                  "type": "object",
                  "properties": {
                    "generationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                    }
                  }
                },
                "primaryReadonlyMasterKey": {
                  "readOnly": true,
                  "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
                  "type": "object",
                  "properties": {
                    "generationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                    }
                  }
                },
                "secondaryReadonlyMasterKey": {
                  "readOnly": true,
                  "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
                  "type": "object",
                  "properties": {
                    "generationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                    }
                  }
                }
              }
            },
            "enablePartitionMerge": {
              "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
              "type": "boolean"
            },
            "minimalTlsVersion": {
              "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
              "type": "string",
              "enum": [
                "Tls",
                "Tls11",
                "Tls12"
              ],
              "x-ms-enum": {
                "name": "MinimalTlsVersion",
                "modelAsString": true
              }
            },
            "enableBurstCapacity": {
              "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
              "type": "boolean"
            },
            "customerManagedKeyStatus": {
              "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
              "type": "string"
            },
            "enablePerRegionPerPartitionAutoscale": {
              "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
              "type": "boolean"
            }
          },
          "required": [
            "locations",
            "databaseAccountOfferType"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "DatabaseAccountUpdateProperties": {
      "description": "Properties to update Azure Cosmos DB database accounts.",
      "type": "object",
      "properties": {
        "consistencyPolicy": {
          "description": "The consistency policy for the Cosmos DB account.",
          "type": "object",
          "properties": {
            "defaultConsistencyLevel": {
              "description": "The default consistency level and configuration settings of the Cosmos DB account.",
              "type": "string",
              "enum": [
                "Eventual",
                "Session",
                "BoundedStaleness",
                "Strong",
                "ConsistentPrefix"
              ],
              "x-ms-enum": {
                "name": "DefaultConsistencyLevel",
                "modelAsString": false
              }
            },
            "maxStalenessPrefix": {
              "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
              "type": "integer",
              "minimum": 1,
              "maximum": 2147483647,
              "format": "int64"
            },
            "maxIntervalInSeconds": {
              "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
              "type": "integer",
              "minimum": 5,
              "maximum": 86400,
              "format": "int32"
            }
          },
          "required": [
            "defaultConsistencyLevel"
          ]
        },
        "locations": {
          "type": "array",
          "description": "An array that contains the georeplication locations enabled for the Cosmos DB account.",
          "items": {
            "description": "A region in which the Azure Cosmos DB database account is deployed.",
            "type": "object",
            "properties": {
              "id": {
                "type": "string",
                "readOnly": true,
                "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
              },
              "locationName": {
                "type": "string",
                "description": "The name of the region."
              },
              "documentEndpoint": {
                "type": "string",
                "readOnly": true,
                "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
              },
              "provisioningState": {
                "type": "string",
                "readOnly": true,
                "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
              },
              "failoverPriority": {
                "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                "format": "int32",
                "type": "integer",
                "minimum": 0
              },
              "isZoneRedundant": {
                "type": "boolean",
                "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
              }
            }
          }
        },
        "ipRules": {
          "description": "List of IpRules.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "IpAddressOrRange object",
            "properties": {
              "ipAddressOrRange": {
                "type": "string",
                "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
              }
            }
          }
        },
        "isVirtualNetworkFilterEnabled": {
          "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
          "type": "boolean"
        },
        "enableAutomaticFailover": {
          "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
          "type": "boolean"
        },
        "capabilities": {
          "type": "array",
          "description": "List of Cosmos DB capabilities for the account",
          "items": {
            "type": "object",
            "description": "Cosmos DB capability object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
              }
            }
          }
        },
        "virtualNetworkRules": {
          "type": "array",
          "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
          "items": {
            "type": "object",
            "description": "Virtual Network ACL Rule object",
            "properties": {
              "id": {
                "type": "string",
                "format": "arm-id",
                "x-ms-arm-id-details": {
                  "allowedResources": [
                    {
                      "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                  ]
                },
                "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
              },
              "ignoreMissingVNetServiceEndpoint": {
                "type": "boolean",
                "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
              }
            }
          }
        },
        "enableMultipleWriteLocations": {
          "description": "Enables the account to write in multiple locations",
          "type": "boolean"
        },
        "enableCassandraConnector": {
          "description": "Enables the cassandra connector on the Cosmos DB C* account",
          "type": "boolean"
        },
        "connectorOffer": {
          "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
          "type": "string",
          "enum": [
            "Small"
          ],
          "x-ms-enum": {
            "name": "ConnectorOffer",
            "modelAsString": true
          }
        },
        "disableKeyBasedMetadataWriteAccess": {
          "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
          "type": "boolean"
        },
        "keyVaultKeyUri": {
          "description": "The URI of the key vault",
          "type": "string"
        },
        "defaultIdentity": {
          "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "Whether requests from Public Network are allowed",
          "type": "string",
          "enum": [
            "Enabled",
            "Disabled",
            "SecuredByPerimeter"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PublicNetworkAccess"
          }
        },
        "enableFreeTier": {
          "description": "Flag to indicate whether Free Tier is enabled.",
          "type": "boolean"
        },
        "apiProperties": {
          "description": "API specific properties. Currently, supported only for MongoDB API.",
          "type": "object",
          "properties": {
            "serverVersion": {
              "type": "string",
              "enum": [
                "3.2",
                "3.6",
                "4.0",
                "4.2",
                "5.0",
                "6.0",
                "7.0"
              ],
              "description": "Describes the version of the MongoDB account.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServerVersion"
              }
            }
          }
        },
        "enableAnalyticalStorage": {
          "description": "Flag to indicate whether to enable storage analytics.",
          "type": "boolean"
        },
        "analyticalStorageConfiguration": {
          "description": "Analytical storage specific properties.",
          "type": "object",
          "properties": {
            "schemaType": {
              "type": "string",
              "description": "Describes the types of schema for analytical storage.",
              "enum": [
                "WellDefined",
                "FullFidelity"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "AnalyticalStorageSchemaType"
              }
            }
          }
        },
        "backupPolicy": {
          "description": "The object representing the policy for taking backups on an account.",
          "type": "object",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Describes the mode of backups.",
              "type": "string",
              "enum": [
                "Periodic",
                "Continuous"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "BackupPolicyType"
              }
            },
            "migrationState": {
              "description": "The object representing the state of the migration between the backup policies.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Describes the status of migration between backup policy types.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InProgress",
                    "Completed",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "BackupPolicyMigrationStatus"
                  }
                },
                "targetType": {
                  "description": "Describes the target backup policy type of the backup policy migration.",
                  "type": "string",
                  "enum": [
                    "Periodic",
                    "Continuous"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "BackupPolicyType"
                  }
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time at which the backup policy migration started (ISO-8601 format)."
                }
              }
            }
          },
          "required": [
            "type"
          ]
        },
        "cors": {
          "type": "array",
          "description": "The CORS policy for the Cosmos DB database account.",
          "items": {
            "type": "object",
            "description": "The CORS policy for the Cosmos DB database account.",
            "properties": {
              "allowedOrigins": {
                "description": "The origin domains that are permitted to make a request against the service via CORS.",
                "type": "string"
              },
              "allowedMethods": {
                "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                "type": "string"
              },
              "allowedHeaders": {
                "description": "The request headers that the origin domain may specify on the CORS request.",
                "type": "string"
              },
              "exposedHeaders": {
                "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                "type": "string"
              },
              "maxAgeInSeconds": {
                "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                "type": "integer",
                "minimum": 1,
                "maximum": 2147483647,
                "format": "int64"
              }
            },
            "required": [
              "allowedOrigins"
            ]
          }
        },
        "networkAclBypass": {
          "description": "Indicates what services are allowed to bypass firewall checks.",
          "type": "string",
          "enum": [
            "None",
            "AzureServices"
          ],
          "x-ms-enum": {
            "name": "NetworkAclBypass",
            "modelAsString": false
          }
        },
        "networkAclBypassResourceIds": {
          "type": "array",
          "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
          "items": {
            "type": "string"
          }
        },
        "disableLocalAuth": {
          "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
          "type": "boolean"
        },
        "capacity": {
          "description": "The object that represents all properties related to capacity enforcement on an account.",
          "type": "object",
          "properties": {
            "totalThroughputLimit": {
              "type": "integer",
              "minimum": -1,
              "format": "int32",
              "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
            }
          }
        },
        "keysMetadata": {
          "description": "This property is ignored during the update operation, as the metadata is read-only. The object represents the metadata for the Account Keys of the Cosmos DB account.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "primaryMasterKey": {
              "readOnly": true,
              "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
              "type": "object",
              "properties": {
                "generationTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                }
              }
            },
            "secondaryMasterKey": {
              "readOnly": true,
              "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
              "type": "object",
              "properties": {
                "generationTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                }
              }
            },
            "primaryReadonlyMasterKey": {
              "readOnly": true,
              "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
              "type": "object",
              "properties": {
                "generationTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                }
              }
            },
            "secondaryReadonlyMasterKey": {
              "readOnly": true,
              "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
              "type": "object",
              "properties": {
                "generationTime": {
                  "readOnly": true,
                  "type": "string",
                  "format": "date-time",
                  "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                }
              }
            }
          }
        },
        "enablePartitionMerge": {
          "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
          "type": "boolean"
        },
        "minimalTlsVersion": {
          "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
          "type": "string",
          "enum": [
            "Tls",
            "Tls11",
            "Tls12"
          ],
          "x-ms-enum": {
            "name": "MinimalTlsVersion",
            "modelAsString": true
          }
        },
        "enableBurstCapacity": {
          "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
          "type": "boolean"
        },
        "customerManagedKeyStatus": {
          "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
          "type": "string"
        },
        "enablePerRegionPerPartitionAutoscale": {
          "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
          "type": "boolean"
        }
      }
    },
    "DatabaseAccountUpdateParameters": {
      "description": "Parameters for patching Azure Cosmos DB database account properties.",
      "type": "object",
      "properties": {
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "identity": {
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
            },
            "type": {
              "type": "string",
              "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
              "enum": [
                "SystemAssigned",
                "UserAssigned",
                "SystemAssigned,UserAssigned",
                "None"
              ],
              "x-ms-enum": {
                "name": "ResourceIdentityType",
                "modelAsString": false
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "additionalProperties": {
                "type": "object",
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The principal id of user assigned identity."
                  },
                  "clientId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The client id of user assigned identity."
                  }
                }
              },
              "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
            }
          },
          "description": "Identity for the resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to update Azure Cosmos DB database accounts.",
          "type": "object",
          "properties": {
            "consistencyPolicy": {
              "description": "The consistency policy for the Cosmos DB account.",
              "type": "object",
              "properties": {
                "defaultConsistencyLevel": {
                  "description": "The default consistency level and configuration settings of the Cosmos DB account.",
                  "type": "string",
                  "enum": [
                    "Eventual",
                    "Session",
                    "BoundedStaleness",
                    "Strong",
                    "ConsistentPrefix"
                  ],
                  "x-ms-enum": {
                    "name": "DefaultConsistencyLevel",
                    "modelAsString": false
                  }
                },
                "maxStalenessPrefix": {
                  "description": "When used with the Bounded Staleness consistency level, this value represents the number of stale requests tolerated. Accepted range for this value is 1 – 2,147,483,647. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 2147483647,
                  "format": "int64"
                },
                "maxIntervalInSeconds": {
                  "description": "When used with the Bounded Staleness consistency level, this value represents the time amount of staleness (in seconds) tolerated. Accepted range for this value is 5 - 86400. Required when defaultConsistencyPolicy is set to 'BoundedStaleness'.",
                  "type": "integer",
                  "minimum": 5,
                  "maximum": 86400,
                  "format": "int32"
                }
              },
              "required": [
                "defaultConsistencyLevel"
              ]
            },
            "locations": {
              "type": "array",
              "description": "An array that contains the georeplication locations enabled for the Cosmos DB account.",
              "items": {
                "description": "A region in which the Azure Cosmos DB database account is deployed.",
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The unique identifier of the region within the database account. Example: &lt;accountName&gt;-&lt;locationName&gt;."
                  },
                  "locationName": {
                    "type": "string",
                    "description": "The name of the region."
                  },
                  "documentEndpoint": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The connection endpoint for the specific region. Example: https://&lt;accountName&gt;-&lt;locationName&gt;.documents.azure.com:443/"
                  },
                  "provisioningState": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
                  },
                  "failoverPriority": {
                    "description": "The failover priority of the region. A failover priority of 0 indicates a write region. The maximum value for a failover priority = (total number of regions - 1). Failover priority values must be unique for each of the regions in which the database account exists.",
                    "format": "int32",
                    "type": "integer",
                    "minimum": 0
                  },
                  "isZoneRedundant": {
                    "type": "boolean",
                    "description": "Flag to indicate whether or not this region is an AvailabilityZone region"
                  }
                }
              }
            },
            "ipRules": {
              "description": "List of IpRules.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "IpAddressOrRange object",
                "properties": {
                  "ipAddressOrRange": {
                    "type": "string",
                    "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
                  }
                }
              }
            },
            "isVirtualNetworkFilterEnabled": {
              "description": "Flag to indicate whether to enable/disable Virtual Network ACL rules.",
              "type": "boolean"
            },
            "enableAutomaticFailover": {
              "description": "Enables automatic failover of the write region in the rare event that the region is unavailable due to an outage. Automatic failover will result in a new write region for the account and is chosen based on the failover priorities configured for the account.",
              "type": "boolean"
            },
            "capabilities": {
              "type": "array",
              "description": "List of Cosmos DB capabilities for the account",
              "items": {
                "type": "object",
                "description": "Cosmos DB capability object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
                  }
                }
              }
            },
            "virtualNetworkRules": {
              "type": "array",
              "description": "List of Virtual Network ACL rules configured for the Cosmos DB account.",
              "items": {
                "type": "object",
                "description": "Virtual Network ACL Rule object",
                "properties": {
                  "id": {
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/virtualNetworks/subnets"
                        }
                      ]
                    },
                    "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
                  },
                  "ignoreMissingVNetServiceEndpoint": {
                    "type": "boolean",
                    "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
                  }
                }
              }
            },
            "enableMultipleWriteLocations": {
              "description": "Enables the account to write in multiple locations",
              "type": "boolean"
            },
            "enableCassandraConnector": {
              "description": "Enables the cassandra connector on the Cosmos DB C* account",
              "type": "boolean"
            },
            "connectorOffer": {
              "description": "The cassandra connector offer type for the Cosmos DB database C* account.",
              "type": "string",
              "enum": [
                "Small"
              ],
              "x-ms-enum": {
                "name": "ConnectorOffer",
                "modelAsString": true
              }
            },
            "disableKeyBasedMetadataWriteAccess": {
              "description": "Disable write operations on metadata resources (databases, containers, throughput) via account keys",
              "type": "boolean"
            },
            "keyVaultKeyUri": {
              "description": "The URI of the key vault",
              "type": "string"
            },
            "defaultIdentity": {
              "description": "The default identity for accessing key vault used in features like customer managed keys. The default identity needs to be explicitly set by the users. It can be \"FirstPartyIdentity\", \"SystemAssignedIdentity\" and more.",
              "type": "string"
            },
            "publicNetworkAccess": {
              "description": "Whether requests from Public Network are allowed",
              "type": "string",
              "enum": [
                "Enabled",
                "Disabled",
                "SecuredByPerimeter"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "PublicNetworkAccess"
              }
            },
            "enableFreeTier": {
              "description": "Flag to indicate whether Free Tier is enabled.",
              "type": "boolean"
            },
            "apiProperties": {
              "description": "API specific properties. Currently, supported only for MongoDB API.",
              "type": "object",
              "properties": {
                "serverVersion": {
                  "type": "string",
                  "enum": [
                    "3.2",
                    "3.6",
                    "4.0",
                    "4.2",
                    "5.0",
                    "6.0",
                    "7.0"
                  ],
                  "description": "Describes the version of the MongoDB account.",
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "ServerVersion"
                  }
                }
              }
            },
            "enableAnalyticalStorage": {
              "description": "Flag to indicate whether to enable storage analytics.",
              "type": "boolean"
            },
            "analyticalStorageConfiguration": {
              "description": "Analytical storage specific properties.",
              "type": "object",
              "properties": {
                "schemaType": {
                  "type": "string",
                  "description": "Describes the types of schema for analytical storage.",
                  "enum": [
                    "WellDefined",
                    "FullFidelity"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "AnalyticalStorageSchemaType"
                  }
                }
              }
            },
            "backupPolicy": {
              "description": "The object representing the policy for taking backups on an account.",
              "type": "object",
              "discriminator": "type",
              "properties": {
                "type": {
                  "description": "Describes the mode of backups.",
                  "type": "string",
                  "enum": [
                    "Periodic",
                    "Continuous"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "BackupPolicyType"
                  }
                },
                "migrationState": {
                  "description": "The object representing the state of the migration between the backup policies.",
                  "type": "object",
                  "properties": {
                    "status": {
                      "description": "Describes the status of migration between backup policy types.",
                      "type": "string",
                      "enum": [
                        "Invalid",
                        "InProgress",
                        "Completed",
                        "Failed"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "BackupPolicyMigrationStatus"
                      }
                    },
                    "targetType": {
                      "description": "Describes the target backup policy type of the backup policy migration.",
                      "type": "string",
                      "enum": [
                        "Periodic",
                        "Continuous"
                      ],
                      "x-ms-enum": {
                        "modelAsString": true,
                        "name": "BackupPolicyType"
                      }
                    },
                    "startTime": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time at which the backup policy migration started (ISO-8601 format)."
                    }
                  }
                }
              },
              "required": [
                "type"
              ]
            },
            "cors": {
              "type": "array",
              "description": "The CORS policy for the Cosmos DB database account.",
              "items": {
                "type": "object",
                "description": "The CORS policy for the Cosmos DB database account.",
                "properties": {
                  "allowedOrigins": {
                    "description": "The origin domains that are permitted to make a request against the service via CORS.",
                    "type": "string"
                  },
                  "allowedMethods": {
                    "description": "The methods (HTTP request verbs) that the origin domain may use for a CORS request.",
                    "type": "string"
                  },
                  "allowedHeaders": {
                    "description": "The request headers that the origin domain may specify on the CORS request.",
                    "type": "string"
                  },
                  "exposedHeaders": {
                    "description": "The response headers that may be sent in the response to the CORS request and exposed by the browser to the request issuer.",
                    "type": "string"
                  },
                  "maxAgeInSeconds": {
                    "description": "The maximum amount time that a browser should cache the preflight OPTIONS request.",
                    "type": "integer",
                    "minimum": 1,
                    "maximum": 2147483647,
                    "format": "int64"
                  }
                },
                "required": [
                  "allowedOrigins"
                ]
              }
            },
            "networkAclBypass": {
              "description": "Indicates what services are allowed to bypass firewall checks.",
              "type": "string",
              "enum": [
                "None",
                "AzureServices"
              ],
              "x-ms-enum": {
                "name": "NetworkAclBypass",
                "modelAsString": false
              }
            },
            "networkAclBypassResourceIds": {
              "type": "array",
              "description": "An array that contains the Resource Ids for Network Acl Bypass for the Cosmos DB account.",
              "items": {
                "type": "string"
              }
            },
            "disableLocalAuth": {
              "description": "Opt-out of local authentication and ensure only MSI and AAD can be used exclusively for authentication.",
              "type": "boolean"
            },
            "capacity": {
              "description": "The object that represents all properties related to capacity enforcement on an account.",
              "type": "object",
              "properties": {
                "totalThroughputLimit": {
                  "type": "integer",
                  "minimum": -1,
                  "format": "int32",
                  "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
                }
              }
            },
            "keysMetadata": {
              "description": "This property is ignored during the update operation, as the metadata is read-only. The object represents the metadata for the Account Keys of the Cosmos DB account.",
              "type": "object",
              "readOnly": true,
              "properties": {
                "primaryMasterKey": {
                  "readOnly": true,
                  "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
                  "type": "object",
                  "properties": {
                    "generationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                    }
                  }
                },
                "secondaryMasterKey": {
                  "readOnly": true,
                  "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
                  "type": "object",
                  "properties": {
                    "generationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                    }
                  }
                },
                "primaryReadonlyMasterKey": {
                  "readOnly": true,
                  "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
                  "type": "object",
                  "properties": {
                    "generationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                    }
                  }
                },
                "secondaryReadonlyMasterKey": {
                  "readOnly": true,
                  "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
                  "type": "object",
                  "properties": {
                    "generationTime": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
                    }
                  }
                }
              }
            },
            "enablePartitionMerge": {
              "description": "Flag to indicate enabling/disabling of Partition Merge feature on the account",
              "type": "boolean"
            },
            "minimalTlsVersion": {
              "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
              "type": "string",
              "enum": [
                "Tls",
                "Tls11",
                "Tls12"
              ],
              "x-ms-enum": {
                "name": "MinimalTlsVersion",
                "modelAsString": true
              }
            },
            "enableBurstCapacity": {
              "description": "Flag to indicate enabling/disabling of Burst Capacity feature on the account",
              "type": "boolean"
            },
            "customerManagedKeyStatus": {
              "description": "Indicates the status of the Customer Managed Key feature on the account. In case there are errors, the property provides troubleshooting guidance.",
              "type": "string"
            },
            "enablePerRegionPerPartitionAutoscale": {
              "description": "Flag to indicate enabling/disabling of PerRegionPerPartitionAutoscale feature on the account",
              "type": "boolean"
            }
          }
        }
      }
    },
    "DatabaseAccountListReadOnlyKeysResult": {
      "description": "The read-only access keys for the given database account.",
      "properties": {
        "primaryReadonlyMasterKey": {
          "readOnly": true,
          "type": "string",
          "description": "Base 64 encoded value of the primary read-only key."
        },
        "secondaryReadonlyMasterKey": {
          "readOnly": true,
          "type": "string",
          "description": "Base 64 encoded value of the secondary read-only key."
        }
      }
    },
    "DatabaseAccountListKeysResult": {
      "description": "The access keys for the given database account.",
      "properties": {
        "primaryReadonlyMasterKey": {
          "readOnly": true,
          "type": "string",
          "description": "Base 64 encoded value of the primary read-only key."
        },
        "secondaryReadonlyMasterKey": {
          "readOnly": true,
          "type": "string",
          "description": "Base 64 encoded value of the secondary read-only key."
        },
        "primaryMasterKey": {
          "readOnly": true,
          "type": "string",
          "description": "Base 64 encoded value of the primary read-write key."
        },
        "secondaryMasterKey": {
          "readOnly": true,
          "type": "string",
          "description": "Base 64 encoded value of the secondary read-write key."
        }
      }
    },
    "DatabaseAccountConnectionString": {
      "description": "Connection string for the Cosmos DB account",
      "properties": {
        "connectionString": {
          "readOnly": true,
          "type": "string",
          "description": "Value of the connection string"
        },
        "description": {
          "readOnly": true,
          "type": "string",
          "description": "Description of the connection string"
        },
        "keyKind": {
          "readOnly": true,
          "type": "string",
          "description": "Kind of the connection string key",
          "enum": [
            "Primary",
            "Secondary",
            "PrimaryReadonly",
            "SecondaryReadonly"
          ],
          "x-ms-enum": {
            "name": "Kind",
            "modelAsString": true
          }
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "Type of the connection string",
          "enum": [
            "Sql",
            "Table",
            "MongoDB",
            "Cassandra",
            "CassandraConnectorMetadata",
            "Gremlin",
            "SqlDedicatedGateway",
            "GremlinV2",
            "Undefined"
          ],
          "x-ms-enum": {
            "name": "Type",
            "modelAsString": true
          }
        }
      }
    },
    "DatabaseAccountListConnectionStringsResult": {
      "description": "The connection strings for the given database account.",
      "properties": {
        "connectionStrings": {
          "type": "array",
          "description": "An array that contains the connection strings for the Cosmos DB account.",
          "items": {
            "description": "Connection string for the Cosmos DB account",
            "properties": {
              "connectionString": {
                "readOnly": true,
                "type": "string",
                "description": "Value of the connection string"
              },
              "description": {
                "readOnly": true,
                "type": "string",
                "description": "Description of the connection string"
              },
              "keyKind": {
                "readOnly": true,
                "type": "string",
                "description": "Kind of the connection string key",
                "enum": [
                  "Primary",
                  "Secondary",
                  "PrimaryReadonly",
                  "SecondaryReadonly"
                ],
                "x-ms-enum": {
                  "name": "Kind",
                  "modelAsString": true
                }
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "Type of the connection string",
                "enum": [
                  "Sql",
                  "Table",
                  "MongoDB",
                  "Cassandra",
                  "CassandraConnectorMetadata",
                  "Gremlin",
                  "SqlDedicatedGateway",
                  "GremlinV2",
                  "Undefined"
                ],
                "x-ms-enum": {
                  "name": "Type",
                  "modelAsString": true
                }
              }
            }
          }
        }
      }
    },
    "DatabaseAccountRegenerateKeyParameters": {
      "type": "object",
      "description": "Parameters to regenerate the keys within the database account.",
      "properties": {
        "keyKind": {
          "type": "string",
          "description": "The access key to regenerate.",
          "enum": [
            "primary",
            "secondary",
            "primaryReadonly",
            "secondaryReadonly"
          ],
          "x-ms-enum": {
            "name": "KeyKind",
            "modelAsString": true
          }
        }
      },
      "required": [
        "keyKind"
      ]
    },
    "DatabaseAccountOfferType": {
      "description": "The offer type for the Cosmos DB database account.",
      "type": "string",
      "enum": [
        "Standard"
      ],
      "x-ms-enum": {
        "name": "DatabaseAccountOfferType",
        "modelAsString": false
      }
    },
    "ThroughputSettingsUpdateParameters": {
      "description": "Parameters to update Cosmos DB resource throughput.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to update Azure Cosmos DB resource throughput.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
                },
                "autoscaleSettings": {
                  "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput container can scale up to."
                    },
                    "autoUpgradePolicy": {
                      "description": "Cosmos DB resource auto-upgrade policy",
                      "type": "object",
                      "properties": {
                        "throughputPolicy": {
                          "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                          "type": "object",
                          "properties": {
                            "isEnabled": {
                              "type": "boolean",
                              "description": "Determines whether the ThroughputPolicy is active or not"
                            },
                            "incrementPercent": {
                              "type": "integer",
                              "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                            }
                          }
                        }
                      }
                    },
                    "targetMaxThroughput": {
                      "type": "integer",
                      "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                      "readOnly": true
                    }
                  },
                  "required": [
                    "maxThroughput"
                  ]
                },
                "minimumThroughput": {
                  "type": "string",
                  "description": "The minimum throughput of the resource",
                  "readOnly": true
                },
                "offerReplacePending": {
                  "type": "string",
                  "description": "The throughput replace is pending",
                  "readOnly": true
                },
                "instantMaximumThroughput": {
                  "type": "string",
                  "description": "The offer throughput value to instantly scale up without triggering splits",
                  "readOnly": true
                },
                "softAllowedMaximumThroughput": {
                  "type": "string",
                  "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
                  "readOnly": true
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "ThroughputSettingsUpdateProperties": {
      "description": "Properties to update Azure Cosmos DB resource throughput.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
          "properties": {
            "throughput": {
              "type": "integer",
              "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
            },
            "autoscaleSettings": {
              "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
              "type": "object",
              "properties": {
                "maxThroughput": {
                  "type": "integer",
                  "description": "Represents maximum throughput container can scale up to."
                },
                "autoUpgradePolicy": {
                  "description": "Cosmos DB resource auto-upgrade policy",
                  "type": "object",
                  "properties": {
                    "throughputPolicy": {
                      "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                      "type": "object",
                      "properties": {
                        "isEnabled": {
                          "type": "boolean",
                          "description": "Determines whether the ThroughputPolicy is active or not"
                        },
                        "incrementPercent": {
                          "type": "integer",
                          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                        }
                      }
                    }
                  }
                },
                "targetMaxThroughput": {
                  "type": "integer",
                  "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
                  "readOnly": true
                }
              },
              "required": [
                "maxThroughput"
              ]
            },
            "minimumThroughput": {
              "type": "string",
              "description": "The minimum throughput of the resource",
              "readOnly": true
            },
            "offerReplacePending": {
              "type": "string",
              "description": "The throughput replace is pending",
              "readOnly": true
            },
            "instantMaximumThroughput": {
              "type": "string",
              "description": "The offer throughput value to instantly scale up without triggering splits",
              "readOnly": true
            },
            "softAllowedMaximumThroughput": {
              "type": "string",
              "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
              "readOnly": true
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "SqlDatabaseCreateUpdateParameters": {
      "description": "Parameters to create and update Cosmos DB SQL database.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update Azure Cosmos DB SQL database.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB SQL database resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB SQL database"
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            "options": {
              "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
              "type": "object",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Request Units per second. For example, \"throughput\": 10000."
                },
                "autoscaleSettings": {
                  "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "SqlDatabaseCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB SQL database.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB SQL database resource object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Name of the Cosmos DB SQL database"
            },
            "restoreParameters": {
              "description": "Parameters to indicate the information about the restore",
              "type": "object",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "properties": {
                "restoreSource": {
                  "type": "string",
                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                },
                "restoreTimestampInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                },
                "restoreWithTtlDisabled": {
                  "type": "boolean",
                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                }
              }
            },
            "createMode": {
              "description": "Enum to indicate the mode of resource creation.",
              "type": "string",
              "default": "Default",
              "enum": [
                "Default",
                "Restore"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true
              }
            }
          },
          "required": [
            "id"
          ]
        },
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "type": "object",
          "properties": {
            "throughput": {
              "type": "integer",
              "description": "Request Units per second. For example, \"throughput\": 10000."
            },
            "autoscaleSettings": {
              "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
              "type": "object",
              "properties": {
                "maxThroughput": {
                  "type": "integer",
                  "description": "Represents maximum throughput, the resource can scale up to."
                }
              }
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "SqlContainerCreateUpdateParameters": {
      "description": "Parameters to create and update Cosmos DB container.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update Azure Cosmos DB container.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB SQL container resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB SQL container"
                },
                "indexingPolicy": {
                  "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
                  "type": "object",
                  "properties": {
                    "automatic": {
                      "type": "boolean",
                      "description": "Indicates if the indexing policy is automatic"
                    },
                    "indexingMode": {
                      "description": "Indicates the indexing mode.",
                      "type": "string",
                      "default": "consistent",
                      "enum": [
                        "consistent",
                        "lazy",
                        "none"
                      ],
                      "x-ms-enum": {
                        "name": "IndexingMode",
                        "modelAsString": true
                      }
                    },
                    "includedPaths": {
                      "description": "List of paths to include in the indexing",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The paths that are included in indexing",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                          },
                          "indexes": {
                            "description": "List of indexes for this path",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The indexes for the path.",
                              "properties": {
                                "dataType": {
                                  "description": "The datatype for which the indexing behavior is applied to.",
                                  "type": "string",
                                  "default": "String",
                                  "enum": [
                                    "String",
                                    "Number",
                                    "Point",
                                    "Polygon",
                                    "LineString",
                                    "MultiPolygon"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DataType",
                                    "modelAsString": true
                                  }
                                },
                                "precision": {
                                  "description": "The precision of the index. -1 is maximum precision.",
                                  "type": "integer"
                                },
                                "kind": {
                                  "description": "Indicates the type of index.",
                                  "type": "string",
                                  "default": "Hash",
                                  "enum": [
                                    "Hash",
                                    "Range",
                                    "Spatial"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IndexKind",
                                    "modelAsString": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "excludedPaths": {
                      "description": "List of paths to exclude from indexing",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                          }
                        }
                      }
                    },
                    "compositeIndexes": {
                      "description": "List of composite path list",
                      "type": "array",
                      "items": {
                        "description": "List of composite path",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                            },
                            "order": {
                              "description": "Sort order for composite paths.",
                              "type": "string",
                              "enum": [
                                "ascending",
                                "descending"
                              ],
                              "x-ms-enum": {
                                "name": "CompositePathSortOrder",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "spatialIndexes": {
                      "description": "List of spatial specifics",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                          },
                          "types": {
                            "description": "List of path's spatial type",
                            "type": "array",
                            "items": {
                              "description": "Indicates the spatial type of index.",
                              "type": "string",
                              "enum": [
                                "Point",
                                "LineString",
                                "Polygon",
                                "MultiPolygon"
                              ],
                              "x-ms-enum": {
                                "name": "SpatialType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "vectorIndexes": {
                      "description": "List of paths to include in the vector indexing",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path to the vector field in the document."
                          },
                          "type": {
                            "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                            "type": "string",
                            "enum": [
                              "flat",
                              "diskANN",
                              "quantizedFlat"
                            ],
                            "x-ms-enum": {
                              "name": "VectorIndexType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "path",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "partitionKey": {
                  "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                  "type": "object",
                  "properties": {
                    "paths": {
                      "description": "List of paths using which data within the container can be partitioned",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A path. These typically start with root (/path)"
                      }
                    },
                    "kind": {
                      "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                      "type": "string",
                      "default": "Hash",
                      "enum": [
                        "Hash",
                        "Range",
                        "MultiHash"
                      ],
                      "x-ms-enum": {
                        "name": "PartitionKind",
                        "modelAsString": true
                      }
                    },
                    "version": {
                      "description": "Indicates the version of the partition key definition",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 2,
                      "format": "int32"
                    },
                    "systemKey": {
                      "description": "Indicates if the container is using a system generated partition key",
                      "type": "boolean",
                      "readOnly": true
                    }
                  }
                },
                "defaultTtl": {
                  "type": "integer",
                  "description": "Default time to live"
                },
                "uniqueKeyPolicy": {
                  "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                  "type": "object",
                  "properties": {
                    "uniqueKeys": {
                      "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                        "properties": {
                          "paths": {
                            "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "A path. These typically start with root (/path)"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "conflictResolutionPolicy": {
                  "description": "The conflict resolution policy for the container.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "description": "Indicates the conflict resolution mode.",
                      "type": "string",
                      "default": "LastWriterWins",
                      "enum": [
                        "LastWriterWins",
                        "Custom"
                      ],
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      }
                    },
                    "conflictResolutionPath": {
                      "type": "string",
                      "description": "The conflict resolution path in the case of LastWriterWins mode."
                    },
                    "conflictResolutionProcedure": {
                      "type": "string",
                      "description": "The procedure to resolve conflicts in the case of custom mode."
                    }
                  }
                },
                "clientEncryptionPolicy": {
                  "description": "The client encryption policy for the container.",
                  "type": "object",
                  "properties": {
                    "includedPaths": {
                      "description": "Paths of the item that need encryption along with path-specific settings.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": ".",
                        "properties": {
                          "path": {
                            "description": "Path that needs to be encrypted.",
                            "type": "string"
                          },
                          "clientEncryptionKeyId": {
                            "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                            "type": "string"
                          },
                          "encryptionType": {
                            "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                            "type": "string"
                          },
                          "encryptionAlgorithm": {
                            "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "path",
                          "clientEncryptionKeyId",
                          "encryptionType",
                          "encryptionAlgorithm"
                        ]
                      },
                      "x-ms-identifiers": []
                    },
                    "policyFormatVersion": {
                      "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 2,
                      "format": "int32"
                    }
                  },
                  "required": [
                    "includedPaths",
                    "policyFormatVersion"
                  ]
                },
                "analyticalStorageTtl": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Analytical TTL."
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                },
                "computedProperties": {
                  "description": "List of computed properties",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The definition of a computed property",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The name of a computed property, for example - \"cp_lowerName\""
                      },
                      "query": {
                        "type": "string",
                        "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
                      }
                    }
                  }
                },
                "vectorEmbeddingPolicy": {
                  "description": "The vector embedding policy for the container.",
                  "type": "object",
                  "properties": {
                    "vectorEmbeddings": {
                      "description": "List of vector embeddings",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path to the vector field in the document."
                          },
                          "dataType": {
                            "description": "Indicates the data type of vector.",
                            "type": "string",
                            "enum": [
                              "float32",
                              "uint8",
                              "int8"
                            ],
                            "x-ms-enum": {
                              "name": "VectorDataType",
                              "modelAsString": true
                            }
                          },
                          "distanceFunction": {
                            "description": "The distance function to use for distance calculation in between vectors.",
                            "type": "string",
                            "enum": [
                              "euclidean",
                              "cosine",
                              "dotproduct"
                            ],
                            "x-ms-enum": {
                              "name": "DistanceFunction",
                              "modelAsString": true
                            }
                          },
                          "dimensions": {
                            "type": "integer",
                            "format": "int32",
                            "description": "The number of dimensions in the vector."
                          }
                        },
                        "required": [
                          "path",
                          "dataType",
                          "distanceFunction",
                          "dimensions"
                        ]
                      }
                    }
                  }
                },
                "fullTextPolicy": {
                  "description": "The FullText policy for the container.",
                  "type": "object",
                  "properties": {
                    "defaultLanguage": {
                      "type": "string",
                      "description": "The default language for a full text paths."
                    },
                    "fullTextPaths": {
                      "description": "List of FullText Paths",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Represents the full text path specification.",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path to the full text field in the document."
                          },
                          "language": {
                            "description": "The language of the full text field in the document.",
                            "type": "string"
                          }
                        },
                        "required": [
                          "path"
                        ]
                      }
                    }
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            "options": {
              "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
              "type": "object",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Request Units per second. For example, \"throughput\": 10000."
                },
                "autoscaleSettings": {
                  "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "SqlContainerCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB container.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB SQL container resource object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Name of the Cosmos DB SQL container"
            },
            "indexingPolicy": {
              "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
              "type": "object",
              "properties": {
                "automatic": {
                  "type": "boolean",
                  "description": "Indicates if the indexing policy is automatic"
                },
                "indexingMode": {
                  "description": "Indicates the indexing mode.",
                  "type": "string",
                  "default": "consistent",
                  "enum": [
                    "consistent",
                    "lazy",
                    "none"
                  ],
                  "x-ms-enum": {
                    "name": "IndexingMode",
                    "modelAsString": true
                  }
                },
                "includedPaths": {
                  "description": "List of paths to include in the indexing",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The paths that are included in indexing",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                      },
                      "indexes": {
                        "description": "List of indexes for this path",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "The indexes for the path.",
                          "properties": {
                            "dataType": {
                              "description": "The datatype for which the indexing behavior is applied to.",
                              "type": "string",
                              "default": "String",
                              "enum": [
                                "String",
                                "Number",
                                "Point",
                                "Polygon",
                                "LineString",
                                "MultiPolygon"
                              ],
                              "x-ms-enum": {
                                "name": "DataType",
                                "modelAsString": true
                              }
                            },
                            "precision": {
                              "description": "The precision of the index. -1 is maximum precision.",
                              "type": "integer"
                            },
                            "kind": {
                              "description": "Indicates the type of index.",
                              "type": "string",
                              "default": "Hash",
                              "enum": [
                                "Hash",
                                "Range",
                                "Spatial"
                              ],
                              "x-ms-enum": {
                                "name": "IndexKind",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "excludedPaths": {
                  "description": "List of paths to exclude from indexing",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                      }
                    }
                  }
                },
                "compositeIndexes": {
                  "description": "List of composite path list",
                  "type": "array",
                  "items": {
                    "description": "List of composite path",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                        },
                        "order": {
                          "description": "Sort order for composite paths.",
                          "type": "string",
                          "enum": [
                            "ascending",
                            "descending"
                          ],
                          "x-ms-enum": {
                            "name": "CompositePathSortOrder",
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  }
                },
                "spatialIndexes": {
                  "description": "List of spatial specifics",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                      },
                      "types": {
                        "description": "List of path's spatial type",
                        "type": "array",
                        "items": {
                          "description": "Indicates the spatial type of index.",
                          "type": "string",
                          "enum": [
                            "Point",
                            "LineString",
                            "Polygon",
                            "MultiPolygon"
                          ],
                          "x-ms-enum": {
                            "name": "SpatialType",
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  }
                },
                "vectorIndexes": {
                  "description": "List of paths to include in the vector indexing",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "The path to the vector field in the document."
                      },
                      "type": {
                        "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                        "type": "string",
                        "enum": [
                          "flat",
                          "diskANN",
                          "quantizedFlat"
                        ],
                        "x-ms-enum": {
                          "name": "VectorIndexType",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "path",
                      "type"
                    ]
                  }
                }
              }
            },
            "partitionKey": {
              "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
              "type": "object",
              "properties": {
                "paths": {
                  "description": "List of paths using which data within the container can be partitioned",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "A path. These typically start with root (/path)"
                  }
                },
                "kind": {
                  "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                  "type": "string",
                  "default": "Hash",
                  "enum": [
                    "Hash",
                    "Range",
                    "MultiHash"
                  ],
                  "x-ms-enum": {
                    "name": "PartitionKind",
                    "modelAsString": true
                  }
                },
                "version": {
                  "description": "Indicates the version of the partition key definition",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 2,
                  "format": "int32"
                },
                "systemKey": {
                  "description": "Indicates if the container is using a system generated partition key",
                  "type": "boolean",
                  "readOnly": true
                }
              }
            },
            "defaultTtl": {
              "type": "integer",
              "description": "Default time to live"
            },
            "uniqueKeyPolicy": {
              "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
              "type": "object",
              "properties": {
                "uniqueKeys": {
                  "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                    "properties": {
                      "paths": {
                        "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "A path. These typically start with root (/path)"
                        }
                      }
                    }
                  }
                }
              }
            },
            "conflictResolutionPolicy": {
              "description": "The conflict resolution policy for the container.",
              "type": "object",
              "properties": {
                "mode": {
                  "description": "Indicates the conflict resolution mode.",
                  "type": "string",
                  "default": "LastWriterWins",
                  "enum": [
                    "LastWriterWins",
                    "Custom"
                  ],
                  "x-ms-enum": {
                    "name": "ConflictResolutionMode",
                    "modelAsString": true
                  }
                },
                "conflictResolutionPath": {
                  "type": "string",
                  "description": "The conflict resolution path in the case of LastWriterWins mode."
                },
                "conflictResolutionProcedure": {
                  "type": "string",
                  "description": "The procedure to resolve conflicts in the case of custom mode."
                }
              }
            },
            "clientEncryptionPolicy": {
              "description": "The client encryption policy for the container.",
              "type": "object",
              "properties": {
                "includedPaths": {
                  "description": "Paths of the item that need encryption along with path-specific settings.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": ".",
                    "properties": {
                      "path": {
                        "description": "Path that needs to be encrypted.",
                        "type": "string"
                      },
                      "clientEncryptionKeyId": {
                        "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                        "type": "string"
                      },
                      "encryptionType": {
                        "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                        "type": "string"
                      },
                      "encryptionAlgorithm": {
                        "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "path",
                      "clientEncryptionKeyId",
                      "encryptionType",
                      "encryptionAlgorithm"
                    ]
                  },
                  "x-ms-identifiers": []
                },
                "policyFormatVersion": {
                  "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 2,
                  "format": "int32"
                }
              },
              "required": [
                "includedPaths",
                "policyFormatVersion"
              ]
            },
            "analyticalStorageTtl": {
              "type": "integer",
              "format": "int64",
              "description": "Analytical TTL."
            },
            "restoreParameters": {
              "description": "Parameters to indicate the information about the restore",
              "type": "object",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "properties": {
                "restoreSource": {
                  "type": "string",
                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                },
                "restoreTimestampInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                },
                "restoreWithTtlDisabled": {
                  "type": "boolean",
                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                }
              }
            },
            "createMode": {
              "description": "Enum to indicate the mode of resource creation.",
              "type": "string",
              "default": "Default",
              "enum": [
                "Default",
                "Restore"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true
              }
            },
            "computedProperties": {
              "description": "List of computed properties",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The definition of a computed property",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of a computed property, for example - \"cp_lowerName\""
                  },
                  "query": {
                    "type": "string",
                    "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
                  }
                }
              }
            },
            "vectorEmbeddingPolicy": {
              "description": "The vector embedding policy for the container.",
              "type": "object",
              "properties": {
                "vectorEmbeddings": {
                  "description": "List of vector embeddings",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "The path to the vector field in the document."
                      },
                      "dataType": {
                        "description": "Indicates the data type of vector.",
                        "type": "string",
                        "enum": [
                          "float32",
                          "uint8",
                          "int8"
                        ],
                        "x-ms-enum": {
                          "name": "VectorDataType",
                          "modelAsString": true
                        }
                      },
                      "distanceFunction": {
                        "description": "The distance function to use for distance calculation in between vectors.",
                        "type": "string",
                        "enum": [
                          "euclidean",
                          "cosine",
                          "dotproduct"
                        ],
                        "x-ms-enum": {
                          "name": "DistanceFunction",
                          "modelAsString": true
                        }
                      },
                      "dimensions": {
                        "type": "integer",
                        "format": "int32",
                        "description": "The number of dimensions in the vector."
                      }
                    },
                    "required": [
                      "path",
                      "dataType",
                      "distanceFunction",
                      "dimensions"
                    ]
                  }
                }
              }
            },
            "fullTextPolicy": {
              "description": "The FullText policy for the container.",
              "type": "object",
              "properties": {
                "defaultLanguage": {
                  "type": "string",
                  "description": "The default language for a full text paths."
                },
                "fullTextPaths": {
                  "description": "List of FullText Paths",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Represents the full text path specification.",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "The path to the full text field in the document."
                      },
                      "language": {
                        "description": "The language of the full text field in the document.",
                        "type": "string"
                      }
                    },
                    "required": [
                      "path"
                    ]
                  }
                }
              }
            }
          },
          "required": [
            "id"
          ]
        },
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "type": "object",
          "properties": {
            "throughput": {
              "type": "integer",
              "description": "Request Units per second. For example, \"throughput\": 10000."
            },
            "autoscaleSettings": {
              "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
              "type": "object",
              "properties": {
                "maxThroughput": {
                  "type": "integer",
                  "description": "Represents maximum throughput, the resource can scale up to."
                }
              }
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "SqlStoredProcedureCreateUpdateParameters": {
      "description": "Parameters to create and update Cosmos DB storedProcedure.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update Azure Cosmos DB storedProcedure.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB SQL storedProcedure resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB SQL storedProcedure"
                },
                "body": {
                  "type": "string",
                  "description": "Body of the Stored Procedure"
                }
              },
              "required": [
                "id"
              ]
            },
            "options": {
              "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
              "type": "object",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Request Units per second. For example, \"throughput\": 10000."
                },
                "autoscaleSettings": {
                  "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "SqlStoredProcedureCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB storedProcedure.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB SQL storedProcedure resource object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Name of the Cosmos DB SQL storedProcedure"
            },
            "body": {
              "type": "string",
              "description": "Body of the Stored Procedure"
            }
          },
          "required": [
            "id"
          ]
        },
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "type": "object",
          "properties": {
            "throughput": {
              "type": "integer",
              "description": "Request Units per second. For example, \"throughput\": 10000."
            },
            "autoscaleSettings": {
              "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
              "type": "object",
              "properties": {
                "maxThroughput": {
                  "type": "integer",
                  "description": "Represents maximum throughput, the resource can scale up to."
                }
              }
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "SqlUserDefinedFunctionCreateUpdateParameters": {
      "description": "Parameters to create and update Cosmos DB userDefinedFunction.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update Azure Cosmos DB userDefinedFunction.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB SQL userDefinedFunction resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB SQL userDefinedFunction"
                },
                "body": {
                  "type": "string",
                  "description": "Body of the User Defined Function"
                }
              },
              "required": [
                "id"
              ]
            },
            "options": {
              "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
              "type": "object",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Request Units per second. For example, \"throughput\": 10000."
                },
                "autoscaleSettings": {
                  "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "SqlUserDefinedFunctionCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB userDefinedFunction.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB SQL userDefinedFunction resource object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Name of the Cosmos DB SQL userDefinedFunction"
            },
            "body": {
              "type": "string",
              "description": "Body of the User Defined Function"
            }
          },
          "required": [
            "id"
          ]
        },
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "type": "object",
          "properties": {
            "throughput": {
              "type": "integer",
              "description": "Request Units per second. For example, \"throughput\": 10000."
            },
            "autoscaleSettings": {
              "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
              "type": "object",
              "properties": {
                "maxThroughput": {
                  "type": "integer",
                  "description": "Represents maximum throughput, the resource can scale up to."
                }
              }
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "SqlTriggerCreateUpdateParameters": {
      "description": "Parameters to create and update Cosmos DB trigger.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update Azure Cosmos DB trigger.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB SQL trigger resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB SQL trigger"
                },
                "body": {
                  "type": "string",
                  "description": "Body of the Trigger"
                },
                "triggerType": {
                  "type": "string",
                  "enum": [
                    "Pre",
                    "Post"
                  ],
                  "description": "Type of the Trigger",
                  "x-ms-enum": {
                    "name": "triggerType",
                    "modelAsString": true
                  }
                },
                "triggerOperation": {
                  "type": "string",
                  "enum": [
                    "All",
                    "Create",
                    "Update",
                    "Delete",
                    "Replace"
                  ],
                  "description": "The operation the trigger is associated with",
                  "x-ms-enum": {
                    "name": "triggerOperation",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            "options": {
              "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
              "type": "object",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Request Units per second. For example, \"throughput\": 10000."
                },
                "autoscaleSettings": {
                  "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "SqlTriggerCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB trigger.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB SQL trigger resource object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Name of the Cosmos DB SQL trigger"
            },
            "body": {
              "type": "string",
              "description": "Body of the Trigger"
            },
            "triggerType": {
              "type": "string",
              "enum": [
                "Pre",
                "Post"
              ],
              "description": "Type of the Trigger",
              "x-ms-enum": {
                "name": "triggerType",
                "modelAsString": true
              }
            },
            "triggerOperation": {
              "type": "string",
              "enum": [
                "All",
                "Create",
                "Update",
                "Delete",
                "Replace"
              ],
              "description": "The operation the trigger is associated with",
              "x-ms-enum": {
                "name": "triggerOperation",
                "modelAsString": true
              }
            }
          },
          "required": [
            "id"
          ]
        },
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "type": "object",
          "properties": {
            "throughput": {
              "type": "integer",
              "description": "Request Units per second. For example, \"throughput\": 10000."
            },
            "autoscaleSettings": {
              "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
              "type": "object",
              "properties": {
                "maxThroughput": {
                  "type": "integer",
                  "description": "Represents maximum throughput, the resource can scale up to."
                }
              }
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "MongoDBDatabaseCreateUpdateParameters": {
      "description": "Parameters to create and update Cosmos DB MongoDB database.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update Azure Cosmos DB MongoDB database.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB MongoDB database resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB MongoDB database"
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            "options": {
              "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
              "type": "object",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Request Units per second. For example, \"throughput\": 10000."
                },
                "autoscaleSettings": {
                  "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "MongoDBDatabaseCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB MongoDB database.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB MongoDB database resource object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Name of the Cosmos DB MongoDB database"
            },
            "restoreParameters": {
              "description": "Parameters to indicate the information about the restore",
              "type": "object",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "properties": {
                "restoreSource": {
                  "type": "string",
                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                },
                "restoreTimestampInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                },
                "restoreWithTtlDisabled": {
                  "type": "boolean",
                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                }
              }
            },
            "createMode": {
              "description": "Enum to indicate the mode of resource creation.",
              "type": "string",
              "default": "Default",
              "enum": [
                "Default",
                "Restore"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true
              }
            }
          },
          "required": [
            "id"
          ]
        },
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "type": "object",
          "properties": {
            "throughput": {
              "type": "integer",
              "description": "Request Units per second. For example, \"throughput\": 10000."
            },
            "autoscaleSettings": {
              "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
              "type": "object",
              "properties": {
                "maxThroughput": {
                  "type": "integer",
                  "description": "Represents maximum throughput, the resource can scale up to."
                }
              }
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "MongoDBCollectionCreateUpdateParameters": {
      "description": "Parameters to create and update Cosmos DB MongoDB collection.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update Azure Cosmos DB MongoDB collection.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB MongoDB collection resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB MongoDB collection"
                },
                "shardKey": {
                  "description": "A key-value pair of shard keys to be applied for the request.",
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  }
                },
                "indexes": {
                  "description": "List of index keys",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Cosmos DB MongoDB collection index key",
                    "properties": {
                      "key": {
                        "description": "Cosmos DB MongoDB collection index keys",
                        "type": "object",
                        "properties": {
                          "keys": {
                            "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "A Key."
                            }
                          }
                        }
                      },
                      "options": {
                        "description": "Cosmos DB MongoDB collection index key options",
                        "type": "object",
                        "properties": {
                          "expireAfterSeconds": {
                            "description": "Expire after seconds",
                            "type": "integer"
                          },
                          "unique": {
                            "description": "Is unique or not",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                },
                "analyticalStorageTtl": {
                  "type": "integer",
                  "description": "Analytical TTL."
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            "options": {
              "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
              "type": "object",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Request Units per second. For example, \"throughput\": 10000."
                },
                "autoscaleSettings": {
                  "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "MongoDBCollectionCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB MongoDB collection.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB MongoDB collection resource object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Name of the Cosmos DB MongoDB collection"
            },
            "shardKey": {
              "description": "A key-value pair of shard keys to be applied for the request.",
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "indexes": {
              "description": "List of index keys",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Cosmos DB MongoDB collection index key",
                "properties": {
                  "key": {
                    "description": "Cosmos DB MongoDB collection index keys",
                    "type": "object",
                    "properties": {
                      "keys": {
                        "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "A Key."
                        }
                      }
                    }
                  },
                  "options": {
                    "description": "Cosmos DB MongoDB collection index key options",
                    "type": "object",
                    "properties": {
                      "expireAfterSeconds": {
                        "description": "Expire after seconds",
                        "type": "integer"
                      },
                      "unique": {
                        "description": "Is unique or not",
                        "type": "boolean"
                      }
                    }
                  }
                }
              }
            },
            "analyticalStorageTtl": {
              "type": "integer",
              "description": "Analytical TTL."
            },
            "restoreParameters": {
              "description": "Parameters to indicate the information about the restore",
              "type": "object",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "properties": {
                "restoreSource": {
                  "type": "string",
                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                },
                "restoreTimestampInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                },
                "restoreWithTtlDisabled": {
                  "type": "boolean",
                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                }
              }
            },
            "createMode": {
              "description": "Enum to indicate the mode of resource creation.",
              "type": "string",
              "default": "Default",
              "enum": [
                "Default",
                "Restore"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true
              }
            }
          },
          "required": [
            "id"
          ]
        },
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "type": "object",
          "properties": {
            "throughput": {
              "type": "integer",
              "description": "Request Units per second. For example, \"throughput\": 10000."
            },
            "autoscaleSettings": {
              "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
              "type": "object",
              "properties": {
                "maxThroughput": {
                  "type": "integer",
                  "description": "Represents maximum throughput, the resource can scale up to."
                }
              }
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "TableCreateUpdateParameters": {
      "description": "Parameters to create and update Cosmos DB Table.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update Azure Cosmos DB Table.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB table resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB table"
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            "options": {
              "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
              "type": "object",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Request Units per second. For example, \"throughput\": 10000."
                },
                "autoscaleSettings": {
                  "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "TableCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB Table.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB table resource object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Name of the Cosmos DB table"
            },
            "restoreParameters": {
              "description": "Parameters to indicate the information about the restore",
              "type": "object",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "properties": {
                "restoreSource": {
                  "type": "string",
                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                },
                "restoreTimestampInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                },
                "restoreWithTtlDisabled": {
                  "type": "boolean",
                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                }
              }
            },
            "createMode": {
              "description": "Enum to indicate the mode of resource creation.",
              "type": "string",
              "default": "Default",
              "enum": [
                "Default",
                "Restore"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true
              }
            }
          },
          "required": [
            "id"
          ]
        },
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "type": "object",
          "properties": {
            "throughput": {
              "type": "integer",
              "description": "Request Units per second. For example, \"throughput\": 10000."
            },
            "autoscaleSettings": {
              "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
              "type": "object",
              "properties": {
                "maxThroughput": {
                  "type": "integer",
                  "description": "Represents maximum throughput, the resource can scale up to."
                }
              }
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "CassandraKeyspaceCreateUpdateParameters": {
      "description": "Parameters to create and update Cosmos DB Cassandra keyspace.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update Azure Cosmos DB Cassandra keyspace.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB Cassandra keyspace resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB Cassandra keyspace"
                }
              },
              "required": [
                "id"
              ]
            },
            "options": {
              "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
              "type": "object",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Request Units per second. For example, \"throughput\": 10000."
                },
                "autoscaleSettings": {
                  "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "CassandraKeyspaceCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB Cassandra keyspace.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB Cassandra keyspace resource object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Name of the Cosmos DB Cassandra keyspace"
            }
          },
          "required": [
            "id"
          ]
        },
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "type": "object",
          "properties": {
            "throughput": {
              "type": "integer",
              "description": "Request Units per second. For example, \"throughput\": 10000."
            },
            "autoscaleSettings": {
              "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
              "type": "object",
              "properties": {
                "maxThroughput": {
                  "type": "integer",
                  "description": "Represents maximum throughput, the resource can scale up to."
                }
              }
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "CassandraTableCreateUpdateParameters": {
      "description": "Parameters to create and update Cosmos DB Cassandra table.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update Azure Cosmos DB Cassandra table.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB Cassandra table resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB Cassandra table"
                },
                "defaultTtl": {
                  "type": "integer",
                  "description": "Time to live of the Cosmos DB Cassandra table"
                },
                "schema": {
                  "description": "Schema of the Cosmos DB Cassandra table",
                  "type": "object",
                  "properties": {
                    "columns": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Cosmos DB Cassandra table column",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Cosmos DB Cassandra table column"
                          },
                          "type": {
                            "type": "string",
                            "description": "Type of the Cosmos DB Cassandra table column"
                          }
                        }
                      },
                      "description": "List of Cassandra table columns."
                    },
                    "partitionKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Cosmos DB Cassandra table partition key",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Cosmos DB Cassandra table partition key"
                          }
                        }
                      },
                      "description": "List of partition key."
                    },
                    "clusterKeys": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "Cosmos DB Cassandra table cluster key",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the Cosmos DB Cassandra table cluster key"
                          },
                          "orderBy": {
                            "type": "string",
                            "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
                          }
                        }
                      },
                      "description": "List of cluster key."
                    }
                  }
                },
                "analyticalStorageTtl": {
                  "type": "integer",
                  "description": "Analytical TTL."
                }
              },
              "required": [
                "id"
              ]
            },
            "options": {
              "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
              "type": "object",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Request Units per second. For example, \"throughput\": 10000."
                },
                "autoscaleSettings": {
                  "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "CassandraTableCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB Cassandra table.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB Cassandra table resource object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Name of the Cosmos DB Cassandra table"
            },
            "defaultTtl": {
              "type": "integer",
              "description": "Time to live of the Cosmos DB Cassandra table"
            },
            "schema": {
              "description": "Schema of the Cosmos DB Cassandra table",
              "type": "object",
              "properties": {
                "columns": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Cosmos DB Cassandra table column",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Cosmos DB Cassandra table column"
                      },
                      "type": {
                        "type": "string",
                        "description": "Type of the Cosmos DB Cassandra table column"
                      }
                    }
                  },
                  "description": "List of Cassandra table columns."
                },
                "partitionKeys": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Cosmos DB Cassandra table partition key",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Cosmos DB Cassandra table partition key"
                      }
                    }
                  },
                  "description": "List of partition key."
                },
                "clusterKeys": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "Cosmos DB Cassandra table cluster key",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "Name of the Cosmos DB Cassandra table cluster key"
                      },
                      "orderBy": {
                        "type": "string",
                        "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
                      }
                    }
                  },
                  "description": "List of cluster key."
                }
              }
            },
            "analyticalStorageTtl": {
              "type": "integer",
              "description": "Analytical TTL."
            }
          },
          "required": [
            "id"
          ]
        },
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "type": "object",
          "properties": {
            "throughput": {
              "type": "integer",
              "description": "Request Units per second. For example, \"throughput\": 10000."
            },
            "autoscaleSettings": {
              "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
              "type": "object",
              "properties": {
                "maxThroughput": {
                  "type": "integer",
                  "description": "Represents maximum throughput, the resource can scale up to."
                }
              }
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "GremlinDatabaseCreateUpdateParameters": {
      "description": "Parameters to create and update Cosmos DB Gremlin database.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update Azure Cosmos DB Gremlin database.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB Gremlin database resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB Gremlin database"
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            "options": {
              "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
              "type": "object",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Request Units per second. For example, \"throughput\": 10000."
                },
                "autoscaleSettings": {
                  "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "GremlinDatabaseCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB Gremlin database.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB Gremlin database resource object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Name of the Cosmos DB Gremlin database"
            },
            "restoreParameters": {
              "description": "Parameters to indicate the information about the restore",
              "type": "object",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "properties": {
                "restoreSource": {
                  "type": "string",
                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                },
                "restoreTimestampInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                },
                "restoreWithTtlDisabled": {
                  "type": "boolean",
                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                }
              }
            },
            "createMode": {
              "description": "Enum to indicate the mode of resource creation.",
              "type": "string",
              "default": "Default",
              "enum": [
                "Default",
                "Restore"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true
              }
            }
          },
          "required": [
            "id"
          ]
        },
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "type": "object",
          "properties": {
            "throughput": {
              "type": "integer",
              "description": "Request Units per second. For example, \"throughput\": 10000."
            },
            "autoscaleSettings": {
              "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
              "type": "object",
              "properties": {
                "maxThroughput": {
                  "type": "integer",
                  "description": "Represents maximum throughput, the resource can scale up to."
                }
              }
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "GremlinGraphCreateUpdateParameters": {
      "description": "Parameters to create and update Cosmos DB Gremlin graph.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update Azure Cosmos DB Gremlin graph.",
          "type": "object",
          "properties": {
            "resource": {
              "type": "object",
              "description": "Cosmos DB Gremlin graph resource object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Name of the Cosmos DB Gremlin graph"
                },
                "indexingPolicy": {
                  "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph",
                  "type": "object",
                  "properties": {
                    "automatic": {
                      "type": "boolean",
                      "description": "Indicates if the indexing policy is automatic"
                    },
                    "indexingMode": {
                      "description": "Indicates the indexing mode.",
                      "type": "string",
                      "default": "consistent",
                      "enum": [
                        "consistent",
                        "lazy",
                        "none"
                      ],
                      "x-ms-enum": {
                        "name": "IndexingMode",
                        "modelAsString": true
                      }
                    },
                    "includedPaths": {
                      "description": "List of paths to include in the indexing",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The paths that are included in indexing",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                          },
                          "indexes": {
                            "description": "List of indexes for this path",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "description": "The indexes for the path.",
                              "properties": {
                                "dataType": {
                                  "description": "The datatype for which the indexing behavior is applied to.",
                                  "type": "string",
                                  "default": "String",
                                  "enum": [
                                    "String",
                                    "Number",
                                    "Point",
                                    "Polygon",
                                    "LineString",
                                    "MultiPolygon"
                                  ],
                                  "x-ms-enum": {
                                    "name": "DataType",
                                    "modelAsString": true
                                  }
                                },
                                "precision": {
                                  "description": "The precision of the index. -1 is maximum precision.",
                                  "type": "integer"
                                },
                                "kind": {
                                  "description": "Indicates the type of index.",
                                  "type": "string",
                                  "default": "Hash",
                                  "enum": [
                                    "Hash",
                                    "Range",
                                    "Spatial"
                                  ],
                                  "x-ms-enum": {
                                    "name": "IndexKind",
                                    "modelAsString": true
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "excludedPaths": {
                      "description": "List of paths to exclude from indexing",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                          }
                        }
                      }
                    },
                    "compositeIndexes": {
                      "description": "List of composite path list",
                      "type": "array",
                      "items": {
                        "description": "List of composite path",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "path": {
                              "type": "string",
                              "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                            },
                            "order": {
                              "description": "Sort order for composite paths.",
                              "type": "string",
                              "enum": [
                                "ascending",
                                "descending"
                              ],
                              "x-ms-enum": {
                                "name": "CompositePathSortOrder",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "spatialIndexes": {
                      "description": "List of spatial specifics",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                          },
                          "types": {
                            "description": "List of path's spatial type",
                            "type": "array",
                            "items": {
                              "description": "Indicates the spatial type of index.",
                              "type": "string",
                              "enum": [
                                "Point",
                                "LineString",
                                "Polygon",
                                "MultiPolygon"
                              ],
                              "x-ms-enum": {
                                "name": "SpatialType",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    },
                    "vectorIndexes": {
                      "description": "List of paths to include in the vector indexing",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "path": {
                            "type": "string",
                            "description": "The path to the vector field in the document."
                          },
                          "type": {
                            "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                            "type": "string",
                            "enum": [
                              "flat",
                              "diskANN",
                              "quantizedFlat"
                            ],
                            "x-ms-enum": {
                              "name": "VectorIndexType",
                              "modelAsString": true
                            }
                          }
                        },
                        "required": [
                          "path",
                          "type"
                        ]
                      }
                    }
                  }
                },
                "partitionKey": {
                  "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                  "type": "object",
                  "properties": {
                    "paths": {
                      "description": "List of paths using which data within the container can be partitioned",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "description": "A path. These typically start with root (/path)"
                      }
                    },
                    "kind": {
                      "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                      "type": "string",
                      "default": "Hash",
                      "enum": [
                        "Hash",
                        "Range",
                        "MultiHash"
                      ],
                      "x-ms-enum": {
                        "name": "PartitionKind",
                        "modelAsString": true
                      }
                    },
                    "version": {
                      "description": "Indicates the version of the partition key definition",
                      "type": "integer",
                      "minimum": 1,
                      "maximum": 2,
                      "format": "int32"
                    },
                    "systemKey": {
                      "description": "Indicates if the container is using a system generated partition key",
                      "type": "boolean",
                      "readOnly": true
                    }
                  }
                },
                "defaultTtl": {
                  "type": "integer",
                  "description": "Default time to live"
                },
                "uniqueKeyPolicy": {
                  "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                  "type": "object",
                  "properties": {
                    "uniqueKeys": {
                      "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                        "properties": {
                          "paths": {
                            "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "A path. These typically start with root (/path)"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "conflictResolutionPolicy": {
                  "description": "The conflict resolution policy for the graph.",
                  "type": "object",
                  "properties": {
                    "mode": {
                      "description": "Indicates the conflict resolution mode.",
                      "type": "string",
                      "default": "LastWriterWins",
                      "enum": [
                        "LastWriterWins",
                        "Custom"
                      ],
                      "x-ms-enum": {
                        "name": "ConflictResolutionMode",
                        "modelAsString": true
                      }
                    },
                    "conflictResolutionPath": {
                      "type": "string",
                      "description": "The conflict resolution path in the case of LastWriterWins mode."
                    },
                    "conflictResolutionProcedure": {
                      "type": "string",
                      "description": "The procedure to resolve conflicts in the case of custom mode."
                    }
                  }
                },
                "analyticalStorageTtl": {
                  "type": "integer",
                  "format": "int64",
                  "description": "Analytical TTL."
                },
                "restoreParameters": {
                  "description": "Parameters to indicate the information about the restore",
                  "type": "object",
                  "x-ms-mutability": [
                    "read",
                    "create"
                  ],
                  "properties": {
                    "restoreSource": {
                      "type": "string",
                      "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                    },
                    "restoreTimestampInUtc": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Time to which the account has to be restored (ISO-8601 format)."
                    },
                    "restoreWithTtlDisabled": {
                      "type": "boolean",
                      "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                    }
                  }
                },
                "createMode": {
                  "description": "Enum to indicate the mode of resource creation.",
                  "type": "string",
                  "default": "Default",
                  "enum": [
                    "Default",
                    "Restore"
                  ],
                  "x-ms-enum": {
                    "name": "CreateMode",
                    "modelAsString": true
                  }
                }
              },
              "required": [
                "id"
              ]
            },
            "options": {
              "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
              "type": "object",
              "properties": {
                "throughput": {
                  "type": "integer",
                  "description": "Request Units per second. For example, \"throughput\": 10000."
                },
                "autoscaleSettings": {
                  "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
                  "type": "object",
                  "properties": {
                    "maxThroughput": {
                      "type": "integer",
                      "description": "Represents maximum throughput, the resource can scale up to."
                    }
                  }
                }
              }
            }
          },
          "required": [
            "resource"
          ]
        }
      },
      "required": [
        "properties"
      ]
    },
    "GremlinGraphCreateUpdateProperties": {
      "description": "Properties to create and update Azure Cosmos DB Gremlin graph.",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "Cosmos DB Gremlin graph resource object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Name of the Cosmos DB Gremlin graph"
            },
            "indexingPolicy": {
              "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph",
              "type": "object",
              "properties": {
                "automatic": {
                  "type": "boolean",
                  "description": "Indicates if the indexing policy is automatic"
                },
                "indexingMode": {
                  "description": "Indicates the indexing mode.",
                  "type": "string",
                  "default": "consistent",
                  "enum": [
                    "consistent",
                    "lazy",
                    "none"
                  ],
                  "x-ms-enum": {
                    "name": "IndexingMode",
                    "modelAsString": true
                  }
                },
                "includedPaths": {
                  "description": "List of paths to include in the indexing",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The paths that are included in indexing",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                      },
                      "indexes": {
                        "description": "List of indexes for this path",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "description": "The indexes for the path.",
                          "properties": {
                            "dataType": {
                              "description": "The datatype for which the indexing behavior is applied to.",
                              "type": "string",
                              "default": "String",
                              "enum": [
                                "String",
                                "Number",
                                "Point",
                                "Polygon",
                                "LineString",
                                "MultiPolygon"
                              ],
                              "x-ms-enum": {
                                "name": "DataType",
                                "modelAsString": true
                              }
                            },
                            "precision": {
                              "description": "The precision of the index. -1 is maximum precision.",
                              "type": "integer"
                            },
                            "kind": {
                              "description": "Indicates the type of index.",
                              "type": "string",
                              "default": "Hash",
                              "enum": [
                                "Hash",
                                "Range",
                                "Spatial"
                              ],
                              "x-ms-enum": {
                                "name": "IndexKind",
                                "modelAsString": true
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "excludedPaths": {
                  "description": "List of paths to exclude from indexing",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                      }
                    }
                  }
                },
                "compositeIndexes": {
                  "description": "List of composite path list",
                  "type": "array",
                  "items": {
                    "description": "List of composite path",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "path": {
                          "type": "string",
                          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                        },
                        "order": {
                          "description": "Sort order for composite paths.",
                          "type": "string",
                          "enum": [
                            "ascending",
                            "descending"
                          ],
                          "x-ms-enum": {
                            "name": "CompositePathSortOrder",
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  }
                },
                "spatialIndexes": {
                  "description": "List of spatial specifics",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                      },
                      "types": {
                        "description": "List of path's spatial type",
                        "type": "array",
                        "items": {
                          "description": "Indicates the spatial type of index.",
                          "type": "string",
                          "enum": [
                            "Point",
                            "LineString",
                            "Polygon",
                            "MultiPolygon"
                          ],
                          "x-ms-enum": {
                            "name": "SpatialType",
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  }
                },
                "vectorIndexes": {
                  "description": "List of paths to include in the vector indexing",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "path": {
                        "type": "string",
                        "description": "The path to the vector field in the document."
                      },
                      "type": {
                        "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                        "type": "string",
                        "enum": [
                          "flat",
                          "diskANN",
                          "quantizedFlat"
                        ],
                        "x-ms-enum": {
                          "name": "VectorIndexType",
                          "modelAsString": true
                        }
                      }
                    },
                    "required": [
                      "path",
                      "type"
                    ]
                  }
                }
              }
            },
            "partitionKey": {
              "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
              "type": "object",
              "properties": {
                "paths": {
                  "description": "List of paths using which data within the container can be partitioned",
                  "type": "array",
                  "items": {
                    "type": "string",
                    "description": "A path. These typically start with root (/path)"
                  }
                },
                "kind": {
                  "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                  "type": "string",
                  "default": "Hash",
                  "enum": [
                    "Hash",
                    "Range",
                    "MultiHash"
                  ],
                  "x-ms-enum": {
                    "name": "PartitionKind",
                    "modelAsString": true
                  }
                },
                "version": {
                  "description": "Indicates the version of the partition key definition",
                  "type": "integer",
                  "minimum": 1,
                  "maximum": 2,
                  "format": "int32"
                },
                "systemKey": {
                  "description": "Indicates if the container is using a system generated partition key",
                  "type": "boolean",
                  "readOnly": true
                }
              }
            },
            "defaultTtl": {
              "type": "integer",
              "description": "Default time to live"
            },
            "uniqueKeyPolicy": {
              "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
              "type": "object",
              "properties": {
                "uniqueKeys": {
                  "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                  "type": "array",
                  "items": {
                    "type": "object",
                    "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                    "properties": {
                      "paths": {
                        "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                        "type": "array",
                        "items": {
                          "type": "string",
                          "description": "A path. These typically start with root (/path)"
                        }
                      }
                    }
                  }
                }
              }
            },
            "conflictResolutionPolicy": {
              "description": "The conflict resolution policy for the graph.",
              "type": "object",
              "properties": {
                "mode": {
                  "description": "Indicates the conflict resolution mode.",
                  "type": "string",
                  "default": "LastWriterWins",
                  "enum": [
                    "LastWriterWins",
                    "Custom"
                  ],
                  "x-ms-enum": {
                    "name": "ConflictResolutionMode",
                    "modelAsString": true
                  }
                },
                "conflictResolutionPath": {
                  "type": "string",
                  "description": "The conflict resolution path in the case of LastWriterWins mode."
                },
                "conflictResolutionProcedure": {
                  "type": "string",
                  "description": "The procedure to resolve conflicts in the case of custom mode."
                }
              }
            },
            "analyticalStorageTtl": {
              "type": "integer",
              "format": "int64",
              "description": "Analytical TTL."
            },
            "restoreParameters": {
              "description": "Parameters to indicate the information about the restore",
              "type": "object",
              "x-ms-mutability": [
                "read",
                "create"
              ],
              "properties": {
                "restoreSource": {
                  "type": "string",
                  "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                },
                "restoreTimestampInUtc": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time to which the account has to be restored (ISO-8601 format)."
                },
                "restoreWithTtlDisabled": {
                  "type": "boolean",
                  "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                }
              }
            },
            "createMode": {
              "description": "Enum to indicate the mode of resource creation.",
              "type": "string",
              "default": "Default",
              "enum": [
                "Default",
                "Restore"
              ],
              "x-ms-enum": {
                "name": "CreateMode",
                "modelAsString": true
              }
            }
          },
          "required": [
            "id"
          ]
        },
        "options": {
          "description": "A key-value pair of options to be applied for the request. This corresponds to the headers sent with the request.",
          "type": "object",
          "properties": {
            "throughput": {
              "type": "integer",
              "description": "Request Units per second. For example, \"throughput\": 10000."
            },
            "autoscaleSettings": {
              "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
              "type": "object",
              "properties": {
                "maxThroughput": {
                  "type": "integer",
                  "description": "Represents maximum throughput, the resource can scale up to."
                }
              }
            }
          }
        }
      },
      "required": [
        "resource"
      ]
    },
    "ThroughputSettingsResource": {
      "type": "object",
      "description": "Cosmos DB resource throughput object. Either throughput is required or autoscaleSettings is required, but not both.",
      "properties": {
        "throughput": {
          "type": "integer",
          "description": "Value of the Cosmos DB resource throughput. Either throughput is required or autoscaleSettings is required, but not both."
        },
        "autoscaleSettings": {
          "description": "Cosmos DB resource for autoscale settings. Either throughput is required or autoscaleSettings is required, but not both.",
          "type": "object",
          "properties": {
            "maxThroughput": {
              "type": "integer",
              "description": "Represents maximum throughput container can scale up to."
            },
            "autoUpgradePolicy": {
              "description": "Cosmos DB resource auto-upgrade policy",
              "type": "object",
              "properties": {
                "throughputPolicy": {
                  "description": "Represents throughput policy which service must adhere to for auto-upgrade",
                  "type": "object",
                  "properties": {
                    "isEnabled": {
                      "type": "boolean",
                      "description": "Determines whether the ThroughputPolicy is active or not"
                    },
                    "incrementPercent": {
                      "type": "integer",
                      "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                    }
                  }
                }
              }
            },
            "targetMaxThroughput": {
              "type": "integer",
              "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
              "readOnly": true
            }
          },
          "required": [
            "maxThroughput"
          ]
        },
        "minimumThroughput": {
          "type": "string",
          "description": "The minimum throughput of the resource",
          "readOnly": true
        },
        "offerReplacePending": {
          "type": "string",
          "description": "The throughput replace is pending",
          "readOnly": true
        },
        "instantMaximumThroughput": {
          "type": "string",
          "description": "The offer throughput value to instantly scale up without triggering splits",
          "readOnly": true
        },
        "softAllowedMaximumThroughput": {
          "type": "string",
          "description": "The maximum throughput value or the maximum maxThroughput value (for autoscale) that can be specified",
          "readOnly": true
        }
      }
    },
    "AutoscaleSettingsResource": {
      "type": "object",
      "description": "Cosmos DB provisioned throughput settings object",
      "properties": {
        "maxThroughput": {
          "type": "integer",
          "description": "Represents maximum throughput container can scale up to."
        },
        "autoUpgradePolicy": {
          "description": "Cosmos DB resource auto-upgrade policy",
          "type": "object",
          "properties": {
            "throughputPolicy": {
              "description": "Represents throughput policy which service must adhere to for auto-upgrade",
              "type": "object",
              "properties": {
                "isEnabled": {
                  "type": "boolean",
                  "description": "Determines whether the ThroughputPolicy is active or not"
                },
                "incrementPercent": {
                  "type": "integer",
                  "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
                }
              }
            }
          }
        },
        "targetMaxThroughput": {
          "type": "integer",
          "description": "Represents target maximum throughput container can scale up to once offer is no longer in pending state.",
          "readOnly": true
        }
      },
      "required": [
        "maxThroughput"
      ]
    },
    "AutoUpgradePolicyResource": {
      "type": "object",
      "description": "Cosmos DB resource auto-upgrade policy",
      "properties": {
        "throughputPolicy": {
          "description": "Represents throughput policy which service must adhere to for auto-upgrade",
          "type": "object",
          "properties": {
            "isEnabled": {
              "type": "boolean",
              "description": "Determines whether the ThroughputPolicy is active or not"
            },
            "incrementPercent": {
              "type": "integer",
              "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
            }
          }
        }
      }
    },
    "ThroughputPolicyResource": {
      "type": "object",
      "description": "Cosmos DB resource throughput policy",
      "properties": {
        "isEnabled": {
          "type": "boolean",
          "description": "Determines whether the ThroughputPolicy is active or not"
        },
        "incrementPercent": {
          "type": "integer",
          "description": "Represents the percentage by which throughput can increase every time throughput policy kicks in."
        }
      }
    },
    "OptionsResource": {
      "type": "object",
      "description": "Cosmos DB options resource object",
      "readOnly": true,
      "properties": {
        "throughput": {
          "type": "integer",
          "description": "Value of the Cosmos DB resource throughput or autoscaleSettings. Use the ThroughputSetting resource when retrieving offer details."
        },
        "autoscaleSettings": {
          "type": "object",
          "description": "Specifies the Autoscale settings.",
          "properties": {
            "maxThroughput": {
              "type": "integer",
              "description": "Represents maximum throughput, the resource can scale up to."
            }
          }
        }
      }
    },
    "ClientEncryptionKeyResource": {
      "type": "object",
      "description": "Cosmos DB client encryption key resource object.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the ClientEncryptionKey"
        },
        "encryptionAlgorithm": {
          "type": "string",
          "description": "Encryption algorithm that will be used along with this client encryption key to encrypt/decrypt data."
        },
        "wrappedDataEncryptionKey": {
          "type": "string",
          "format": "byte",
          "description": "Wrapped (encrypted) form of the key represented as a byte array."
        },
        "keyWrapMetadata": {
          "description": "Metadata for the wrapping provider that can be used to unwrap the wrapped client encryption key.",
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey)."
            },
            "type": {
              "type": "string",
              "description": "ProviderName of KeyStoreProvider."
            },
            "value": {
              "type": "string",
              "description": "Reference / link to the KeyEncryptionKey."
            },
            "algorithm": {
              "type": "string",
              "description": "Algorithm used in wrapping and unwrapping of the data encryption key."
            }
          }
        }
      }
    },
    "KeyWrapMetadata": {
      "type": "object",
      "description": "Represents key wrap metadata that a key wrapping provider can use to wrap/unwrap a client encryption key.",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of associated KeyEncryptionKey (aka CustomerManagedKey)."
        },
        "type": {
          "type": "string",
          "description": "ProviderName of KeyStoreProvider."
        },
        "value": {
          "type": "string",
          "description": "Reference / link to the KeyEncryptionKey."
        },
        "algorithm": {
          "type": "string",
          "description": "Algorithm used in wrapping and unwrapping of the data encryption key."
        }
      }
    },
    "SqlDatabaseResource": {
      "type": "object",
      "description": "Cosmos DB SQL database resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL database"
        },
        "restoreParameters": {
          "description": "Parameters to indicate the information about the restore",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "restoreSource": {
              "type": "string",
              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
            },
            "restoreTimestampInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Time to which the account has to be restored (ISO-8601 format)."
            },
            "restoreWithTtlDisabled": {
              "type": "boolean",
              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
            }
          }
        },
        "createMode": {
          "description": "Enum to indicate the mode of resource creation.",
          "type": "string",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "SqlContainerResource": {
      "type": "object",
      "description": "Cosmos DB SQL container resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL container"
        },
        "indexingPolicy": {
          "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
          "type": "object",
          "properties": {
            "automatic": {
              "type": "boolean",
              "description": "Indicates if the indexing policy is automatic"
            },
            "indexingMode": {
              "description": "Indicates the indexing mode.",
              "type": "string",
              "default": "consistent",
              "enum": [
                "consistent",
                "lazy",
                "none"
              ],
              "x-ms-enum": {
                "name": "IndexingMode",
                "modelAsString": true
              }
            },
            "includedPaths": {
              "description": "List of paths to include in the indexing",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The paths that are included in indexing",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                  },
                  "indexes": {
                    "description": "List of indexes for this path",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "The indexes for the path.",
                      "properties": {
                        "dataType": {
                          "description": "The datatype for which the indexing behavior is applied to.",
                          "type": "string",
                          "default": "String",
                          "enum": [
                            "String",
                            "Number",
                            "Point",
                            "Polygon",
                            "LineString",
                            "MultiPolygon"
                          ],
                          "x-ms-enum": {
                            "name": "DataType",
                            "modelAsString": true
                          }
                        },
                        "precision": {
                          "description": "The precision of the index. -1 is maximum precision.",
                          "type": "integer"
                        },
                        "kind": {
                          "description": "Indicates the type of index.",
                          "type": "string",
                          "default": "Hash",
                          "enum": [
                            "Hash",
                            "Range",
                            "Spatial"
                          ],
                          "x-ms-enum": {
                            "name": "IndexKind",
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "excludedPaths": {
              "description": "List of paths to exclude from indexing",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                  }
                }
              }
            },
            "compositeIndexes": {
              "description": "List of composite path list",
              "type": "array",
              "items": {
                "description": "List of composite path",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                    },
                    "order": {
                      "description": "Sort order for composite paths.",
                      "type": "string",
                      "enum": [
                        "ascending",
                        "descending"
                      ],
                      "x-ms-enum": {
                        "name": "CompositePathSortOrder",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            },
            "spatialIndexes": {
              "description": "List of spatial specifics",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                  },
                  "types": {
                    "description": "List of path's spatial type",
                    "type": "array",
                    "items": {
                      "description": "Indicates the spatial type of index.",
                      "type": "string",
                      "enum": [
                        "Point",
                        "LineString",
                        "Polygon",
                        "MultiPolygon"
                      ],
                      "x-ms-enum": {
                        "name": "SpatialType",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            },
            "vectorIndexes": {
              "description": "List of paths to include in the vector indexing",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The path to the vector field in the document."
                  },
                  "type": {
                    "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                    "type": "string",
                    "enum": [
                      "flat",
                      "diskANN",
                      "quantizedFlat"
                    ],
                    "x-ms-enum": {
                      "name": "VectorIndexType",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "path",
                  "type"
                ]
              }
            }
          }
        },
        "partitionKey": {
          "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
          "type": "object",
          "properties": {
            "paths": {
              "description": "List of paths using which data within the container can be partitioned",
              "type": "array",
              "items": {
                "type": "string",
                "description": "A path. These typically start with root (/path)"
              }
            },
            "kind": {
              "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
              "type": "string",
              "default": "Hash",
              "enum": [
                "Hash",
                "Range",
                "MultiHash"
              ],
              "x-ms-enum": {
                "name": "PartitionKind",
                "modelAsString": true
              }
            },
            "version": {
              "description": "Indicates the version of the partition key definition",
              "type": "integer",
              "minimum": 1,
              "maximum": 2,
              "format": "int32"
            },
            "systemKey": {
              "description": "Indicates if the container is using a system generated partition key",
              "type": "boolean",
              "readOnly": true
            }
          }
        },
        "defaultTtl": {
          "type": "integer",
          "description": "Default time to live"
        },
        "uniqueKeyPolicy": {
          "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
          "type": "object",
          "properties": {
            "uniqueKeys": {
              "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                "properties": {
                  "paths": {
                    "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A path. These typically start with root (/path)"
                    }
                  }
                }
              }
            }
          }
        },
        "conflictResolutionPolicy": {
          "description": "The conflict resolution policy for the container.",
          "type": "object",
          "properties": {
            "mode": {
              "description": "Indicates the conflict resolution mode.",
              "type": "string",
              "default": "LastWriterWins",
              "enum": [
                "LastWriterWins",
                "Custom"
              ],
              "x-ms-enum": {
                "name": "ConflictResolutionMode",
                "modelAsString": true
              }
            },
            "conflictResolutionPath": {
              "type": "string",
              "description": "The conflict resolution path in the case of LastWriterWins mode."
            },
            "conflictResolutionProcedure": {
              "type": "string",
              "description": "The procedure to resolve conflicts in the case of custom mode."
            }
          }
        },
        "clientEncryptionPolicy": {
          "description": "The client encryption policy for the container.",
          "type": "object",
          "properties": {
            "includedPaths": {
              "description": "Paths of the item that need encryption along with path-specific settings.",
              "type": "array",
              "items": {
                "type": "object",
                "description": ".",
                "properties": {
                  "path": {
                    "description": "Path that needs to be encrypted.",
                    "type": "string"
                  },
                  "clientEncryptionKeyId": {
                    "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                    "type": "string"
                  },
                  "encryptionType": {
                    "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                    "type": "string"
                  },
                  "encryptionAlgorithm": {
                    "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                    "type": "string"
                  }
                },
                "required": [
                  "path",
                  "clientEncryptionKeyId",
                  "encryptionType",
                  "encryptionAlgorithm"
                ]
              },
              "x-ms-identifiers": []
            },
            "policyFormatVersion": {
              "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
              "type": "integer",
              "minimum": 1,
              "maximum": 2,
              "format": "int32"
            }
          },
          "required": [
            "includedPaths",
            "policyFormatVersion"
          ]
        },
        "analyticalStorageTtl": {
          "type": "integer",
          "format": "int64",
          "description": "Analytical TTL."
        },
        "restoreParameters": {
          "description": "Parameters to indicate the information about the restore",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "restoreSource": {
              "type": "string",
              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
            },
            "restoreTimestampInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Time to which the account has to be restored (ISO-8601 format)."
            },
            "restoreWithTtlDisabled": {
              "type": "boolean",
              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
            }
          }
        },
        "createMode": {
          "description": "Enum to indicate the mode of resource creation.",
          "type": "string",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          }
        },
        "computedProperties": {
          "description": "List of computed properties",
          "type": "array",
          "items": {
            "type": "object",
            "description": "The definition of a computed property",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of a computed property, for example - \"cp_lowerName\""
              },
              "query": {
                "type": "string",
                "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
              }
            }
          }
        },
        "vectorEmbeddingPolicy": {
          "description": "The vector embedding policy for the container.",
          "type": "object",
          "properties": {
            "vectorEmbeddings": {
              "description": "List of vector embeddings",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The path to the vector field in the document."
                  },
                  "dataType": {
                    "description": "Indicates the data type of vector.",
                    "type": "string",
                    "enum": [
                      "float32",
                      "uint8",
                      "int8"
                    ],
                    "x-ms-enum": {
                      "name": "VectorDataType",
                      "modelAsString": true
                    }
                  },
                  "distanceFunction": {
                    "description": "The distance function to use for distance calculation in between vectors.",
                    "type": "string",
                    "enum": [
                      "euclidean",
                      "cosine",
                      "dotproduct"
                    ],
                    "x-ms-enum": {
                      "name": "DistanceFunction",
                      "modelAsString": true
                    }
                  },
                  "dimensions": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of dimensions in the vector."
                  }
                },
                "required": [
                  "path",
                  "dataType",
                  "distanceFunction",
                  "dimensions"
                ]
              }
            }
          }
        },
        "fullTextPolicy": {
          "description": "The FullText policy for the container.",
          "type": "object",
          "properties": {
            "defaultLanguage": {
              "type": "string",
              "description": "The default language for a full text paths."
            },
            "fullTextPaths": {
              "description": "List of FullText Paths",
              "type": "array",
              "items": {
                "type": "object",
                "description": "Represents the full text path specification.",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The path to the full text field in the document."
                  },
                  "language": {
                    "description": "The language of the full text field in the document.",
                    "type": "string"
                  }
                },
                "required": [
                  "path"
                ]
              }
            }
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "IndexingPolicy": {
      "type": "object",
      "description": "Cosmos DB indexing policy",
      "properties": {
        "automatic": {
          "type": "boolean",
          "description": "Indicates if the indexing policy is automatic"
        },
        "indexingMode": {
          "description": "Indicates the indexing mode.",
          "type": "string",
          "default": "consistent",
          "enum": [
            "consistent",
            "lazy",
            "none"
          ],
          "x-ms-enum": {
            "name": "IndexingMode",
            "modelAsString": true
          }
        },
        "includedPaths": {
          "description": "List of paths to include in the indexing",
          "type": "array",
          "items": {
            "type": "object",
            "description": "The paths that are included in indexing",
            "properties": {
              "path": {
                "type": "string",
                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
              },
              "indexes": {
                "description": "List of indexes for this path",
                "type": "array",
                "items": {
                  "type": "object",
                  "description": "The indexes for the path.",
                  "properties": {
                    "dataType": {
                      "description": "The datatype for which the indexing behavior is applied to.",
                      "type": "string",
                      "default": "String",
                      "enum": [
                        "String",
                        "Number",
                        "Point",
                        "Polygon",
                        "LineString",
                        "MultiPolygon"
                      ],
                      "x-ms-enum": {
                        "name": "DataType",
                        "modelAsString": true
                      }
                    },
                    "precision": {
                      "description": "The precision of the index. -1 is maximum precision.",
                      "type": "integer"
                    },
                    "kind": {
                      "description": "Indicates the type of index.",
                      "type": "string",
                      "default": "Hash",
                      "enum": [
                        "Hash",
                        "Range",
                        "Spatial"
                      ],
                      "x-ms-enum": {
                        "name": "IndexKind",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "excludedPaths": {
          "description": "List of paths to exclude from indexing",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
              }
            }
          }
        },
        "compositeIndexes": {
          "description": "List of composite path list",
          "type": "array",
          "items": {
            "description": "List of composite path",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "path": {
                  "type": "string",
                  "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                },
                "order": {
                  "description": "Sort order for composite paths.",
                  "type": "string",
                  "enum": [
                    "ascending",
                    "descending"
                  ],
                  "x-ms-enum": {
                    "name": "CompositePathSortOrder",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        },
        "spatialIndexes": {
          "description": "List of spatial specifics",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
              },
              "types": {
                "description": "List of path's spatial type",
                "type": "array",
                "items": {
                  "description": "Indicates the spatial type of index.",
                  "type": "string",
                  "enum": [
                    "Point",
                    "LineString",
                    "Polygon",
                    "MultiPolygon"
                  ],
                  "x-ms-enum": {
                    "name": "SpatialType",
                    "modelAsString": true
                  }
                }
              }
            }
          }
        },
        "vectorIndexes": {
          "description": "List of paths to include in the vector indexing",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string",
                "description": "The path to the vector field in the document."
              },
              "type": {
                "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                "type": "string",
                "enum": [
                  "flat",
                  "diskANN",
                  "quantizedFlat"
                ],
                "x-ms-enum": {
                  "name": "VectorIndexType",
                  "modelAsString": true
                }
              }
            },
            "required": [
              "path",
              "type"
            ]
          }
        }
      }
    },
    "VectorEmbeddingPolicy": {
      "type": "object",
      "description": "Cosmos DB Vector Embedding Policy",
      "properties": {
        "vectorEmbeddings": {
          "description": "List of vector embeddings",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
            "properties": {
              "path": {
                "type": "string",
                "description": "The path to the vector field in the document."
              },
              "dataType": {
                "description": "Indicates the data type of vector.",
                "type": "string",
                "enum": [
                  "float32",
                  "uint8",
                  "int8"
                ],
                "x-ms-enum": {
                  "name": "VectorDataType",
                  "modelAsString": true
                }
              },
              "distanceFunction": {
                "description": "The distance function to use for distance calculation in between vectors.",
                "type": "string",
                "enum": [
                  "euclidean",
                  "cosine",
                  "dotproduct"
                ],
                "x-ms-enum": {
                  "name": "DistanceFunction",
                  "modelAsString": true
                }
              },
              "dimensions": {
                "type": "integer",
                "format": "int32",
                "description": "The number of dimensions in the vector."
              }
            },
            "required": [
              "path",
              "dataType",
              "distanceFunction",
              "dimensions"
            ]
          }
        }
      }
    },
    "FullTextPolicy": {
      "type": "object",
      "description": "Cosmos DB FullText Policy",
      "properties": {
        "defaultLanguage": {
          "type": "string",
          "description": "The default language for a full text paths."
        },
        "fullTextPaths": {
          "description": "List of FullText Paths",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Represents the full text path specification.",
            "properties": {
              "path": {
                "type": "string",
                "description": "The path to the full text field in the document."
              },
              "language": {
                "description": "The language of the full text field in the document.",
                "type": "string"
              }
            },
            "required": [
              "path"
            ]
          }
        }
      }
    },
    "ExcludedPath": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
        }
      }
    },
    "IncludedPath": {
      "type": "object",
      "description": "The paths that are included in indexing",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
        },
        "indexes": {
          "description": "List of indexes for this path",
          "type": "array",
          "items": {
            "type": "object",
            "description": "The indexes for the path.",
            "properties": {
              "dataType": {
                "description": "The datatype for which the indexing behavior is applied to.",
                "type": "string",
                "default": "String",
                "enum": [
                  "String",
                  "Number",
                  "Point",
                  "Polygon",
                  "LineString",
                  "MultiPolygon"
                ],
                "x-ms-enum": {
                  "name": "DataType",
                  "modelAsString": true
                }
              },
              "precision": {
                "description": "The precision of the index. -1 is maximum precision.",
                "type": "integer"
              },
              "kind": {
                "description": "Indicates the type of index.",
                "type": "string",
                "default": "Hash",
                "enum": [
                  "Hash",
                  "Range",
                  "Spatial"
                ],
                "x-ms-enum": {
                  "name": "IndexKind",
                  "modelAsString": true
                }
              }
            }
          }
        }
      }
    },
    "Indexes": {
      "type": "object",
      "description": "The indexes for the path.",
      "properties": {
        "dataType": {
          "description": "The datatype for which the indexing behavior is applied to.",
          "type": "string",
          "default": "String",
          "enum": [
            "String",
            "Number",
            "Point",
            "Polygon",
            "LineString",
            "MultiPolygon"
          ],
          "x-ms-enum": {
            "name": "DataType",
            "modelAsString": true
          }
        },
        "precision": {
          "description": "The precision of the index. -1 is maximum precision.",
          "type": "integer"
        },
        "kind": {
          "description": "Indicates the type of index.",
          "type": "string",
          "default": "Hash",
          "enum": [
            "Hash",
            "Range",
            "Spatial"
          ],
          "x-ms-enum": {
            "name": "IndexKind",
            "modelAsString": true
          }
        }
      }
    },
    "VectorIndex": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path to the vector field in the document."
        },
        "type": {
          "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
          "type": "string",
          "enum": [
            "flat",
            "diskANN",
            "quantizedFlat"
          ],
          "x-ms-enum": {
            "name": "VectorIndexType",
            "modelAsString": true
          }
        }
      },
      "required": [
        "path",
        "type"
      ]
    },
    "VectorEmbedding": {
      "type": "object",
      "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path to the vector field in the document."
        },
        "dataType": {
          "description": "Indicates the data type of vector.",
          "type": "string",
          "enum": [
            "float32",
            "uint8",
            "int8"
          ],
          "x-ms-enum": {
            "name": "VectorDataType",
            "modelAsString": true
          }
        },
        "distanceFunction": {
          "description": "The distance function to use for distance calculation in between vectors.",
          "type": "string",
          "enum": [
            "euclidean",
            "cosine",
            "dotproduct"
          ],
          "x-ms-enum": {
            "name": "DistanceFunction",
            "modelAsString": true
          }
        },
        "dimensions": {
          "type": "integer",
          "format": "int32",
          "description": "The number of dimensions in the vector."
        }
      },
      "required": [
        "path",
        "dataType",
        "distanceFunction",
        "dimensions"
      ]
    },
    "FullTextPath": {
      "type": "object",
      "description": "Represents the full text path specification.",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path to the full text field in the document."
        },
        "language": {
          "description": "The language of the full text field in the document.",
          "type": "string"
        }
      },
      "required": [
        "path"
      ]
    },
    "CompositePathList": {
      "description": "List of composite path",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
          },
          "order": {
            "description": "Sort order for composite paths.",
            "type": "string",
            "enum": [
              "ascending",
              "descending"
            ],
            "x-ms-enum": {
              "name": "CompositePathSortOrder",
              "modelAsString": true
            }
          }
        }
      }
    },
    "CompositePath": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
        },
        "order": {
          "description": "Sort order for composite paths.",
          "type": "string",
          "enum": [
            "ascending",
            "descending"
          ],
          "x-ms-enum": {
            "name": "CompositePathSortOrder",
            "modelAsString": true
          }
        }
      }
    },
    "SpatialSpec": {
      "type": "object",
      "properties": {
        "path": {
          "type": "string",
          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
        },
        "types": {
          "description": "List of path's spatial type",
          "type": "array",
          "items": {
            "description": "Indicates the spatial type of index.",
            "type": "string",
            "enum": [
              "Point",
              "LineString",
              "Polygon",
              "MultiPolygon"
            ],
            "x-ms-enum": {
              "name": "SpatialType",
              "modelAsString": true
            }
          }
        }
      }
    },
    "SpatialType": {
      "description": "Indicates the spatial type of index.",
      "type": "string",
      "enum": [
        "Point",
        "LineString",
        "Polygon",
        "MultiPolygon"
      ],
      "x-ms-enum": {
        "name": "SpatialType",
        "modelAsString": true
      }
    },
    "ComputedProperty": {
      "type": "object",
      "description": "The definition of a computed property",
      "properties": {
        "name": {
          "type": "string",
          "description": "The name of a computed property, for example - \"cp_lowerName\""
        },
        "query": {
          "type": "string",
          "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
        }
      }
    },
    "ContainerPartitionKey": {
      "type": "object",
      "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
      "properties": {
        "paths": {
          "description": "List of paths using which data within the container can be partitioned",
          "type": "array",
          "items": {
            "type": "string",
            "description": "A path. These typically start with root (/path)"
          }
        },
        "kind": {
          "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
          "type": "string",
          "default": "Hash",
          "enum": [
            "Hash",
            "Range",
            "MultiHash"
          ],
          "x-ms-enum": {
            "name": "PartitionKind",
            "modelAsString": true
          }
        },
        "version": {
          "description": "Indicates the version of the partition key definition",
          "type": "integer",
          "minimum": 1,
          "maximum": 2,
          "format": "int32"
        },
        "systemKey": {
          "description": "Indicates if the container is using a system generated partition key",
          "type": "boolean",
          "readOnly": true
        }
      }
    },
    "Path": {
      "type": "string",
      "description": "A path. These typically start with root (/path)"
    },
    "UniqueKeyPolicy": {
      "type": "object",
      "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
      "properties": {
        "uniqueKeys": {
          "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
          "type": "array",
          "items": {
            "type": "object",
            "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
            "properties": {
              "paths": {
                "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "A path. These typically start with root (/path)"
                }
              }
            }
          }
        }
      }
    },
    "UniqueKey": {
      "type": "object",
      "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
      "properties": {
        "paths": {
          "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
          "type": "array",
          "items": {
            "type": "string",
            "description": "A path. These typically start with root (/path)"
          }
        }
      }
    },
    "ConflictResolutionPolicy": {
      "type": "object",
      "description": "The conflict resolution policy for the container.",
      "properties": {
        "mode": {
          "description": "Indicates the conflict resolution mode.",
          "type": "string",
          "default": "LastWriterWins",
          "enum": [
            "LastWriterWins",
            "Custom"
          ],
          "x-ms-enum": {
            "name": "ConflictResolutionMode",
            "modelAsString": true
          }
        },
        "conflictResolutionPath": {
          "type": "string",
          "description": "The conflict resolution path in the case of LastWriterWins mode."
        },
        "conflictResolutionProcedure": {
          "type": "string",
          "description": "The procedure to resolve conflicts in the case of custom mode."
        }
      }
    },
    "ClientEncryptionPolicy": {
      "type": "object",
      "description": "Cosmos DB client encryption policy.",
      "properties": {
        "includedPaths": {
          "description": "Paths of the item that need encryption along with path-specific settings.",
          "type": "array",
          "items": {
            "type": "object",
            "description": ".",
            "properties": {
              "path": {
                "description": "Path that needs to be encrypted.",
                "type": "string"
              },
              "clientEncryptionKeyId": {
                "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                "type": "string"
              },
              "encryptionType": {
                "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                "type": "string"
              },
              "encryptionAlgorithm": {
                "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                "type": "string"
              }
            },
            "required": [
              "path",
              "clientEncryptionKeyId",
              "encryptionType",
              "encryptionAlgorithm"
            ]
          },
          "x-ms-identifiers": []
        },
        "policyFormatVersion": {
          "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
          "type": "integer",
          "minimum": 1,
          "maximum": 2,
          "format": "int32"
        }
      },
      "required": [
        "includedPaths",
        "policyFormatVersion"
      ]
    },
    "ClientEncryptionIncludedPath": {
      "type": "object",
      "description": ".",
      "properties": {
        "path": {
          "description": "Path that needs to be encrypted.",
          "type": "string"
        },
        "clientEncryptionKeyId": {
          "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
          "type": "string"
        },
        "encryptionType": {
          "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
          "type": "string"
        },
        "encryptionAlgorithm": {
          "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
          "type": "string"
        }
      },
      "required": [
        "path",
        "clientEncryptionKeyId",
        "encryptionType",
        "encryptionAlgorithm"
      ]
    },
    "SqlStoredProcedureResource": {
      "type": "object",
      "description": "Cosmos DB SQL storedProcedure resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL storedProcedure"
        },
        "body": {
          "type": "string",
          "description": "Body of the Stored Procedure"
        }
      },
      "required": [
        "id"
      ]
    },
    "SqlUserDefinedFunctionResource": {
      "type": "object",
      "description": "Cosmos DB SQL userDefinedFunction resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL userDefinedFunction"
        },
        "body": {
          "type": "string",
          "description": "Body of the User Defined Function"
        }
      },
      "required": [
        "id"
      ]
    },
    "SqlTriggerResource": {
      "type": "object",
      "description": "Cosmos DB SQL trigger resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB SQL trigger"
        },
        "body": {
          "type": "string",
          "description": "Body of the Trigger"
        },
        "triggerType": {
          "type": "string",
          "enum": [
            "Pre",
            "Post"
          ],
          "description": "Type of the Trigger",
          "x-ms-enum": {
            "name": "triggerType",
            "modelAsString": true
          }
        },
        "triggerOperation": {
          "type": "string",
          "enum": [
            "All",
            "Create",
            "Update",
            "Delete",
            "Replace"
          ],
          "description": "The operation the trigger is associated with",
          "x-ms-enum": {
            "name": "triggerOperation",
            "modelAsString": true
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "MongoDBDatabaseResource": {
      "type": "object",
      "description": "Cosmos DB MongoDB database resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB MongoDB database"
        },
        "restoreParameters": {
          "description": "Parameters to indicate the information about the restore",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "restoreSource": {
              "type": "string",
              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
            },
            "restoreTimestampInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Time to which the account has to be restored (ISO-8601 format)."
            },
            "restoreWithTtlDisabled": {
              "type": "boolean",
              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
            }
          }
        },
        "createMode": {
          "description": "Enum to indicate the mode of resource creation.",
          "type": "string",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "MongoDBCollectionResource": {
      "type": "object",
      "description": "Cosmos DB MongoDB collection resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB MongoDB collection"
        },
        "shardKey": {
          "description": "A key-value pair of shard keys to be applied for the request.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "indexes": {
          "description": "List of index keys",
          "type": "array",
          "items": {
            "type": "object",
            "description": "Cosmos DB MongoDB collection index key",
            "properties": {
              "key": {
                "description": "Cosmos DB MongoDB collection index keys",
                "type": "object",
                "properties": {
                  "keys": {
                    "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A Key."
                    }
                  }
                }
              },
              "options": {
                "description": "Cosmos DB MongoDB collection index key options",
                "type": "object",
                "properties": {
                  "expireAfterSeconds": {
                    "description": "Expire after seconds",
                    "type": "integer"
                  },
                  "unique": {
                    "description": "Is unique or not",
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "analyticalStorageTtl": {
          "type": "integer",
          "description": "Analytical TTL."
        },
        "restoreParameters": {
          "description": "Parameters to indicate the information about the restore",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "restoreSource": {
              "type": "string",
              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
            },
            "restoreTimestampInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Time to which the account has to be restored (ISO-8601 format)."
            },
            "restoreWithTtlDisabled": {
              "type": "boolean",
              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
            }
          }
        },
        "createMode": {
          "description": "Enum to indicate the mode of resource creation.",
          "type": "string",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "ShardKeys": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "description": "The shard key and partition kind pair, only support \"Hash\" partition kind"
    },
    "MongoIndex": {
      "type": "object",
      "description": "Cosmos DB MongoDB collection index key",
      "properties": {
        "key": {
          "description": "Cosmos DB MongoDB collection index keys",
          "type": "object",
          "properties": {
            "keys": {
              "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
              "type": "array",
              "items": {
                "type": "string",
                "description": "A Key."
              }
            }
          }
        },
        "options": {
          "description": "Cosmos DB MongoDB collection index key options",
          "type": "object",
          "properties": {
            "expireAfterSeconds": {
              "description": "Expire after seconds",
              "type": "integer"
            },
            "unique": {
              "description": "Is unique or not",
              "type": "boolean"
            }
          }
        }
      }
    },
    "MongoIndexKeys": {
      "type": "object",
      "description": "Cosmos DB MongoDB collection resource object",
      "properties": {
        "keys": {
          "description": "List of keys for each MongoDB collection in the Azure Cosmos DB service",
          "type": "array",
          "items": {
            "type": "string",
            "description": "A Key."
          }
        }
      }
    },
    "Key": {
      "type": "string",
      "description": "A Key."
    },
    "MongoIndexOptions": {
      "type": "object",
      "description": "Cosmos DB MongoDB collection index options",
      "properties": {
        "expireAfterSeconds": {
          "description": "Expire after seconds",
          "type": "integer"
        },
        "unique": {
          "description": "Is unique or not",
          "type": "boolean"
        }
      }
    },
    "TableResource": {
      "type": "object",
      "description": "Cosmos DB table resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB table"
        },
        "restoreParameters": {
          "description": "Parameters to indicate the information about the restore",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "restoreSource": {
              "type": "string",
              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
            },
            "restoreTimestampInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Time to which the account has to be restored (ISO-8601 format)."
            },
            "restoreWithTtlDisabled": {
              "type": "boolean",
              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
            }
          }
        },
        "createMode": {
          "description": "Enum to indicate the mode of resource creation.",
          "type": "string",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "CassandraKeyspaceResource": {
      "type": "object",
      "description": "Cosmos DB Cassandra keyspace resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra keyspace"
        }
      },
      "required": [
        "id"
      ]
    },
    "CassandraTableResource": {
      "type": "object",
      "description": "Cosmos DB Cassandra table resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra table"
        },
        "defaultTtl": {
          "type": "integer",
          "description": "Time to live of the Cosmos DB Cassandra table"
        },
        "schema": {
          "description": "Schema of the Cosmos DB Cassandra table",
          "type": "object",
          "properties": {
            "columns": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Cosmos DB Cassandra table column",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the Cosmos DB Cassandra table column"
                  },
                  "type": {
                    "type": "string",
                    "description": "Type of the Cosmos DB Cassandra table column"
                  }
                }
              },
              "description": "List of Cassandra table columns."
            },
            "partitionKeys": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Cosmos DB Cassandra table partition key",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the Cosmos DB Cassandra table partition key"
                  }
                }
              },
              "description": "List of partition key."
            },
            "clusterKeys": {
              "type": "array",
              "items": {
                "type": "object",
                "description": "Cosmos DB Cassandra table cluster key",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Name of the Cosmos DB Cassandra table cluster key"
                  },
                  "orderBy": {
                    "type": "string",
                    "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
                  }
                }
              },
              "description": "List of cluster key."
            }
          }
        },
        "analyticalStorageTtl": {
          "type": "integer",
          "description": "Analytical TTL."
        }
      },
      "required": [
        "id"
      ]
    },
    "CassandraSchema": {
      "type": "object",
      "description": "Cosmos DB Cassandra table schema",
      "properties": {
        "columns": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Cosmos DB Cassandra table column",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the Cosmos DB Cassandra table column"
              },
              "type": {
                "type": "string",
                "description": "Type of the Cosmos DB Cassandra table column"
              }
            }
          },
          "description": "List of Cassandra table columns."
        },
        "partitionKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Cosmos DB Cassandra table partition key",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the Cosmos DB Cassandra table partition key"
              }
            }
          },
          "description": "List of partition key."
        },
        "clusterKeys": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "Cosmos DB Cassandra table cluster key",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the Cosmos DB Cassandra table cluster key"
              },
              "orderBy": {
                "type": "string",
                "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
              }
            }
          },
          "description": "List of cluster key."
        }
      }
    },
    "Column": {
      "type": "object",
      "description": "Cosmos DB Cassandra table column",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra table column"
        },
        "type": {
          "type": "string",
          "description": "Type of the Cosmos DB Cassandra table column"
        }
      }
    },
    "CassandraPartitionKey": {
      "type": "object",
      "description": "Cosmos DB Cassandra table partition key",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra table partition key"
        }
      }
    },
    "ClusterKey": {
      "type": "object",
      "description": "Cosmos DB Cassandra table cluster key",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Cosmos DB Cassandra table cluster key"
        },
        "orderBy": {
          "type": "string",
          "description": "Order of the Cosmos DB Cassandra table cluster key, only support \"Asc\" and \"Desc\""
        }
      }
    },
    "GremlinDatabaseResource": {
      "type": "object",
      "description": "Cosmos DB Gremlin database resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Gremlin database"
        },
        "restoreParameters": {
          "description": "Parameters to indicate the information about the restore",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "restoreSource": {
              "type": "string",
              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
            },
            "restoreTimestampInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Time to which the account has to be restored (ISO-8601 format)."
            },
            "restoreWithTtlDisabled": {
              "type": "boolean",
              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
            }
          }
        },
        "createMode": {
          "description": "Enum to indicate the mode of resource creation.",
          "type": "string",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "GremlinGraphResource": {
      "type": "object",
      "description": "Cosmos DB Gremlin graph resource object",
      "properties": {
        "id": {
          "type": "string",
          "description": "Name of the Cosmos DB Gremlin graph"
        },
        "indexingPolicy": {
          "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the graph",
          "type": "object",
          "properties": {
            "automatic": {
              "type": "boolean",
              "description": "Indicates if the indexing policy is automatic"
            },
            "indexingMode": {
              "description": "Indicates the indexing mode.",
              "type": "string",
              "default": "consistent",
              "enum": [
                "consistent",
                "lazy",
                "none"
              ],
              "x-ms-enum": {
                "name": "IndexingMode",
                "modelAsString": true
              }
            },
            "includedPaths": {
              "description": "List of paths to include in the indexing",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The paths that are included in indexing",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                  },
                  "indexes": {
                    "description": "List of indexes for this path",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "description": "The indexes for the path.",
                      "properties": {
                        "dataType": {
                          "description": "The datatype for which the indexing behavior is applied to.",
                          "type": "string",
                          "default": "String",
                          "enum": [
                            "String",
                            "Number",
                            "Point",
                            "Polygon",
                            "LineString",
                            "MultiPolygon"
                          ],
                          "x-ms-enum": {
                            "name": "DataType",
                            "modelAsString": true
                          }
                        },
                        "precision": {
                          "description": "The precision of the index. -1 is maximum precision.",
                          "type": "integer"
                        },
                        "kind": {
                          "description": "Indicates the type of index.",
                          "type": "string",
                          "default": "Hash",
                          "enum": [
                            "Hash",
                            "Range",
                            "Spatial"
                          ],
                          "x-ms-enum": {
                            "name": "IndexKind",
                            "modelAsString": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            "excludedPaths": {
              "description": "List of paths to exclude from indexing",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                  }
                }
              }
            },
            "compositeIndexes": {
              "description": "List of composite path list",
              "type": "array",
              "items": {
                "description": "List of composite path",
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "path": {
                      "type": "string",
                      "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                    },
                    "order": {
                      "description": "Sort order for composite paths.",
                      "type": "string",
                      "enum": [
                        "ascending",
                        "descending"
                      ],
                      "x-ms-enum": {
                        "name": "CompositePathSortOrder",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            },
            "spatialIndexes": {
              "description": "List of spatial specifics",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                  },
                  "types": {
                    "description": "List of path's spatial type",
                    "type": "array",
                    "items": {
                      "description": "Indicates the spatial type of index.",
                      "type": "string",
                      "enum": [
                        "Point",
                        "LineString",
                        "Polygon",
                        "MultiPolygon"
                      ],
                      "x-ms-enum": {
                        "name": "SpatialType",
                        "modelAsString": true
                      }
                    }
                  }
                }
              }
            },
            "vectorIndexes": {
              "description": "List of paths to include in the vector indexing",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "path": {
                    "type": "string",
                    "description": "The path to the vector field in the document."
                  },
                  "type": {
                    "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                    "type": "string",
                    "enum": [
                      "flat",
                      "diskANN",
                      "quantizedFlat"
                    ],
                    "x-ms-enum": {
                      "name": "VectorIndexType",
                      "modelAsString": true
                    }
                  }
                },
                "required": [
                  "path",
                  "type"
                ]
              }
            }
          }
        },
        "partitionKey": {
          "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
          "type": "object",
          "properties": {
            "paths": {
              "description": "List of paths using which data within the container can be partitioned",
              "type": "array",
              "items": {
                "type": "string",
                "description": "A path. These typically start with root (/path)"
              }
            },
            "kind": {
              "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
              "type": "string",
              "default": "Hash",
              "enum": [
                "Hash",
                "Range",
                "MultiHash"
              ],
              "x-ms-enum": {
                "name": "PartitionKind",
                "modelAsString": true
              }
            },
            "version": {
              "description": "Indicates the version of the partition key definition",
              "type": "integer",
              "minimum": 1,
              "maximum": 2,
              "format": "int32"
            },
            "systemKey": {
              "description": "Indicates if the container is using a system generated partition key",
              "type": "boolean",
              "readOnly": true
            }
          }
        },
        "defaultTtl": {
          "type": "integer",
          "description": "Default time to live"
        },
        "uniqueKeyPolicy": {
          "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
          "type": "object",
          "properties": {
            "uniqueKeys": {
              "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
              "type": "array",
              "items": {
                "type": "object",
                "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                "properties": {
                  "paths": {
                    "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "A path. These typically start with root (/path)"
                    }
                  }
                }
              }
            }
          }
        },
        "conflictResolutionPolicy": {
          "description": "The conflict resolution policy for the graph.",
          "type": "object",
          "properties": {
            "mode": {
              "description": "Indicates the conflict resolution mode.",
              "type": "string",
              "default": "LastWriterWins",
              "enum": [
                "LastWriterWins",
                "Custom"
              ],
              "x-ms-enum": {
                "name": "ConflictResolutionMode",
                "modelAsString": true
              }
            },
            "conflictResolutionPath": {
              "type": "string",
              "description": "The conflict resolution path in the case of LastWriterWins mode."
            },
            "conflictResolutionProcedure": {
              "type": "string",
              "description": "The procedure to resolve conflicts in the case of custom mode."
            }
          }
        },
        "analyticalStorageTtl": {
          "type": "integer",
          "format": "int64",
          "description": "Analytical TTL."
        },
        "restoreParameters": {
          "description": "Parameters to indicate the information about the restore",
          "type": "object",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "restoreSource": {
              "type": "string",
              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
            },
            "restoreTimestampInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Time to which the account has to be restored (ISO-8601 format)."
            },
            "restoreWithTtlDisabled": {
              "type": "boolean",
              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
            }
          }
        },
        "createMode": {
          "description": "Enum to indicate the mode of resource creation.",
          "type": "string",
          "default": "Default",
          "enum": [
            "Default",
            "Restore"
          ],
          "x-ms-enum": {
            "name": "CreateMode",
            "modelAsString": true
          }
        }
      },
      "required": [
        "id"
      ]
    },
    "CreateUpdateOptions": {
      "type": "object",
      "properties": {
        "throughput": {
          "type": "integer",
          "description": "Request Units per second. For example, \"throughput\": 10000."
        },
        "autoscaleSettings": {
          "description": "Specifies the Autoscale settings. Note: Either throughput or autoscaleSettings is required, but not both.",
          "type": "object",
          "properties": {
            "maxThroughput": {
              "type": "integer",
              "description": "Represents maximum throughput, the resource can scale up to."
            }
          }
        }
      },
      "description": "CreateUpdateOptions are a list of key-value pairs that describe the resource. Supported keys are \"If-Match\", \"If-None-Match\", \"Session-Token\" and \"Throughput\""
    },
    "AutoscaleSettings": {
      "type": "object",
      "properties": {
        "maxThroughput": {
          "type": "integer",
          "description": "Represents maximum throughput, the resource can scale up to."
        }
      }
    },
    "Capability": {
      "type": "object",
      "description": "Cosmos DB capability object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the Cosmos DB capability. For example, \"name\": \"EnableCassandra\". Current values also include \"EnableTable\" and \"EnableGremlin\"."
        }
      }
    },
    "Capacity": {
      "type": "object",
      "description": "The object that represents all properties related to capacity enforcement on an account.",
      "properties": {
        "totalThroughputLimit": {
          "type": "integer",
          "minimum": -1,
          "format": "int32",
          "description": "The total throughput limit imposed on the account. A totalThroughputLimit of 2000 imposes a strict limit of max throughput that can be provisioned on that account to be 2000. A totalThroughputLimit of -1 indicates no limits on provisioning of throughput."
        }
      }
    },
    "Tags": {
      "type": "object",
      "additionalProperties": {
        "type": "string"
      },
      "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
    },
    "ManagedServiceIdentity": {
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The principal id of the system assigned identity. This property will only be provided for a system assigned identity."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant id of the system assigned identity. This property will only be provided for a system assigned identity."
        },
        "type": {
          "type": "string",
          "description": "The type of identity used for the resource. The type 'SystemAssigned,UserAssigned' includes both an implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from the service.",
          "enum": [
            "SystemAssigned",
            "UserAssigned",
            "SystemAssigned,UserAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ResourceIdentityType",
            "modelAsString": false
          }
        },
        "userAssignedIdentities": {
          "type": "object",
          "additionalProperties": {
            "type": "object",
            "properties": {
              "principalId": {
                "readOnly": true,
                "type": "string",
                "description": "The principal id of user assigned identity."
              },
              "clientId": {
                "readOnly": true,
                "type": "string",
                "description": "The client id of user assigned identity."
              }
            }
          },
          "description": "The list of user identities associated with resource. The user identity dictionary key references will be ARM resource ids in the form: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'."
        }
      },
      "description": "Identity for the resource."
    },
    "ProvisioningState": {
      "type": "string",
      "readOnly": true,
      "description": "The status of the Cosmos DB account at the time the operation was called. The status can be one of following. 'Creating' – the Cosmos DB account is being created. When an account is in Creating state, only properties that are specified as input for the Create Cosmos DB account operation are returned. 'Succeeded' – the Cosmos DB account is active for use. 'Updating' – the Cosmos DB account is being updated. 'Deleting' – the Cosmos DB account is being deleted. 'Failed' – the Cosmos DB account failed creation. 'DeletionFailed' – the Cosmos DB account deletion failed."
    },
    "IPRules": {
      "type": "array",
      "description": "Array of IpAddressOrRange objects.",
      "items": {
        "type": "object",
        "description": "IpAddressOrRange object",
        "properties": {
          "ipAddressOrRange": {
            "type": "string",
            "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
          }
        }
      }
    },
    "IpAddressOrRange": {
      "type": "object",
      "description": "IpAddressOrRange object",
      "properties": {
        "ipAddressOrRange": {
          "type": "string",
          "description": "A single IPv4 address or a single IPv4 address range in CIDR format. Provided IPs must be well-formatted and cannot be contained in one of the following ranges: 10.0.0.0/8, 100.64.0.0/10, 172.16.0.0/12, 192.168.0.0/16, since these are not enforceable by the IP address filter. Example of valid inputs: “23.40.210.245” or “23.40.210.0/8”."
        }
      }
    },
    "VirtualNetworkRule": {
      "type": "object",
      "description": "Virtual Network ACL Rule object",
      "properties": {
        "id": {
          "type": "string",
          "format": "arm-id",
          "x-ms-arm-id-details": {
            "allowedResources": [
              {
                "type": "Microsoft.Network/virtualNetworks/subnets"
              }
            ]
          },
          "description": "Resource ID of a subnet, for example: /subscriptions/{subscriptionId}/resourceGroups/{groupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/subnets/{subnetName}."
        },
        "ignoreMissingVNetServiceEndpoint": {
          "type": "boolean",
          "description": "Create firewall rule before the virtual network has vnet service endpoint enabled."
        }
      }
    },
    "NetworkAclBypass": {
      "description": "Indicates what services are allowed to bypass firewall checks.",
      "type": "string",
      "enum": [
        "None",
        "AzureServices"
      ],
      "x-ms-enum": {
        "name": "NetworkAclBypass",
        "modelAsString": false
      }
    },
    "AccountKeyMetadata": {
      "description": "The metadata related to an access key for a given database account.",
      "type": "object",
      "properties": {
        "generationTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
        }
      }
    },
    "DatabaseAccountKeysMetadata": {
      "description": "The metadata related to each access key for the given Cosmos DB database account.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "primaryMasterKey": {
          "readOnly": true,
          "description": "The metadata related to the Primary Read-Write Key for the given Cosmos DB database account.",
          "type": "object",
          "properties": {
            "generationTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
            }
          }
        },
        "secondaryMasterKey": {
          "readOnly": true,
          "description": "The metadata related to the Secondary Read-Write Key for the given Cosmos DB database account.",
          "type": "object",
          "properties": {
            "generationTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
            }
          }
        },
        "primaryReadonlyMasterKey": {
          "readOnly": true,
          "description": "The metadata related to the Primary Read-Only Key for the given Cosmos DB database account.",
          "type": "object",
          "properties": {
            "generationTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
            }
          }
        },
        "secondaryReadonlyMasterKey": {
          "readOnly": true,
          "description": "The metadata related to the Secondary Read-Only Key for the given Cosmos DB database account.",
          "type": "object",
          "properties": {
            "generationTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Generation time in UTC of the key in ISO-8601 format. If the value is missing from the object, it means that the last key regeneration was triggered before 2022-06-18."
            }
          }
        }
      }
    },
    "Operation": {
      "description": "REST API operation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Operation name: {provider}/{resource}/{operation}",
          "type": "string"
        },
        "display": {
          "description": "The object that represents the operation.",
          "type": "object",
          "properties": {
            "Provider": {
              "description": "Service provider: Microsoft.ResourceProvider",
              "type": "string"
            },
            "Resource": {
              "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
              "type": "string"
            },
            "Operation": {
              "description": "Operation type: Read, write, delete, etc.",
              "type": "string"
            },
            "Description": {
              "description": "Description of operation",
              "type": "string"
            }
          }
        }
      }
    },
    "OperationListResult": {
      "description": "Result of the request to list Resource Provider operations. It contains a list of operations and a URL link to get the next set of results.",
      "properties": {
        "value": {
          "type": "array",
          "items": {
            "description": "REST API operation",
            "type": "object",
            "properties": {
              "name": {
                "description": "Operation name: {provider}/{resource}/{operation}",
                "type": "string"
              },
              "display": {
                "description": "The object that represents the operation.",
                "type": "object",
                "properties": {
                  "Provider": {
                    "description": "Service provider: Microsoft.ResourceProvider",
                    "type": "string"
                  },
                  "Resource": {
                    "description": "Resource on which the operation is performed: Profile, endpoint, etc.",
                    "type": "string"
                  },
                  "Operation": {
                    "description": "Operation type: Read, write, delete, etc.",
                    "type": "string"
                  },
                  "Description": {
                    "description": "Description of operation",
                    "type": "string"
                  }
                }
              }
            }
          },
          "description": "List of operations supported by the Resource Provider."
        },
        "nextLink": {
          "type": "string",
          "description": "URL to get the next set of operation list results if there are any."
        }
      }
    },
    "UsagesResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "properties": {
              "unit": {
                "description": "The unit of the metric.",
                "type": "string",
                "readOnly": true,
                "enum": [
                  "Count",
                  "Bytes",
                  "Seconds",
                  "Percent",
                  "CountPerSecond",
                  "BytesPerSecond",
                  "Milliseconds"
                ],
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "UnitType"
                }
              },
              "name": {
                "readOnly": true,
                "description": "The name information for the metric.",
                "properties": {
                  "value": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the metric."
                  },
                  "localizedValue": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The friendly name of the metric."
                  }
                }
              },
              "quotaPeriod": {
                "type": "string",
                "readOnly": true,
                "description": "The quota period used to summarize the usage values."
              },
              "limit": {
                "type": "integer",
                "format": "int64",
                "readOnly": true,
                "description": "Maximum value for this metric"
              },
              "currentValue": {
                "type": "integer",
                "format": "int64",
                "readOnly": true,
                "description": "Current value for this metric"
              }
            },
            "description": "The usage data for a usage request."
          },
          "description": "The list of usages for the database. A usage is a point in time metric"
        }
      },
      "description": "The response to a list usage request."
    },
    "Usage": {
      "properties": {
        "unit": {
          "description": "The unit of the metric.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Count",
            "Bytes",
            "Seconds",
            "Percent",
            "CountPerSecond",
            "BytesPerSecond",
            "Milliseconds"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "UnitType"
          }
        },
        "name": {
          "readOnly": true,
          "description": "The name information for the metric.",
          "properties": {
            "value": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the metric."
            },
            "localizedValue": {
              "readOnly": true,
              "type": "string",
              "description": "The friendly name of the metric."
            }
          }
        },
        "quotaPeriod": {
          "type": "string",
          "readOnly": true,
          "description": "The quota period used to summarize the usage values."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Maximum value for this metric"
        },
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Current value for this metric"
        }
      },
      "description": "The usage data for a usage request."
    },
    "PartitionUsagesResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "properties": {
              "unit": {
                "description": "The unit of the metric.",
                "type": "string",
                "readOnly": true,
                "enum": [
                  "Count",
                  "Bytes",
                  "Seconds",
                  "Percent",
                  "CountPerSecond",
                  "BytesPerSecond",
                  "Milliseconds"
                ],
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "UnitType"
                }
              },
              "name": {
                "readOnly": true,
                "description": "The name information for the metric.",
                "properties": {
                  "value": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the metric."
                  },
                  "localizedValue": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The friendly name of the metric."
                  }
                }
              },
              "quotaPeriod": {
                "type": "string",
                "readOnly": true,
                "description": "The quota period used to summarize the usage values."
              },
              "limit": {
                "type": "integer",
                "format": "int64",
                "readOnly": true,
                "description": "Maximum value for this metric"
              },
              "currentValue": {
                "type": "integer",
                "format": "int64",
                "readOnly": true,
                "description": "Current value for this metric"
              },
              "partitionId": {
                "readOnly": true,
                "type": "string",
                "description": "The partition id (GUID identifier) of the usages."
              },
              "partitionKeyRangeId": {
                "readOnly": true,
                "type": "string",
                "description": "The partition key range id (integer identifier) of the usages."
              }
            },
            "description": "The partition level usage data for a usage request."
          },
          "description": "The list of partition-level usages for the database. A usage is a point in time metric"
        }
      },
      "description": "The response to a list partition level usage request."
    },
    "PartitionUsage": {
      "properties": {
        "unit": {
          "description": "The unit of the metric.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Count",
            "Bytes",
            "Seconds",
            "Percent",
            "CountPerSecond",
            "BytesPerSecond",
            "Milliseconds"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "UnitType"
          }
        },
        "name": {
          "readOnly": true,
          "description": "The name information for the metric.",
          "properties": {
            "value": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the metric."
            },
            "localizedValue": {
              "readOnly": true,
              "type": "string",
              "description": "The friendly name of the metric."
            }
          }
        },
        "quotaPeriod": {
          "type": "string",
          "readOnly": true,
          "description": "The quota period used to summarize the usage values."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Maximum value for this metric"
        },
        "currentValue": {
          "type": "integer",
          "format": "int64",
          "readOnly": true,
          "description": "Current value for this metric"
        },
        "partitionId": {
          "readOnly": true,
          "type": "string",
          "description": "The partition id (GUID identifier) of the usages."
        },
        "partitionKeyRangeId": {
          "readOnly": true,
          "type": "string",
          "description": "The partition key range id (integer identifier) of the usages."
        }
      },
      "description": "The partition level usage data for a usage request."
    },
    "MetricDefinitionsListResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "properties": {
              "metricAvailabilities": {
                "type": "array",
                "readOnly": true,
                "items": {
                  "properties": {
                    "timeGrain": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The time grain to be used to summarize the metric values."
                    },
                    "retention": {
                      "readOnly": true,
                      "type": "string",
                      "description": "The retention for the metric values."
                    }
                  },
                  "description": "The availability of the metric."
                },
                "description": "The list of metric availabilities for the account."
              },
              "primaryAggregationType": {
                "readOnly": true,
                "type": "string",
                "description": "The primary aggregation type of the metric.",
                "enum": [
                  "None",
                  "Average",
                  "Total",
                  "Minimum",
                  "Maximum",
                  "Last"
                ],
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "PrimaryAggregationType"
                }
              },
              "unit": {
                "description": "The unit of the metric.",
                "type": "string",
                "readOnly": true,
                "enum": [
                  "Count",
                  "Bytes",
                  "Seconds",
                  "Percent",
                  "CountPerSecond",
                  "BytesPerSecond",
                  "Milliseconds"
                ],
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "UnitType"
                }
              },
              "resourceUri": {
                "readOnly": true,
                "type": "string",
                "description": "The resource uri of the database."
              },
              "name": {
                "readOnly": true,
                "description": "The name information for the metric.",
                "properties": {
                  "value": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the metric."
                  },
                  "localizedValue": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The friendly name of the metric."
                  }
                }
              }
            },
            "description": "The definition of a metric."
          },
          "description": "The list of metric definitions for the account."
        }
      },
      "description": "The response to a list metric definitions request."
    },
    "MetricDefinition": {
      "properties": {
        "metricAvailabilities": {
          "type": "array",
          "readOnly": true,
          "items": {
            "properties": {
              "timeGrain": {
                "readOnly": true,
                "type": "string",
                "description": "The time grain to be used to summarize the metric values."
              },
              "retention": {
                "readOnly": true,
                "type": "string",
                "description": "The retention for the metric values."
              }
            },
            "description": "The availability of the metric."
          },
          "description": "The list of metric availabilities for the account."
        },
        "primaryAggregationType": {
          "readOnly": true,
          "type": "string",
          "description": "The primary aggregation type of the metric.",
          "enum": [
            "None",
            "Average",
            "Total",
            "Minimum",
            "Maximum",
            "Last"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "PrimaryAggregationType"
          }
        },
        "unit": {
          "description": "The unit of the metric.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Count",
            "Bytes",
            "Seconds",
            "Percent",
            "CountPerSecond",
            "BytesPerSecond",
            "Milliseconds"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "UnitType"
          }
        },
        "resourceUri": {
          "readOnly": true,
          "type": "string",
          "description": "The resource uri of the database."
        },
        "name": {
          "readOnly": true,
          "description": "The name information for the metric.",
          "properties": {
            "value": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the metric."
            },
            "localizedValue": {
              "readOnly": true,
              "type": "string",
              "description": "The friendly name of the metric."
            }
          }
        }
      },
      "description": "The definition of a metric."
    },
    "MetricAvailability": {
      "properties": {
        "timeGrain": {
          "readOnly": true,
          "type": "string",
          "description": "The time grain to be used to summarize the metric values."
        },
        "retention": {
          "readOnly": true,
          "type": "string",
          "description": "The retention for the metric values."
        }
      },
      "description": "The availability of the metric."
    },
    "MetricListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "properties": {
              "startTime": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "The start time for the metric (ISO-8601 format)."
              },
              "endTime": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "The end time for the metric (ISO-8601 format)."
              },
              "timeGrain": {
                "readOnly": true,
                "type": "string",
                "description": "The time grain to be used to summarize the metric values."
              },
              "unit": {
                "description": "The unit of the metric.",
                "type": "string",
                "readOnly": true,
                "enum": [
                  "Count",
                  "Bytes",
                  "Seconds",
                  "Percent",
                  "CountPerSecond",
                  "BytesPerSecond",
                  "Milliseconds"
                ],
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "UnitType"
                }
              },
              "name": {
                "readOnly": true,
                "description": "The name information for the metric.",
                "properties": {
                  "value": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the metric."
                  },
                  "localizedValue": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The friendly name of the metric."
                  }
                }
              },
              "metricValues": {
                "readOnly": true,
                "type": "array",
                "items": {
                  "properties": {
                    "_count": {
                      "readOnly": true,
                      "type": "number",
                      "format": "int32",
                      "description": "The number of values for the metric."
                    },
                    "average": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The average value of the metric."
                    },
                    "maximum": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The max value of the metric."
                    },
                    "minimum": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The min value of the metric."
                    },
                    "timestamp": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The metric timestamp (ISO-8601 format)."
                    },
                    "total": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The total value of the metric."
                    }
                  },
                  "description": "Represents metrics values."
                },
                "description": "The metric values for the specified time window and timestep."
              }
            },
            "description": "Metric data"
          },
          "description": "The list of metrics for the account."
        }
      },
      "description": "The response to a list metrics request."
    },
    "Metric": {
      "properties": {
        "startTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The start time for the metric (ISO-8601 format)."
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The end time for the metric (ISO-8601 format)."
        },
        "timeGrain": {
          "readOnly": true,
          "type": "string",
          "description": "The time grain to be used to summarize the metric values."
        },
        "unit": {
          "description": "The unit of the metric.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Count",
            "Bytes",
            "Seconds",
            "Percent",
            "CountPerSecond",
            "BytesPerSecond",
            "Milliseconds"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "UnitType"
          }
        },
        "name": {
          "readOnly": true,
          "description": "The name information for the metric.",
          "properties": {
            "value": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the metric."
            },
            "localizedValue": {
              "readOnly": true,
              "type": "string",
              "description": "The friendly name of the metric."
            }
          }
        },
        "metricValues": {
          "readOnly": true,
          "type": "array",
          "items": {
            "properties": {
              "_count": {
                "readOnly": true,
                "type": "number",
                "format": "int32",
                "description": "The number of values for the metric."
              },
              "average": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The average value of the metric."
              },
              "maximum": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The max value of the metric."
              },
              "minimum": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The min value of the metric."
              },
              "timestamp": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "The metric timestamp (ISO-8601 format)."
              },
              "total": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The total value of the metric."
              }
            },
            "description": "Represents metrics values."
          },
          "description": "The metric values for the specified time window and timestep."
        }
      },
      "description": "Metric data"
    },
    "MetricName": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the metric."
        },
        "localizedValue": {
          "readOnly": true,
          "type": "string",
          "description": "The friendly name of the metric."
        }
      },
      "description": "A metric name."
    },
    "MetricValue": {
      "properties": {
        "_count": {
          "readOnly": true,
          "type": "number",
          "format": "int32",
          "description": "The number of values for the metric."
        },
        "average": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The average value of the metric."
        },
        "maximum": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The max value of the metric."
        },
        "minimum": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The min value of the metric."
        },
        "timestamp": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The metric timestamp (ISO-8601 format)."
        },
        "total": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The total value of the metric."
        }
      },
      "description": "Represents metrics values."
    },
    "PercentileMetricListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "properties": {
              "startTime": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "The start time for the metric (ISO-8601 format)."
              },
              "endTime": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "The end time for the metric (ISO-8601 format)."
              },
              "timeGrain": {
                "readOnly": true,
                "type": "string",
                "description": "The time grain to be used to summarize the metric values."
              },
              "unit": {
                "description": "The unit of the metric.",
                "type": "string",
                "readOnly": true,
                "enum": [
                  "Count",
                  "Bytes",
                  "Seconds",
                  "Percent",
                  "CountPerSecond",
                  "BytesPerSecond",
                  "Milliseconds"
                ],
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "UnitType"
                }
              },
              "name": {
                "readOnly": true,
                "description": "The name information for the metric.",
                "properties": {
                  "value": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the metric."
                  },
                  "localizedValue": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The friendly name of the metric."
                  }
                }
              },
              "metricValues": {
                "readOnly": true,
                "type": "array",
                "items": {
                  "properties": {
                    "_count": {
                      "readOnly": true,
                      "type": "number",
                      "format": "int32",
                      "description": "The number of values for the metric."
                    },
                    "average": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The average value of the metric."
                    },
                    "maximum": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The max value of the metric."
                    },
                    "minimum": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The min value of the metric."
                    },
                    "timestamp": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The metric timestamp (ISO-8601 format)."
                    },
                    "total": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The total value of the metric."
                    },
                    "P10": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The 10th percentile value for the metric."
                    },
                    "P25": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The 25th percentile value for the metric."
                    },
                    "P50": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The 50th percentile value for the metric."
                    },
                    "P75": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The 75th percentile value for the metric."
                    },
                    "P90": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The 90th percentile value for the metric."
                    },
                    "P95": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The 95th percentile value for the metric."
                    },
                    "P99": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The 99th percentile value for the metric."
                    }
                  },
                  "description": "Represents percentile metrics values."
                },
                "description": "The percentile metric values for the specified time window and timestep."
              }
            },
            "description": "Percentile Metric data"
          },
          "description": "The list of percentile metrics for the account."
        }
      },
      "description": "The response to a list percentile metrics request."
    },
    "PercentileMetric": {
      "properties": {
        "startTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The start time for the metric (ISO-8601 format)."
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The end time for the metric (ISO-8601 format)."
        },
        "timeGrain": {
          "readOnly": true,
          "type": "string",
          "description": "The time grain to be used to summarize the metric values."
        },
        "unit": {
          "description": "The unit of the metric.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Count",
            "Bytes",
            "Seconds",
            "Percent",
            "CountPerSecond",
            "BytesPerSecond",
            "Milliseconds"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "UnitType"
          }
        },
        "name": {
          "readOnly": true,
          "description": "The name information for the metric.",
          "properties": {
            "value": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the metric."
            },
            "localizedValue": {
              "readOnly": true,
              "type": "string",
              "description": "The friendly name of the metric."
            }
          }
        },
        "metricValues": {
          "readOnly": true,
          "type": "array",
          "items": {
            "properties": {
              "_count": {
                "readOnly": true,
                "type": "number",
                "format": "int32",
                "description": "The number of values for the metric."
              },
              "average": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The average value of the metric."
              },
              "maximum": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The max value of the metric."
              },
              "minimum": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The min value of the metric."
              },
              "timestamp": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "The metric timestamp (ISO-8601 format)."
              },
              "total": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The total value of the metric."
              },
              "P10": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The 10th percentile value for the metric."
              },
              "P25": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The 25th percentile value for the metric."
              },
              "P50": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The 50th percentile value for the metric."
              },
              "P75": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The 75th percentile value for the metric."
              },
              "P90": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The 90th percentile value for the metric."
              },
              "P95": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The 95th percentile value for the metric."
              },
              "P99": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The 99th percentile value for the metric."
              }
            },
            "description": "Represents percentile metrics values."
          },
          "description": "The percentile metric values for the specified time window and timestep."
        }
      },
      "description": "Percentile Metric data"
    },
    "PercentileMetricValue": {
      "properties": {
        "_count": {
          "readOnly": true,
          "type": "number",
          "format": "int32",
          "description": "The number of values for the metric."
        },
        "average": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The average value of the metric."
        },
        "maximum": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The max value of the metric."
        },
        "minimum": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The min value of the metric."
        },
        "timestamp": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The metric timestamp (ISO-8601 format)."
        },
        "total": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The total value of the metric."
        },
        "P10": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The 10th percentile value for the metric."
        },
        "P25": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The 25th percentile value for the metric."
        },
        "P50": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The 50th percentile value for the metric."
        },
        "P75": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The 75th percentile value for the metric."
        },
        "P90": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The 90th percentile value for the metric."
        },
        "P95": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The 95th percentile value for the metric."
        },
        "P99": {
          "readOnly": true,
          "type": "number",
          "format": "double",
          "description": "The 99th percentile value for the metric."
        }
      },
      "description": "Represents percentile metrics values."
    },
    "PartitionMetricListResult": {
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "properties": {
              "startTime": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "The start time for the metric (ISO-8601 format)."
              },
              "endTime": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "The end time for the metric (ISO-8601 format)."
              },
              "timeGrain": {
                "readOnly": true,
                "type": "string",
                "description": "The time grain to be used to summarize the metric values."
              },
              "unit": {
                "description": "The unit of the metric.",
                "type": "string",
                "readOnly": true,
                "enum": [
                  "Count",
                  "Bytes",
                  "Seconds",
                  "Percent",
                  "CountPerSecond",
                  "BytesPerSecond",
                  "Milliseconds"
                ],
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "UnitType"
                }
              },
              "name": {
                "readOnly": true,
                "description": "The name information for the metric.",
                "properties": {
                  "value": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The name of the metric."
                  },
                  "localizedValue": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The friendly name of the metric."
                  }
                }
              },
              "metricValues": {
                "readOnly": true,
                "type": "array",
                "items": {
                  "properties": {
                    "_count": {
                      "readOnly": true,
                      "type": "number",
                      "format": "int32",
                      "description": "The number of values for the metric."
                    },
                    "average": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The average value of the metric."
                    },
                    "maximum": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The max value of the metric."
                    },
                    "minimum": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The min value of the metric."
                    },
                    "timestamp": {
                      "readOnly": true,
                      "type": "string",
                      "format": "date-time",
                      "description": "The metric timestamp (ISO-8601 format)."
                    },
                    "total": {
                      "readOnly": true,
                      "type": "number",
                      "format": "double",
                      "description": "The total value of the metric."
                    }
                  },
                  "description": "Represents metrics values."
                },
                "description": "The metric values for the specified time window and timestep."
              },
              "partitionId": {
                "readOnly": true,
                "type": "string",
                "description": "The partition id (GUID identifier) of the metric values."
              },
              "partitionKeyRangeId": {
                "readOnly": true,
                "type": "string",
                "description": "The partition key range id (integer identifier) of the metric values."
              }
            },
            "description": "The metric values for a single partition."
          },
          "description": "The list of partition-level metrics for the account."
        }
      },
      "description": "The response to a list partition metrics request."
    },
    "PartitionMetric": {
      "properties": {
        "startTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The start time for the metric (ISO-8601 format)."
        },
        "endTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "The end time for the metric (ISO-8601 format)."
        },
        "timeGrain": {
          "readOnly": true,
          "type": "string",
          "description": "The time grain to be used to summarize the metric values."
        },
        "unit": {
          "description": "The unit of the metric.",
          "type": "string",
          "readOnly": true,
          "enum": [
            "Count",
            "Bytes",
            "Seconds",
            "Percent",
            "CountPerSecond",
            "BytesPerSecond",
            "Milliseconds"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "UnitType"
          }
        },
        "name": {
          "readOnly": true,
          "description": "The name information for the metric.",
          "properties": {
            "value": {
              "readOnly": true,
              "type": "string",
              "description": "The name of the metric."
            },
            "localizedValue": {
              "readOnly": true,
              "type": "string",
              "description": "The friendly name of the metric."
            }
          }
        },
        "metricValues": {
          "readOnly": true,
          "type": "array",
          "items": {
            "properties": {
              "_count": {
                "readOnly": true,
                "type": "number",
                "format": "int32",
                "description": "The number of values for the metric."
              },
              "average": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The average value of the metric."
              },
              "maximum": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The max value of the metric."
              },
              "minimum": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The min value of the metric."
              },
              "timestamp": {
                "readOnly": true,
                "type": "string",
                "format": "date-time",
                "description": "The metric timestamp (ISO-8601 format)."
              },
              "total": {
                "readOnly": true,
                "type": "number",
                "format": "double",
                "description": "The total value of the metric."
              }
            },
            "description": "Represents metrics values."
          },
          "description": "The metric values for the specified time window and timestep."
        },
        "partitionId": {
          "readOnly": true,
          "type": "string",
          "description": "The partition id (GUID identifier) of the metric values."
        },
        "partitionKeyRangeId": {
          "readOnly": true,
          "type": "string",
          "description": "The partition key range id (integer identifier) of the metric values."
        }
      },
      "description": "The metric values for a single partition."
    },
    "UnitType": {
      "type": "string",
      "readOnly": true,
      "description": "The unit of the metric.",
      "enum": [
        "Count",
        "Bytes",
        "Seconds",
        "Percent",
        "CountPerSecond",
        "BytesPerSecond",
        "Milliseconds"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "UnitType"
      }
    },
    "ConnectorOffer": {
      "description": "The cassandra connector offer type for the Cosmos DB C* database account.",
      "type": "string",
      "enum": [
        "Small"
      ],
      "x-ms-enum": {
        "name": "ConnectorOffer",
        "modelAsString": true
      }
    },
    "PublicNetworkAccess": {
      "type": "string",
      "description": "Whether requests from Public Network are allowed",
      "enum": [
        "Enabled",
        "Disabled",
        "SecuredByPerimeter"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "PublicNetworkAccess"
      }
    },
    "ApiProperties": {
      "type": "object",
      "properties": {
        "serverVersion": {
          "type": "string",
          "enum": [
            "3.2",
            "3.6",
            "4.0",
            "4.2",
            "5.0",
            "6.0",
            "7.0"
          ],
          "description": "Describes the version of the MongoDB account.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServerVersion"
          }
        }
      }
    },
    "AnalyticalStorageConfiguration": {
      "type": "object",
      "description": "Analytical storage specific properties.",
      "properties": {
        "schemaType": {
          "type": "string",
          "description": "Describes the types of schema for analytical storage.",
          "enum": [
            "WellDefined",
            "FullFidelity"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "AnalyticalStorageSchemaType"
          }
        }
      }
    },
    "AnalyticalStorageSchemaType": {
      "type": "string",
      "description": "Describes the types of schema for analytical storage.",
      "enum": [
        "WellDefined",
        "FullFidelity"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "AnalyticalStorageSchemaType"
      }
    },
    "CreateMode": {
      "description": "Enum to indicate the mode of account creation.",
      "type": "string",
      "default": "Default",
      "enum": [
        "Default",
        "Restore"
      ],
      "x-ms-enum": {
        "name": "CreateMode",
        "modelAsString": true
      }
    },
    "RestoreParameters": {
      "type": "object",
      "description": "Parameters to indicate the information about the restore.",
      "x-ms-mutability": [
        "read",
        "create"
      ],
      "properties": {
        "restoreMode": {
          "type": "string",
          "enum": [
            "PointInTime"
          ],
          "description": "Describes the mode of the restore.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "RestoreMode"
          }
        },
        "databasesToRestore": {
          "type": "array",
          "description": "List of specific databases available for restore.",
          "items": {
            "type": "object",
            "description": "Specific Databases to restore.",
            "properties": {
              "databaseName": {
                "type": "string",
                "description": "The name of the database available for restore."
              },
              "collectionNames": {
                "type": "array",
                "description": "The names of the collections available for restore.",
                "items": {
                  "type": "string",
                  "description": "The name of the collection."
                }
              }
            }
          }
        },
        "gremlinDatabasesToRestore": {
          "type": "array",
          "description": "List of specific gremlin databases available for restore.",
          "items": {
            "type": "object",
            "description": "Specific Gremlin Databases to restore.",
            "properties": {
              "databaseName": {
                "type": "string",
                "description": "The name of the gremlin database available for restore."
              },
              "graphNames": {
                "type": "array",
                "description": "The names of the graphs available for restore.",
                "items": {
                  "type": "string",
                  "description": "The name of the graph."
                }
              }
            }
          }
        },
        "tablesToRestore": {
          "type": "array",
          "description": "List of specific tables available for restore.",
          "items": {
            "type": "string",
            "description": "The name of the table."
          }
        }
      },
      "allOf": [
        {
          "type": "object",
          "description": "Parameters to indicate the information about the restore.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "restoreSource": {
              "type": "string",
              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
            },
            "restoreTimestampInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Time to which the account has to be restored (ISO-8601 format)."
            },
            "restoreWithTtlDisabled": {
              "type": "boolean",
              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
            }
          }
        }
      ]
    },
    "RestoreParametersBase": {
      "type": "object",
      "description": "Parameters to indicate the information about the restore.",
      "x-ms-mutability": [
        "read",
        "create"
      ],
      "properties": {
        "restoreSource": {
          "type": "string",
          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
        },
        "restoreTimestampInUtc": {
          "type": "string",
          "format": "date-time",
          "description": "Time to which the account has to be restored (ISO-8601 format)."
        },
        "restoreWithTtlDisabled": {
          "type": "boolean",
          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
        }
      }
    },
    "ResourceRestoreParameters": {
      "type": "object",
      "description": "Parameters to indicate the information about the restore.",
      "x-ms-mutability": [
        "read",
        "create"
      ],
      "allOf": [
        {
          "type": "object",
          "description": "Parameters to indicate the information about the restore.",
          "x-ms-mutability": [
            "read",
            "create"
          ],
          "properties": {
            "restoreSource": {
              "type": "string",
              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
            },
            "restoreTimestampInUtc": {
              "type": "string",
              "format": "date-time",
              "description": "Time to which the account has to be restored (ISO-8601 format)."
            },
            "restoreWithTtlDisabled": {
              "type": "boolean",
              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
            }
          }
        }
      ]
    },
    "DatabaseRestoreResource": {
      "type": "object",
      "description": "Specific Databases to restore.",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "The name of the database available for restore."
        },
        "collectionNames": {
          "type": "array",
          "description": "The names of the collections available for restore.",
          "items": {
            "type": "string",
            "description": "The name of the collection."
          }
        }
      }
    },
    "GremlinDatabaseRestoreResource": {
      "type": "object",
      "description": "Specific Gremlin Databases to restore.",
      "properties": {
        "databaseName": {
          "type": "string",
          "description": "The name of the gremlin database available for restore."
        },
        "graphNames": {
          "type": "array",
          "description": "The names of the graphs available for restore.",
          "items": {
            "type": "string",
            "description": "The name of the graph."
          }
        }
      }
    },
    "CollectionName": {
      "type": "string",
      "description": "The name of the collection."
    },
    "GraphName": {
      "type": "string",
      "description": "The name of the graph."
    },
    "TableName": {
      "type": "string",
      "description": "The name of the table."
    },
    "BackupPolicy": {
      "type": "object",
      "description": "The object representing the policy for taking backups on an account.",
      "discriminator": "type",
      "properties": {
        "type": {
          "description": "Describes the mode of backups.",
          "type": "string",
          "enum": [
            "Periodic",
            "Continuous"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BackupPolicyType"
          }
        },
        "migrationState": {
          "description": "The object representing the state of the migration between the backup policies.",
          "type": "object",
          "properties": {
            "status": {
              "description": "Describes the status of migration between backup policy types.",
              "type": "string",
              "enum": [
                "Invalid",
                "InProgress",
                "Completed",
                "Failed"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "BackupPolicyMigrationStatus"
              }
            },
            "targetType": {
              "description": "Describes the target backup policy type of the backup policy migration.",
              "type": "string",
              "enum": [
                "Periodic",
                "Continuous"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "BackupPolicyType"
              }
            },
            "startTime": {
              "type": "string",
              "format": "date-time",
              "description": "Time at which the backup policy migration started (ISO-8601 format)."
            }
          }
        }
      },
      "required": [
        "type"
      ]
    },
    "BackupPolicyType": {
      "description": "Describes the mode of backups.",
      "type": "string",
      "enum": [
        "Periodic",
        "Continuous"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "BackupPolicyType"
      }
    },
    "BackupPolicyMigrationState": {
      "type": "object",
      "description": "The object representing the state of the migration between the backup policies.",
      "properties": {
        "status": {
          "description": "Describes the status of migration between backup policy types.",
          "type": "string",
          "enum": [
            "Invalid",
            "InProgress",
            "Completed",
            "Failed"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BackupPolicyMigrationStatus"
          }
        },
        "targetType": {
          "description": "Describes the target backup policy type of the backup policy migration.",
          "type": "string",
          "enum": [
            "Periodic",
            "Continuous"
          ],
          "x-ms-enum": {
            "modelAsString": true,
            "name": "BackupPolicyType"
          }
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Time at which the backup policy migration started (ISO-8601 format)."
        }
      }
    },
    "BackupPolicyMigrationStatus": {
      "description": "Describes the status of migration between backup policy types.",
      "type": "string",
      "enum": [
        "Invalid",
        "InProgress",
        "Completed",
        "Failed"
      ],
      "x-ms-enum": {
        "modelAsString": true,
        "name": "BackupPolicyMigrationStatus"
      }
    },
    "PeriodicModeBackupPolicy": {
      "description": "The object representing periodic mode backup policy.",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "description": "The object representing the policy for taking backups on an account.",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Describes the mode of backups.",
              "type": "string",
              "enum": [
                "Periodic",
                "Continuous"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "BackupPolicyType"
              }
            },
            "migrationState": {
              "description": "The object representing the state of the migration between the backup policies.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Describes the status of migration between backup policy types.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InProgress",
                    "Completed",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "BackupPolicyMigrationStatus"
                  }
                },
                "targetType": {
                  "description": "Describes the target backup policy type of the backup policy migration.",
                  "type": "string",
                  "enum": [
                    "Periodic",
                    "Continuous"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "BackupPolicyType"
                  }
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time at which the backup policy migration started (ISO-8601 format)."
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "periodicModeProperties": {
          "type": "object",
          "description": "Configuration values for periodic mode backup",
          "properties": {
            "backupIntervalInMinutes": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "description": "An integer representing the interval in minutes between two backups"
            },
            "backupRetentionIntervalInHours": {
              "type": "integer",
              "format": "int32",
              "minimum": 0,
              "description": "An integer representing the time (in hours) that each backup is retained"
            },
            "backupStorageRedundancy": {
              "description": "Enum to indicate type of backup storage redundancy.",
              "type": "string",
              "enum": [
                "Geo",
                "Local",
                "Zone"
              ],
              "x-ms-enum": {
                "name": "BackupStorageRedundancy",
                "modelAsString": true
              }
            }
          }
        }
      },
      "x-ms-discriminator-value": "Periodic"
    },
    "ContinuousModeBackupPolicy": {
      "description": "The object representing continuous mode backup policy.",
      "type": "object",
      "allOf": [
        {
          "type": "object",
          "description": "The object representing the policy for taking backups on an account.",
          "discriminator": "type",
          "properties": {
            "type": {
              "description": "Describes the mode of backups.",
              "type": "string",
              "enum": [
                "Periodic",
                "Continuous"
              ],
              "x-ms-enum": {
                "modelAsString": true,
                "name": "BackupPolicyType"
              }
            },
            "migrationState": {
              "description": "The object representing the state of the migration between the backup policies.",
              "type": "object",
              "properties": {
                "status": {
                  "description": "Describes the status of migration between backup policy types.",
                  "type": "string",
                  "enum": [
                    "Invalid",
                    "InProgress",
                    "Completed",
                    "Failed"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "BackupPolicyMigrationStatus"
                  }
                },
                "targetType": {
                  "description": "Describes the target backup policy type of the backup policy migration.",
                  "type": "string",
                  "enum": [
                    "Periodic",
                    "Continuous"
                  ],
                  "x-ms-enum": {
                    "modelAsString": true,
                    "name": "BackupPolicyType"
                  }
                },
                "startTime": {
                  "type": "string",
                  "format": "date-time",
                  "description": "Time at which the backup policy migration started (ISO-8601 format)."
                }
              }
            }
          },
          "required": [
            "type"
          ]
        }
      ],
      "properties": {
        "continuousModeProperties": {
          "type": "object",
          "description": "Configuration values for continuous mode backup",
          "properties": {
            "tier": {
              "description": "Enum to indicate type of Continuous backup mode",
              "type": "string",
              "enum": [
                "Continuous7Days",
                "Continuous30Days"
              ],
              "x-ms-enum": {
                "name": "ContinuousTier",
                "modelAsString": true
              }
            }
          }
        }
      },
      "x-ms-discriminator-value": "Continuous"
    },
    "PeriodicModeProperties": {
      "type": "object",
      "description": "Configuration values for periodic mode backup",
      "properties": {
        "backupIntervalInMinutes": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "An integer representing the interval in minutes between two backups"
        },
        "backupRetentionIntervalInHours": {
          "type": "integer",
          "format": "int32",
          "minimum": 0,
          "description": "An integer representing the time (in hours) that each backup is retained"
        },
        "backupStorageRedundancy": {
          "description": "Enum to indicate type of backup storage redundancy.",
          "type": "string",
          "enum": [
            "Geo",
            "Local",
            "Zone"
          ],
          "x-ms-enum": {
            "name": "BackupStorageRedundancy",
            "modelAsString": true
          }
        }
      }
    },
    "ContinuousModeProperties": {
      "type": "object",
      "description": "Configuration values for periodic mode backup",
      "properties": {
        "tier": {
          "description": "Enum to indicate type of Continuous backup mode",
          "type": "string",
          "enum": [
            "Continuous7Days",
            "Continuous30Days"
          ],
          "x-ms-enum": {
            "name": "ContinuousTier",
            "modelAsString": true
          }
        }
      }
    },
    "LocationListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "Cosmos DB location get result",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the database account."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the database account."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "properties": {
                "type": "object",
                "description": "Cosmos DB location metadata",
                "properties": {
                  "supportsAvailabilityZone": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Flag indicating whether the location supports availability zones or not."
                  },
                  "isResidencyRestricted": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Flag indicating whether the location is residency sensitive."
                  },
                  "backupStorageRedundancies": {
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "description": "Enum to indicate type of backup storage redundancy.",
                      "type": "string",
                      "enum": [
                        "Geo",
                        "Local",
                        "Zone"
                      ],
                      "x-ms-enum": {
                        "name": "BackupStorageRedundancy",
                        "modelAsString": true
                      }
                    },
                    "description": "The properties of available backup storage redundancies."
                  },
                  "isSubscriptionRegionAccessAllowedForRegular": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Flag indicating whether the subscription have access in region for Non-Availability Zones."
                  },
                  "isSubscriptionRegionAccessAllowedForAz": {
                    "type": "boolean",
                    "readOnly": true,
                    "description": "Flag indicating whether the subscription have access in region for Availability Zones(Az)."
                  },
                  "status": {
                    "readOnly": true,
                    "type": "string",
                    "description": "Enum to indicate current buildout status of the region.",
                    "enum": [
                      "Uninitialized",
                      "Initializing",
                      "InternallyReady",
                      "Online",
                      "Deleting"
                    ],
                    "x-ms-enum": {
                      "name": "Status",
                      "modelAsString": true
                    }
                  }
                }
              }
            }
          },
          "description": "List of Cosmos DB locations and their properties."
        }
      },
      "description": "The List operation response, that contains Cosmos DB locations and their properties."
    },
    "LocationGetResult": {
      "description": "Cosmos DB location get result",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the database account."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database account."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "properties": {
          "type": "object",
          "description": "Cosmos DB location metadata",
          "properties": {
            "supportsAvailabilityZone": {
              "type": "boolean",
              "readOnly": true,
              "description": "Flag indicating whether the location supports availability zones or not."
            },
            "isResidencyRestricted": {
              "type": "boolean",
              "readOnly": true,
              "description": "Flag indicating whether the location is residency sensitive."
            },
            "backupStorageRedundancies": {
              "readOnly": true,
              "type": "array",
              "items": {
                "description": "Enum to indicate type of backup storage redundancy.",
                "type": "string",
                "enum": [
                  "Geo",
                  "Local",
                  "Zone"
                ],
                "x-ms-enum": {
                  "name": "BackupStorageRedundancy",
                  "modelAsString": true
                }
              },
              "description": "The properties of available backup storage redundancies."
            },
            "isSubscriptionRegionAccessAllowedForRegular": {
              "type": "boolean",
              "readOnly": true,
              "description": "Flag indicating whether the subscription have access in region for Non-Availability Zones."
            },
            "isSubscriptionRegionAccessAllowedForAz": {
              "type": "boolean",
              "readOnly": true,
              "description": "Flag indicating whether the subscription have access in region for Availability Zones(Az)."
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "description": "Enum to indicate current buildout status of the region.",
              "enum": [
                "Uninitialized",
                "Initializing",
                "InternallyReady",
                "Online",
                "Deleting"
              ],
              "x-ms-enum": {
                "name": "Status",
                "modelAsString": true
              }
            }
          }
        }
      }
    },
    "LocationProperties": {
      "description": "Cosmos DB location metadata",
      "type": "object",
      "properties": {
        "supportsAvailabilityZone": {
          "type": "boolean",
          "readOnly": true,
          "description": "Flag indicating whether the location supports availability zones or not."
        },
        "isResidencyRestricted": {
          "type": "boolean",
          "readOnly": true,
          "description": "Flag indicating whether the location is residency sensitive."
        },
        "backupStorageRedundancies": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "Enum to indicate type of backup storage redundancy.",
            "type": "string",
            "enum": [
              "Geo",
              "Local",
              "Zone"
            ],
            "x-ms-enum": {
              "name": "BackupStorageRedundancy",
              "modelAsString": true
            }
          },
          "description": "The properties of available backup storage redundancies."
        },
        "isSubscriptionRegionAccessAllowedForRegular": {
          "type": "boolean",
          "readOnly": true,
          "description": "Flag indicating whether the subscription have access in region for Non-Availability Zones."
        },
        "isSubscriptionRegionAccessAllowedForAz": {
          "type": "boolean",
          "readOnly": true,
          "description": "Flag indicating whether the subscription have access in region for Availability Zones(Az)."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "description": "Enum to indicate current buildout status of the region.",
          "enum": [
            "Uninitialized",
            "Initializing",
            "InternallyReady",
            "Online",
            "Deleting"
          ],
          "x-ms-enum": {
            "name": "Status",
            "modelAsString": true
          }
        }
      }
    },
    "BackupStorageRedundancy": {
      "description": "Enum to indicate type of backup storage redundancy.",
      "type": "string",
      "enum": [
        "Geo",
        "Local",
        "Zone"
      ],
      "x-ms-enum": {
        "name": "BackupStorageRedundancy",
        "modelAsString": true
      }
    },
    "ContinuousTier": {
      "description": "Enum to indicate type of Continuous backup tier.",
      "type": "string",
      "enum": [
        "Continuous7Days",
        "Continuous30Days"
      ],
      "x-ms-enum": {
        "name": "ContinuousTier",
        "modelAsString": true
      }
    },
    "MinimalTlsVersion": {
      "description": "Indicates the minimum allowed Tls version. The default value is Tls 1.2. Cassandra and Mongo APIs only work with Tls 1.2.",
      "type": "string",
      "enum": [
        "Tls",
        "Tls11",
        "Tls12"
      ],
      "x-ms-enum": {
        "name": "MinimalTlsVersion",
        "modelAsString": true
      }
    },
    "ListClusters": {
      "description": "List of managed Cassandra clusters.",
      "readOnly": true,
      "type": "object",
      "properties": {
        "value": {
          "description": "Container for the array of clusters.",
          "type": "array",
          "items": {
            "description": "Representation of a managed Cassandra cluster.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              },
              "tags": {
                "type": "object",
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
              },
              "identity": {
                "description": "Identity for the resource.",
                "type": "object",
                "properties": {
                  "principalId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The object id of the identity resource."
                  },
                  "tenantId": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The tenant id of the resource."
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of the resource.",
                    "enum": [
                      "SystemAssigned",
                      "None"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedCassandraResourceIdentityType",
                      "modelAsString": true
                    }
                  }
                }
              },
              "properties": {
                "type": "object",
                "description": "Properties of a managed Cassandra cluster.",
                "properties": {
                  "provisioningState": {
                    "description": "The status of the resource at the time the operation was called.",
                    "type": "string",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedCassandraProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "restoreFromBackupId": {
                    "type": "string",
                    "x-ms-mutability": [
                      "create"
                    ],
                    "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup."
                  },
                  "delegatedManagementSubnetId": {
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ],
                    "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'"
                  },
                  "cassandraVersion": {
                    "type": "string",
                    "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
                  },
                  "clusterNameOverride": {
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ],
                    "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property."
                  },
                  "authenticationMethod": {
                    "type": "string",
                    "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
                    "enum": [
                      "None",
                      "Cassandra",
                      "Ldap"
                    ],
                    "x-ms-enum": {
                      "name": "AuthenticationMethod",
                      "modelAsString": true
                    }
                  },
                  "initialCassandraAdminPassword": {
                    "x-ms-mutability": [
                      "create"
                    ],
                    "x-ms-secret": true,
                    "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
                    "type": "string"
                  },
                  "prometheusEndpoint": {
                    "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.",
                    "type": "object",
                    "properties": {
                      "ipAddress": {
                        "description": "IP address of this seed node.",
                        "type": "string"
                      }
                    }
                  },
                  "repairEnabled": {
                    "type": "boolean",
                    "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
                  },
                  "clientCertificates": {
                    "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "pem": {
                          "description": "PEM formatted public key.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalGossipCertificates": {
                    "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "pem": {
                          "description": "PEM formatted public key.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "gossipCertificates": {
                    "readOnly": true,
                    "x-ms-mutability": [
                      "read"
                    ],
                    "description": "List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "pem": {
                          "description": "PEM formatted public key.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "externalSeedNodes": {
                    "type": "array",
                    "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ipAddress": {
                          "description": "IP address of this seed node.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "seedNodes": {
                    "readOnly": true,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ipAddress": {
                          "description": "IP address of this seed node.",
                          "type": "string"
                        }
                      }
                    },
                    "description": "List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes."
                  },
                  "hoursBetweenBackups": {
                    "type": "integer",
                    "format": "int32",
                    "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
                  },
                  "deallocated": {
                    "type": "boolean",
                    "description": "Whether the cluster and associated data centers has been deallocated."
                  },
                  "cassandraAuditLoggingEnabled": {
                    "type": "boolean",
                    "description": "Whether Cassandra audit logging is enabled"
                  },
                  "provisionError": {
                    "description": "Error related to resource provisioning.",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "The code of error that occurred.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The message of the error.",
                        "type": "string"
                      },
                      "target": {
                        "description": "The target resource of the error.",
                        "type": "string"
                      },
                      "additionalErrorInfo": {
                        "description": "Additional information about the error.",
                        "type": "string"
                      }
                    }
                  },
                  "azureConnectionMethod": {
                    "type": "string",
                    "description": "How to connect to the azure services needed for running the cluster",
                    "enum": [
                      "None",
                      "VPN"
                    ],
                    "x-ms-enum": {
                      "name": "AzureConnectionType",
                      "modelAsString": true
                    }
                  },
                  "privateLinkResourceId": {
                    "readOnly": true,
                    "type": "string",
                    "format": "arm-id",
                    "x-ms-arm-id-details": {
                      "allowedResources": [
                        {
                          "type": "Microsoft.Network/privateLinkServices"
                        }
                      ]
                    },
                    "description": "If the Connection Method is VPN, this is the Id of the private link resource that the datacenters need to connect to."
                  }
                }
              }
            }
          }
        }
      }
    },
    "ManagedCassandraARMResourceProperties": {
      "type": "object",
      "description": "The core properties of ARM resources.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "identity": {
          "description": "Identity for the resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The object id of the identity resource."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant id of the resource."
            },
            "type": {
              "type": "string",
              "description": "The type of the resource.",
              "enum": [
                "SystemAssigned",
                "None"
              ],
              "x-ms-enum": {
                "name": "ManagedCassandraResourceIdentityType",
                "modelAsString": true
              }
            }
          }
        }
      },
      "x-ms-azure-resource": true
    },
    "ManagedCassandraManagedServiceIdentity": {
      "description": "Identity for the resource.",
      "type": "object",
      "properties": {
        "principalId": {
          "readOnly": true,
          "type": "string",
          "description": "The object id of the identity resource."
        },
        "tenantId": {
          "readOnly": true,
          "type": "string",
          "description": "The tenant id of the resource."
        },
        "type": {
          "type": "string",
          "description": "The type of the resource.",
          "enum": [
            "SystemAssigned",
            "None"
          ],
          "x-ms-enum": {
            "name": "ManagedCassandraResourceIdentityType",
            "modelAsString": true
          }
        }
      }
    },
    "ManagedCassandraProvisioningState": {
      "description": "The status of the resource at the time the operation was called.",
      "type": "string",
      "enum": [
        "Creating",
        "Updating",
        "Deleting",
        "Succeeded",
        "Failed",
        "Canceled"
      ],
      "x-ms-enum": {
        "name": "ManagedCassandraProvisioningState",
        "modelAsString": true
      }
    },
    "ClusterResource": {
      "description": "Representation of a managed Cassandra cluster.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags are a list of key-value pairs that describe the resource. These tags can be used in viewing and grouping this resource (across resource groups). A maximum of 15 tags can be provided for a resource. Each tag must have a key no greater than 128 characters and value no greater than 256 characters. For example, the default experience for a template type is set with \"defaultExperience\": \"Cassandra\". Current \"defaultExperience\" values also include \"Table\", \"Graph\", \"DocumentDB\", and \"MongoDB\"."
        },
        "identity": {
          "description": "Identity for the resource.",
          "type": "object",
          "properties": {
            "principalId": {
              "readOnly": true,
              "type": "string",
              "description": "The object id of the identity resource."
            },
            "tenantId": {
              "readOnly": true,
              "type": "string",
              "description": "The tenant id of the resource."
            },
            "type": {
              "type": "string",
              "description": "The type of the resource.",
              "enum": [
                "SystemAssigned",
                "None"
              ],
              "x-ms-enum": {
                "name": "ManagedCassandraResourceIdentityType",
                "modelAsString": true
              }
            }
          }
        },
        "properties": {
          "type": "object",
          "description": "Properties of a managed Cassandra cluster.",
          "properties": {
            "provisioningState": {
              "description": "The status of the resource at the time the operation was called.",
              "type": "string",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ManagedCassandraProvisioningState",
                "modelAsString": true
              }
            },
            "restoreFromBackupId": {
              "type": "string",
              "x-ms-mutability": [
                "create"
              ],
              "description": "To create an empty cluster, omit this field or set it to null. To restore a backup into a new cluster, set this field to the resource id of the backup."
            },
            "delegatedManagementSubnetId": {
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ],
              "description": "Resource id of a subnet that this cluster's management service should have its network interface attached to. The subnet must be routable to all subnets that will be delegated to data centers. The resource id must be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'"
            },
            "cassandraVersion": {
              "type": "string",
              "description": "Which version of Cassandra should this cluster converge to running (e.g., 3.11). When updated, the cluster may take some time to migrate to the new version."
            },
            "clusterNameOverride": {
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ],
              "description": "If you need to set the clusterName property in cassandra.yaml to something besides the resource name of the cluster, set the value to use on this property."
            },
            "authenticationMethod": {
              "type": "string",
              "description": "Which authentication method Cassandra should use to authenticate clients. 'None' turns off authentication, so should not be used except in emergencies. 'Cassandra' is the default password based authentication. The default is 'Cassandra'.",
              "enum": [
                "None",
                "Cassandra",
                "Ldap"
              ],
              "x-ms-enum": {
                "name": "AuthenticationMethod",
                "modelAsString": true
              }
            },
            "initialCassandraAdminPassword": {
              "x-ms-mutability": [
                "create"
              ],
              "x-ms-secret": true,
              "description": "Initial password for clients connecting as admin to the cluster. Should be changed after cluster creation. Returns null on GET. This field only applies when the authenticationMethod field is 'Cassandra'.",
              "type": "string"
            },
            "prometheusEndpoint": {
              "description": "Hostname or IP address where the Prometheus endpoint containing data about the managed Cassandra nodes can be reached.",
              "type": "object",
              "properties": {
                "ipAddress": {
                  "description": "IP address of this seed node.",
                  "type": "string"
                }
              }
            },
            "repairEnabled": {
              "type": "boolean",
              "description": "Should automatic repairs run on this cluster? If omitted, this is true, and should stay true unless you are running a hybrid cluster where you are already doing your own repairs."
            },
            "clientCertificates": {
              "description": "List of TLS certificates used to authorize clients connecting to the cluster. All connections are TLS encrypted whether clientCertificates is set or not, but if clientCertificates is set, the managed Cassandra cluster will reject all connections not bearing a TLS client certificate that can be validated from one or more of the public certificates in this property.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "pem": {
                    "description": "PEM formatted public key.",
                    "type": "string"
                  }
                }
              }
            },
            "externalGossipCertificates": {
              "description": "List of TLS certificates used to authorize gossip from unmanaged data centers. The TLS certificates of all nodes in unmanaged data centers must be verifiable using one of the certificates provided in this property.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "pem": {
                    "description": "PEM formatted public key.",
                    "type": "string"
                  }
                }
              }
            },
            "gossipCertificates": {
              "readOnly": true,
              "x-ms-mutability": [
                "read"
              ],
              "description": "List of TLS certificates that unmanaged nodes must trust for gossip with managed nodes. All managed nodes will present TLS client certificates that are verifiable using one of the certificates provided in this property.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "pem": {
                    "description": "PEM formatted public key.",
                    "type": "string"
                  }
                }
              }
            },
            "externalSeedNodes": {
              "type": "array",
              "description": "List of IP addresses of seed nodes in unmanaged data centers. These will be added to the seed node lists of all managed nodes.",
              "items": {
                "type": "object",
                "properties": {
                  "ipAddress": {
                    "description": "IP address of this seed node.",
                    "type": "string"
                  }
                }
              }
            },
            "seedNodes": {
              "readOnly": true,
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "ipAddress": {
                    "description": "IP address of this seed node.",
                    "type": "string"
                  }
                }
              },
              "description": "List of IP addresses of seed nodes in the managed data centers. These should be added to the seed node lists of all unmanaged nodes."
            },
            "hoursBetweenBackups": {
              "type": "integer",
              "format": "int32",
              "description": "(Deprecated) Number of hours to wait between taking a backup of the cluster."
            },
            "deallocated": {
              "type": "boolean",
              "description": "Whether the cluster and associated data centers has been deallocated."
            },
            "cassandraAuditLoggingEnabled": {
              "type": "boolean",
              "description": "Whether Cassandra audit logging is enabled"
            },
            "provisionError": {
              "description": "Error related to resource provisioning.",
              "type": "object",
              "properties": {
                "code": {
                  "description": "The code of error that occurred.",
                  "type": "string"
                },
                "message": {
                  "description": "The message of the error.",
                  "type": "string"
                },
                "target": {
                  "description": "The target resource of the error.",
                  "type": "string"
                },
                "additionalErrorInfo": {
                  "description": "Additional information about the error.",
                  "type": "string"
                }
              }
            },
            "azureConnectionMethod": {
              "type": "string",
              "description": "How to connect to the azure services needed for running the cluster",
              "enum": [
                "None",
                "VPN"
              ],
              "x-ms-enum": {
                "name": "AzureConnectionType",
                "modelAsString": true
              }
            },
            "privateLinkResourceId": {
              "readOnly": true,
              "type": "string",
              "format": "arm-id",
              "x-ms-arm-id-details": {
                "allowedResources": [
                  {
                    "type": "Microsoft.Network/privateLinkServices"
                  }
                ]
              },
              "description": "If the Connection Method is VPN, this is the Id of the private link resource that the datacenters need to connect to."
            }
          }
        }
      }
    },
    "ManagedCassandraNodeStatus": {
      "type": "string",
      "description": "Indicates whether the node is functioning or not.",
      "enum": [
        "Up",
        "Down"
      ],
      "x-ms-enum": {
        "name": "NodeStatus",
        "modelAsString": true
      }
    },
    "ManagedCassandraNodeState": {
      "type": "string",
      "description": "The state of the node in Cassandra ring.",
      "enum": [
        "Normal",
        "Leaving",
        "Joining",
        "Moving",
        "Stopped"
      ],
      "x-ms-enum": {
        "name": "NodeState",
        "modelAsString": true
      }
    },
    "CassandraClusterPublicStatus": {
      "type": "object",
      "description": "Properties of a managed Cassandra cluster public status.",
      "properties": {
        "eTag": {
          "type": "string"
        },
        "reaperStatus": {
          "type": "object",
          "properties": {
            "healthy": {
              "type": "boolean"
            },
            "repairRunIds": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "repairSchedules": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "connectionErrors": {
          "type": "array",
          "description": "List relevant information about any connection errors to the Datacenters.",
          "items": {
            "type": "object",
            "properties": {
              "connectionState": {
                "description": "The kind of connection error that occurred.",
                "type": "string",
                "enum": [
                  "Unknown",
                  "OK",
                  "OperatorToDataCenterNetworkError",
                  "DatacenterToDatacenterNetworkError",
                  "InternalOperatorToDataCenterCertificateError",
                  "InternalError"
                ],
                "x-ms-enum": {
                  "name": "ConnectionState",
                  "modelAsString": true
                }
              },
              "iPFrom": {
                "description": "The IP of host that originated the failed connection.",
                "type": "string"
              },
              "iPTo": {
                "description": "The IP that the connection attempted to reach.",
                "type": "string"
              },
              "port": {
                "description": "The TCP port the connection was attempted on.",
                "type": "integer",
                "format": "int32"
              },
              "exception": {
                "description": "Detailed error message about the failed connection.",
                "type": "string"
              }
            }
          }
        },
        "errors": {
          "type": "array",
          "description": "List relevant information about any errors about cluster, data center and connection error.",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "description": "The code of error that occurred.",
                "type": "string"
              },
              "message": {
                "description": "The message of the error.",
                "type": "string"
              },
              "target": {
                "description": "The target resource of the error.",
                "type": "string"
              },
              "additionalErrorInfo": {
                "description": "Additional information about the error.",
                "type": "string"
              }
            }
          }
        },
        "dataCenters": {
          "type": "array",
          "description": "List of the status of each datacenter in this cluster.",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "The name of this Datacenter."
              },
              "seedNodes": {
                "type": "array",
                "description": "A list of all seed nodes in the cluster, managed and unmanaged.",
                "items": {
                  "type": "string"
                }
              },
              "nodes": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "address": {
                      "type": "string",
                      "description": "The node's IP address."
                    },
                    "state": {
                      "type": "string",
                      "description": "The state of the node in Cassandra ring.",
                      "enum": [
                        "Normal",
                        "Leaving",
                        "Joining",
                        "Moving",
                        "Stopped"
                      ],
                      "x-ms-enum": {
                        "name": "NodeState",
                        "modelAsString": true
                      }
                    },
                    "status": {
                      "type": "string"
                    },
                    "cassandraProcessStatus": {
                      "type": "string",
                      "description": "Cassandra service status on this node"
                    },
                    "load": {
                      "type": "string",
                      "description": "The amount of file system data in the data directory (e.g., 47.66 kB), excluding all content in the snapshots subdirectories. Because all SSTable data files are included, any data that is not cleaned up (such as TTL-expired cells or tombstones) is counted."
                    },
                    "tokens": {
                      "type": "array",
                      "description": "List of tokens this node covers.",
                      "items": {
                        "type": "string"
                      }
                    },
                    "size": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "hostID": {
                      "description": "The network ID of the node.",
                      "type": "string"
                    },
                    "rack": {
                      "description": "The rack this node is part of.",
                      "type": "string"
                    },
                    "timestamp": {
                      "description": "The timestamp when these statistics were captured.",
                      "type": "string"
                    },
                    "diskUsedKB": {
                      "description": "The amount of disk used, in kB, of the directory /var/lib/cassandra.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "diskFreeKB": {
                      "description": "The amount of disk free, in kB, of the directory /var/lib/cassandra.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "memoryUsedKB": {
                      "description": "Used memory (calculated as total - free - buffers - cache), in kB.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "memoryBuffersAndCachedKB": {
                      "description": "Memory used by kernel buffers (Buffers in /proc/meminfo) and page cache and slabs (Cached and SReclaimable in /proc/meminfo), in kB.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "memoryFreeKB": {
                      "description": "Unused memory (MemFree and SwapFree in /proc/meminfo), in kB.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "memoryTotalKB": {
                      "description": "Total installed memory (MemTotal and SwapTotal in /proc/meminfo), in kB.",
                      "type": "integer",
                      "format": "int64"
                    },
                    "cpuUsage": {
                      "description": "A float representing the current system-wide CPU utilization as a percentage.",
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "ManagedCassandraReaperStatus": {
      "type": "object",
      "properties": {
        "healthy": {
          "type": "boolean"
        },
        "repairRunIds": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "repairSchedules": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "ConnectionError": {
      "type": "object",
      "properties": {
        "connectionState": {
          "description": "The kind of connection error that occurred.",
          "type": "string",
          "enum": [
            "Unknown",
            "OK",
            "OperatorToDataCenterNetworkError",
            "DatacenterToDatacenterNetworkError",
            "InternalOperatorToDataCenterCertificateError",
            "InternalError"
          ],
          "x-ms-enum": {
            "name": "ConnectionState",
            "modelAsString": true
          }
        },
        "iPFrom": {
          "description": "The IP of host that originated the failed connection.",
          "type": "string"
        },
        "iPTo": {
          "description": "The IP that the connection attempted to reach.",
          "type": "string"
        },
        "port": {
          "description": "The TCP port the connection was attempted on.",
          "type": "integer",
          "format": "int32"
        },
        "exception": {
          "description": "Detailed error message about the failed connection.",
          "type": "string"
        }
      }
    },
    "CassandraError": {
      "type": "object",
      "properties": {
        "code": {
          "description": "The code of error that occurred.",
          "type": "string"
        },
        "message": {
          "description": "The message of the error.",
          "type": "string"
        },
        "target": {
          "description": "The target resource of the error.",
          "type": "string"
        },
        "additionalErrorInfo": {
          "description": "Additional information about the error.",
          "type": "string"
        }
      }
    },
    "CommandPostBody": {
      "description": "Specification of which command to run where",
      "type": "object",
      "required": [
        "command",
        "host"
      ],
      "properties": {
        "command": {
          "type": "string",
          "description": "The command which should be run"
        },
        "arguments": {
          "type": "object",
          "description": "The arguments for the command to be run",
          "additionalProperties": {
            "type": "string"
          }
        },
        "host": {
          "type": "string",
          "description": "IP address of the cassandra host to run the command on"
        },
        "cassandra-stop-start": {
          "type": "boolean",
          "description": "If true, stops cassandra before executing the command and then start it again"
        },
        "readwrite": {
          "type": "boolean",
          "description": "If true, allows the command to *write* to the cassandra directory, otherwise read-only."
        }
      }
    },
    "CommandOutput": {
      "description": "Response of /command api",
      "type": "object",
      "properties": {
        "commandOutput": {
          "type": "string",
          "description": "Output of the command."
        }
      }
    },
    "ListDataCenters": {
      "description": "List of managed Cassandra data centers and their properties.",
      "type": "object",
      "properties": {
        "value": {
          "description": "Container for array of data centers.",
          "type": "array",
          "readOnly": true,
          "items": {
            "description": "A managed Cassandra data center.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the database account."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the database account."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "properties": {
                "description": "Properties of a managed Cassandra data center.",
                "type": "object",
                "properties": {
                  "provisioningState": {
                    "description": "The status of the resource at the time the operation was called.",
                    "type": "string",
                    "enum": [
                      "Creating",
                      "Updating",
                      "Deleting",
                      "Succeeded",
                      "Failed",
                      "Canceled"
                    ],
                    "x-ms-enum": {
                      "name": "ManagedCassandraProvisioningState",
                      "modelAsString": true
                    }
                  },
                  "dataCenterLocation": {
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ],
                    "description": "The region this data center should be created in."
                  },
                  "delegatedSubnetId": {
                    "type": "string",
                    "x-ms-mutability": [
                      "create",
                      "read"
                    ],
                    "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'."
                  },
                  "nodeCount": {
                    "type": "integer",
                    "format": "int32",
                    "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster."
                  },
                  "seedNodes": {
                    "readOnly": true,
                    "type": "array",
                    "description": "IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "ipAddress": {
                          "description": "IP address of this seed node.",
                          "type": "string"
                        }
                      }
                    }
                  },
                  "base64EncodedCassandraYamlFragment": {
                    "type": "string",
                    "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed."
                  },
                  "managedDiskCustomerKeyUri": {
                    "type": "string",
                    "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key."
                  },
                  "backupStorageCustomerKeyUri": {
                    "type": "string",
                    "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account."
                  },
                  "sku": {
                    "type": "string",
                    "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2"
                  },
                  "diskSku": {
                    "type": "string",
                    "description": "Disk SKU used for data centers. Default value is P30."
                  },
                  "diskCapacity": {
                    "type": "integer",
                    "format": "int32",
                    "description": "Number of disks attached to each node. Default is 4."
                  },
                  "availabilityZone": {
                    "type": "boolean",
                    "description": "If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines."
                  },
                  "authenticationMethodLdapProperties": {
                    "type": "object",
                    "description": "Ldap authentication method properties. This feature is in preview.",
                    "properties": {
                      "serverHostname": {
                        "description": "Hostname of the LDAP server.",
                        "type": "string"
                      },
                      "serverPort": {
                        "description": "Port of the LDAP server.",
                        "type": "integer",
                        "format": "int32"
                      },
                      "serviceUserDistinguishedName": {
                        "description": "Distinguished name of the look up user account, who can look up user details on authentication.",
                        "type": "string"
                      },
                      "serviceUserPassword": {
                        "description": "Password of the look up user.",
                        "type": "string"
                      },
                      "searchBaseDistinguishedName": {
                        "description": "Distinguished name of the object to start the recursive search of users from.",
                        "type": "string"
                      },
                      "searchFilterTemplate": {
                        "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.",
                        "type": "string"
                      },
                      "serverCertificates": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "pem": {
                              "description": "PEM formatted public key.",
                              "type": "string"
                            }
                          }
                        }
                      },
                      "connectionTimeoutInMs": {
                        "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms.",
                        "type": "integer",
                        "format": "int32"
                      }
                    }
                  },
                  "deallocated": {
                    "type": "boolean",
                    "description": "Whether the data center has been deallocated."
                  },
                  "provisionError": {
                    "description": "Error related to resource provisioning.",
                    "type": "object",
                    "properties": {
                      "code": {
                        "description": "The code of error that occurred.",
                        "type": "string"
                      },
                      "message": {
                        "description": "The message of the error.",
                        "type": "string"
                      },
                      "target": {
                        "description": "The target resource of the error.",
                        "type": "string"
                      },
                      "additionalErrorInfo": {
                        "description": "Additional information about the error.",
                        "type": "string"
                      }
                    }
                  },
                  "privateEndpointIpAddress": {
                    "type": "string",
                    "description": "Ip of the VPN Endpoint for this data center."
                  }
                }
              }
            }
          }
        }
      }
    },
    "SeedNode": {
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "IP address of this seed node.",
          "type": "string"
        }
      }
    },
    "Certificate": {
      "type": "object",
      "properties": {
        "pem": {
          "description": "PEM formatted public key.",
          "type": "string"
        }
      }
    },
    "DataCenterResource": {
      "description": "A managed Cassandra data center.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the database account."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database account."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "properties": {
          "description": "Properties of a managed Cassandra data center.",
          "type": "object",
          "properties": {
            "provisioningState": {
              "description": "The status of the resource at the time the operation was called.",
              "type": "string",
              "enum": [
                "Creating",
                "Updating",
                "Deleting",
                "Succeeded",
                "Failed",
                "Canceled"
              ],
              "x-ms-enum": {
                "name": "ManagedCassandraProvisioningState",
                "modelAsString": true
              }
            },
            "dataCenterLocation": {
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ],
              "description": "The region this data center should be created in."
            },
            "delegatedSubnetId": {
              "type": "string",
              "x-ms-mutability": [
                "create",
                "read"
              ],
              "description": "Resource id of a subnet the nodes in this data center should have their network interfaces connected to. The subnet must be in the same region specified in 'dataCenterLocation' and must be able to route to the subnet specified in the cluster's 'delegatedManagementSubnetId' property. This resource id will be of the form '/subscriptions/<subscription id>/resourceGroups/<resource group>/providers/Microsoft.Network/virtualNetworks/<virtual network>/subnets/<subnet>'."
            },
            "nodeCount": {
              "type": "integer",
              "format": "int32",
              "description": "The number of nodes the data center should have. This is the desired number. After it is set, it may take some time for the data center to be scaled to match. To monitor the number of nodes and their status, use the fetchNodeStatus method on the cluster."
            },
            "seedNodes": {
              "readOnly": true,
              "type": "array",
              "description": "IP addresses for seed nodes in this data center. This is for reference. Generally you will want to use the seedNodes property on the cluster, which aggregates the seed nodes from all data centers in the cluster.",
              "items": {
                "type": "object",
                "properties": {
                  "ipAddress": {
                    "description": "IP address of this seed node.",
                    "type": "string"
                  }
                }
              }
            },
            "base64EncodedCassandraYamlFragment": {
              "type": "string",
              "description": "A fragment of a cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this data center. The fragment should be Base64 encoded, and only a subset of keys are allowed."
            },
            "managedDiskCustomerKeyUri": {
              "type": "string",
              "description": "Key uri to use for encryption of managed disks. Ensure the system assigned identity of the cluster has been assigned appropriate permissions(key get/wrap/unwrap permissions) on the key."
            },
            "backupStorageCustomerKeyUri": {
              "type": "string",
              "description": "Indicates the Key Uri of the customer key to use for encryption of the backup storage account."
            },
            "sku": {
              "type": "string",
              "description": "Virtual Machine SKU used for data centers. Default value is Standard_DS14_v2"
            },
            "diskSku": {
              "type": "string",
              "description": "Disk SKU used for data centers. Default value is P30."
            },
            "diskCapacity": {
              "type": "integer",
              "format": "int32",
              "description": "Number of disks attached to each node. Default is 4."
            },
            "availabilityZone": {
              "type": "boolean",
              "description": "If the data center has Availability Zone support, apply it to the Virtual Machine ScaleSet that host the cassandra data center virtual machines."
            },
            "authenticationMethodLdapProperties": {
              "type": "object",
              "description": "Ldap authentication method properties. This feature is in preview.",
              "properties": {
                "serverHostname": {
                  "description": "Hostname of the LDAP server.",
                  "type": "string"
                },
                "serverPort": {
                  "description": "Port of the LDAP server.",
                  "type": "integer",
                  "format": "int32"
                },
                "serviceUserDistinguishedName": {
                  "description": "Distinguished name of the look up user account, who can look up user details on authentication.",
                  "type": "string"
                },
                "serviceUserPassword": {
                  "description": "Password of the look up user.",
                  "type": "string"
                },
                "searchBaseDistinguishedName": {
                  "description": "Distinguished name of the object to start the recursive search of users from.",
                  "type": "string"
                },
                "searchFilterTemplate": {
                  "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.",
                  "type": "string"
                },
                "serverCertificates": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "pem": {
                        "description": "PEM formatted public key.",
                        "type": "string"
                      }
                    }
                  }
                },
                "connectionTimeoutInMs": {
                  "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms.",
                  "type": "integer",
                  "format": "int32"
                }
              }
            },
            "deallocated": {
              "type": "boolean",
              "description": "Whether the data center has been deallocated."
            },
            "provisionError": {
              "description": "Error related to resource provisioning.",
              "type": "object",
              "properties": {
                "code": {
                  "description": "The code of error that occurred.",
                  "type": "string"
                },
                "message": {
                  "description": "The message of the error.",
                  "type": "string"
                },
                "target": {
                  "description": "The target resource of the error.",
                  "type": "string"
                },
                "additionalErrorInfo": {
                  "description": "Additional information about the error.",
                  "type": "string"
                }
              }
            },
            "privateEndpointIpAddress": {
              "type": "string",
              "description": "Ip of the VPN Endpoint for this data center."
            }
          }
        }
      }
    },
    "AuthenticationMethodLdapProperties": {
      "type": "object",
      "description": "Ldap authentication method properties. This feature is in preview.",
      "properties": {
        "serverHostname": {
          "description": "Hostname of the LDAP server.",
          "type": "string"
        },
        "serverPort": {
          "description": "Port of the LDAP server.",
          "type": "integer",
          "format": "int32"
        },
        "serviceUserDistinguishedName": {
          "description": "Distinguished name of the look up user account, who can look up user details on authentication.",
          "type": "string"
        },
        "serviceUserPassword": {
          "description": "Password of the look up user.",
          "type": "string"
        },
        "searchBaseDistinguishedName": {
          "description": "Distinguished name of the object to start the recursive search of users from.",
          "type": "string"
        },
        "searchFilterTemplate": {
          "description": "Template to use for searching. Defaults to (cn=%s) where %s will be replaced by the username used to login.",
          "type": "string"
        },
        "serverCertificates": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "pem": {
                "description": "PEM formatted public key.",
                "type": "string"
              }
            }
          }
        },
        "connectionTimeoutInMs": {
          "description": "Timeout for connecting to the LDAP server in miliseconds. The default is 5000 ms.",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "MongoRoleDefinitionResource": {
      "type": "object",
      "properties": {
        "roleName": {
          "type": "string",
          "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
        },
        "type": {
          "type": "string",
          "enum": [
            "BuiltInRole",
            "CustomRole"
          ],
          "description": "Indicates whether the Role Definition was built-in or user created.",
          "x-ms-enum": {
            "name": "MongoRoleDefinitionType",
            "modelAsString": false
          }
        },
        "databaseName": {
          "type": "string",
          "description": "The database name for which access is being granted for this Role Definition."
        },
        "privileges": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "resource": {
                "type": "object",
                "properties": {
                  "db": {
                    "type": "string",
                    "description": "The database name the role is applied."
                  },
                  "collection": {
                    "type": "string",
                    "description": "The collection name the role is applied."
                  }
                },
                "description": "An Azure Cosmos DB Mongo DB Resource."
              },
              "actions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "An array of actions that are allowed."
              }
            },
            "description": "The set of data plane operations permitted through this Role Definition."
          },
          "description": "A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege."
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "db": {
                "type": "string",
                "description": "The database name the role is applied."
              },
              "role": {
                "type": "string",
                "description": "The role name."
              }
            },
            "description": "The set of roles permitted through this Role Definition."
          },
          "description": "The set of roles inherited by this Role Definition."
        }
      },
      "description": "Azure Cosmos DB Mongo Role Definition resource object."
    },
    "MongoRoleDefinitionCreateUpdateParameters": {
      "description": "Parameters to create and update an Azure Cosmos DB Mongo Role Definition.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update an Azure Cosmos DB Mongo Role Definition.",
          "type": "object",
          "properties": {
            "roleName": {
              "type": "string",
              "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
            },
            "type": {
              "type": "string",
              "enum": [
                "BuiltInRole",
                "CustomRole"
              ],
              "description": "Indicates whether the Role Definition was built-in or user created.",
              "x-ms-enum": {
                "name": "MongoRoleDefinitionType",
                "modelAsString": false
              }
            },
            "databaseName": {
              "type": "string",
              "description": "The database name for which access is being granted for this Role Definition."
            },
            "privileges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "resource": {
                    "type": "object",
                    "properties": {
                      "db": {
                        "type": "string",
                        "description": "The database name the role is applied."
                      },
                      "collection": {
                        "type": "string",
                        "description": "The collection name the role is applied."
                      }
                    },
                    "description": "An Azure Cosmos DB Mongo DB Resource."
                  },
                  "actions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of actions that are allowed."
                  }
                },
                "description": "The set of data plane operations permitted through this Role Definition."
              },
              "description": "A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege."
            },
            "roles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "db": {
                    "type": "string",
                    "description": "The database name the role is applied."
                  },
                  "role": {
                    "type": "string",
                    "description": "The role name."
                  }
                },
                "description": "The set of roles permitted through this Role Definition."
              },
              "description": "The set of roles inherited by this Role Definition."
            }
          }
        }
      }
    },
    "MongoRoleDefinitionGetResults": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the database account."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database account."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties related to the Mongo Role Definition.",
          "type": "object",
          "properties": {
            "roleName": {
              "type": "string",
              "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
            },
            "type": {
              "type": "string",
              "enum": [
                "BuiltInRole",
                "CustomRole"
              ],
              "description": "Indicates whether the Role Definition was built-in or user created.",
              "x-ms-enum": {
                "name": "MongoRoleDefinitionType",
                "modelAsString": false
              }
            },
            "databaseName": {
              "type": "string",
              "description": "The database name for which access is being granted for this Role Definition."
            },
            "privileges": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "resource": {
                    "type": "object",
                    "properties": {
                      "db": {
                        "type": "string",
                        "description": "The database name the role is applied."
                      },
                      "collection": {
                        "type": "string",
                        "description": "The collection name the role is applied."
                      }
                    },
                    "description": "An Azure Cosmos DB Mongo DB Resource."
                  },
                  "actions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of actions that are allowed."
                  }
                },
                "description": "The set of data plane operations permitted through this Role Definition."
              },
              "description": "A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege."
            },
            "roles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "db": {
                    "type": "string",
                    "description": "The database name the role is applied."
                  },
                  "role": {
                    "type": "string",
                    "description": "The role name."
                  }
                },
                "description": "The set of roles permitted through this Role Definition."
              },
              "description": "The set of roles inherited by this Role Definition."
            }
          }
        }
      },
      "description": "An Azure Cosmos DB Mongo Role Definition."
    },
    "Privilege": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "properties": {
            "db": {
              "type": "string",
              "description": "The database name the role is applied."
            },
            "collection": {
              "type": "string",
              "description": "The collection name the role is applied."
            }
          },
          "description": "An Azure Cosmos DB Mongo DB Resource."
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of actions that are allowed."
        }
      },
      "description": "The set of data plane operations permitted through this Role Definition."
    },
    "Role": {
      "type": "object",
      "properties": {
        "db": {
          "type": "string",
          "description": "The database name the role is applied."
        },
        "role": {
          "type": "string",
          "description": "The role name."
        }
      },
      "description": "The set of roles permitted through this Role Definition."
    },
    "MongoRoleDefinitionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the database account."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the database account."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties related to the Mongo Role Definition.",
                "type": "object",
                "properties": {
                  "roleName": {
                    "type": "string",
                    "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "BuiltInRole",
                      "CustomRole"
                    ],
                    "description": "Indicates whether the Role Definition was built-in or user created.",
                    "x-ms-enum": {
                      "name": "MongoRoleDefinitionType",
                      "modelAsString": false
                    }
                  },
                  "databaseName": {
                    "type": "string",
                    "description": "The database name for which access is being granted for this Role Definition."
                  },
                  "privileges": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "resource": {
                          "type": "object",
                          "properties": {
                            "db": {
                              "type": "string",
                              "description": "The database name the role is applied."
                            },
                            "collection": {
                              "type": "string",
                              "description": "The collection name the role is applied."
                            }
                          },
                          "description": "An Azure Cosmos DB Mongo DB Resource."
                        },
                        "actions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "An array of actions that are allowed."
                        }
                      },
                      "description": "The set of data plane operations permitted through this Role Definition."
                    },
                    "description": "A set of privileges contained by the Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Scopes higher than Database are not enforceable as privilege."
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "db": {
                          "type": "string",
                          "description": "The database name the role is applied."
                        },
                        "role": {
                          "type": "string",
                          "description": "The role name."
                        }
                      },
                      "description": "The set of roles permitted through this Role Definition."
                    },
                    "description": "The set of roles inherited by this Role Definition."
                  }
                }
              }
            },
            "description": "An Azure Cosmos DB Mongo Role Definition."
          },
          "description": "List of Mongo Role Definitions and their properties."
        }
      },
      "description": "The relevant Mongo Role Definitions."
    },
    "MongoUserDefinitionResource": {
      "type": "object",
      "properties": {
        "userName": {
          "type": "string",
          "description": "The user name for User Definition."
        },
        "password": {
          "type": "string",
          "description": "The password for User Definition. Response does not contain user password."
        },
        "databaseName": {
          "type": "string",
          "description": "The database name for which access is being granted for this User Definition."
        },
        "customData": {
          "type": "string",
          "description": "A custom definition for the USer Definition."
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "db": {
                "type": "string",
                "description": "The database name the role is applied."
              },
              "role": {
                "type": "string",
                "description": "The role name."
              }
            },
            "description": "The set of roles permitted through this Role Definition."
          },
          "description": "The set of roles inherited by the User Definition."
        },
        "mechanisms": {
          "type": "string",
          "description": "The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256."
        }
      },
      "description": "Azure Cosmos DB Mongo User Definition resource object."
    },
    "MongoUserDefinitionCreateUpdateParameters": {
      "description": "Parameters to create and update an Azure Cosmos DB Mongo User Definition.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update an Azure Cosmos DB Mongo User Definition.",
          "type": "object",
          "properties": {
            "userName": {
              "type": "string",
              "description": "The user name for User Definition."
            },
            "password": {
              "type": "string",
              "description": "The password for User Definition. Response does not contain user password."
            },
            "databaseName": {
              "type": "string",
              "description": "The database name for which access is being granted for this User Definition."
            },
            "customData": {
              "type": "string",
              "description": "A custom definition for the USer Definition."
            },
            "roles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "db": {
                    "type": "string",
                    "description": "The database name the role is applied."
                  },
                  "role": {
                    "type": "string",
                    "description": "The role name."
                  }
                },
                "description": "The set of roles permitted through this Role Definition."
              },
              "description": "The set of roles inherited by the User Definition."
            },
            "mechanisms": {
              "type": "string",
              "description": "The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256."
            }
          }
        }
      }
    },
    "MongoUserDefinitionGetResults": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the database account."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database account."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties related to the User Definition.",
          "type": "object",
          "properties": {
            "userName": {
              "type": "string",
              "description": "The user name for User Definition."
            },
            "password": {
              "type": "string",
              "description": "The password for User Definition. Response does not contain user password."
            },
            "databaseName": {
              "type": "string",
              "description": "The database name for which access is being granted for this User Definition."
            },
            "customData": {
              "type": "string",
              "description": "A custom definition for the USer Definition."
            },
            "roles": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "db": {
                    "type": "string",
                    "description": "The database name the role is applied."
                  },
                  "role": {
                    "type": "string",
                    "description": "The role name."
                  }
                },
                "description": "The set of roles permitted through this Role Definition."
              },
              "description": "The set of roles inherited by the User Definition."
            },
            "mechanisms": {
              "type": "string",
              "description": "The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256."
            }
          }
        }
      },
      "description": "An Azure Cosmos DB User Definition"
    },
    "MongoUserDefinitionListResult": {
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the database account."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the database account."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties related to the User Definition.",
                "type": "object",
                "properties": {
                  "userName": {
                    "type": "string",
                    "description": "The user name for User Definition."
                  },
                  "password": {
                    "type": "string",
                    "description": "The password for User Definition. Response does not contain user password."
                  },
                  "databaseName": {
                    "type": "string",
                    "description": "The database name for which access is being granted for this User Definition."
                  },
                  "customData": {
                    "type": "string",
                    "description": "A custom definition for the USer Definition."
                  },
                  "roles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "db": {
                          "type": "string",
                          "description": "The database name the role is applied."
                        },
                        "role": {
                          "type": "string",
                          "description": "The role name."
                        }
                      },
                      "description": "The set of roles permitted through this Role Definition."
                    },
                    "description": "The set of roles inherited by the User Definition."
                  },
                  "mechanisms": {
                    "type": "string",
                    "description": "The Mongo Auth mechanism. For now, we only support auth mechanism SCRAM-SHA-256."
                  }
                }
              }
            },
            "description": "An Azure Cosmos DB User Definition"
          },
          "description": "List of User Definition and their properties"
        }
      },
      "description": "The relevant User Definition."
    },
    "NotebookWorkspaceCreateUpdateParameters": {
      "description": "Parameters to create a notebook workspace resource",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the database account."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database account."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        }
      }
    },
    "NotebookWorkspaceListResult": {
      "description": "A list of notebook workspace resources",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of notebook workspace resources",
          "items": {
            "description": "A notebook workspace resource",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the database account."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the database account."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "notebookServerEndpoint": {
                    "description": "Specifies the endpoint of Notebook server.",
                    "type": "string",
                    "readOnly": true
                  },
                  "status": {
                    "description": "Status of the notebook workspace. Possible values are: Creating, Online, Deleting, Failed, Updating.",
                    "type": "string",
                    "readOnly": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "NotebookWorkspace": {
      "description": "A notebook workspace resource",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the database account."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database account."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "notebookServerEndpoint": {
              "description": "Specifies the endpoint of Notebook server.",
              "type": "string",
              "readOnly": true
            },
            "status": {
              "description": "Status of the notebook workspace. Possible values are: Creating, Online, Deleting, Failed, Updating.",
              "type": "string",
              "readOnly": true
            }
          }
        }
      }
    },
    "NotebookWorkspaceProperties": {
      "description": "Properties of a notebook workspace resource.",
      "type": "object",
      "properties": {
        "notebookServerEndpoint": {
          "description": "Specifies the endpoint of Notebook server.",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "description": "Status of the notebook workspace. Possible values are: Creating, Online, Deleting, Failed, Updating.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NotebookWorkspaceConnectionInfoResult": {
      "description": "The connection info for the given notebook workspace",
      "properties": {
        "authToken": {
          "type": "string",
          "description": "Specifies auth token used for connecting to Notebook server (uses token-based auth).",
          "readOnly": true
        },
        "notebookServerEndpoint": {
          "type": "string",
          "description": "Specifies the endpoint of Notebook server.",
          "readOnly": true
        }
      }
    },
    "PrivateEndpointConnectionListResult": {
      "description": "A list of private endpoint connections",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private endpoint connections",
          "items": {
            "description": "A private endpoint connection",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the resource"
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "privateEndpoint": {
                    "description": "Private endpoint which the connection belongs to.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Resource id of the private endpoint."
                      }
                    }
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "Connection State of the Private Endpoint Connection.",
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "string",
                        "description": "The private link service connection status."
                      },
                      "description": {
                        "type": "string",
                        "description": "The private link service connection description."
                      },
                      "actionsRequired": {
                        "type": "string",
                        "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                        "readOnly": true
                      }
                    }
                  },
                  "groupId": {
                    "type": "string",
                    "description": "Group id of the private endpoint."
                  },
                  "provisioningState": {
                    "type": "string",
                    "description": "Provisioning state of the private endpoint."
                  }
                }
              }
            }
          }
        }
      }
    },
    "PrivateEndpointConnection": {
      "description": "A private endpoint connection",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "Fully qualified resource ID for the resource. Ex - /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}"
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the resource"
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\""
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "privateEndpoint": {
              "description": "Private endpoint which the connection belongs to.",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "Resource id of the private endpoint."
                }
              }
            },
            "privateLinkServiceConnectionState": {
              "description": "Connection State of the Private Endpoint Connection.",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "The private link service connection status."
                },
                "description": {
                  "type": "string",
                  "description": "The private link service connection description."
                },
                "actionsRequired": {
                  "type": "string",
                  "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
                  "readOnly": true
                }
              }
            },
            "groupId": {
              "type": "string",
              "description": "Group id of the private endpoint."
            },
            "provisioningState": {
              "type": "string",
              "description": "Provisioning state of the private endpoint."
            }
          }
        }
      }
    },
    "PrivateEndpointConnectionProperties": {
      "description": "Properties of a private endpoint connection.",
      "type": "object",
      "properties": {
        "privateEndpoint": {
          "description": "Private endpoint which the connection belongs to.",
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Resource id of the private endpoint."
            }
          }
        },
        "privateLinkServiceConnectionState": {
          "description": "Connection State of the Private Endpoint Connection.",
          "type": "object",
          "properties": {
            "status": {
              "type": "string",
              "description": "The private link service connection status."
            },
            "description": {
              "type": "string",
              "description": "The private link service connection description."
            },
            "actionsRequired": {
              "type": "string",
              "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
              "readOnly": true
            }
          }
        },
        "groupId": {
          "type": "string",
          "description": "Group id of the private endpoint."
        },
        "provisioningState": {
          "type": "string",
          "description": "Provisioning state of the private endpoint."
        }
      }
    },
    "PrivateEndpointProperty": {
      "type": "object",
      "description": "Private endpoint which the connection belongs to.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Resource id of the private endpoint."
        }
      }
    },
    "PrivateLinkServiceConnectionStateProperty": {
      "type": "object",
      "description": "Connection State of the Private Endpoint Connection.",
      "properties": {
        "status": {
          "type": "string",
          "description": "The private link service connection status."
        },
        "description": {
          "type": "string",
          "description": "The private link service connection description."
        },
        "actionsRequired": {
          "type": "string",
          "description": "Any action that is required beyond basic workflow (approve/ reject/ disconnect)",
          "readOnly": true
        }
      }
    },
    "PrivateLinkResourceListResult": {
      "description": "A list of private link resources",
      "type": "object",
      "properties": {
        "value": {
          "type": "array",
          "description": "Array of private link resources",
          "items": {
            "description": "A private link resource",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the database account."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the database account."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "properties": {
                "description": "Resource properties.",
                "x-ms-client-flatten": true,
                "type": "object",
                "properties": {
                  "groupId": {
                    "description": "The private link resource group id.",
                    "type": "string",
                    "readOnly": true
                  },
                  "requiredMembers": {
                    "description": "The private link resource required member names.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  },
                  "requiredZoneNames": {
                    "description": "The private link resource required zone names.",
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "readOnly": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "PrivateLinkResource": {
      "description": "A private link resource",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the database account."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database account."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "properties": {
          "description": "Resource properties.",
          "x-ms-client-flatten": true,
          "type": "object",
          "properties": {
            "groupId": {
              "description": "The private link resource group id.",
              "type": "string",
              "readOnly": true
            },
            "requiredMembers": {
              "description": "The private link resource required member names.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            },
            "requiredZoneNames": {
              "description": "The private link resource required zone names.",
              "type": "array",
              "items": {
                "type": "string"
              },
              "readOnly": true
            }
          }
        }
      }
    },
    "PrivateLinkResourceProperties": {
      "description": "Properties of a private link resource.",
      "type": "object",
      "properties": {
        "groupId": {
          "description": "The private link resource group id.",
          "type": "string",
          "readOnly": true
        },
        "requiredMembers": {
          "description": "The private link resource required member names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        },
        "requiredZoneNames": {
          "description": "The private link resource required zone names.",
          "type": "array",
          "items": {
            "type": "string"
          },
          "readOnly": true
        }
      }
    },
    "SqlRoleDefinitionResource": {
      "properties": {
        "roleName": {
          "type": "string",
          "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
        },
        "type": {
          "type": "string",
          "enum": [
            "BuiltInRole",
            "CustomRole"
          ],
          "description": "Indicates whether the Role Definition was built-in or user created.",
          "x-ms-enum": {
            "name": "RoleDefinitionType",
            "modelAsString": false
          }
        },
        "assignableScopes": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
        },
        "permissions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "dataActions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "An array of data actions that are allowed."
              },
              "notDataActions": {
                "type": "array",
                "items": {
                  "type": "string"
                },
                "description": "An array of data actions that are denied."
              }
            },
            "description": "The set of data plane operations permitted through this Role Definition."
          },
          "description": "The set of operations allowed through this Role Definition."
        }
      },
      "description": "Azure Cosmos DB SQL Role Definition resource object."
    },
    "SqlRoleDefinitionCreateUpdateParameters": {
      "description": "Parameters to create and update an Azure Cosmos DB SQL Role Definition.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update an Azure Cosmos DB SQL Role Definition.",
          "properties": {
            "roleName": {
              "type": "string",
              "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
            },
            "type": {
              "type": "string",
              "enum": [
                "BuiltInRole",
                "CustomRole"
              ],
              "description": "Indicates whether the Role Definition was built-in or user created.",
              "x-ms-enum": {
                "name": "RoleDefinitionType",
                "modelAsString": false
              }
            },
            "assignableScopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
            },
            "permissions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataActions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of data actions that are allowed."
                  },
                  "notDataActions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of data actions that are denied."
                  }
                },
                "description": "The set of data plane operations permitted through this Role Definition."
              },
              "description": "The set of operations allowed through this Role Definition."
            }
          }
        }
      }
    },
    "SqlRoleDefinitionGetResults": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the database account."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database account."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties related to the Role Definition.",
          "properties": {
            "roleName": {
              "type": "string",
              "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
            },
            "type": {
              "type": "string",
              "enum": [
                "BuiltInRole",
                "CustomRole"
              ],
              "description": "Indicates whether the Role Definition was built-in or user created.",
              "x-ms-enum": {
                "name": "RoleDefinitionType",
                "modelAsString": false
              }
            },
            "assignableScopes": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
            },
            "permissions": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "dataActions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of data actions that are allowed."
                  },
                  "notDataActions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "An array of data actions that are denied."
                  }
                },
                "description": "The set of data plane operations permitted through this Role Definition."
              },
              "description": "The set of operations allowed through this Role Definition."
            }
          }
        }
      },
      "description": "An Azure Cosmos DB SQL Role Definition."
    },
    "Permission": {
      "type": "object",
      "properties": {
        "dataActions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of data actions that are allowed."
        },
        "notDataActions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "An array of data actions that are denied."
        }
      },
      "description": "The set of data plane operations permitted through this Role Definition."
    },
    "SqlRoleDefinitionListResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the database account."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the database account."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties related to the Role Definition.",
                "properties": {
                  "roleName": {
                    "type": "string",
                    "description": "A user-friendly name for the Role Definition. Must be unique for the database account."
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "BuiltInRole",
                      "CustomRole"
                    ],
                    "description": "Indicates whether the Role Definition was built-in or user created.",
                    "x-ms-enum": {
                      "name": "RoleDefinitionType",
                      "modelAsString": false
                    }
                  },
                  "assignableScopes": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "A set of fully qualified Scopes at or below which Role Assignments may be created using this Role Definition. This will allow application of this Role Definition on the entire database account or any underlying Database / Collection. Must have at least one element. Scopes higher than Database account are not enforceable as assignable Scopes. Note that resources referenced in assignable Scopes need not exist."
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "dataActions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "An array of data actions that are allowed."
                        },
                        "notDataActions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "description": "An array of data actions that are denied."
                        }
                      },
                      "description": "The set of data plane operations permitted through this Role Definition."
                    },
                    "description": "The set of operations allowed through this Role Definition."
                  }
                }
              }
            },
            "description": "An Azure Cosmos DB SQL Role Definition."
          },
          "description": "List of Role Definitions and their properties."
        }
      },
      "description": "The relevant Role Definitions."
    },
    "SqlRoleAssignmentResource": {
      "type": "object",
      "properties": {
        "roleDefinitionId": {
          "type": "string",
          "description": "The unique identifier for the associated Role Definition."
        },
        "scope": {
          "type": "string",
          "description": "The data plane resource path for which access is being granted through this Role Assignment."
        },
        "principalId": {
          "type": "string",
          "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
        }
      },
      "description": "Azure Cosmos DB SQL Role Assignment resource object."
    },
    "SqlRoleAssignmentCreateUpdateParameters": {
      "description": "Parameters to create and update an Azure Cosmos DB SQL Role Assignment.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties to create and update an Azure Cosmos DB SQL Role Assignment.",
          "type": "object",
          "properties": {
            "roleDefinitionId": {
              "type": "string",
              "description": "The unique identifier for the associated Role Definition."
            },
            "scope": {
              "type": "string",
              "description": "The data plane resource path for which access is being granted through this Role Assignment."
            },
            "principalId": {
              "type": "string",
              "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
            }
          }
        }
      }
    },
    "SqlRoleAssignmentGetResults": {
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the database account."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database account."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "properties": {
          "x-ms-client-flatten": true,
          "description": "Properties related to the Role Assignment.",
          "type": "object",
          "properties": {
            "roleDefinitionId": {
              "type": "string",
              "description": "The unique identifier for the associated Role Definition."
            },
            "scope": {
              "type": "string",
              "description": "The data plane resource path for which access is being granted through this Role Assignment."
            },
            "principalId": {
              "type": "string",
              "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
            }
          }
        }
      },
      "description": "An Azure Cosmos DB Role Assignment"
    },
    "SqlRoleAssignmentListResult": {
      "properties": {
        "value": {
          "type": "array",
          "readOnly": true,
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the database account."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the database account."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "properties": {
                "x-ms-client-flatten": true,
                "description": "Properties related to the Role Assignment.",
                "type": "object",
                "properties": {
                  "roleDefinitionId": {
                    "type": "string",
                    "description": "The unique identifier for the associated Role Definition."
                  },
                  "scope": {
                    "type": "string",
                    "description": "The data plane resource path for which access is being granted through this Role Assignment."
                  },
                  "principalId": {
                    "type": "string",
                    "description": "The unique identifier for the associated AAD principal in the AAD graph to which access is being granted through this Role Assignment. Tenant ID for the principal is inferred using the tenant associated with the subscription."
                  }
                }
              }
            },
            "description": "An Azure Cosmos DB Role Assignment"
          },
          "description": "List of Role Assignments and their properties"
        }
      },
      "description": "The relevant Role Assignments."
    },
    "RestorableDatabaseAccountsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "A Azure Cosmos DB restorable database account.",
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "description": "The properties of a restorable database account.",
                "properties": {
                  "accountName": {
                    "type": "string",
                    "description": "The name of the global database account"
                  },
                  "creationTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The creation time of the restorable database account (ISO-8601 format)."
                  },
                  "deletionTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The time at which the restorable database account has been deleted (ISO-8601 format)."
                  },
                  "oldestRestorableTime": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The least recent time at which the database account can be restored to (ISO-8601 format)."
                  },
                  "apiType": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The API type of the restorable database account.",
                    "enum": [
                      "MongoDB",
                      "Gremlin",
                      "Cassandra",
                      "Table",
                      "Sql",
                      "GremlinV2"
                    ],
                    "x-ms-enum": {
                      "name": "ApiType",
                      "modelAsString": true
                    }
                  },
                  "restorableLocations": {
                    "type": "array",
                    "readOnly": true,
                    "description": "List of regions where the of the database account can be restored from.",
                    "items": {
                      "type": "object",
                      "description": "Properties of the regional restorable account.",
                      "properties": {
                        "locationName": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The location of the regional restorable account."
                        },
                        "regionalDatabaseAccountInstanceId": {
                          "type": "string",
                          "readOnly": true,
                          "description": "The instance id of the regional restorable account."
                        },
                        "creationTime": {
                          "type": "string",
                          "readOnly": true,
                          "format": "date-time",
                          "description": "The creation time of the regional restorable database account (ISO-8601 format)."
                        },
                        "deletionTime": {
                          "type": "string",
                          "readOnly": true,
                          "format": "date-time",
                          "description": "The time at which the regional restorable database account has been deleted (ISO-8601 format)."
                        }
                      }
                    }
                  }
                }
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "location": {
                "type": "string",
                "description": "The location of the resource group to which the resource belongs."
              }
            }
          },
          "description": "List of restorable database accounts and their properties."
        }
      },
      "description": "The List operation response, that contains the restorable database accounts and their properties."
    },
    "RestorableDatabaseAccountGetResult": {
      "description": "A Azure Cosmos DB restorable database account.",
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "The properties of a restorable database account.",
          "properties": {
            "accountName": {
              "type": "string",
              "description": "The name of the global database account"
            },
            "creationTime": {
              "type": "string",
              "format": "date-time",
              "description": "The creation time of the restorable database account (ISO-8601 format)."
            },
            "deletionTime": {
              "type": "string",
              "format": "date-time",
              "description": "The time at which the restorable database account has been deleted (ISO-8601 format)."
            },
            "oldestRestorableTime": {
              "type": "string",
              "format": "date-time",
              "description": "The least recent time at which the database account can be restored to (ISO-8601 format)."
            },
            "apiType": {
              "type": "string",
              "readOnly": true,
              "description": "The API type of the restorable database account.",
              "enum": [
                "MongoDB",
                "Gremlin",
                "Cassandra",
                "Table",
                "Sql",
                "GremlinV2"
              ],
              "x-ms-enum": {
                "name": "ApiType",
                "modelAsString": true
              }
            },
            "restorableLocations": {
              "type": "array",
              "readOnly": true,
              "description": "List of regions where the of the database account can be restored from.",
              "items": {
                "type": "object",
                "description": "Properties of the regional restorable account.",
                "properties": {
                  "locationName": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The location of the regional restorable account."
                  },
                  "regionalDatabaseAccountInstanceId": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The instance id of the regional restorable account."
                  },
                  "creationTime": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "The creation time of the regional restorable database account (ISO-8601 format)."
                  },
                  "deletionTime": {
                    "type": "string",
                    "readOnly": true,
                    "format": "date-time",
                    "description": "The time at which the regional restorable database account has been deleted (ISO-8601 format)."
                  }
                }
              }
            }
          }
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "location": {
          "type": "string",
          "description": "The location of the resource group to which the resource belongs."
        }
      }
    },
    "RestorableDatabaseAccountProperties": {
      "type": "object",
      "description": "The properties of a restorable database account.",
      "properties": {
        "accountName": {
          "type": "string",
          "description": "The name of the global database account"
        },
        "creationTime": {
          "type": "string",
          "format": "date-time",
          "description": "The creation time of the restorable database account (ISO-8601 format)."
        },
        "deletionTime": {
          "type": "string",
          "format": "date-time",
          "description": "The time at which the restorable database account has been deleted (ISO-8601 format)."
        },
        "oldestRestorableTime": {
          "type": "string",
          "format": "date-time",
          "description": "The least recent time at which the database account can be restored to (ISO-8601 format)."
        },
        "apiType": {
          "type": "string",
          "readOnly": true,
          "description": "The API type of the restorable database account.",
          "enum": [
            "MongoDB",
            "Gremlin",
            "Cassandra",
            "Table",
            "Sql",
            "GremlinV2"
          ],
          "x-ms-enum": {
            "name": "ApiType",
            "modelAsString": true
          }
        },
        "restorableLocations": {
          "type": "array",
          "readOnly": true,
          "description": "List of regions where the of the database account can be restored from.",
          "items": {
            "type": "object",
            "description": "Properties of the regional restorable account.",
            "properties": {
              "locationName": {
                "type": "string",
                "readOnly": true,
                "description": "The location of the regional restorable account."
              },
              "regionalDatabaseAccountInstanceId": {
                "type": "string",
                "readOnly": true,
                "description": "The instance id of the regional restorable account."
              },
              "creationTime": {
                "type": "string",
                "readOnly": true,
                "format": "date-time",
                "description": "The creation time of the regional restorable database account (ISO-8601 format)."
              },
              "deletionTime": {
                "type": "string",
                "readOnly": true,
                "format": "date-time",
                "description": "The time at which the regional restorable database account has been deleted (ISO-8601 format)."
              }
            }
          }
        }
      }
    },
    "ApiType": {
      "description": "Enum to indicate the API type of the restorable database account.",
      "type": "string",
      "readOnly": true,
      "enum": [
        "MongoDB",
        "Gremlin",
        "Cassandra",
        "Table",
        "Sql",
        "GremlinV2"
      ],
      "x-ms-enum": {
        "name": "ApiType",
        "modelAsString": true
      }
    },
    "RestorableLocationResource": {
      "type": "object",
      "description": "Properties of the regional restorable account.",
      "properties": {
        "locationName": {
          "type": "string",
          "readOnly": true,
          "description": "The location of the regional restorable account."
        },
        "regionalDatabaseAccountInstanceId": {
          "type": "string",
          "readOnly": true,
          "description": "The instance id of the regional restorable account."
        },
        "creationTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The creation time of the regional restorable database account (ISO-8601 format)."
        },
        "deletionTime": {
          "type": "string",
          "readOnly": true,
          "format": "date-time",
          "description": "The time at which the regional restorable database account has been deleted (ISO-8601 format)."
        }
      }
    },
    "RestorableSqlDatabasesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB SQL database event",
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "description": "The properties of a SQL database event.",
                "properties": {
                  "resource": {
                    "type": "object",
                    "description": "The resource of an Azure Cosmos DB SQL database event",
                    "properties": {
                      "_rid": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A system generated property. A unique identifier."
                      },
                      "operationType": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The operation type of this database event.",
                        "enum": [
                          "Create",
                          "Replace",
                          "Delete",
                          "Recreate",
                          "SystemOperation"
                        ],
                        "x-ms-enum": {
                          "name": "OperationType",
                          "modelAsString": true
                        }
                      },
                      "canUndelete": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A state of this database to identify if this database is restorable in same account."
                      },
                      "canUndeleteReason": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The reason why this database can not be restored in same account."
                      },
                      "eventTimestamp": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The time when this database event happened."
                      },
                      "ownerId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of the SQL database."
                      },
                      "ownerResourceId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The resource ID of the SQL database."
                      },
                      "database": {
                        "type": "object",
                        "description": "Cosmos DB SQL database resource object",
                        "properties": {
                          "_colls": {
                            "type": "string",
                            "readOnly": true,
                            "description": "A system generated property that specified the addressable path of the collections resource."
                          },
                          "_users": {
                            "type": "string",
                            "readOnly": true,
                            "description": "A system generated property that specifies the addressable path of the users resource."
                          },
                          "_self": {
                            "type": "string",
                            "readOnly": true,
                            "description": "A system generated property that specifies the addressable path of the database resource."
                          }
                        },
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Cosmos DB SQL database resource object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Name of the Cosmos DB SQL database"
                              },
                              "restoreParameters": {
                                "description": "Parameters to indicate the information about the restore",
                                "type": "object",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "properties": {
                                  "restoreSource": {
                                    "type": "string",
                                    "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                  },
                                  "restoreTimestampInUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time to which the account has to be restored (ISO-8601 format)."
                                  },
                                  "restoreWithTtlDisabled": {
                                    "type": "boolean",
                                    "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                  }
                                }
                              },
                              "createMode": {
                                "description": "Enum to indicate the mode of resource creation.",
                                "type": "string",
                                "default": "Default",
                                "enum": [
                                  "Default",
                                  "Restore"
                                ],
                                "x-ms-enum": {
                                  "name": "CreateMode",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          {
                            "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                            "type": "object",
                            "properties": {
                              "_rid": {
                                "type": "string",
                                "description": "A system generated property. A unique identifier.",
                                "readOnly": true
                              },
                              "_ts": {
                                "type": "number",
                                "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                "readOnly": true
                              },
                              "_etag": {
                                "type": "string",
                                "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                "readOnly": true
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource Identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              }
            }
          },
          "description": "List of SQL database events and their properties."
        }
      },
      "description": "The List operation response, that contains the SQL database events and their properties."
    },
    "RestorableSqlDatabaseGetResult": {
      "description": "An Azure Cosmos DB SQL database event",
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "The properties of a SQL database event.",
          "properties": {
            "resource": {
              "type": "object",
              "description": "The resource of an Azure Cosmos DB SQL database event",
              "properties": {
                "_rid": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A system generated property. A unique identifier."
                },
                "operationType": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The operation type of this database event.",
                  "enum": [
                    "Create",
                    "Replace",
                    "Delete",
                    "Recreate",
                    "SystemOperation"
                  ],
                  "x-ms-enum": {
                    "name": "OperationType",
                    "modelAsString": true
                  }
                },
                "canUndelete": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A state of this database to identify if this database is restorable in same account."
                },
                "canUndeleteReason": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The reason why this database can not be restored in same account."
                },
                "eventTimestamp": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The time when this database event happened."
                },
                "ownerId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of the SQL database."
                },
                "ownerResourceId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The resource ID of the SQL database."
                },
                "database": {
                  "type": "object",
                  "description": "Cosmos DB SQL database resource object",
                  "properties": {
                    "_colls": {
                      "type": "string",
                      "readOnly": true,
                      "description": "A system generated property that specified the addressable path of the collections resource."
                    },
                    "_users": {
                      "type": "string",
                      "readOnly": true,
                      "description": "A system generated property that specifies the addressable path of the users resource."
                    },
                    "_self": {
                      "type": "string",
                      "readOnly": true,
                      "description": "A system generated property that specifies the addressable path of the database resource."
                    }
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Cosmos DB SQL database resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB SQL database"
                        },
                        "restoreParameters": {
                          "description": "Parameters to indicate the information about the restore",
                          "type": "object",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "properties": {
                            "restoreSource": {
                              "type": "string",
                              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                            },
                            "restoreTimestampInUtc": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time to which the account has to be restored (ISO-8601 format)."
                            },
                            "restoreWithTtlDisabled": {
                              "type": "boolean",
                              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                            }
                          }
                        },
                        "createMode": {
                          "description": "Enum to indicate the mode of resource creation.",
                          "type": "string",
                          "default": "Default",
                          "enum": [
                            "Default",
                            "Restore"
                          ],
                          "x-ms-enum": {
                            "name": "CreateMode",
                            "modelAsString": true
                          }
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    {
                      "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                      "type": "object",
                      "properties": {
                        "_rid": {
                          "type": "string",
                          "description": "A system generated property. A unique identifier.",
                          "readOnly": true
                        },
                        "_ts": {
                          "type": "number",
                          "description": "A system generated property that denotes the last updated timestamp of the resource.",
                          "readOnly": true
                        },
                        "_etag": {
                          "type": "string",
                          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                          "readOnly": true
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        }
      }
    },
    "RestorableSqlDatabaseProperties": {
      "description": "The properties of an Azure Cosmos DB SQL database event",
      "type": "object",
      "properties": {
        "resource": {
          "type": "object",
          "description": "The resource of an Azure Cosmos DB SQL database event",
          "properties": {
            "_rid": {
              "type": "string",
              "readOnly": true,
              "description": "A system generated property. A unique identifier."
            },
            "operationType": {
              "type": "string",
              "readOnly": true,
              "description": "The operation type of this database event.",
              "enum": [
                "Create",
                "Replace",
                "Delete",
                "Recreate",
                "SystemOperation"
              ],
              "x-ms-enum": {
                "name": "OperationType",
                "modelAsString": true
              }
            },
            "canUndelete": {
              "type": "string",
              "readOnly": true,
              "description": "A state of this database to identify if this database is restorable in same account."
            },
            "canUndeleteReason": {
              "type": "string",
              "readOnly": true,
              "description": "The reason why this database can not be restored in same account."
            },
            "eventTimestamp": {
              "type": "string",
              "readOnly": true,
              "description": "The time when this database event happened."
            },
            "ownerId": {
              "type": "string",
              "readOnly": true,
              "description": "The name of the SQL database."
            },
            "ownerResourceId": {
              "type": "string",
              "readOnly": true,
              "description": "The resource ID of the SQL database."
            },
            "database": {
              "type": "object",
              "description": "Cosmos DB SQL database resource object",
              "properties": {
                "_colls": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A system generated property that specified the addressable path of the collections resource."
                },
                "_users": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A system generated property that specifies the addressable path of the users resource."
                },
                "_self": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A system generated property that specifies the addressable path of the database resource."
                }
              },
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB SQL database resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB SQL database"
                    },
                    "restoreParameters": {
                      "description": "Parameters to indicate the information about the restore",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "restoreSource": {
                          "type": "string",
                          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                        },
                        "restoreTimestampInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time to which the account has to be restored (ISO-8601 format)."
                        },
                        "restoreWithTtlDisabled": {
                          "type": "boolean",
                          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                        }
                      }
                    },
                    "createMode": {
                      "description": "Enum to indicate the mode of resource creation.",
                      "type": "string",
                      "default": "Default",
                      "enum": [
                        "Default",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "RestorableSqlContainersListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB SQL container event",
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "description": "The properties of a SQL container event.",
                "properties": {
                  "resource": {
                    "description": "The resource of an Azure Cosmos DB SQL container event",
                    "type": "object",
                    "properties": {
                      "_rid": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A system generated property. A unique identifier."
                      },
                      "operationType": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The operation type of this container event.",
                        "enum": [
                          "Create",
                          "Replace",
                          "Delete",
                          "Recreate",
                          "SystemOperation"
                        ],
                        "x-ms-enum": {
                          "name": "OperationType",
                          "modelAsString": true
                        }
                      },
                      "canUndelete": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A state of this container to identify if this container is restorable in same account."
                      },
                      "canUndeleteReason": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The reason why this container can not be restored in same account."
                      },
                      "eventTimestamp": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The when this container event happened."
                      },
                      "ownerId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of this SQL container."
                      },
                      "ownerResourceId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The resource ID of this SQL container."
                      },
                      "container": {
                        "type": "object",
                        "description": "Cosmos DB SQL container resource object",
                        "properties": {
                          "_self": {
                            "type": "string",
                            "readOnly": true,
                            "description": "A system generated property that specifies the addressable path of the container resource."
                          }
                        },
                        "allOf": [
                          {
                            "type": "object",
                            "description": "Cosmos DB SQL container resource object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Name of the Cosmos DB SQL container"
                              },
                              "indexingPolicy": {
                                "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
                                "type": "object",
                                "properties": {
                                  "automatic": {
                                    "type": "boolean",
                                    "description": "Indicates if the indexing policy is automatic"
                                  },
                                  "indexingMode": {
                                    "description": "Indicates the indexing mode.",
                                    "type": "string",
                                    "default": "consistent",
                                    "enum": [
                                      "consistent",
                                      "lazy",
                                      "none"
                                    ],
                                    "x-ms-enum": {
                                      "name": "IndexingMode",
                                      "modelAsString": true
                                    }
                                  },
                                  "includedPaths": {
                                    "description": "List of paths to include in the indexing",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "The paths that are included in indexing",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                        },
                                        "indexes": {
                                          "description": "List of indexes for this path",
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "description": "The indexes for the path.",
                                            "properties": {
                                              "dataType": {
                                                "description": "The datatype for which the indexing behavior is applied to.",
                                                "type": "string",
                                                "default": "String",
                                                "enum": [
                                                  "String",
                                                  "Number",
                                                  "Point",
                                                  "Polygon",
                                                  "LineString",
                                                  "MultiPolygon"
                                                ],
                                                "x-ms-enum": {
                                                  "name": "DataType",
                                                  "modelAsString": true
                                                }
                                              },
                                              "precision": {
                                                "description": "The precision of the index. -1 is maximum precision.",
                                                "type": "integer"
                                              },
                                              "kind": {
                                                "description": "Indicates the type of index.",
                                                "type": "string",
                                                "default": "Hash",
                                                "enum": [
                                                  "Hash",
                                                  "Range",
                                                  "Spatial"
                                                ],
                                                "x-ms-enum": {
                                                  "name": "IndexKind",
                                                  "modelAsString": true
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "excludedPaths": {
                                    "description": "List of paths to exclude from indexing",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                        }
                                      }
                                    }
                                  },
                                  "compositeIndexes": {
                                    "description": "List of composite path list",
                                    "type": "array",
                                    "items": {
                                      "description": "List of composite path",
                                      "type": "array",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "path": {
                                            "type": "string",
                                            "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                          },
                                          "order": {
                                            "description": "Sort order for composite paths.",
                                            "type": "string",
                                            "enum": [
                                              "ascending",
                                              "descending"
                                            ],
                                            "x-ms-enum": {
                                              "name": "CompositePathSortOrder",
                                              "modelAsString": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "spatialIndexes": {
                                    "description": "List of spatial specifics",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                        },
                                        "types": {
                                          "description": "List of path's spatial type",
                                          "type": "array",
                                          "items": {
                                            "description": "Indicates the spatial type of index.",
                                            "type": "string",
                                            "enum": [
                                              "Point",
                                              "LineString",
                                              "Polygon",
                                              "MultiPolygon"
                                            ],
                                            "x-ms-enum": {
                                              "name": "SpatialType",
                                              "modelAsString": true
                                            }
                                          }
                                        }
                                      }
                                    }
                                  },
                                  "vectorIndexes": {
                                    "description": "List of paths to include in the vector indexing",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "The path to the vector field in the document."
                                        },
                                        "type": {
                                          "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                          "type": "string",
                                          "enum": [
                                            "flat",
                                            "diskANN",
                                            "quantizedFlat"
                                          ],
                                          "x-ms-enum": {
                                            "name": "VectorIndexType",
                                            "modelAsString": true
                                          }
                                        }
                                      },
                                      "required": [
                                        "path",
                                        "type"
                                      ]
                                    }
                                  }
                                }
                              },
                              "partitionKey": {
                                "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                                "type": "object",
                                "properties": {
                                  "paths": {
                                    "description": "List of paths using which data within the container can be partitioned",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "A path. These typically start with root (/path)"
                                    }
                                  },
                                  "kind": {
                                    "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                                    "type": "string",
                                    "default": "Hash",
                                    "enum": [
                                      "Hash",
                                      "Range",
                                      "MultiHash"
                                    ],
                                    "x-ms-enum": {
                                      "name": "PartitionKind",
                                      "modelAsString": true
                                    }
                                  },
                                  "version": {
                                    "description": "Indicates the version of the partition key definition",
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 2,
                                    "format": "int32"
                                  },
                                  "systemKey": {
                                    "description": "Indicates if the container is using a system generated partition key",
                                    "type": "boolean",
                                    "readOnly": true
                                  }
                                }
                              },
                              "defaultTtl": {
                                "type": "integer",
                                "description": "Default time to live"
                              },
                              "uniqueKeyPolicy": {
                                "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                                "type": "object",
                                "properties": {
                                  "uniqueKeys": {
                                    "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                      "properties": {
                                        "paths": {
                                          "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                          "type": "array",
                                          "items": {
                                            "type": "string",
                                            "description": "A path. These typically start with root (/path)"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "conflictResolutionPolicy": {
                                "description": "The conflict resolution policy for the container.",
                                "type": "object",
                                "properties": {
                                  "mode": {
                                    "description": "Indicates the conflict resolution mode.",
                                    "type": "string",
                                    "default": "LastWriterWins",
                                    "enum": [
                                      "LastWriterWins",
                                      "Custom"
                                    ],
                                    "x-ms-enum": {
                                      "name": "ConflictResolutionMode",
                                      "modelAsString": true
                                    }
                                  },
                                  "conflictResolutionPath": {
                                    "type": "string",
                                    "description": "The conflict resolution path in the case of LastWriterWins mode."
                                  },
                                  "conflictResolutionProcedure": {
                                    "type": "string",
                                    "description": "The procedure to resolve conflicts in the case of custom mode."
                                  }
                                }
                              },
                              "clientEncryptionPolicy": {
                                "description": "The client encryption policy for the container.",
                                "type": "object",
                                "properties": {
                                  "includedPaths": {
                                    "description": "Paths of the item that need encryption along with path-specific settings.",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": ".",
                                      "properties": {
                                        "path": {
                                          "description": "Path that needs to be encrypted.",
                                          "type": "string"
                                        },
                                        "clientEncryptionKeyId": {
                                          "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                                          "type": "string"
                                        },
                                        "encryptionType": {
                                          "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                                          "type": "string"
                                        },
                                        "encryptionAlgorithm": {
                                          "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "path",
                                        "clientEncryptionKeyId",
                                        "encryptionType",
                                        "encryptionAlgorithm"
                                      ]
                                    },
                                    "x-ms-identifiers": []
                                  },
                                  "policyFormatVersion": {
                                    "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 2,
                                    "format": "int32"
                                  }
                                },
                                "required": [
                                  "includedPaths",
                                  "policyFormatVersion"
                                ]
                              },
                              "analyticalStorageTtl": {
                                "type": "integer",
                                "format": "int64",
                                "description": "Analytical TTL."
                              },
                              "restoreParameters": {
                                "description": "Parameters to indicate the information about the restore",
                                "type": "object",
                                "x-ms-mutability": [
                                  "read",
                                  "create"
                                ],
                                "properties": {
                                  "restoreSource": {
                                    "type": "string",
                                    "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                                  },
                                  "restoreTimestampInUtc": {
                                    "type": "string",
                                    "format": "date-time",
                                    "description": "Time to which the account has to be restored (ISO-8601 format)."
                                  },
                                  "restoreWithTtlDisabled": {
                                    "type": "boolean",
                                    "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                                  }
                                }
                              },
                              "createMode": {
                                "description": "Enum to indicate the mode of resource creation.",
                                "type": "string",
                                "default": "Default",
                                "enum": [
                                  "Default",
                                  "Restore"
                                ],
                                "x-ms-enum": {
                                  "name": "CreateMode",
                                  "modelAsString": true
                                }
                              },
                              "computedProperties": {
                                "description": "List of computed properties",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The definition of a computed property",
                                  "properties": {
                                    "name": {
                                      "type": "string",
                                      "description": "The name of a computed property, for example - \"cp_lowerName\""
                                    },
                                    "query": {
                                      "type": "string",
                                      "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
                                    }
                                  }
                                }
                              },
                              "vectorEmbeddingPolicy": {
                                "description": "The vector embedding policy for the container.",
                                "type": "object",
                                "properties": {
                                  "vectorEmbeddings": {
                                    "description": "List of vector embeddings",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "The path to the vector field in the document."
                                        },
                                        "dataType": {
                                          "description": "Indicates the data type of vector.",
                                          "type": "string",
                                          "enum": [
                                            "float32",
                                            "uint8",
                                            "int8"
                                          ],
                                          "x-ms-enum": {
                                            "name": "VectorDataType",
                                            "modelAsString": true
                                          }
                                        },
                                        "distanceFunction": {
                                          "description": "The distance function to use for distance calculation in between vectors.",
                                          "type": "string",
                                          "enum": [
                                            "euclidean",
                                            "cosine",
                                            "dotproduct"
                                          ],
                                          "x-ms-enum": {
                                            "name": "DistanceFunction",
                                            "modelAsString": true
                                          }
                                        },
                                        "dimensions": {
                                          "type": "integer",
                                          "format": "int32",
                                          "description": "The number of dimensions in the vector."
                                        }
                                      },
                                      "required": [
                                        "path",
                                        "dataType",
                                        "distanceFunction",
                                        "dimensions"
                                      ]
                                    }
                                  }
                                }
                              },
                              "fullTextPolicy": {
                                "description": "The FullText policy for the container.",
                                "type": "object",
                                "properties": {
                                  "defaultLanguage": {
                                    "type": "string",
                                    "description": "The default language for a full text paths."
                                  },
                                  "fullTextPaths": {
                                    "description": "List of FullText Paths",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "Represents the full text path specification.",
                                      "properties": {
                                        "path": {
                                          "type": "string",
                                          "description": "The path to the full text field in the document."
                                        },
                                        "language": {
                                          "description": "The language of the full text field in the document.",
                                          "type": "string"
                                        }
                                      },
                                      "required": [
                                        "path"
                                      ]
                                    }
                                  }
                                }
                              }
                            },
                            "required": [
                              "id"
                            ]
                          },
                          {
                            "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                            "type": "object",
                            "properties": {
                              "_rid": {
                                "type": "string",
                                "description": "A system generated property. A unique identifier.",
                                "readOnly": true
                              },
                              "_ts": {
                                "type": "number",
                                "description": "A system generated property that denotes the last updated timestamp of the resource.",
                                "readOnly": true
                              },
                              "_etag": {
                                "type": "string",
                                "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                                "readOnly": true
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource Identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              }
            }
          },
          "description": "List of SQL container events and their properties."
        }
      },
      "description": "The List operation response, that contains the SQL container events and their properties."
    },
    "RestorableSqlContainerGetResult": {
      "description": "An Azure Cosmos DB SQL container event",
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "The properties of a SQL container event.",
          "properties": {
            "resource": {
              "description": "The resource of an Azure Cosmos DB SQL container event",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A system generated property. A unique identifier."
                },
                "operationType": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The operation type of this container event.",
                  "enum": [
                    "Create",
                    "Replace",
                    "Delete",
                    "Recreate",
                    "SystemOperation"
                  ],
                  "x-ms-enum": {
                    "name": "OperationType",
                    "modelAsString": true
                  }
                },
                "canUndelete": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A state of this container to identify if this container is restorable in same account."
                },
                "canUndeleteReason": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The reason why this container can not be restored in same account."
                },
                "eventTimestamp": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The when this container event happened."
                },
                "ownerId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of this SQL container."
                },
                "ownerResourceId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The resource ID of this SQL container."
                },
                "container": {
                  "type": "object",
                  "description": "Cosmos DB SQL container resource object",
                  "properties": {
                    "_self": {
                      "type": "string",
                      "readOnly": true,
                      "description": "A system generated property that specifies the addressable path of the container resource."
                    }
                  },
                  "allOf": [
                    {
                      "type": "object",
                      "description": "Cosmos DB SQL container resource object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Name of the Cosmos DB SQL container"
                        },
                        "indexingPolicy": {
                          "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
                          "type": "object",
                          "properties": {
                            "automatic": {
                              "type": "boolean",
                              "description": "Indicates if the indexing policy is automatic"
                            },
                            "indexingMode": {
                              "description": "Indicates the indexing mode.",
                              "type": "string",
                              "default": "consistent",
                              "enum": [
                                "consistent",
                                "lazy",
                                "none"
                              ],
                              "x-ms-enum": {
                                "name": "IndexingMode",
                                "modelAsString": true
                              }
                            },
                            "includedPaths": {
                              "description": "List of paths to include in the indexing",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The paths that are included in indexing",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                  },
                                  "indexes": {
                                    "description": "List of indexes for this path",
                                    "type": "array",
                                    "items": {
                                      "type": "object",
                                      "description": "The indexes for the path.",
                                      "properties": {
                                        "dataType": {
                                          "description": "The datatype for which the indexing behavior is applied to.",
                                          "type": "string",
                                          "default": "String",
                                          "enum": [
                                            "String",
                                            "Number",
                                            "Point",
                                            "Polygon",
                                            "LineString",
                                            "MultiPolygon"
                                          ],
                                          "x-ms-enum": {
                                            "name": "DataType",
                                            "modelAsString": true
                                          }
                                        },
                                        "precision": {
                                          "description": "The precision of the index. -1 is maximum precision.",
                                          "type": "integer"
                                        },
                                        "kind": {
                                          "description": "Indicates the type of index.",
                                          "type": "string",
                                          "default": "Hash",
                                          "enum": [
                                            "Hash",
                                            "Range",
                                            "Spatial"
                                          ],
                                          "x-ms-enum": {
                                            "name": "IndexKind",
                                            "modelAsString": true
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "excludedPaths": {
                              "description": "List of paths to exclude from indexing",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                  }
                                }
                              }
                            },
                            "compositeIndexes": {
                              "description": "List of composite path list",
                              "type": "array",
                              "items": {
                                "description": "List of composite path",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "path": {
                                      "type": "string",
                                      "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                    },
                                    "order": {
                                      "description": "Sort order for composite paths.",
                                      "type": "string",
                                      "enum": [
                                        "ascending",
                                        "descending"
                                      ],
                                      "x-ms-enum": {
                                        "name": "CompositePathSortOrder",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "spatialIndexes": {
                              "description": "List of spatial specifics",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                  },
                                  "types": {
                                    "description": "List of path's spatial type",
                                    "type": "array",
                                    "items": {
                                      "description": "Indicates the spatial type of index.",
                                      "type": "string",
                                      "enum": [
                                        "Point",
                                        "LineString",
                                        "Polygon",
                                        "MultiPolygon"
                                      ],
                                      "x-ms-enum": {
                                        "name": "SpatialType",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "vectorIndexes": {
                              "description": "List of paths to include in the vector indexing",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path to the vector field in the document."
                                  },
                                  "type": {
                                    "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                    "type": "string",
                                    "enum": [
                                      "flat",
                                      "diskANN",
                                      "quantizedFlat"
                                    ],
                                    "x-ms-enum": {
                                      "name": "VectorIndexType",
                                      "modelAsString": true
                                    }
                                  }
                                },
                                "required": [
                                  "path",
                                  "type"
                                ]
                              }
                            }
                          }
                        },
                        "partitionKey": {
                          "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                          "type": "object",
                          "properties": {
                            "paths": {
                              "description": "List of paths using which data within the container can be partitioned",
                              "type": "array",
                              "items": {
                                "type": "string",
                                "description": "A path. These typically start with root (/path)"
                              }
                            },
                            "kind": {
                              "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                              "type": "string",
                              "default": "Hash",
                              "enum": [
                                "Hash",
                                "Range",
                                "MultiHash"
                              ],
                              "x-ms-enum": {
                                "name": "PartitionKind",
                                "modelAsString": true
                              }
                            },
                            "version": {
                              "description": "Indicates the version of the partition key definition",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 2,
                              "format": "int32"
                            },
                            "systemKey": {
                              "description": "Indicates if the container is using a system generated partition key",
                              "type": "boolean",
                              "readOnly": true
                            }
                          }
                        },
                        "defaultTtl": {
                          "type": "integer",
                          "description": "Default time to live"
                        },
                        "uniqueKeyPolicy": {
                          "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                          "type": "object",
                          "properties": {
                            "uniqueKeys": {
                              "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                                "properties": {
                                  "paths": {
                                    "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                    "type": "array",
                                    "items": {
                                      "type": "string",
                                      "description": "A path. These typically start with root (/path)"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "conflictResolutionPolicy": {
                          "description": "The conflict resolution policy for the container.",
                          "type": "object",
                          "properties": {
                            "mode": {
                              "description": "Indicates the conflict resolution mode.",
                              "type": "string",
                              "default": "LastWriterWins",
                              "enum": [
                                "LastWriterWins",
                                "Custom"
                              ],
                              "x-ms-enum": {
                                "name": "ConflictResolutionMode",
                                "modelAsString": true
                              }
                            },
                            "conflictResolutionPath": {
                              "type": "string",
                              "description": "The conflict resolution path in the case of LastWriterWins mode."
                            },
                            "conflictResolutionProcedure": {
                              "type": "string",
                              "description": "The procedure to resolve conflicts in the case of custom mode."
                            }
                          }
                        },
                        "clientEncryptionPolicy": {
                          "description": "The client encryption policy for the container.",
                          "type": "object",
                          "properties": {
                            "includedPaths": {
                              "description": "Paths of the item that need encryption along with path-specific settings.",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": ".",
                                "properties": {
                                  "path": {
                                    "description": "Path that needs to be encrypted.",
                                    "type": "string"
                                  },
                                  "clientEncryptionKeyId": {
                                    "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                                    "type": "string"
                                  },
                                  "encryptionType": {
                                    "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                                    "type": "string"
                                  },
                                  "encryptionAlgorithm": {
                                    "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "path",
                                  "clientEncryptionKeyId",
                                  "encryptionType",
                                  "encryptionAlgorithm"
                                ]
                              },
                              "x-ms-identifiers": []
                            },
                            "policyFormatVersion": {
                              "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 2,
                              "format": "int32"
                            }
                          },
                          "required": [
                            "includedPaths",
                            "policyFormatVersion"
                          ]
                        },
                        "analyticalStorageTtl": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Analytical TTL."
                        },
                        "restoreParameters": {
                          "description": "Parameters to indicate the information about the restore",
                          "type": "object",
                          "x-ms-mutability": [
                            "read",
                            "create"
                          ],
                          "properties": {
                            "restoreSource": {
                              "type": "string",
                              "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                            },
                            "restoreTimestampInUtc": {
                              "type": "string",
                              "format": "date-time",
                              "description": "Time to which the account has to be restored (ISO-8601 format)."
                            },
                            "restoreWithTtlDisabled": {
                              "type": "boolean",
                              "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                            }
                          }
                        },
                        "createMode": {
                          "description": "Enum to indicate the mode of resource creation.",
                          "type": "string",
                          "default": "Default",
                          "enum": [
                            "Default",
                            "Restore"
                          ],
                          "x-ms-enum": {
                            "name": "CreateMode",
                            "modelAsString": true
                          }
                        },
                        "computedProperties": {
                          "description": "List of computed properties",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The definition of a computed property",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of a computed property, for example - \"cp_lowerName\""
                              },
                              "query": {
                                "type": "string",
                                "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
                              }
                            }
                          }
                        },
                        "vectorEmbeddingPolicy": {
                          "description": "The vector embedding policy for the container.",
                          "type": "object",
                          "properties": {
                            "vectorEmbeddings": {
                              "description": "List of vector embeddings",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path to the vector field in the document."
                                  },
                                  "dataType": {
                                    "description": "Indicates the data type of vector.",
                                    "type": "string",
                                    "enum": [
                                      "float32",
                                      "uint8",
                                      "int8"
                                    ],
                                    "x-ms-enum": {
                                      "name": "VectorDataType",
                                      "modelAsString": true
                                    }
                                  },
                                  "distanceFunction": {
                                    "description": "The distance function to use for distance calculation in between vectors.",
                                    "type": "string",
                                    "enum": [
                                      "euclidean",
                                      "cosine",
                                      "dotproduct"
                                    ],
                                    "x-ms-enum": {
                                      "name": "DistanceFunction",
                                      "modelAsString": true
                                    }
                                  },
                                  "dimensions": {
                                    "type": "integer",
                                    "format": "int32",
                                    "description": "The number of dimensions in the vector."
                                  }
                                },
                                "required": [
                                  "path",
                                  "dataType",
                                  "distanceFunction",
                                  "dimensions"
                                ]
                              }
                            }
                          }
                        },
                        "fullTextPolicy": {
                          "description": "The FullText policy for the container.",
                          "type": "object",
                          "properties": {
                            "defaultLanguage": {
                              "type": "string",
                              "description": "The default language for a full text paths."
                            },
                            "fullTextPaths": {
                              "description": "List of FullText Paths",
                              "type": "array",
                              "items": {
                                "type": "object",
                                "description": "Represents the full text path specification.",
                                "properties": {
                                  "path": {
                                    "type": "string",
                                    "description": "The path to the full text field in the document."
                                  },
                                  "language": {
                                    "description": "The language of the full text field in the document.",
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "path"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "required": [
                        "id"
                      ]
                    },
                    {
                      "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                      "type": "object",
                      "properties": {
                        "_rid": {
                          "type": "string",
                          "description": "A system generated property. A unique identifier.",
                          "readOnly": true
                        },
                        "_ts": {
                          "type": "number",
                          "description": "A system generated property that denotes the last updated timestamp of the resource.",
                          "readOnly": true
                        },
                        "_etag": {
                          "type": "string",
                          "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                          "readOnly": true
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        }
      }
    },
    "RestorableSqlContainerProperties": {
      "description": "The properties of an Azure Cosmos DB SQL container event",
      "type": "object",
      "properties": {
        "resource": {
          "description": "The resource of an Azure Cosmos DB SQL container event",
          "type": "object",
          "properties": {
            "_rid": {
              "type": "string",
              "readOnly": true,
              "description": "A system generated property. A unique identifier."
            },
            "operationType": {
              "type": "string",
              "readOnly": true,
              "description": "The operation type of this container event.",
              "enum": [
                "Create",
                "Replace",
                "Delete",
                "Recreate",
                "SystemOperation"
              ],
              "x-ms-enum": {
                "name": "OperationType",
                "modelAsString": true
              }
            },
            "canUndelete": {
              "type": "string",
              "readOnly": true,
              "description": "A state of this container to identify if this container is restorable in same account."
            },
            "canUndeleteReason": {
              "type": "string",
              "readOnly": true,
              "description": "The reason why this container can not be restored in same account."
            },
            "eventTimestamp": {
              "type": "string",
              "readOnly": true,
              "description": "The when this container event happened."
            },
            "ownerId": {
              "type": "string",
              "readOnly": true,
              "description": "The name of this SQL container."
            },
            "ownerResourceId": {
              "type": "string",
              "readOnly": true,
              "description": "The resource ID of this SQL container."
            },
            "container": {
              "type": "object",
              "description": "Cosmos DB SQL container resource object",
              "properties": {
                "_self": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A system generated property that specifies the addressable path of the container resource."
                }
              },
              "allOf": [
                {
                  "type": "object",
                  "description": "Cosmos DB SQL container resource object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Name of the Cosmos DB SQL container"
                    },
                    "indexingPolicy": {
                      "description": "The configuration of the indexing policy. By default, the indexing is automatic for all document paths within the container",
                      "type": "object",
                      "properties": {
                        "automatic": {
                          "type": "boolean",
                          "description": "Indicates if the indexing policy is automatic"
                        },
                        "indexingMode": {
                          "description": "Indicates the indexing mode.",
                          "type": "string",
                          "default": "consistent",
                          "enum": [
                            "consistent",
                            "lazy",
                            "none"
                          ],
                          "x-ms-enum": {
                            "name": "IndexingMode",
                            "modelAsString": true
                          }
                        },
                        "includedPaths": {
                          "description": "List of paths to include in the indexing",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The paths that are included in indexing",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                              },
                              "indexes": {
                                "description": "List of indexes for this path",
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "description": "The indexes for the path.",
                                  "properties": {
                                    "dataType": {
                                      "description": "The datatype for which the indexing behavior is applied to.",
                                      "type": "string",
                                      "default": "String",
                                      "enum": [
                                        "String",
                                        "Number",
                                        "Point",
                                        "Polygon",
                                        "LineString",
                                        "MultiPolygon"
                                      ],
                                      "x-ms-enum": {
                                        "name": "DataType",
                                        "modelAsString": true
                                      }
                                    },
                                    "precision": {
                                      "description": "The precision of the index. -1 is maximum precision.",
                                      "type": "integer"
                                    },
                                    "kind": {
                                      "description": "Indicates the type of index.",
                                      "type": "string",
                                      "default": "Hash",
                                      "enum": [
                                        "Hash",
                                        "Range",
                                        "Spatial"
                                      ],
                                      "x-ms-enum": {
                                        "name": "IndexKind",
                                        "modelAsString": true
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "excludedPaths": {
                          "description": "List of paths to exclude from indexing",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                              }
                            }
                          }
                        },
                        "compositeIndexes": {
                          "description": "List of composite path list",
                          "type": "array",
                          "items": {
                            "description": "List of composite path",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "path": {
                                  "type": "string",
                                  "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                                },
                                "order": {
                                  "description": "Sort order for composite paths.",
                                  "type": "string",
                                  "enum": [
                                    "ascending",
                                    "descending"
                                  ],
                                  "x-ms-enum": {
                                    "name": "CompositePathSortOrder",
                                    "modelAsString": true
                                  }
                                }
                              }
                            }
                          }
                        },
                        "spatialIndexes": {
                          "description": "List of spatial specifics",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path for which the indexing behavior applies to. Index paths typically start with root and end with wildcard (/path/*)"
                              },
                              "types": {
                                "description": "List of path's spatial type",
                                "type": "array",
                                "items": {
                                  "description": "Indicates the spatial type of index.",
                                  "type": "string",
                                  "enum": [
                                    "Point",
                                    "LineString",
                                    "Polygon",
                                    "MultiPolygon"
                                  ],
                                  "x-ms-enum": {
                                    "name": "SpatialType",
                                    "modelAsString": true
                                  }
                                }
                              }
                            }
                          }
                        },
                        "vectorIndexes": {
                          "description": "List of paths to include in the vector indexing",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path to the vector field in the document."
                              },
                              "type": {
                                "description": "The index type of the vector. Currently, flat, diskANN, and quantizedFlat are supported.",
                                "type": "string",
                                "enum": [
                                  "flat",
                                  "diskANN",
                                  "quantizedFlat"
                                ],
                                "x-ms-enum": {
                                  "name": "VectorIndexType",
                                  "modelAsString": true
                                }
                              }
                            },
                            "required": [
                              "path",
                              "type"
                            ]
                          }
                        }
                      }
                    },
                    "partitionKey": {
                      "description": "The configuration of the partition key to be used for partitioning data into multiple partitions",
                      "type": "object",
                      "properties": {
                        "paths": {
                          "description": "List of paths using which data within the container can be partitioned",
                          "type": "array",
                          "items": {
                            "type": "string",
                            "description": "A path. These typically start with root (/path)"
                          }
                        },
                        "kind": {
                          "description": "Indicates the kind of algorithm used for partitioning. For MultiHash, multiple partition keys (upto three maximum) are supported for container create",
                          "type": "string",
                          "default": "Hash",
                          "enum": [
                            "Hash",
                            "Range",
                            "MultiHash"
                          ],
                          "x-ms-enum": {
                            "name": "PartitionKind",
                            "modelAsString": true
                          }
                        },
                        "version": {
                          "description": "Indicates the version of the partition key definition",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 2,
                          "format": "int32"
                        },
                        "systemKey": {
                          "description": "Indicates if the container is using a system generated partition key",
                          "type": "boolean",
                          "readOnly": true
                        }
                      }
                    },
                    "defaultTtl": {
                      "type": "integer",
                      "description": "Default time to live"
                    },
                    "uniqueKeyPolicy": {
                      "description": "The unique key policy configuration for specifying uniqueness constraints on documents in the collection in the Azure Cosmos DB service.",
                      "type": "object",
                      "properties": {
                        "uniqueKeys": {
                          "description": "List of unique keys on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "The unique key on that enforces uniqueness constraint on documents in the collection in the Azure Cosmos DB service.",
                            "properties": {
                              "paths": {
                                "description": "List of paths must be unique for each document in the Azure Cosmos DB service",
                                "type": "array",
                                "items": {
                                  "type": "string",
                                  "description": "A path. These typically start with root (/path)"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "conflictResolutionPolicy": {
                      "description": "The conflict resolution policy for the container.",
                      "type": "object",
                      "properties": {
                        "mode": {
                          "description": "Indicates the conflict resolution mode.",
                          "type": "string",
                          "default": "LastWriterWins",
                          "enum": [
                            "LastWriterWins",
                            "Custom"
                          ],
                          "x-ms-enum": {
                            "name": "ConflictResolutionMode",
                            "modelAsString": true
                          }
                        },
                        "conflictResolutionPath": {
                          "type": "string",
                          "description": "The conflict resolution path in the case of LastWriterWins mode."
                        },
                        "conflictResolutionProcedure": {
                          "type": "string",
                          "description": "The procedure to resolve conflicts in the case of custom mode."
                        }
                      }
                    },
                    "clientEncryptionPolicy": {
                      "description": "The client encryption policy for the container.",
                      "type": "object",
                      "properties": {
                        "includedPaths": {
                          "description": "Paths of the item that need encryption along with path-specific settings.",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": ".",
                            "properties": {
                              "path": {
                                "description": "Path that needs to be encrypted.",
                                "type": "string"
                              },
                              "clientEncryptionKeyId": {
                                "description": "The identifier of the Client Encryption Key to be used to encrypt the path.",
                                "type": "string"
                              },
                              "encryptionType": {
                                "description": "The type of encryption to be performed. Eg - Deterministic, Randomized.",
                                "type": "string"
                              },
                              "encryptionAlgorithm": {
                                "description": "The encryption algorithm which will be used. Eg - AEAD_AES_256_CBC_HMAC_SHA256.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "path",
                              "clientEncryptionKeyId",
                              "encryptionType",
                              "encryptionAlgorithm"
                            ]
                          },
                          "x-ms-identifiers": []
                        },
                        "policyFormatVersion": {
                          "description": "Version of the client encryption policy definition. Supported versions are 1 and 2. Version 2 supports id and partition key path encryption. ",
                          "type": "integer",
                          "minimum": 1,
                          "maximum": 2,
                          "format": "int32"
                        }
                      },
                      "required": [
                        "includedPaths",
                        "policyFormatVersion"
                      ]
                    },
                    "analyticalStorageTtl": {
                      "type": "integer",
                      "format": "int64",
                      "description": "Analytical TTL."
                    },
                    "restoreParameters": {
                      "description": "Parameters to indicate the information about the restore",
                      "type": "object",
                      "x-ms-mutability": [
                        "read",
                        "create"
                      ],
                      "properties": {
                        "restoreSource": {
                          "type": "string",
                          "description": "The id of the restorable database account from which the restore has to be initiated. For example: /subscriptions/{subscriptionId}/providers/Microsoft.DocumentDB/locations/{location}/restorableDatabaseAccounts/{restorableDatabaseAccountName}"
                        },
                        "restoreTimestampInUtc": {
                          "type": "string",
                          "format": "date-time",
                          "description": "Time to which the account has to be restored (ISO-8601 format)."
                        },
                        "restoreWithTtlDisabled": {
                          "type": "boolean",
                          "description": "Specifies whether the restored account will have Time-To-Live disabled upon the successful restore."
                        }
                      }
                    },
                    "createMode": {
                      "description": "Enum to indicate the mode of resource creation.",
                      "type": "string",
                      "default": "Default",
                      "enum": [
                        "Default",
                        "Restore"
                      ],
                      "x-ms-enum": {
                        "name": "CreateMode",
                        "modelAsString": true
                      }
                    },
                    "computedProperties": {
                      "description": "List of computed properties",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The definition of a computed property",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of a computed property, for example - \"cp_lowerName\""
                          },
                          "query": {
                            "type": "string",
                            "description": "The query that evaluates the value for computed property, for example - \"SELECT VALUE LOWER(c.name) FROM c\""
                          }
                        }
                      }
                    },
                    "vectorEmbeddingPolicy": {
                      "description": "The vector embedding policy for the container.",
                      "type": "object",
                      "properties": {
                        "vectorEmbeddings": {
                          "description": "List of vector embeddings",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Represents a vector embedding. A vector embedding is used to define a vector field in the documents.",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path to the vector field in the document."
                              },
                              "dataType": {
                                "description": "Indicates the data type of vector.",
                                "type": "string",
                                "enum": [
                                  "float32",
                                  "uint8",
                                  "int8"
                                ],
                                "x-ms-enum": {
                                  "name": "VectorDataType",
                                  "modelAsString": true
                                }
                              },
                              "distanceFunction": {
                                "description": "The distance function to use for distance calculation in between vectors.",
                                "type": "string",
                                "enum": [
                                  "euclidean",
                                  "cosine",
                                  "dotproduct"
                                ],
                                "x-ms-enum": {
                                  "name": "DistanceFunction",
                                  "modelAsString": true
                                }
                              },
                              "dimensions": {
                                "type": "integer",
                                "format": "int32",
                                "description": "The number of dimensions in the vector."
                              }
                            },
                            "required": [
                              "path",
                              "dataType",
                              "distanceFunction",
                              "dimensions"
                            ]
                          }
                        }
                      }
                    },
                    "fullTextPolicy": {
                      "description": "The FullText policy for the container.",
                      "type": "object",
                      "properties": {
                        "defaultLanguage": {
                          "type": "string",
                          "description": "The default language for a full text paths."
                        },
                        "fullTextPaths": {
                          "description": "List of FullText Paths",
                          "type": "array",
                          "items": {
                            "type": "object",
                            "description": "Represents the full text path specification.",
                            "properties": {
                              "path": {
                                "type": "string",
                                "description": "The path to the full text field in the document."
                              },
                              "language": {
                                "description": "The language of the full text field in the document.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "path"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "id"
                  ]
                },
                {
                  "description": "The system generated resource properties associated with SQL databases, SQL containers, Gremlin databases and Gremlin graphs.",
                  "type": "object",
                  "properties": {
                    "_rid": {
                      "type": "string",
                      "description": "A system generated property. A unique identifier.",
                      "readOnly": true
                    },
                    "_ts": {
                      "type": "number",
                      "description": "A system generated property that denotes the last updated timestamp of the resource.",
                      "readOnly": true
                    },
                    "_etag": {
                      "type": "string",
                      "description": "A system generated property representing the resource etag required for optimistic concurrency control.",
                      "readOnly": true
                    }
                  }
                }
              ]
            }
          }
        }
      }
    },
    "RestorableSqlResourcesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "description": "Specific Databases to restore.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "databaseName": {
                "type": "string",
                "description": "The name of the database available for restore."
              },
              "collectionNames": {
                "type": "array",
                "description": "The names of the collections available for restore.",
                "items": {
                  "type": "string",
                  "description": "The name of the collection."
                }
              }
            }
          },
          "description": "List of restorable SQL resources, including the database and collection names."
        }
      },
      "description": "The List operation response, that contains the restorable SQL resources."
    },
    "RestorableSqlResourcesGetResult": {
      "type": "object",
      "description": "Specific Databases to restore.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "databaseName": {
          "type": "string",
          "description": "The name of the database available for restore."
        },
        "collectionNames": {
          "type": "array",
          "description": "The names of the collections available for restore.",
          "items": {
            "type": "string",
            "description": "The name of the collection."
          }
        }
      }
    },
    "RestorableMongodbDatabasesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB MongoDB database event",
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "description": "The properties of a MongoDB database event.",
                "properties": {
                  "resource": {
                    "description": "The resource of an Azure Cosmos DB MongoDB database event",
                    "type": "object",
                    "properties": {
                      "_rid": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A system generated property. A unique identifier."
                      },
                      "operationType": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The operation type of this database event.",
                        "enum": [
                          "Create",
                          "Replace",
                          "Delete",
                          "Recreate",
                          "SystemOperation"
                        ],
                        "x-ms-enum": {
                          "name": "OperationType",
                          "modelAsString": true
                        }
                      },
                      "canUndelete": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A state of this database to identify if this database is restorable in same account."
                      },
                      "canUndeleteReason": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The reason why this database can not be restored in same account."
                      },
                      "eventTimestamp": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The time when this database event happened."
                      },
                      "ownerId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of this MongoDB database."
                      },
                      "ownerResourceId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The resource ID of this MongoDB database."
                      }
                    }
                  }
                }
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource Identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              }
            }
          },
          "description": "List of MongoDB database events and their properties."
        }
      },
      "description": "The List operation response, that contains the MongoDB database events and their properties."
    },
    "RestorableMongodbDatabaseGetResult": {
      "description": "An Azure Cosmos DB MongoDB database event",
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "The properties of a MongoDB database event.",
          "properties": {
            "resource": {
              "description": "The resource of an Azure Cosmos DB MongoDB database event",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A system generated property. A unique identifier."
                },
                "operationType": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The operation type of this database event.",
                  "enum": [
                    "Create",
                    "Replace",
                    "Delete",
                    "Recreate",
                    "SystemOperation"
                  ],
                  "x-ms-enum": {
                    "name": "OperationType",
                    "modelAsString": true
                  }
                },
                "canUndelete": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A state of this database to identify if this database is restorable in same account."
                },
                "canUndeleteReason": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The reason why this database can not be restored in same account."
                },
                "eventTimestamp": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The time when this database event happened."
                },
                "ownerId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of this MongoDB database."
                },
                "ownerResourceId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The resource ID of this MongoDB database."
                }
              }
            }
          }
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        }
      }
    },
    "RestorableMongodbDatabaseProperties": {
      "description": "The properties of an Azure Cosmos DB MongoDB database event",
      "type": "object",
      "properties": {
        "resource": {
          "description": "The resource of an Azure Cosmos DB MongoDB database event",
          "type": "object",
          "properties": {
            "_rid": {
              "type": "string",
              "readOnly": true,
              "description": "A system generated property. A unique identifier."
            },
            "operationType": {
              "type": "string",
              "readOnly": true,
              "description": "The operation type of this database event.",
              "enum": [
                "Create",
                "Replace",
                "Delete",
                "Recreate",
                "SystemOperation"
              ],
              "x-ms-enum": {
                "name": "OperationType",
                "modelAsString": true
              }
            },
            "canUndelete": {
              "type": "string",
              "readOnly": true,
              "description": "A state of this database to identify if this database is restorable in same account."
            },
            "canUndeleteReason": {
              "type": "string",
              "readOnly": true,
              "description": "The reason why this database can not be restored in same account."
            },
            "eventTimestamp": {
              "type": "string",
              "readOnly": true,
              "description": "The time when this database event happened."
            },
            "ownerId": {
              "type": "string",
              "readOnly": true,
              "description": "The name of this MongoDB database."
            },
            "ownerResourceId": {
              "type": "string",
              "readOnly": true,
              "description": "The resource ID of this MongoDB database."
            }
          }
        }
      }
    },
    "RestorableMongodbCollectionsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB MongoDB collection event",
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "description": "The properties of a MongoDB collection event.",
                "properties": {
                  "resource": {
                    "description": "The resource of an Azure Cosmos DB MongoDB collection event",
                    "type": "object",
                    "properties": {
                      "_rid": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A system generated property. A unique identifier."
                      },
                      "operationType": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The operation type of this collection event.",
                        "enum": [
                          "Create",
                          "Replace",
                          "Delete",
                          "Recreate",
                          "SystemOperation"
                        ],
                        "x-ms-enum": {
                          "name": "OperationType",
                          "modelAsString": true
                        }
                      },
                      "canUndelete": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A state of this collection to identify if this container is restorable in same account."
                      },
                      "canUndeleteReason": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The reason why this collection can not be restored in same account."
                      },
                      "eventTimestamp": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The time when this collection event happened."
                      },
                      "ownerId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of this MongoDB collection."
                      },
                      "ownerResourceId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The resource ID of this MongoDB collection."
                      }
                    }
                  }
                }
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource Identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              }
            }
          },
          "description": "List of MongoDB collection events and their properties."
        }
      },
      "description": "The List operation response, that contains the MongoDB collection events and their properties."
    },
    "RestorableMongodbCollectionGetResult": {
      "description": "An Azure Cosmos DB MongoDB collection event",
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "The properties of a MongoDB collection event.",
          "properties": {
            "resource": {
              "description": "The resource of an Azure Cosmos DB MongoDB collection event",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A system generated property. A unique identifier."
                },
                "operationType": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The operation type of this collection event.",
                  "enum": [
                    "Create",
                    "Replace",
                    "Delete",
                    "Recreate",
                    "SystemOperation"
                  ],
                  "x-ms-enum": {
                    "name": "OperationType",
                    "modelAsString": true
                  }
                },
                "canUndelete": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A state of this collection to identify if this container is restorable in same account."
                },
                "canUndeleteReason": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The reason why this collection can not be restored in same account."
                },
                "eventTimestamp": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The time when this collection event happened."
                },
                "ownerId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of this MongoDB collection."
                },
                "ownerResourceId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The resource ID of this MongoDB collection."
                }
              }
            }
          }
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        }
      }
    },
    "RestorableMongodbCollectionProperties": {
      "description": "The properties of an Azure Cosmos DB MongoDB collection event",
      "type": "object",
      "properties": {
        "resource": {
          "description": "The resource of an Azure Cosmos DB MongoDB collection event",
          "type": "object",
          "properties": {
            "_rid": {
              "type": "string",
              "readOnly": true,
              "description": "A system generated property. A unique identifier."
            },
            "operationType": {
              "type": "string",
              "readOnly": true,
              "description": "The operation type of this collection event.",
              "enum": [
                "Create",
                "Replace",
                "Delete",
                "Recreate",
                "SystemOperation"
              ],
              "x-ms-enum": {
                "name": "OperationType",
                "modelAsString": true
              }
            },
            "canUndelete": {
              "type": "string",
              "readOnly": true,
              "description": "A state of this collection to identify if this container is restorable in same account."
            },
            "canUndeleteReason": {
              "type": "string",
              "readOnly": true,
              "description": "The reason why this collection can not be restored in same account."
            },
            "eventTimestamp": {
              "type": "string",
              "readOnly": true,
              "description": "The time when this collection event happened."
            },
            "ownerId": {
              "type": "string",
              "readOnly": true,
              "description": "The name of this MongoDB collection."
            },
            "ownerResourceId": {
              "type": "string",
              "readOnly": true,
              "description": "The resource ID of this MongoDB collection."
            }
          }
        }
      }
    },
    "RestorableMongodbResourcesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "description": "Specific Databases to restore.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "databaseName": {
                "type": "string",
                "description": "The name of the database available for restore."
              },
              "collectionNames": {
                "type": "array",
                "description": "The names of the collections available for restore.",
                "items": {
                  "type": "string",
                  "description": "The name of the collection."
                }
              }
            }
          },
          "description": "List of restorable MongoDB resources, including the database and collection names."
        }
      },
      "description": "The List operation response, that contains the restorable MongoDB resources."
    },
    "RestorableMongodbResourcesGetResult": {
      "type": "object",
      "description": "Specific Databases to restore.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "databaseName": {
          "type": "string",
          "description": "The name of the database available for restore."
        },
        "collectionNames": {
          "type": "array",
          "description": "The names of the collections available for restore.",
          "items": {
            "type": "string",
            "description": "The name of the collection."
          }
        }
      }
    },
    "RestorableGremlinDatabasesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB Gremlin database event",
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "description": "The properties of a Gremlin database event.",
                "properties": {
                  "resource": {
                    "description": "The resource of an Azure Cosmos DB Gremlin database event",
                    "type": "object",
                    "properties": {
                      "_rid": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A system generated property. A unique identifier."
                      },
                      "operationType": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The operation type of this database event.",
                        "enum": [
                          "Create",
                          "Replace",
                          "Delete",
                          "Recreate",
                          "SystemOperation"
                        ],
                        "x-ms-enum": {
                          "name": "OperationType",
                          "modelAsString": true
                        }
                      },
                      "canUndelete": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A state of this database to identify if this database is restorable in same account."
                      },
                      "canUndeleteReason": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The reason why this database can not be restored in same account."
                      },
                      "eventTimestamp": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The time when this database event happened."
                      },
                      "ownerId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of this Gremlin database."
                      },
                      "ownerResourceId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The resource ID of this Gremlin database."
                      }
                    }
                  }
                }
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource Identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              }
            }
          },
          "description": "List of Gremlin database events and their properties."
        }
      },
      "description": "The List operation response, that contains the Gremlin database events and their properties."
    },
    "RestorableGremlinDatabaseGetResult": {
      "description": "An Azure Cosmos DB Gremlin database event",
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "The properties of a Gremlin database event.",
          "properties": {
            "resource": {
              "description": "The resource of an Azure Cosmos DB Gremlin database event",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A system generated property. A unique identifier."
                },
                "operationType": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The operation type of this database event.",
                  "enum": [
                    "Create",
                    "Replace",
                    "Delete",
                    "Recreate",
                    "SystemOperation"
                  ],
                  "x-ms-enum": {
                    "name": "OperationType",
                    "modelAsString": true
                  }
                },
                "canUndelete": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A state of this database to identify if this database is restorable in same account."
                },
                "canUndeleteReason": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The reason why this database can not be restored in same account."
                },
                "eventTimestamp": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The time when this database event happened."
                },
                "ownerId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of this Gremlin database."
                },
                "ownerResourceId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The resource ID of this Gremlin database."
                }
              }
            }
          }
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        }
      }
    },
    "RestorableGremlinDatabaseProperties": {
      "description": "The properties of an Azure Cosmos DB Gremlin database event",
      "type": "object",
      "properties": {
        "resource": {
          "description": "The resource of an Azure Cosmos DB Gremlin database event",
          "type": "object",
          "properties": {
            "_rid": {
              "type": "string",
              "readOnly": true,
              "description": "A system generated property. A unique identifier."
            },
            "operationType": {
              "type": "string",
              "readOnly": true,
              "description": "The operation type of this database event.",
              "enum": [
                "Create",
                "Replace",
                "Delete",
                "Recreate",
                "SystemOperation"
              ],
              "x-ms-enum": {
                "name": "OperationType",
                "modelAsString": true
              }
            },
            "canUndelete": {
              "type": "string",
              "readOnly": true,
              "description": "A state of this database to identify if this database is restorable in same account."
            },
            "canUndeleteReason": {
              "type": "string",
              "readOnly": true,
              "description": "The reason why this database can not be restored in same account."
            },
            "eventTimestamp": {
              "type": "string",
              "readOnly": true,
              "description": "The time when this database event happened."
            },
            "ownerId": {
              "type": "string",
              "readOnly": true,
              "description": "The name of this Gremlin database."
            },
            "ownerResourceId": {
              "type": "string",
              "readOnly": true,
              "description": "The resource ID of this Gremlin database."
            }
          }
        }
      }
    },
    "RestorableGremlinGraphsListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB Gremlin graph event",
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "description": "The properties of a Gremlin graph event.",
                "properties": {
                  "resource": {
                    "description": "The resource of an Azure Cosmos DB Gremlin graph event",
                    "type": "object",
                    "properties": {
                      "_rid": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A system generated property. A unique identifier."
                      },
                      "operationType": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The operation type of this graph event.",
                        "enum": [
                          "Create",
                          "Replace",
                          "Delete",
                          "Recreate",
                          "SystemOperation"
                        ],
                        "x-ms-enum": {
                          "name": "OperationType",
                          "modelAsString": true
                        }
                      },
                      "canUndelete": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A state of this graph to identify if this graph is restorable in same account."
                      },
                      "canUndeleteReason": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The reason why this graph can not be restored in same account."
                      },
                      "eventTimestamp": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The time when this graph event happened."
                      },
                      "ownerId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of this Gremlin graph."
                      },
                      "ownerResourceId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The resource ID of this Gremlin graph."
                      }
                    }
                  }
                }
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource Identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              }
            }
          },
          "description": "List of Gremlin graph events and their properties."
        }
      },
      "description": "The List operation response, that contains the Gremlin graph events and their properties."
    },
    "RestorableGremlinGraphGetResult": {
      "description": "An Azure Cosmos DB Gremlin graph event",
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "The properties of a Gremlin graph event.",
          "properties": {
            "resource": {
              "description": "The resource of an Azure Cosmos DB Gremlin graph event",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A system generated property. A unique identifier."
                },
                "operationType": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The operation type of this graph event.",
                  "enum": [
                    "Create",
                    "Replace",
                    "Delete",
                    "Recreate",
                    "SystemOperation"
                  ],
                  "x-ms-enum": {
                    "name": "OperationType",
                    "modelAsString": true
                  }
                },
                "canUndelete": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A state of this graph to identify if this graph is restorable in same account."
                },
                "canUndeleteReason": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The reason why this graph can not be restored in same account."
                },
                "eventTimestamp": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The time when this graph event happened."
                },
                "ownerId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of this Gremlin graph."
                },
                "ownerResourceId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The resource ID of this Gremlin graph."
                }
              }
            }
          }
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        }
      }
    },
    "RestorableGremlinGraphProperties": {
      "description": "The properties of an Azure Cosmos DB Gremlin graph event",
      "type": "object",
      "properties": {
        "resource": {
          "description": "The resource of an Azure Cosmos DB Gremlin graph event",
          "type": "object",
          "properties": {
            "_rid": {
              "type": "string",
              "readOnly": true,
              "description": "A system generated property. A unique identifier."
            },
            "operationType": {
              "type": "string",
              "readOnly": true,
              "description": "The operation type of this graph event.",
              "enum": [
                "Create",
                "Replace",
                "Delete",
                "Recreate",
                "SystemOperation"
              ],
              "x-ms-enum": {
                "name": "OperationType",
                "modelAsString": true
              }
            },
            "canUndelete": {
              "type": "string",
              "readOnly": true,
              "description": "A state of this graph to identify if this graph is restorable in same account."
            },
            "canUndeleteReason": {
              "type": "string",
              "readOnly": true,
              "description": "The reason why this graph can not be restored in same account."
            },
            "eventTimestamp": {
              "type": "string",
              "readOnly": true,
              "description": "The time when this graph event happened."
            },
            "ownerId": {
              "type": "string",
              "readOnly": true,
              "description": "The name of this Gremlin graph."
            },
            "ownerResourceId": {
              "type": "string",
              "readOnly": true,
              "description": "The resource ID of this Gremlin graph."
            }
          }
        }
      }
    },
    "RestorableGremlinResourcesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "description": "Specific Databases to restore.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "databaseName": {
                "type": "string",
                "description": "The name of the gremlin database available for restore."
              },
              "graphNames": {
                "type": "array",
                "description": "The names of the graphs available for restore.",
                "items": {
                  "type": "string",
                  "description": "The name of the graph."
                }
              }
            }
          },
          "description": "List of restorable Gremlin resources, including the gremlin database and graph names.",
          "x-ms-identifiers": []
        }
      },
      "description": "The List operation response, that contains the restorable Gremlin resources."
    },
    "RestorableGremlinResourcesGetResult": {
      "type": "object",
      "description": "Specific Databases to restore.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "databaseName": {
          "type": "string",
          "description": "The name of the gremlin database available for restore."
        },
        "graphNames": {
          "type": "array",
          "description": "The names of the graphs available for restore.",
          "items": {
            "type": "string",
            "description": "The name of the graph."
          }
        }
      }
    },
    "RestorableTablesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "An Azure Cosmos DB Table event",
            "type": "object",
            "properties": {
              "properties": {
                "type": "object",
                "x-ms-client-flatten": true,
                "description": "The properties of a Table event.",
                "properties": {
                  "resource": {
                    "description": "The resource of an Azure Cosmos DB Table event",
                    "type": "object",
                    "properties": {
                      "_rid": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A system generated property. A unique identifier."
                      },
                      "operationType": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The operation type of this table event.",
                        "enum": [
                          "Create",
                          "Replace",
                          "Delete",
                          "Recreate",
                          "SystemOperation"
                        ],
                        "x-ms-enum": {
                          "name": "OperationType",
                          "modelAsString": true
                        }
                      },
                      "canUndelete": {
                        "type": "string",
                        "readOnly": true,
                        "description": "A state of this table to identify if this table is restorable in same account."
                      },
                      "canUndeleteReason": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The reason why this table can not be restored in same account."
                      },
                      "eventTimestamp": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The time when this table event happened."
                      },
                      "ownerId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The name of this Table."
                      },
                      "ownerResourceId": {
                        "type": "string",
                        "readOnly": true,
                        "description": "The resource ID of this Table."
                      }
                    }
                  }
                }
              },
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource Identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the ARM resource."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              }
            }
          },
          "description": "List of Table events and their properties."
        }
      },
      "description": "The List operation response, that contains the Table events and their properties."
    },
    "RestorableTableGetResult": {
      "description": "An Azure Cosmos DB Table event",
      "type": "object",
      "properties": {
        "properties": {
          "type": "object",
          "x-ms-client-flatten": true,
          "description": "The properties of a Table event.",
          "properties": {
            "resource": {
              "description": "The resource of an Azure Cosmos DB Table event",
              "type": "object",
              "properties": {
                "_rid": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A system generated property. A unique identifier."
                },
                "operationType": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The operation type of this table event.",
                  "enum": [
                    "Create",
                    "Replace",
                    "Delete",
                    "Recreate",
                    "SystemOperation"
                  ],
                  "x-ms-enum": {
                    "name": "OperationType",
                    "modelAsString": true
                  }
                },
                "canUndelete": {
                  "type": "string",
                  "readOnly": true,
                  "description": "A state of this table to identify if this table is restorable in same account."
                },
                "canUndeleteReason": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The reason why this table can not be restored in same account."
                },
                "eventTimestamp": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The time when this table event happened."
                },
                "ownerId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The name of this Table."
                },
                "ownerResourceId": {
                  "type": "string",
                  "readOnly": true,
                  "description": "The resource ID of this Table."
                }
              }
            }
          }
        },
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource Identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the ARM resource."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        }
      }
    },
    "RestorableTableProperties": {
      "description": "The properties of an Azure Cosmos DB Table event",
      "type": "object",
      "properties": {
        "resource": {
          "description": "The resource of an Azure Cosmos DB Table event",
          "type": "object",
          "properties": {
            "_rid": {
              "type": "string",
              "readOnly": true,
              "description": "A system generated property. A unique identifier."
            },
            "operationType": {
              "type": "string",
              "readOnly": true,
              "description": "The operation type of this table event.",
              "enum": [
                "Create",
                "Replace",
                "Delete",
                "Recreate",
                "SystemOperation"
              ],
              "x-ms-enum": {
                "name": "OperationType",
                "modelAsString": true
              }
            },
            "canUndelete": {
              "type": "string",
              "readOnly": true,
              "description": "A state of this table to identify if this table is restorable in same account."
            },
            "canUndeleteReason": {
              "type": "string",
              "readOnly": true,
              "description": "The reason why this table can not be restored in same account."
            },
            "eventTimestamp": {
              "type": "string",
              "readOnly": true,
              "description": "The time when this table event happened."
            },
            "ownerId": {
              "type": "string",
              "readOnly": true,
              "description": "The name of this Table."
            },
            "ownerResourceId": {
              "type": "string",
              "readOnly": true,
              "description": "The resource ID of this Table."
            }
          }
        }
      }
    },
    "RestorableTableResourcesListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "type": "object",
            "description": "Specific Databases to restore.",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the ARM resource."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the Table."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              }
            }
          },
          "description": "List of restorable table names."
        }
      },
      "description": "List of restorable table names."
    },
    "RestorableTableResourcesGetResult": {
      "type": "object",
      "description": "Specific Databases to restore.",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the ARM resource."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the Table."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        }
      }
    },
    "OperationType": {
      "description": "Enum to indicate the operation type of the event.",
      "type": "string",
      "readOnly": true,
      "enum": [
        "Create",
        "Replace",
        "Delete",
        "Recreate",
        "SystemOperation"
      ],
      "x-ms-enum": {
        "name": "OperationType",
        "modelAsString": true
      }
    },
    "ContinuousBackupRestoreLocation": {
      "type": "object",
      "description": "Properties of the regional restorable account.",
      "properties": {
        "location": {
          "type": "string",
          "description": "The name of the continuous backup restore location."
        }
      }
    },
    "BackupInformation": {
      "description": "Backup information of a resource.",
      "type": "object",
      "properties": {
        "continuousBackupInformation": {
          "description": "Information about the status of continuous backups.",
          "type": "object",
          "readOnly": true,
          "properties": {
            "latestRestorableTimestamp": {
              "type": "string",
              "description": "The latest restorable timestamp for a resource."
            }
          }
        }
      }
    },
    "ContinuousBackupInformation": {
      "description": "Information about the status of continuous backups.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "latestRestorableTimestamp": {
          "type": "string",
          "description": "The latest restorable timestamp for a resource."
        }
      }
    },
    "ServiceResourceProperties": {
      "description": "Services response resource.",
      "type": "object",
      "discriminator": "serviceType",
      "properties": {
        "creationTime": {
          "readOnly": true,
          "type": "string",
          "format": "date-time",
          "description": "Time of the last state change (ISO-8601 format)."
        },
        "instanceSize": {
          "type": "string",
          "enum": [
            "Cosmos.D4s",
            "Cosmos.D8s",
            "Cosmos.D16s"
          ],
          "description": "Instance type for the service.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceSize"
          }
        },
        "instanceCount": {
          "description": "Instance count for the service.",
          "type": "integer",
          "minimum": 0,
          "format": "int32"
        },
        "serviceType": {
          "type": "string",
          "enum": [
            "SqlDedicatedGateway",
            "DataTransfer",
            "GraphAPICompute",
            "MaterializedViewsBuilder"
          ],
          "description": "ServiceType for the service.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceType"
          }
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Creating",
            "Running",
            "Updating",
            "Deleting",
            "Error",
            "Stopped"
          ],
          "description": "Describes the status of a service.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceStatus"
          }
        }
      },
      "additionalProperties": true,
      "required": [
        "serviceType"
      ]
    },
    "ServiceResourceCreateUpdateParameters": {
      "description": "Parameters for Create or Update request for ServiceResource",
      "type": "object",
      "properties": {
        "properties": {
          "description": "Properties in ServiceResourceCreateUpdateParameters.",
          "type": "object",
          "discriminator": "serviceType",
          "properties": {
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            }
          },
          "required": [
            "serviceType"
          ]
        }
      }
    },
    "ServiceResourceCreateUpdateProperties": {
      "description": "Properties in ServiceResourceCreateUpdateParameters.",
      "type": "object",
      "discriminator": "serviceType",
      "properties": {
        "instanceSize": {
          "type": "string",
          "enum": [
            "Cosmos.D4s",
            "Cosmos.D8s",
            "Cosmos.D16s"
          ],
          "description": "Instance type for the service.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceSize"
          }
        },
        "instanceCount": {
          "description": "Instance count for the service.",
          "type": "integer",
          "minimum": 0,
          "format": "int32"
        },
        "serviceType": {
          "type": "string",
          "enum": [
            "SqlDedicatedGateway",
            "DataTransfer",
            "GraphAPICompute",
            "MaterializedViewsBuilder"
          ],
          "description": "ServiceType for the service.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceType"
          }
        }
      },
      "required": [
        "serviceType"
      ]
    },
    "ServiceResource": {
      "description": "Properties for the database account.",
      "type": "object",
      "properties": {
        "id": {
          "readOnly": true,
          "type": "string",
          "description": "The unique resource identifier of the database account."
        },
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The name of the database account."
        },
        "type": {
          "readOnly": true,
          "type": "string",
          "description": "The type of Azure resource."
        },
        "properties": {
          "x-ms-client-flatten": false,
          "description": "Services response resource.",
          "type": "object",
          "discriminator": "serviceType",
          "properties": {
            "creationTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Time of the last state change (ISO-8601 format)."
            },
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "enum": [
                "Creating",
                "Running",
                "Updating",
                "Deleting",
                "Error",
                "Stopped"
              ],
              "description": "Describes the status of a service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceStatus"
              }
            }
          },
          "additionalProperties": true,
          "required": [
            "serviceType"
          ]
        }
      }
    },
    "ServiceResourceListResult": {
      "type": "object",
      "properties": {
        "value": {
          "readOnly": true,
          "type": "array",
          "items": {
            "description": "Properties for the database account.",
            "type": "object",
            "properties": {
              "id": {
                "readOnly": true,
                "type": "string",
                "description": "The unique resource identifier of the database account."
              },
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The name of the database account."
              },
              "type": {
                "readOnly": true,
                "type": "string",
                "description": "The type of Azure resource."
              },
              "properties": {
                "x-ms-client-flatten": false,
                "description": "Services response resource.",
                "type": "object",
                "discriminator": "serviceType",
                "properties": {
                  "creationTime": {
                    "readOnly": true,
                    "type": "string",
                    "format": "date-time",
                    "description": "Time of the last state change (ISO-8601 format)."
                  },
                  "instanceSize": {
                    "type": "string",
                    "enum": [
                      "Cosmos.D4s",
                      "Cosmos.D8s",
                      "Cosmos.D16s"
                    ],
                    "description": "Instance type for the service.",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ServiceSize"
                    }
                  },
                  "instanceCount": {
                    "description": "Instance count for the service.",
                    "type": "integer",
                    "minimum": 0,
                    "format": "int32"
                  },
                  "serviceType": {
                    "type": "string",
                    "enum": [
                      "SqlDedicatedGateway",
                      "DataTransfer",
                      "GraphAPICompute",
                      "MaterializedViewsBuilder"
                    ],
                    "description": "ServiceType for the service.",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ServiceType"
                    }
                  },
                  "status": {
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Creating",
                      "Running",
                      "Updating",
                      "Deleting",
                      "Error",
                      "Stopped"
                    ],
                    "description": "Describes the status of a service.",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ServiceStatus"
                    }
                  }
                },
                "additionalProperties": true,
                "required": [
                  "serviceType"
                ]
              }
            }
          },
          "description": "List of Service Resource and their properties."
        }
      },
      "description": "The List operation response, that contains the Service Resource and their properties."
    },
    "DataTransferServiceResource": {
      "description": "Describes the service response property.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "description": "Properties for DataTransferServiceResource.",
          "type": "object",
          "x-ms-discriminator-value": "DataTransfer",
          "properties": {
            "creationTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Time of the last state change (ISO-8601 format)."
            },
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "enum": [
                "Creating",
                "Running",
                "Updating",
                "Deleting",
                "Error",
                "Stopped"
              ],
              "description": "Describes the status of a service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceStatus"
              }
            },
            "locations": {
              "type": "array",
              "readOnly": true,
              "description": "An array that contains all of the locations for the service.",
              "items": {
                "description": "Resource for a regional service location.",
                "type": "object",
                "properties": {
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The regional service name."
                  },
                  "location": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The location name."
                  },
                  "status": {
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Creating",
                      "Running",
                      "Updating",
                      "Deleting",
                      "Error",
                      "Stopped"
                    ],
                    "description": "Describes the status of a service.",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ServiceStatus"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "DataTransferServiceResourceProperties": {
      "description": "Properties for DataTransferServiceResource.",
      "type": "object",
      "x-ms-discriminator-value": "DataTransfer",
      "allOf": [
        {
          "description": "Services response resource.",
          "type": "object",
          "discriminator": "serviceType",
          "properties": {
            "creationTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Time of the last state change (ISO-8601 format)."
            },
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "enum": [
                "Creating",
                "Running",
                "Updating",
                "Deleting",
                "Error",
                "Stopped"
              ],
              "description": "Describes the status of a service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceStatus"
              }
            }
          },
          "additionalProperties": true,
          "required": [
            "serviceType"
          ]
        }
      ],
      "properties": {
        "locations": {
          "type": "array",
          "readOnly": true,
          "description": "An array that contains all of the locations for the service.",
          "items": {
            "description": "Resource for a regional service location.",
            "type": "object",
            "properties": {
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The regional service name."
              },
              "location": {
                "readOnly": true,
                "type": "string",
                "description": "The location name."
              },
              "status": {
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Creating",
                  "Running",
                  "Updating",
                  "Deleting",
                  "Error",
                  "Stopped"
                ],
                "description": "Describes the status of a service.",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "ServiceStatus"
                }
              }
            }
          }
        }
      }
    },
    "DataTransferServiceResourceCreateUpdateProperties": {
      "description": "Properties for Create or Update request for DataTransferServiceResource",
      "type": "object",
      "x-ms-discriminator-value": "DataTransfer",
      "allOf": [
        {
          "description": "Properties in ServiceResourceCreateUpdateParameters.",
          "type": "object",
          "discriminator": "serviceType",
          "properties": {
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            }
          },
          "required": [
            "serviceType"
          ]
        }
      ]
    },
    "SqlDedicatedGatewayServiceResourceCreateUpdateProperties": {
      "description": "Properties for Create or Update request for SqlDedicatedGatewayServiceResource",
      "type": "object",
      "x-ms-discriminator-value": "SqlDedicatedGateway",
      "allOf": [
        {
          "description": "Properties in ServiceResourceCreateUpdateParameters.",
          "type": "object",
          "discriminator": "serviceType",
          "properties": {
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            }
          },
          "required": [
            "serviceType"
          ]
        }
      ],
      "properties": {
        "dedicatedGatewayType": {
          "type": "string",
          "enum": [
            "IntegratedCache",
            "DistributedQuery"
          ],
          "description": "DedicatedGatewayType for the service.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DedicatedGatewayType"
          }
        }
      }
    },
    "SqlDedicatedGatewayType": {
      "type": "string",
      "enum": [
        "IntegratedCache",
        "DistributedQuery"
      ],
      "description": "DedicatedGatewayType for the service.",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "DedicatedGatewayType"
      }
    },
    "SqlDedicatedGatewayServiceResource": {
      "description": "Describes the service response property for SqlDedicatedGateway.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "description": "Properties for SqlDedicatedGatewayServiceResource.",
          "type": "object",
          "x-ms-discriminator-value": "SqlDedicatedGateway",
          "properties": {
            "creationTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Time of the last state change (ISO-8601 format)."
            },
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "enum": [
                "Creating",
                "Running",
                "Updating",
                "Deleting",
                "Error",
                "Stopped"
              ],
              "description": "Describes the status of a service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceStatus"
              }
            },
            "sqlDedicatedGatewayEndpoint": {
              "type": "string",
              "description": "SqlDedicatedGateway endpoint for the service."
            },
            "dedicatedGatewayType": {
              "type": "string",
              "enum": [
                "IntegratedCache",
                "DistributedQuery"
              ],
              "description": "DedicatedGatewayType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "DedicatedGatewayType"
              }
            },
            "locations": {
              "type": "array",
              "readOnly": true,
              "description": "An array that contains all of the locations for the service.",
              "items": {
                "description": "Resource for a regional service location.",
                "type": "object",
                "properties": {
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The regional service name."
                  },
                  "location": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The location name."
                  },
                  "status": {
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Creating",
                      "Running",
                      "Updating",
                      "Deleting",
                      "Error",
                      "Stopped"
                    ],
                    "description": "Describes the status of a service.",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ServiceStatus"
                    }
                  },
                  "sqlDedicatedGatewayEndpoint": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The regional endpoint for SqlDedicatedGateway."
                  }
                }
              }
            }
          }
        }
      }
    },
    "SqlDedicatedGatewayServiceResourceProperties": {
      "description": "Properties for SqlDedicatedGatewayServiceResource.",
      "type": "object",
      "x-ms-discriminator-value": "SqlDedicatedGateway",
      "allOf": [
        {
          "description": "Services response resource.",
          "type": "object",
          "discriminator": "serviceType",
          "properties": {
            "creationTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Time of the last state change (ISO-8601 format)."
            },
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "enum": [
                "Creating",
                "Running",
                "Updating",
                "Deleting",
                "Error",
                "Stopped"
              ],
              "description": "Describes the status of a service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceStatus"
              }
            }
          },
          "additionalProperties": true,
          "required": [
            "serviceType"
          ]
        }
      ],
      "properties": {
        "sqlDedicatedGatewayEndpoint": {
          "type": "string",
          "description": "SqlDedicatedGateway endpoint for the service."
        },
        "dedicatedGatewayType": {
          "type": "string",
          "enum": [
            "IntegratedCache",
            "DistributedQuery"
          ],
          "description": "DedicatedGatewayType for the service.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "DedicatedGatewayType"
          }
        },
        "locations": {
          "type": "array",
          "readOnly": true,
          "description": "An array that contains all of the locations for the service.",
          "items": {
            "description": "Resource for a regional service location.",
            "type": "object",
            "properties": {
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The regional service name."
              },
              "location": {
                "readOnly": true,
                "type": "string",
                "description": "The location name."
              },
              "status": {
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Creating",
                  "Running",
                  "Updating",
                  "Deleting",
                  "Error",
                  "Stopped"
                ],
                "description": "Describes the status of a service.",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "ServiceStatus"
                }
              },
              "sqlDedicatedGatewayEndpoint": {
                "readOnly": true,
                "type": "string",
                "description": "The regional endpoint for SqlDedicatedGateway."
              }
            }
          }
        }
      }
    },
    "GraphAPIComputeServiceResource": {
      "description": "Describes the service response property for GraphAPICompute.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "description": "Properties for GraphAPIComputeServiceResource.",
          "type": "object",
          "x-ms-discriminator-value": "GraphAPICompute",
          "properties": {
            "creationTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Time of the last state change (ISO-8601 format)."
            },
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "enum": [
                "Creating",
                "Running",
                "Updating",
                "Deleting",
                "Error",
                "Stopped"
              ],
              "description": "Describes the status of a service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceStatus"
              }
            },
            "graphApiComputeEndpoint": {
              "type": "string",
              "description": "GraphAPICompute endpoint for the service."
            },
            "locations": {
              "type": "array",
              "readOnly": true,
              "description": "An array that contains all of the locations for the service.",
              "items": {
                "description": "Resource for a regional service location.",
                "type": "object",
                "properties": {
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The regional service name."
                  },
                  "location": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The location name."
                  },
                  "status": {
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Creating",
                      "Running",
                      "Updating",
                      "Deleting",
                      "Error",
                      "Stopped"
                    ],
                    "description": "Describes the status of a service.",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ServiceStatus"
                    }
                  },
                  "graphApiComputeEndpoint": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The regional endpoint for GraphAPICompute."
                  }
                }
              }
            }
          }
        }
      }
    },
    "GraphAPIComputeServiceResourceProperties": {
      "description": "Properties for GraphAPIComputeServiceResource.",
      "type": "object",
      "x-ms-discriminator-value": "GraphAPICompute",
      "allOf": [
        {
          "description": "Services response resource.",
          "type": "object",
          "discriminator": "serviceType",
          "properties": {
            "creationTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Time of the last state change (ISO-8601 format)."
            },
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "enum": [
                "Creating",
                "Running",
                "Updating",
                "Deleting",
                "Error",
                "Stopped"
              ],
              "description": "Describes the status of a service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceStatus"
              }
            }
          },
          "additionalProperties": true,
          "required": [
            "serviceType"
          ]
        }
      ],
      "properties": {
        "graphApiComputeEndpoint": {
          "type": "string",
          "description": "GraphAPICompute endpoint for the service."
        },
        "locations": {
          "type": "array",
          "readOnly": true,
          "description": "An array that contains all of the locations for the service.",
          "items": {
            "description": "Resource for a regional service location.",
            "type": "object",
            "properties": {
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The regional service name."
              },
              "location": {
                "readOnly": true,
                "type": "string",
                "description": "The location name."
              },
              "status": {
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Creating",
                  "Running",
                  "Updating",
                  "Deleting",
                  "Error",
                  "Stopped"
                ],
                "description": "Describes the status of a service.",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "ServiceStatus"
                }
              },
              "graphApiComputeEndpoint": {
                "readOnly": true,
                "type": "string",
                "description": "The regional endpoint for GraphAPICompute."
              }
            }
          }
        }
      }
    },
    "GraphAPIComputeServiceResourceCreateUpdateProperties": {
      "description": "Properties for Create or Update request for GraphAPIComputeServiceResource",
      "type": "object",
      "x-ms-discriminator-value": "GraphAPICompute",
      "allOf": [
        {
          "description": "Properties in ServiceResourceCreateUpdateParameters.",
          "type": "object",
          "discriminator": "serviceType",
          "properties": {
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            }
          },
          "required": [
            "serviceType"
          ]
        }
      ]
    },
    "MaterializedViewsBuilderServiceResource": {
      "description": "Describes the service response property for MaterializedViewsBuilder.",
      "type": "object",
      "properties": {
        "properties": {
          "x-ms-client-flatten": false,
          "description": "Properties for MaterializedViewsBuilderServiceResource.",
          "type": "object",
          "x-ms-discriminator-value": "MaterializedViewsBuilder",
          "properties": {
            "creationTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Time of the last state change (ISO-8601 format)."
            },
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "enum": [
                "Creating",
                "Running",
                "Updating",
                "Deleting",
                "Error",
                "Stopped"
              ],
              "description": "Describes the status of a service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceStatus"
              }
            },
            "locations": {
              "type": "array",
              "readOnly": true,
              "description": "An array that contains all of the locations for the service.",
              "items": {
                "description": "Resource for a regional service location.",
                "type": "object",
                "properties": {
                  "name": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The regional service name."
                  },
                  "location": {
                    "readOnly": true,
                    "type": "string",
                    "description": "The location name."
                  },
                  "status": {
                    "readOnly": true,
                    "type": "string",
                    "enum": [
                      "Creating",
                      "Running",
                      "Updating",
                      "Deleting",
                      "Error",
                      "Stopped"
                    ],
                    "description": "Describes the status of a service.",
                    "x-ms-enum": {
                      "modelAsString": true,
                      "name": "ServiceStatus"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "MaterializedViewsBuilderServiceResourceProperties": {
      "description": "Properties for MaterializedViewsBuilderServiceResource.",
      "type": "object",
      "x-ms-discriminator-value": "MaterializedViewsBuilder",
      "allOf": [
        {
          "description": "Services response resource.",
          "type": "object",
          "discriminator": "serviceType",
          "properties": {
            "creationTime": {
              "readOnly": true,
              "type": "string",
              "format": "date-time",
              "description": "Time of the last state change (ISO-8601 format)."
            },
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            },
            "status": {
              "readOnly": true,
              "type": "string",
              "enum": [
                "Creating",
                "Running",
                "Updating",
                "Deleting",
                "Error",
                "Stopped"
              ],
              "description": "Describes the status of a service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceStatus"
              }
            }
          },
          "additionalProperties": true,
          "required": [
            "serviceType"
          ]
        }
      ],
      "properties": {
        "locations": {
          "type": "array",
          "readOnly": true,
          "description": "An array that contains all of the locations for the service.",
          "items": {
            "description": "Resource for a regional service location.",
            "type": "object",
            "properties": {
              "name": {
                "readOnly": true,
                "type": "string",
                "description": "The regional service name."
              },
              "location": {
                "readOnly": true,
                "type": "string",
                "description": "The location name."
              },
              "status": {
                "readOnly": true,
                "type": "string",
                "enum": [
                  "Creating",
                  "Running",
                  "Updating",
                  "Deleting",
                  "Error",
                  "Stopped"
                ],
                "description": "Describes the status of a service.",
                "x-ms-enum": {
                  "modelAsString": true,
                  "name": "ServiceStatus"
                }
              }
            }
          }
        }
      }
    },
    "MaterializedViewsBuilderServiceResourceCreateUpdateProperties": {
      "description": "Properties for Create or Update request for MaterializedViewsBuilderServiceResource",
      "type": "object",
      "x-ms-discriminator-value": "MaterializedViewsBuilder",
      "allOf": [
        {
          "description": "Properties in ServiceResourceCreateUpdateParameters.",
          "type": "object",
          "discriminator": "serviceType",
          "properties": {
            "instanceSize": {
              "type": "string",
              "enum": [
                "Cosmos.D4s",
                "Cosmos.D8s",
                "Cosmos.D16s"
              ],
              "description": "Instance type for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceSize"
              }
            },
            "instanceCount": {
              "description": "Instance count for the service.",
              "type": "integer",
              "minimum": 0,
              "format": "int32"
            },
            "serviceType": {
              "type": "string",
              "enum": [
                "SqlDedicatedGateway",
                "DataTransfer",
                "GraphAPICompute",
                "MaterializedViewsBuilder"
              ],
              "description": "ServiceType for the service.",
              "x-ms-enum": {
                "modelAsString": true,
                "name": "ServiceType"
              }
            }
          },
          "required": [
            "serviceType"
          ]
        }
      ]
    },
    "RegionalServiceResource": {
      "description": "Resource for a regional service location.",
      "type": "object",
      "readOnly": true,
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The regional service name."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "The location name."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Creating",
            "Running",
            "Updating",
            "Deleting",
            "Error",
            "Stopped"
          ],
          "description": "Describes the status of a service.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceStatus"
          }
        }
      }
    },
    "SqlDedicatedGatewayRegionalServiceResource": {
      "description": "Resource for a regional service location.",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The regional service name."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "The location name."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Creating",
            "Running",
            "Updating",
            "Deleting",
            "Error",
            "Stopped"
          ],
          "description": "Describes the status of a service.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceStatus"
          }
        },
        "sqlDedicatedGatewayEndpoint": {
          "readOnly": true,
          "type": "string",
          "description": "The regional endpoint for SqlDedicatedGateway."
        }
      }
    },
    "GraphAPIComputeRegionalServiceResource": {
      "description": "Resource for a regional service location.",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The regional service name."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "The location name."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Creating",
            "Running",
            "Updating",
            "Deleting",
            "Error",
            "Stopped"
          ],
          "description": "Describes the status of a service.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceStatus"
          }
        },
        "graphApiComputeEndpoint": {
          "readOnly": true,
          "type": "string",
          "description": "The regional endpoint for GraphAPICompute."
        }
      }
    },
    "DataTransferRegionalServiceResource": {
      "description": "Resource for a regional service location.",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The regional service name."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "The location name."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Creating",
            "Running",
            "Updating",
            "Deleting",
            "Error",
            "Stopped"
          ],
          "description": "Describes the status of a service.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceStatus"
          }
        }
      }
    },
    "MaterializedViewsBuilderRegionalServiceResource": {
      "description": "Resource for a regional service location.",
      "type": "object",
      "properties": {
        "name": {
          "readOnly": true,
          "type": "string",
          "description": "The regional service name."
        },
        "location": {
          "readOnly": true,
          "type": "string",
          "description": "The location name."
        },
        "status": {
          "readOnly": true,
          "type": "string",
          "enum": [
            "Creating",
            "Running",
            "Updating",
            "Deleting",
            "Error",
            "Stopped"
          ],
          "description": "Describes the status of a service.",
          "x-ms-enum": {
            "modelAsString": true,
            "name": "ServiceStatus"
          }
        }
      }
    },
    "ServiceResourceStatus": {
      "type": "string",
      "enum": [
        "Creating",
        "Running",
        "Updating",
        "Deleting",
        "Error",
        "Stopped"
      ],
      "readOnly": true,
      "description": "Describes the status of a service.",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ServiceStatus"
      }
    },
    "ServiceResourceInstanceSize": {
      "type": "string",
      "enum": [
        "Cosmos.D4s",
        "Cosmos.D8s",
        "Cosmos.D16s"
      ],
      "description": "Instance type for the service.",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ServiceSize"
      }
    },
    "ServiceType": {
      "type": "string",
      "enum": [
        "SqlDedicatedGateway",
        "DataTransfer",
        "GraphAPICompute",
        "MaterializedViewsBuilder"
      ],
      "description": "ServiceType for the service.",
      "x-ms-enum": {
        "modelAsString": true,
        "name": "ServiceType"
      }
    }
  },
  "parameters": {
    "resourceGroupNameParameter": {
      "name": "resourceGroupName",
      "in": "path",
      "required": true,
      "type": "string",
      "pattern": "^[-\\w\\._\\(\\)]+$",
      "minLength": 1,
      "maxLength": 90,
      "x-ms-parameter-location": "method",
      "description": "Name of an Azure resource group."
    },
    "accountNameParameter": {
      "name": "accountName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB database account name.",
      "minLength": 3,
      "maxLength": 50,
      "pattern": "^[a-z0-9]+(-[a-z0-9]+)*"
    },
    "filterParameter": {
      "name": "$filter",
      "in": "query",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "An OData filter expression that describes a subset of metrics to return. The parameters that can be filtered are name.value (name of the metric, can have an or of multiple names), startTime, endTime, and timeGrain. The supported operator is eq."
    },
    "usageFilterParameter": {
      "name": "$filter",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "An OData filter expression that describes a subset of usages to return. The supported parameter is name.value (name of the metric, can have an or of multiple names)."
    },
    "databaseRidParameter": {
      "name": "databaseRid",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB database rid."
    },
    "collectionRidParameter": {
      "name": "collectionRid",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB collection rid."
    },
    "databaseNameParameter": {
      "name": "databaseName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB database name."
    },
    "clientEncryptionKeyNameParameter": {
      "name": "clientEncryptionKeyName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB ClientEncryptionKey name."
    },
    "containerNameParameter": {
      "name": "containerName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB container name."
    },
    "storedProcedureNameParameter": {
      "name": "storedProcedureName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB storedProcedure name."
    },
    "userDefinedFunctionNameParameter": {
      "name": "userDefinedFunctionName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB userDefinedFunction name."
    },
    "triggerNameParameter": {
      "name": "triggerName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB trigger name."
    },
    "tableNameParameter": {
      "name": "tableName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB table name."
    },
    "collectionNameParameter": {
      "name": "collectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB collection name."
    },
    "keyspaceNameParameter": {
      "name": "keyspaceName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB keyspace name."
    },
    "graphNameParameter": {
      "name": "graphName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB graph name."
    },
    "regionParameter": {
      "name": "region",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB region, with spaces between words and each word capitalized."
    },
    "sourceRegionParameter": {
      "name": "sourceRegion",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Source region from which data is written. Cosmos DB region, with spaces between words and each word capitalized."
    },
    "targetRegionParameter": {
      "name": "targetRegion",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Target region to which data is written. Cosmos DB region, with spaces between words and each word capitalized."
    },
    "partitionKeyRangeIdParameter": {
      "name": "partitionKeyRangeId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Partition Key Range Id for which to get data."
    },
    "locationParameter": {
      "name": "location",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB region, with spaces between words and each word capitalized."
    },
    "clusterNameParameter": {
      "name": "clusterName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Managed Cassandra cluster name.",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
    },
    "dataCenterNameParameter": {
      "name": "dataCenterName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Data center name in a managed Cassandra cluster.",
      "minLength": 1,
      "maxLength": 100,
      "pattern": "^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*$"
    },
    "backupNameParameter": {
      "name": "backupId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Id of a restorable backup of a Cassandra cluster.",
      "minLength": 1,
      "maxLength": 15,
      "pattern": "^[0-9]+$"
    },
    "mongoRoleDefinitionIdParameter": {
      "name": "mongoRoleDefinitionId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The ID for the Role Definition {dbName.roleName}."
    },
    "mongoUserDefinitionIdParameter": {
      "name": "mongoUserDefinitionId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The ID for the User Definition {dbName.userName}."
    },
    "NotebookWorkspaceNameParameter": {
      "name": "notebookWorkspaceName",
      "in": "path",
      "description": "The name of the notebook workspace resource.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string",
      "enum": [
        "default"
      ],
      "x-ms-enum": {
        "name": "NotebookWorkspaceName",
        "modelAsString": true
      }
    },
    "PrivateEndpointConnectionNameParameter": {
      "name": "privateEndpointConnectionName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The name of the private endpoint connection."
    },
    "GroupNameParameter": {
      "name": "groupName",
      "in": "path",
      "description": "The name of the private link resource.",
      "required": true,
      "x-ms-parameter-location": "method",
      "type": "string"
    },
    "roleDefinitionIdParameter": {
      "name": "roleDefinitionId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The GUID for the Role Definition."
    },
    "roleAssignmentIdParameter": {
      "name": "roleAssignmentId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The GUID for the Role Assignment."
    },
    "restorableSqlDatabaseRidParameter": {
      "name": "restorableSqlDatabaseRid",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The resource ID of the SQL database."
    },
    "restorableMongodbDatabaseRidParameter": {
      "name": "restorableMongodbDatabaseRid",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The resource ID of the MongoDB database."
    },
    "restoreLocationParameter": {
      "name": "restoreLocation",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The location where the restorable resources are located."
    },
    "restoreTimestampInUtcParameter": {
      "name": "restoreTimestampInUtc",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The timestamp when the restorable resources existed."
    },
    "restorableSqlContainersEventFeedStartTime": {
      "name": "startTime",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Restorable Sql containers event feed start time."
    },
    "restorableSqlContainersEventFeedEndTime": {
      "name": "endTime",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Restorable Sql containers event feed end time."
    },
    "restorableMongoDBCollectionsEventFeedStartTime": {
      "name": "startTime",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Restorable MongoDB collections event feed start time."
    },
    "restorableMongoDBCollectionsEventFeedEndTime": {
      "name": "endTime",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Restorable MongoDB collections event feed end time."
    },
    "restorableGremlinGraphsEventFeedStartTime": {
      "name": "startTime",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Restorable Gremlin graphs event feed start time."
    },
    "restorableGremlinGraphsEventFeedEndTime": {
      "name": "endTime",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Restorable Gremlin graphs event feed end time."
    },
    "restorableTablesEventFeedStartTime": {
      "name": "startTime",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Restorable Tables event feed start time."
    },
    "restorableTablesEventFeedEndTime": {
      "name": "endTime",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Restorable Tables event feed end time."
    },
    "restoreStartTime": {
      "name": "startTime",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The snapshot create timestamp after which snapshots need to be listed."
    },
    "restoreEndTime": {
      "name": "endTime",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The snapshot create timestamp before which snapshots need to be listed."
    },
    "instanceIdParameter": {
      "name": "instanceId",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The instanceId GUID of a restorable database account."
    },
    "restorableGremlinDatabaseRidParameter": {
      "name": "restorableGremlinDatabaseRid",
      "in": "query",
      "required": false,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "The resource ID of the Gremlin database."
    },
    "serviceNameParameter": {
      "name": "serviceName",
      "in": "path",
      "required": true,
      "type": "string",
      "x-ms-parameter-location": "method",
      "description": "Cosmos DB service name.",
      "minLength": 3,
      "maxLength": 50
    }
  }
}